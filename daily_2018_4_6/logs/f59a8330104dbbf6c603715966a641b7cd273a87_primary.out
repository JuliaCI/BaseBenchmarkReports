cset: moving following pidspec: 2437
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.692064081 seconds)
loading group "string"... done (took 0.525324446 seconds)
loading group "linalg"... done (took 8.425829515 seconds)
loading group "parallel"... done (took 0.172191862 seconds)
loading group "find"... done (took 5.782287904 seconds)
loading group "tuple"... done (took 1.942341606 seconds)
loading group "dates"... done (took 1.38439372 seconds)
loading group "micro"... done (took 0.202204823 seconds)
loading group "io"... done (took 0.52780348 seconds)
loading group "scalar"... done (took 49.358573849 seconds)
loading group "sparse"... done (took 13.060166681 seconds)
loading group "broadcast"... done (took 1.6468181 seconds)
loading group "union"... done (took 9.102936451 seconds)
loading group "simd"... done (took 2.952204319 seconds)
loading group "random"... done (took 11.044318162 seconds)
loading group "problem"... done (took 2.217715793 seconds)
loading group "array"... done (took 23.798110857 seconds)
loading group "misc"... done (took 1.097731471 seconds)
loading group "sort"... done (took 3.644230478 seconds)
loading group "collection"... done (took 18.740179527 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.682480014 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145515866 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.176208709 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.222012273 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.273853858 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166116046 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157579576 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.168768323 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.508861718 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.204860009 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137298166 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.416772182 seconds)
done (took 6.003629643 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.260573404 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.239608636 seconds)
    (2/2) benchmarking "String"...
    done (took 0.18346092 seconds)
  done (took 1.113613632 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077096928 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.156672823 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108601277 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094704785 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094230399 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108723673 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094768742 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108699856 seconds)
  done (took 1.461987897 seconds)
done (took 3.609452386 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.509258535 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.871177153 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.519450477 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.176586666 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.312743348 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.301966891 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.261643076 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.222144463 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.09086746 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.083591077 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176014223 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.436690981 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.383100024 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.958654769 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.067469562 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094670237 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.150863508 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.787676016 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078560556 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.108252479 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.520602753 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.208975437 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.113645626 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.105299672 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.18530952 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132285599 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.138796272 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.099950041 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.670842557 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131311191 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.219366189 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.08305332 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.136867518 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.162324889 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.211187725 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.112395993 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671482792 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.198987722 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094682136 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100781093 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.701602219 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.118047802 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.20182659 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104618212 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.067215765 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.160152455 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.117696881 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.081228539 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095733055 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.104066385 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.159949493 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.43098276 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105853054 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.19021382 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093438497 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.68966277 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099197349 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.270899163 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126909146 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.093681355 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090867804 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.087386217 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.153686918 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093840878 seconds)
  done (took 20.056600036 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.166302227 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.184196283 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.079024095 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.155000288 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.123463581 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096867399 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084275945 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079143143 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125299355 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17651804 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137281674 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.18734988 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.076540799 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.089819216 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.169047712 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.229665809 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.125870507 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104977349 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089307886 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.107205471 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12343427 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097108474 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.10683599 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091067334 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170684796 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205451424 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110045126 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122132581 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090281757 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094941637 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142793889 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145511964 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097676451 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090175735 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.170258542 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122813144 seconds)
  done (took 5.279895806 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.24001767 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104214103 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.248620436 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.198228316 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.113477586 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.151887007 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.186669524 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.177215223 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.288753882 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.224501813 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178478747 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113277267 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113144944 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080005233 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080910725 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078033386 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.321003558 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.191003653 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.152565074 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.186033106 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115781401 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083141589 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.387423716 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085425051 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.10210439 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096919876 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.063400233 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.220013512 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112889299 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.02958134 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.10588134 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100709906 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132476796 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193093075 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.177281567 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124126212 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120580186 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.116621955 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.086035859 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.221975873 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.118709983 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084309317 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078089916 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.131892239 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116901103 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130319173 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.107703883 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110399785 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.219857425 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088020189 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129906224 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.025146038 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197555061 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.157731777 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.084907006 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288202087 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.127540128 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101570319 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.10990537 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.788056923 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131510105 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083659994 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080040662 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.114097532 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080473971 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.463485196 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.125438918 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.530217136 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082325488 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.155136909 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096935355 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.121724934 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086465072 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084543656 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11144143 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.08734713 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.095574655 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.089097648 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080384981 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.106077066 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112062136 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100512264 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.0813494 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146841775 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096875664 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.124153858 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110389393 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.105574882 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.08671563 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127064285 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082920756 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.089541507 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.185324774 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097068868 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.129713622 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114797905 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129198898 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.104804883 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.257775299 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.086451698 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.087147018 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.137988505 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.085104631 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127556551 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099725336 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097634794 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084836892 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078430435 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.098258031 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146412005 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.087584208 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.096667346 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.090574952 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.092010065 seconds)
  done (took 28.749026845 seconds)
done (took 54.777609795 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.4264112 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085081067 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083236419 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.0982192 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079866784 seconds)
  done (took 1.545311746 seconds)
done (took 2.295395268 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.303692131 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.196753451 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10232311 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.185525955 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087264895 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.19229157 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.179915305 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.100952782 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.202036263 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084453712 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.186147548 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084366933 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10241794 seconds)
  done (took 2.778161215 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10245131 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105478439 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102615714 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.1186247 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085955289 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10172954 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117761765 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107550595 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101044499 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112016225 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086538448 seconds)
  done (took 1.887150637 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100539929 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103614514 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090746048 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115797566 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085297796 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09743089 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115432697 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10593294 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097960099 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110691231 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087380762 seconds)
  done (took 1.86178654 seconds)
done (took 7.270401592 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.082977957 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.508481795 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.160780772 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.233483715 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.348364567 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.279655462 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.5632459 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.196140215 seconds)
  done (took 14.248936217 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.197994534 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.108214555 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093351803 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.094777534 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.11186136 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.091629234 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.091005707 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.113672024 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090478256 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.094244613 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090240897 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.109430454 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.091257523 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.094921959 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.106301151 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.09353585 seconds)
  done (took 2.482136478 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.141975436 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.123595811 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.114848104 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098153968 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.094059134 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.115536092 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101533019 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.115210873 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.093056738 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.093895157 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.101323447 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.112607924 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097633018 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.093413627 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.11421337 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116938481 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.093127976 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.112823976 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.115708671 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.1153867 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099442289 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095450021 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.114091551 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097843149 seconds)
  done (took 3.404936243 seconds)
done (took 20.88848841 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.145166439 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100547431 seconds)
  done (took 1.000630604 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.162559909 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.178948742 seconds)
  done (took 1.101840991 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.110406094 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090008544 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134589652 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101120245 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090305517 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.107138645 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114393862 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.091018171 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.106798279 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091082911 seconds)
  done (took 1.802978997 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094354409 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09494601 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.120510985 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.167321905 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.114715358 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.092498565 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094061054 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.110034624 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.095648783 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089959887 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.11252373 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.108014285 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094700541 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.124610008 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095479268 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095914098 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.113725357 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.093828041 seconds)
  done (took 2.676364481 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.090144833 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09273628 seconds)
  done (took 0.947761553 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092979055 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090070807 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092778218 seconds)
    (4/7) benchmarking "year"...
    done (took 0.227068701 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.08974836 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089112294 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.105057837 seconds)
  done (took 1.552122708 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.513108976 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.236725984 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.361530948 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071609246 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102033667 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.308863767 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.120032705 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070165981 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.087755411 seconds)
  done (took 2.686768486 seconds)
done (took 12.529579211 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.09140367 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.241185915 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.61925232 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.11228997 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.08988232 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159511367 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.304543922 seconds)
done (took 2.390628972 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344039925 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.161665334 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08202501 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090255013 seconds)
  done (took 1.447319183 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081225433 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099072577 seconds)
  done (took 0.956898448 seconds)
done (took 3.181973508 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089342197 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.121320389 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.106947853 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089181654 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.08877279 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.08909824 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.105944034 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.088154956 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.088948609 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.087852089 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.107490854 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.089424407 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.088459559 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.104893486 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088898956 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089204837 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088057276 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104670065 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.088350271 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088638837 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103553301 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089752485 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088188152 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088673061 seconds)
  done (took 3.073735246 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.106301458 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090900698 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108676011 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094821991 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093396192 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.10971596 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093679967 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09120835 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.108564367 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.091314626 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092468914 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.09219306 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.090802934 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093259883 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090909048 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.108610316 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.09359649 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089612165 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107180014 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094279031 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092384745 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106404823 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.092851628 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091606466 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.108980253 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093037413 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.090361294 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.107344258 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094729819 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092844292 seconds)
  done (took 3.706895599 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096772946 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085628249 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089142409 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.11319854 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086925317 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090236714 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.102841014 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.086972422 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.08947788 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08834245 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.107749992 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089641398 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.086533419 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.107022089 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091143767 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092490093 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096835078 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.103740057 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.087386145 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089943036 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.108581639 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086870094 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088736171 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.087840886 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.106559629 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.08683736 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08871779 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.106381374 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089347888 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08872064 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.092733655 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.108985171 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.090031395 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.098867645 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.109630355 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09008475 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094022019 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.103845941 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.090798299 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086380056 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.085845238 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.104813921 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.087557415 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.095672594 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.105917593 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.089803932 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.087546821 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09053321 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.105995583 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09235439 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.085908482 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.102748554 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.09157498 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090040109 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.108424935 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.086518137 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090975419 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.086391069 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.10759862 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089155905 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.087016055 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08665481 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.110466245 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089918846 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.10253686 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.111403028 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086929154 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.091232992 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.106931742 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095499181 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.091875828 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.115736516 seconds)
  done (took 7.629664791 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.113730657 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097580893 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107028776 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091573596 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089620413 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089766097 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111312041 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090797396 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09067202 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112992381 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090585414 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090951017 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106937123 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091978173 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089731833 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090784073 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112137049 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089687913 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.089529583 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107009165 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090144723 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094249542 seconds)
  done (took 2.921011665 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.217930042 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11452433 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139208555 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.118248564 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107643669 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.117934575 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094148977 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095817732 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11056825 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100857041 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098969907 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110720468 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10816325 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097458029 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115710151 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099721917 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092935534 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.117291204 seconds)
  done (took 2.844132996 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.104122308 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092855611 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.151658218 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092189593 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.090843954 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.109032767 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09808876 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110504474 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.109854915 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092520499 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098967998 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109214574 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093036821 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092445763 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109057391 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.092105289 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092385148 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091877655 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116265246 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097208786 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.113279122 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099808911 seconds)
  done (took 3.043850533 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104823827 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092353809 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.125693649 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.094957177 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091714125 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.09190754 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.113099251 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091659953 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.096549169 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.108917137 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092777326 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090789717 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.12309839 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092143727 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096511735 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108542752 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092926489 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091331055 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108988763 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092245276 seconds)
  done (took 2.788723228 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.191619519 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124339535 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10832299 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115781502 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125863193 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107068657 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.131909496 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.107651698 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108009505 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136104233 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111684233 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106952057 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13165135 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112653286 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123480081 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114845741 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115217652 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130747853 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10774779 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12449423 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118431555 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107064155 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131065738 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107794857 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108059361 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12555362 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108519605 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129215466 seconds)
  done (took 4.16241056 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090649747 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090451358 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089704247 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.107035084 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091224005 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090520318 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090104867 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.108126773 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091152399 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089826347 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.10717444 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092200175 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090592338 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090495501 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107638018 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091277939 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090822897 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.107424334 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090765311 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091021643 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.09001863 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107408925 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091478875 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090312827 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107268739 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.091927434 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091288333 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089592151 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107638248 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090946012 seconds)
  done (took 3.645954958 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.102959888 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100317869 seconds)
  done (took 0.997521275 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099007073 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104543336 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090640107 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108881209 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097420521 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092334692 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117178646 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098083841 seconds)
  done (took 1.602785666 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.164553231 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.186076162 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.09588891 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.121398895 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.167926768 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.178721393 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129390469 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.114955991 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089985418 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083793302 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.180266011 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082900196 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.110312233 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089348767 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091205251 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115634254 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.092844031 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.0994039 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.115490878 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.094164149 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096564025 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113017245 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094290043 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102043901 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.104718558 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094580369 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094015411 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.120521565 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089518148 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.091841057 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.108760164 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092862735 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.094897054 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.093963698 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.109895139 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.168321486 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117272417 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088207589 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110503214 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09676009 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124138278 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091212417 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.112087927 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090095466 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093178885 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.113749018 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.095849778 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.091065779 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.102551961 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087211859 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092621957 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103647465 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.091767029 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093160369 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.109404634 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09842033 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094424514 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.106325142 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088146645 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088646528 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089152106 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105502053 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093990071 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094748837 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109965249 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092785701 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090417206 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.109802863 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094725762 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.091689194 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108437891 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107238106 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093015487 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.113782345 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09669676 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.092405867 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105691164 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097078289 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090798484 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110131727 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.096076074 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11922153 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11059856 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087932911 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088166131 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.11718591 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.095221137 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095173287 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085093169 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117966994 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.094836484 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.092606279 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.102611243 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.090403291 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087902732 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.111178228 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086550377 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092238894 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091275495 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.115012076 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097265481 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09059006 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111986574 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09771188 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097304797 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109315027 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.155387111 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107040707 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088275273 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094673111 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11475016 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086518508 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091054195 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090738908 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108405969 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088520495 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.09572136 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108702923 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.093442074 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.094660416 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112435024 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.093761845 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.09304502 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.108945439 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089101542 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.095408657 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116621972 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094144674 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.093573545 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.091537348 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.111902998 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093154749 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.09501075 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.107556858 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097937545 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089214233 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.109487319 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09428182 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.096273065 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.11020446 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088919108 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.092163446 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110141429 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092279011 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.095348553 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110417371 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089380898 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084939284 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092391513 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.107225118 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094217597 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099494012 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105518103 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.094872203 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089836352 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118083215 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090072048 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.096861836 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.112953289 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.098752022 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097437532 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084514171 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107534662 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.094374651 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094789612 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.109025155 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093190661 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.091497076 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.116869243 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086436857 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.095700394 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101956372 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090541936 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.096481501 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.092860806 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.113684684 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089083538 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.128887205 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.122244193 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097620537 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091133519 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.119879464 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.097395575 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.091627793 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.114083225 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098577559 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.09638262 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.107582125 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092110909 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097013967 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.106376404 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096841929 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091108927 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093611889 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.103931456 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.094674453 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084182838 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.114381095 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095371365 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.095872183 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.114696233 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095549765 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091145321 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117605913 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.09014629 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.096306399 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084591797 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.115436891 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103592355 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.097956363 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116416625 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094447983 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099691202 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.111486964 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101414879 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095223261 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.110834495 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094273933 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086652358 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085396502 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.116924146 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097203731 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088331206 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.1099148 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098042274 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094471097 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.108215688 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086599287 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.096819969 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11443293 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.089644705 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092152696 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106648228 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091582457 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098798746 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.103570863 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090030823 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094257451 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.11490937 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09374691 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092447241 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095388426 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.116340008 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097663774 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.095400962 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108638993 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100996846 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091865012 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.110586707 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091134575 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.0955345 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086512628 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.112444982 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093921591 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089734321 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.107040382 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097814217 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098787512 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.116335887 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092138474 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.095960517 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.115792561 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.098803409 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090507829 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.116045988 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089793571 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086030232 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08960961 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.104685273 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09479433 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088755409 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.114715983 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.091956909 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092237315 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.115008767 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095652366 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.090249017 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.115089482 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105035554 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087938812 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.103534278 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092197853 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093037604 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.107546618 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090430359 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.093883312 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094349691 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.115216813 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095311008 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089847772 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.112795297 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100411186 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.0897226 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.116968853 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.099378703 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098795179 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.106964465 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098005308 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089688135 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114024327 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088464436 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092042596 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091670685 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111375993 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090554752 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091451308 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.108223615 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087042413 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089999184 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.117598 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.093286569 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.096171944 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.110527622 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092040185 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089519362 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108046454 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.099140822 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.091659232 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.098366774 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.113451081 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.088210788 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086977794 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.117356712 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094088617 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.098777318 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107605239 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.097891414 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098784512 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.09702004 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.112836656 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.102141983 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102708382 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.116395032 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099861012 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087277401 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.109883909 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097390723 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.093625243 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.113942462 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096210687 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087445415 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112898664 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.100099444 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094106793 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.091867657 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.105759824 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.093506662 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.098819082 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.115037614 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097479031 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.094888511 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11249347 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08951986 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09685367 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.098422059 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.112217919 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099574903 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09235954 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.115504246 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091470162 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.099091868 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.112546866 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088482196 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086939197 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.108520607 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100388878 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08782157 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098578537 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.116556276 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090896941 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.092088268 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.117137059 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090913199 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096428461 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.11705281 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092591129 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102839831 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.112871457 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092205178 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.097393138 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.098083659 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.106271448 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093285498 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092236259 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118844059 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093400402 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.099169168 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113327067 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100057763 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.095941471 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.117413282 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100105504 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.099047774 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087425839 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.11994164 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09725356 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.09606345 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.110186255 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093448703 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089023757 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.112327906 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100347519 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.091242535 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120451896 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101424027 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091563509 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.11002147 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10096059 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092811809 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099194999 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.110328773 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096986847 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087157377 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.114455286 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093826988 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.100287411 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.110511288 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.090766263 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098950006 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.118835947 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099084753 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096828258 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.118897687 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089443404 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087925152 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.095390614 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.109598418 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104042262 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096408293 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.110946204 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093129976 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095707518 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.114207303 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10096263 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088711369 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.108774396 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095334289 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096189129 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.092635204 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.110046271 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099188297 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092117412 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11562472 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093513424 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089817616 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.112414828 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101423912 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.0929784 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.109468681 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.092694755 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100999413 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.111775996 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.092782274 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088447062 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11869754 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097324434 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101404724 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.091517479 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.114449444 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092893702 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.095508317 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.119900699 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.094309558 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095046605 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.113209644 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100727017 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099616333 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.106749119 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093219623 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103560643 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.11861209 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097353673 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096280571 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.092853794 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.120535212 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102737502 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.095931175 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.108298572 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089910773 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.093747346 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.108692982 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098073137 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099328945 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.11135789 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.093417226 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098682224 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097499446 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.116228203 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097247412 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088951364 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122126557 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.093767195 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097032133 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.107145738 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.090399995 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097011727 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100094604 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113429887 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.094690273 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.097103877 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.115816711 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.090377414 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091930602 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.116902533 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099099649 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.099449574 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113081864 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.094301482 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.099930977 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104032897 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.114785095 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094251178 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10132415 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.119774221 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095516722 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093400596 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117769603 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.10092637 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097260439 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.120363188 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093191512 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.09421701 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.121498046 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102522018 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103537461 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113588845 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.09026823 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.098866411 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.112187443 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090684525 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.097964206 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101839706 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.121008293 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095028471 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091895186 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123346891 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100127545 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09431758 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.112187638 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093985536 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099747982 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111643086 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099366 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091541235 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.12083325 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102907765 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10158951 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.10244892 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.10924429 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100381882 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097582954 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.12362855 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096620937 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089268818 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.10991948 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098525049 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.100983606 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.121298527 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100535231 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099168956 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100069967 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.115720416 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095747062 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.092025218 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.121238698 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101006534 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097320808 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.116281564 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095925441 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095767924 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.116045604 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102559995 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102604913 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.095430154 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123976462 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.101902994 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.093262193 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.112378299 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097167679 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098043183 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.115397519 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101254207 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092636986 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.108928268 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10148516 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10148936 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09411812 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122364628 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102774876 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094347402 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.118063836 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103668809 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101292358 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.116485749 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096940613 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.097701003 seconds)
  done (took 61.237349621 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143194907 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103677716 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117077631 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097865424 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114773308 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118879835 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098936031 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099224735 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.118189611 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108428987 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097399426 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116978278 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113407693 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117371326 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13352481 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107037984 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116557461 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100508062 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098261609 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098888392 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130355623 seconds)
  done (took 3.197509606 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.115640652 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.109659949 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.127881399 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111375199 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104633587 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.130117098 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108603263 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128538078 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112794396 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10544536 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.130454293 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109932344 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.125338815 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.105717 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106283159 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126270438 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111128637 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103735358 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.128596649 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110305609 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105534 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.129895913 seconds)
  done (took 3.39280137 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.128013828 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100574235 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095740985 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.117758073 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101451339 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.09775202 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121043941 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099199433 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.10581659 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092943554 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110905274 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093314929 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.095898029 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.117971845 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093778015 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098215256 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126364362 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103627272 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102491772 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.097577991 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.10897587 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098749087 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099268602 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.108355008 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103445945 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10254925 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.09795205 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.121939648 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089690438 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100280901 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.117165828 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093139022 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.08995908 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088965093 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.108408024 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.10185057 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100628164 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.119184104 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099602322 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089177104 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.09936759 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.122059951 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090025096 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.099181591 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.117848384 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092569222 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101093718 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.117367048 seconds)
  done (took 5.828456373 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.12615919 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161313285 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101983876 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135302589 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.132665721 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108186524 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.10032269 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.13679299 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100197441 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123137994 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114628697 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.111579066 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12464209 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105267646 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.341448898 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125575668 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10410084 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102057583 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.126326865 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103464528 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.105794678 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.123095696 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.110072473 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.130468782 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104672035 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100351207 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.100794205 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.125249351 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.110443855 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.125710229 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105707595 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105469156 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.131023127 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103587129 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101829023 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.123050913 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.112282647 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102356158 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124580139 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100183686 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.102002188 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125063718 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10430017 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.111913205 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123632947 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104490434 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101974658 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.120926462 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111679004 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.101683422 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.127887185 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.112764366 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.123421193 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104316438 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103951195 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.130996559 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103013404 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.10075368 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.1221525 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.110751051 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.099579405 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.124521407 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.11261081 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.102621136 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.127389055 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.112267613 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.102806493 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.125171149 seconds)
  done (took 8.968827998 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.131198221 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105607892 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13205543 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112807948 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105038142 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.125883285 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10643475 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.103942304 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126680047 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110024097 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123875527 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.22314706 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.123065429 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110079167 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104530142 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127230778 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106340973 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105112928 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126514995 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105051535 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.104919043 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.133670856 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104699251 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.132124608 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116219736 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101657223 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.126151718 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105391276 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112927942 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126796449 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.115272257 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.125427251 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106731937 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112764992 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.140351888 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105021732 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100539 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126186264 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106124305 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.105597866 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.123416795 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113401362 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.125120227 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103440599 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105337322 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125345411 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113544742 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.115259904 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.129717472 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111266473 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.105179605 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.134661195 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106742126 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.124484408 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114479073 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.118572128 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133493867 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112309594 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12507715 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113645091 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112106024 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.138672007 seconds)
  done (took 8.192220147 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099190716 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099527265 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097846593 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120032842 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100400768 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098576727 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098149246 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.121016193 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098746487 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099275579 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119649347 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099711131 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098396757 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099165244 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11948227 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100412645 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100209022 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118816677 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100352774 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099838941 seconds)
  done (took 2.953709518 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108984526 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115061134 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.12112478 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108369672 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101207746 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.126437175 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102094258 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102153073 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101321016 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123088863 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109007692 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.129555612 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102458766 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107749727 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.128902476 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107269527 seconds)
  done (took 2.663108053 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118967587 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116024388 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.209673005 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103359271 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124518136 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108031843 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.100606164 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126327861 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101068578 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.1061602 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.127385454 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105257451 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101005095 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102817877 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.122798728 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105985323 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100670333 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126128874 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102496111 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.213713622 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105438837 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103917541 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.124480541 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106023987 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102831562 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128756682 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107973122 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100322029 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.126206702 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.102496447 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103009762 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.129073669 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101233904 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105723174 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.123395841 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104025308 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10291184 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102620218 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.125408176 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103174388 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103520368 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.123979998 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103126214 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104636046 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.121105752 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103536022 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100156044 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.127895241 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104358601 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104698185 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.102027054 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.12964141 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106574222 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109149417 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.129086688 seconds)
  done (took 7.176689787 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113523874 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103717861 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133189894 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100694801 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103022586 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102200243 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.12356911 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103236733 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.1026592 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.121853778 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104782709 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103395854 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123551627 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103839573 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10390589 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10253002 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.121692664 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103524368 seconds)
  done (took 2.847513541 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107545845 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101659992 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105491435 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123375211 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102139193 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101072113 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121874067 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101381314 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100625741 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.123284294 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103216972 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101549736 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100977837 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123016597 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102649897 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101729965 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.122867497 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101685487 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102030462 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099994982 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123164499 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102892853 seconds)
  done (took 3.252108212 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113003821 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.210734704 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107357227 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.217444052 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098315009 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.09729225 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.13128499 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099329729 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.135755183 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.099252456 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097316819 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.118065136 seconds)
  done (took 2.403162857 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130283432 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136627868 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12291619 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103103335 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10919251 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128400106 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107064245 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106277449 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134450366 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116837518 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126178429 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113242384 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113274867 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134743491 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110199398 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109451455 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127288317 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106001352 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102385836 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141077302 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106892012 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133156786 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106996811 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106445845 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12737578 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114513892 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112307064 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138209105 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107739098 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133194841 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11152082 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107153369 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135220067 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11667775 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12439889 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113740944 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106992752 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141626478 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111482402 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113685881 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.124684508 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109975702 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134502424 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112633227 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113139286 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127887067 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112556601 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106629318 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129276984 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125746322 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132293014 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114744688 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10948152 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135290095 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113782176 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147900277 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11768729 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135831698 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111355185 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118139498 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135865657 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111525262 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135742725 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119919077 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110741019 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135090266 seconds)
  done (took 8.808628251 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142655811 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103056282 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129206337 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118273089 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113671749 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129881754 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107053023 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128667918 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10973525 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10517894 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16887381 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109678238 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114224026 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13666944 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106686936 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128107382 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108832438 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114275525 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125258558 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125794218 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107466209 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135649597 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115357002 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134932629 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119106204 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110491462 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129463383 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107307709 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127796297 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108474894 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112488273 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128650312 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115135471 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104287569 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135586126 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107289205 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108534312 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133690258 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108230003 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110502247 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136601779 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121533714 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128471496 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108726929 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118311224 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128793463 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108493116 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106810786 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129608625 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104566354 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140134599 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119231667 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117241212 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138280936 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108164151 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129091744 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10914133 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107381001 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129700876 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112360813 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114989022 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129155748 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129142206 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129236622 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110111133 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115696738 seconds)
  done (took 8.800580351 seconds)
done (took 166.916473399 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.173581277 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.211735353 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.195909347 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.155241682 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093222818 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.152146499 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.12717798 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.196479253 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.094626652 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.093543963 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093676376 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.120361936 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.16179594 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.09328649 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.117609364 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.097815518 seconds)
  done (took 3.058321575 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.191698783 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.329623545 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107710504 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120386415 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100424031 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098189678 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120266569 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101113924 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098348395 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127337431 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.1000203 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094374452 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126969526 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095635843 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099073955 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120295297 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106370083 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098182313 seconds)
  done (took 3.126466856 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118452814 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142740087 seconds)
  done (took 1.155016711 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128349915 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.210512819 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.277615954 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.168303276 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119663276 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140323993 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.146816006 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132630029 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.185786703 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13241294 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111212853 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096802458 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146560711 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104909943 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.11385448 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119660598 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12640524 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113273885 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.134314791 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100794383 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.143399874 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103072536 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104046607 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.134836724 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.177231425 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133309878 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104366734 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101653572 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12173375 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113781391 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105950937 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137470869 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111741724 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175896261 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102616544 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175532135 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105734496 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.120435318 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114103338 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.100834411 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124956564 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102475677 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.111631729 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119668446 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102001771 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.105420657 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.125186095 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102601673 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.106787803 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.128799622 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.106653774 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.128036464 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.151580822 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.128788159 seconds)
  done (took 7.833399848 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.854800906 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.138864159 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098700518 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.004902085 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146257787 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112690904 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.850958095 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.143628862 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227990276 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.903327022 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116425719 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108441086 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236300244 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.276574511 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.263553131 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.352550379 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.720876001 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.133606988 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128972286 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.159309798 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108410302 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121335271 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.142798721 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.490783995 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.123360047 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100125745 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.107383647 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.131346918 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.151911389 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.12343579 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103333951 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194332238 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.290314385 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206259393 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100933295 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098840255 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121137072 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.160126663 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265066771 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21392338 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.19350062 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09661249 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.120544106 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108509245 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117731914 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119054157 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.154259229 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.189948455 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.187156764 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102815375 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.130517753 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.111242573 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106232138 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.175501427 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.097452731 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.355302049 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.382613531 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099894769 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107608637 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.134053315 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263828099 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101864953 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.232161399 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149743202 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212005408 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100268652 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.823109158 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.180511885 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099877981 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104754706 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.129927807 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106437014 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.106956413 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.187178692 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.493954634 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110702845 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103259597 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121672703 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22938122 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101800933 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099523677 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180011174 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101723106 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129609389 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.112669592 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108390271 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.185361147 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.268150604 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.111450727 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130752994 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105359765 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112722805 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.121649425 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.208561177 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22416609 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.173035222 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.227661887 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107468776 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.178084554 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.182365903 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10517593 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.186624202 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107127531 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133743156 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107571925 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218872086 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.154743092 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103774721 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105143123 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.132586415 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.13589505 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104422673 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131859155 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.18332517 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.52680411 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.181844845 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097147574 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127825885 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109914257 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.178559308 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106737845 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258599686 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130488539 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.162282118 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129099275 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.098392371 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107276658 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.176818683 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107518481 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131557075 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106756047 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129791318 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.25532826 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216077797 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131424671 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.249970024 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.175380845 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127572004 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.166794383 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.1298023 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164204455 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131750974 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106840316 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101168573 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814740894 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136921603 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108640507 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126556837 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.1826625 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099566055 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125748883 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100999682 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097246148 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.805314139 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128996153 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099261266 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102705372 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127460575 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109566364 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108684459 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128059161 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.154150177 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.261384928 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110462249 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10719661 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123701908 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.153893904 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.124347206 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102394624 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101431386 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.123380084 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111585577 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.103900924 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125615262 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165250832 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.17459768 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.226143261 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.650007211 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101367817 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124421433 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238080749 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101138169 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.321096032 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132003617 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.232743495 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181283392 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099496146 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.356401168 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.183191001 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.181126251 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126106554 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.164683793 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.120170692 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109340587 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.177462447 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102356639 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106507131 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.1741101 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.112234581 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.134534657 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.273186659 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10076428 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247782036 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.097903962 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.185854085 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102184384 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128531999 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.324194669 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100163236 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139513375 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.153243777 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128668946 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102312095 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.636222553 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102553309 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133326459 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106737956 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.227780647 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.181209199 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109624023 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132192834 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111409461 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.177306237 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.204073123 seconds)
  done (took 47.200986132 seconds)
done (took 63.265101838 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.266155002 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.176822698 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.277933994 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178308999 seconds)
  done (took 1.884090646 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.266989394 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.156147693 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.251828016 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097430367 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.257926651 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097664302 seconds)
  done (took 2.046240856 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.17488639 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.167274853 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145225543 seconds)
  done (took 1.408178449 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197481058 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213808123 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.320963817 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.228537741 seconds)
  done (took 1.963487694 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.289817649 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116827692 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125217104 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.233075866 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.249729036 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.203675602 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123142587 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.173857373 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127473389 seconds)
  done (took 2.605727042 seconds)
done (took 10.829210657 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.406702654 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.282616945 seconds)
    (3/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.253566034 seconds)
    (4/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.278777946 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.236229457 seconds)
    (6/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.31643084 seconds)
    (7/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.300601967 seconds)
    (8/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.305165498 seconds)
    (9/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.283245959 seconds)
    (10/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.141128132 seconds)
    (11/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.338964012 seconds)
    (12/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.108145567 seconds)
    (13/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.192881552 seconds)
    (14/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.244291066 seconds)
    (15/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.133495513 seconds)
    (16/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.127507153 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.11801552 seconds)
    (18/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.271587716 seconds)
    (19/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.250530441 seconds)
    (20/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.209459131 seconds)
    (21/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.263743963 seconds)
    (22/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.252736095 seconds)
    (23/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.327372614 seconds)
    (24/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.106571349 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.127940082 seconds)
    (26/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.191659713 seconds)
    (27/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.130040163 seconds)
    (28/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.163191181 seconds)
    (29/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.163473771 seconds)
    (30/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.125946265 seconds)
    (31/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.077985346 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.129934502 seconds)
    (33/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.168680789 seconds)
    (34/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.107001306 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.121823958 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.125698483 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.103595104 seconds)
    (38/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.109395511 seconds)
    (39/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.238594065 seconds)
    (40/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.107438966 seconds)
    (41/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.203984819 seconds)
    (42/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.098899009 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110764391 seconds)
    (44/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.194074547 seconds)
    (45/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.075848686 seconds)
    (46/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.133064522 seconds)
    (47/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.207145815 seconds)
    (48/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.232571994 seconds)
    (49/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.206585474 seconds)
    (50/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.170363512 seconds)
    (51/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.109660695 seconds)
    (52/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.130123837 seconds)
    (53/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.122451795 seconds)
    (54/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.104391159 seconds)
    (55/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.100837806 seconds)
    (56/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.122749781 seconds)
    (57/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.107073313 seconds)
    (58/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109551177 seconds)
    (59/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.205867881 seconds)
    (60/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.083555958 seconds)
    (61/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.10824268 seconds)
    (62/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.103583423 seconds)
    (63/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.077392523 seconds)
    (64/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.115425712 seconds)
    (65/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.082774395 seconds)
    (66/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.209409171 seconds)
    (67/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.082752212 seconds)
    (68/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.173513841 seconds)
    (69/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.107470608 seconds)
    (70/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.083366714 seconds)
    (71/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.269407013 seconds)
    (72/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.116322259 seconds)
    (73/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.140691088 seconds)
    (74/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.120754162 seconds)
    (75/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.222535366 seconds)
    (76/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.126477502 seconds)
    (77/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.166736665 seconds)
    (78/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.105736119 seconds)
    (79/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.083977786 seconds)
    (80/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.099211476 seconds)
    (81/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.100231324 seconds)
    (82/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.132838564 seconds)
    (83/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.077423485 seconds)
    (84/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.121977833 seconds)
    (85/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.124641919 seconds)
    (86/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.11054443 seconds)
    (87/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.083623044 seconds)
    (88/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.079211127 seconds)
    (89/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.102754711 seconds)
    (90/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.151124804 seconds)
    (91/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.138115516 seconds)
    (92/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.08235892 seconds)
    (93/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.146503121 seconds)
    (94/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.084915566 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.105736941 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.126047577 seconds)
    (97/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.129338734 seconds)
    (98/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.126857564 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.12580173 seconds)
    (100/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.176044644 seconds)
    (101/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.076001077 seconds)
    (102/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.101955696 seconds)
    (103/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.124449881 seconds)
    (104/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.110156316 seconds)
    (105/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10220678 seconds)
    (106/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.158731756 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.125762278 seconds)
    (108/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.212103268 seconds)
    (109/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.077522508 seconds)
    (110/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.104419788 seconds)
    (111/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.077307999 seconds)
    (112/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.195619177 seconds)
    (113/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.080118525 seconds)
    (114/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.079753142 seconds)
    (115/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.083701305 seconds)
    (116/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.135731396 seconds)
    (117/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.150397787 seconds)
    (118/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.080060591 seconds)
    (119/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.108375848 seconds)
    (120/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.099840517 seconds)
    (121/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.107361599 seconds)
    (122/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.103280007 seconds)
    (123/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.084280411 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.127643448 seconds)
    (125/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.130155178 seconds)
    (126/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.141193167 seconds)
    (127/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.079106065 seconds)
    (128/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.100974457 seconds)
    (129/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.146922468 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.103670427 seconds)
    (131/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.13557886 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.112053581 seconds)
    (133/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.10878847 seconds)
    (134/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.082434365 seconds)
    (135/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.231949433 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.121822351 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.148202252 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.10285835 seconds)
    (139/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.076706556 seconds)
    (140/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.135155041 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.11501507 seconds)
    (142/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.085050673 seconds)
    (143/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.103944431 seconds)
    (144/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.161557564 seconds)
    (145/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.100710223 seconds)
    (146/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.102872169 seconds)
    (147/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.082223929 seconds)
    (148/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.10944321 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.103482391 seconds)
    (150/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.077182524 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.135894864 seconds)
    (152/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.111522401 seconds)
    (153/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.077992915 seconds)
    (154/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.08297538 seconds)
    (155/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.083581579 seconds)
    (156/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.124583515 seconds)
    (157/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.109889666 seconds)
    (158/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.108093996 seconds)
    (159/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.132615148 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.103783678 seconds)
    (161/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.083349589 seconds)
    (162/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.084366786 seconds)
    (163/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.079630725 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.148030452 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.102974289 seconds)
    (166/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.083792326 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.125927932 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.102909297 seconds)
    (169/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.099891938 seconds)
    (170/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.135358792 seconds)
    (171/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.077537548 seconds)
    (172/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.07842198 seconds)
    (173/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.082793826 seconds)
    (174/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.080111592 seconds)
    (175/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.07921815 seconds)
    (176/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.104376029 seconds)
    (177/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.078653532 seconds)
    (178/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.077860666 seconds)
    (179/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.079872976 seconds)
    (180/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.124111377 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.121993356 seconds)
    (182/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.084354355 seconds)
    (183/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.077199309 seconds)
    (184/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.151824925 seconds)
    (185/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.083320134 seconds)
    (186/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.084377988 seconds)
    (187/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.083869303 seconds)
    (188/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.123737188 seconds)
    (189/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.086209616 seconds)
    (190/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.108883876 seconds)
    (191/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.079714028 seconds)
    (192/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.077550898 seconds)
  done (took 26.660234814 seconds)
done (took 27.585820747 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.23191159 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.127372291 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.110927492 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.108842772 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.230748414 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116194691 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.151206929 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111183977 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.11887735 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.135088415 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100065511 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.120712226 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.134703702 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.200998609 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.137727744 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.101476679 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.099964212 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.144349098 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.124494233 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125920992 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.230768159 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102234639 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.144591413 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.102022924 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.232315157 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103267306 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.108228994 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.137136468 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.123615455 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.109300384 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.137290904 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.102425477 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.126275377 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.149385942 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102163932 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.11098694 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.125440941 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084386237 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110574518 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111408279 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.148087747 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111045705 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110778751 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.127329552 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113105949 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110486612 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.125807011 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.114897394 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.099609499 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.135767356 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104760986 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.126083958 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.133551154 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.101827285 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101288386 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102943815 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.144859096 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102199164 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123525613 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126711043 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.104077121 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102171492 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.137216311 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10263285 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110503271 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.126109906 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.111741014 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.112711766 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.108830215 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128839994 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102068854 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110029218 seconds)
done (took 9.969853837 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.106930374 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145624326 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.229381921 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.234283483 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130104054 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.143725689 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116303511 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.124360214 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.141145724 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.120500663 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.137398754 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.158445189 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.236334066 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.118600925 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116231132 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.138884016 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113077979 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110127663 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.234664482 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.124212667 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.151018335 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.117141803 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.152120374 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.119254193 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.104892857 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.153989263 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11068682 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.113330517 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.129567272 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.124265876 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.125885708 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.130063518 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.110067846 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124120383 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.147693609 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117018185 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.116857726 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.138290561 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.10753244 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.10562355 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.138210463 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.1239381 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105578624 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.141855225 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.114269014 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.120181943 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.137904831 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119543564 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.10659052 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.138097031 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10768343 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.130580973 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.143519473 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122395744 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.141592904 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.119657089 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119148729 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.118075017 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.133983398 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.118508074 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.105782952 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.130689146 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108744857 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.127069553 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.134837402 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.118198412 seconds)
  done (took 9.663384718 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126795771 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135873458 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140799401 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116736615 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11089976 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125435674 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101421097 seconds)
  done (took 1.83286569 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102692337 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.241932259 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.215462279 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.240883315 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.241534616 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.252137672 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124353742 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.10112964 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.16356668 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.112304223 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.244329805 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.270661403 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.112453741 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.143191827 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.219343356 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.127724462 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.245081868 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.103484481 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115558908 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.245401123 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117863024 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.159474064 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.115220691 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101610875 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.237900345 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102697842 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.288649433 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146751791 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.111652932 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116208834 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.143364427 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.180395121 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.240633885 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.115067269 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.136939478 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.241880531 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.213446109 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.142547196 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.253977905 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.107746391 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.241176566 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117032761 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116516667 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.143370009 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117981812 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.230810811 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.122002971 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116847636 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.142149355 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.221037138 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.140869145 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.242422245 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.114313307 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117402232 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.139373917 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118880696 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123220886 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.143365563 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.22375146 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146273924 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.241911971 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.217134655 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.243294946 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.246553049 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125183651 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.244382916 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.231463806 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115856249 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110517734 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.146469948 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.246377895 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116985659 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.113531576 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.235337849 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118601565 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.248626286 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.247339917 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113615184 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.141940601 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.106993451 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115417716 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.12899372 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.211081699 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.143009583 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115454443 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120922301 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141978749 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.136918431 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.106771723 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.152839524 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.117232409 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.113583531 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.146870977 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117286143 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143091054 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.223899237 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.140455758 seconds)
  done (took 16.942783553 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106368501 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104561247 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.10827477 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130478153 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104697947 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104249972 seconds)
  done (took 1.655253795 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.139942266 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117421757 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150559038 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118217473 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.159541824 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.250547619 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.255930214 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110468089 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.160565353 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.125735323 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.251302232 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.254606686 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.25237709 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121494576 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.25709115 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119661142 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.259707813 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115342418 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.152289293 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116314132 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.11643338 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.146681193 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116278457 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.244296214 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117953131 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.11936572 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.138524036 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126388765 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.12437443 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.141142597 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.121669917 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117720079 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.136610154 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.112795371 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.257844697 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.129642749 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139853251 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120910154 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.119954103 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.145382395 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.229095714 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.14110993 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123369277 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.119478662 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.140043259 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109502076 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.145678687 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111636362 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.260283828 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120733717 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.11999161 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.146091814 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.11842262 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119200051 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.138292671 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112033905 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.119738432 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.257715686 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.147664841 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.110638443 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118169882 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.146371362 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113252945 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120833841 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.144910375 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120268056 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.109814427 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.145504001 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115575341 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.117722989 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.145487734 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119521528 seconds)
  done (took 11.692041348 seconds)
done (took 42.751169279 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.54575922 seconds)
  done (took 2.542462857 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.924625245 seconds)
  done (took 1.922000184 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.014910688 seconds)
  done (took 19.041361542 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.422684486 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.468864534 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.091701146 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148813984 seconds)
  done (took 3.129241337 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.817484301 seconds)
  done (took 1.831393068 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.291791127 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.260707383 seconds)
  done (took 1.555198709 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.719404484 seconds)
  done (took 1.73370319 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.545151786 seconds)
  done (took 2.550303036 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.280079716 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.239422864 seconds)
  done (took 1.53966795 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.635748771 seconds)
  done (took 1.652883451 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.310153088 seconds)
  done (took 20.330129165 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.25485834 seconds)
  done (took 1.27719938 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.28438041 seconds)
  done (took 1.305103848 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.555538587 seconds)
  done (took 4.581107796 seconds)
done (took 66.000657529 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.115129262 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116768737 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115788152 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.141496322 seconds)
  done (took 1.500876448 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123192889 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118002736 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.145233851 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118411361 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124418341 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116698863 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143412793 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120401013 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11660919 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.146112404 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118302339 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117081147 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146257358 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.11762735 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114719151 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.14598279 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122231069 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118053902 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143817862 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119488535 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118636026 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.145096076 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121642292 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119499477 seconds)
  done (took 4.06360246 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114642046 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108635985 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.11140495 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132977512 seconds)
  done (took 1.496059911 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.126969378 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128694489 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.154162209 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125462142 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129396813 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155892383 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117242213 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115465501 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.1426004 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125862491 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133295743 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155840427 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129772518 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.118912412 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.153206802 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113016496 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117566473 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154882674 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124679321 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124959962 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.143513633 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123629583 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.12088445 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.15199246 seconds)
  done (took 4.209161886 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.191181764 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129229933 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.175457426 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160937065 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.177081264 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.116644591 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.143892906 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.150652598 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.123973021 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.119484181 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.147982251 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.161042905 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.148311555 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120260401 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118720348 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.149772017 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.130130498 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.122010989 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.1907809 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.123322658 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.15044981 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130023408 seconds)
  done (took 4.205503777 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.120628088 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109283169 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.104730211 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.134437935 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120602448 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.110514282 seconds)
  done (took 1.731264935 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.10820357 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103393362 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103322159 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128748923 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107448751 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.10260646 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.102007505 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.130132241 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103242096 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102687195 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128853997 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102612298 seconds)
  done (took 2.355930741 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.3260259 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.108600211 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.135238986 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.1110126 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.113133084 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.105693176 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.146408835 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.107307188 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.268110982 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.10399471 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.131836175 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.19362674 seconds)
  done (took 2.884358749 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198838509 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145799657 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247678469 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.639133449 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184190346 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186249946 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.274036488 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188234576 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.202304007 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135278074 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211824652 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158732 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179873735 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182339469 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163551855 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.156668294 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158586537 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233173554 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166384483 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233156531 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154295743 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199134101 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186381578 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175334722 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138813542 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186382964 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.117826486 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126725903 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19048542 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187200501 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169525369 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17542178 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13904703 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213957001 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250932983 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169207292 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267303162 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158194482 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.170009182 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.213991944 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255513939 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139250333 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213297588 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148692866 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154638249 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180291932 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177933628 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.206173826 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133032123 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141452695 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20644555 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202222724 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.171343091 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162204557 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313474024 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134319127 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.138886276 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251873026 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213229718 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224155482 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175372825 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.148353733 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175108619 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213254686 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236217484 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.13952354 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.187810647 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123842644 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1897943 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201468072 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20479816 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184196073 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.204868145 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158222578 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16709261 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193954615 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15090542 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227940526 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195654075 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118695814 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172874453 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133229443 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124385352 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.21577146 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121565679 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240162824 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130041828 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.335667253 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203872871 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153166147 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186267185 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155363604 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18996559 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146993839 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.12670768 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141570685 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157178683 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18127065 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126223918 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180882649 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138039258 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.151464001 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150233875 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.120148141 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192781344 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.130289752 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187925993 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170047433 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.159198629 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17674361 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173321849 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.158306588 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191870405 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213797533 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130412149 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130549832 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241772079 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193331784 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.13530151 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198077553 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191536218 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.175074002 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13277754 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189218875 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189100467 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170410769 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222755613 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136687464 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131930917 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.163017713 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16764207 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184951243 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150253157 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155150911 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.160556999 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214678963 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.12455533 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164987569 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176523147 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159085639 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12236426 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160988856 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134785062 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.1404339 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.174103395 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13672765 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176662632 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163068542 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189638549 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152838688 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160463093 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169370993 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157732781 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.166195858 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172577189 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118541381 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.196519915 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193130757 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155119937 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177186781 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.187075173 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206431123 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170272684 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125943659 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208419673 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125634406 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.14769782 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159769874 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19609249 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160940202 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.212179427 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203866033 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.161326629 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.18848633 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14438629 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194274322 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.211319989 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154720544 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.16926903 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1686288 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19345765 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.119224514 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121698936 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.15527999 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13534146 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156931335 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13670231 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200057191 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161656142 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203367858 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190365551 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136901702 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214888001 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124934734 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156810241 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.199539951 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135920373 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.212711991 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213645792 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176017847 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167277144 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159640332 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.146297306 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125826752 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.130563962 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187189807 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13544201 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161291103 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139560795 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216785555 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168585107 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174431009 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215556819 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161434503 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225512324 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118984181 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.187358519 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166148843 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192901978 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182606899 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133102686 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.184513223 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.21695543 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139425743 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217018761 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164009313 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205486405 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217552289 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.162976572 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127574437 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172960995 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156190389 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166421455 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16020733 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172139275 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129707825 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177251807 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.137080489 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13804196 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208637502 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17057242 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174214057 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.184374643 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167975403 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153556928 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139665258 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199066304 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142911417 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.103005252 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193330919 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219236745 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14729747 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181600622 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170652802 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157544045 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.305811211 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213581408 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171139619 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164619524 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137342437 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198310681 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158760448 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188532243 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181126103 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169155357 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230159111 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171739884 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.167549864 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131316703 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145515634 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178668223 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.136027776 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.177439829 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.158585753 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.169787433 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181552092 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164641599 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166324653 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203013086 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144262567 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.17713293 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136512035 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251041247 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191871914 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169795736 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.19015344 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.163087239 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208718122 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123375711 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125378722 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.159379628 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182238012 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157257625 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173658368 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.191128321 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208462047 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172193886 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188985874 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137869328 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.154159825 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164991002 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173334782 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182900485 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161732496 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134818945 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21505321 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.124466137 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157726793 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159235119 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30621608 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145213858 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199281036 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104430101 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.301071864 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129064034 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131121346 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189275431 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193944037 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133136476 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.18151957 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198658853 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137857851 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189533278 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13341424 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204134293 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210920448 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16574331 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199863355 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.142665287 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187332768 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156170682 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201721087 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143437643 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.17417381 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157066787 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220622158 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.175501964 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.158527981 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164692778 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196368714 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166925381 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199745719 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1375636 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208210027 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125533472 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192050961 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136298292 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151448533 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1565529 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191021188 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12991023 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202918368 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165713518 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159290604 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126528129 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171507504 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162770313 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13644552 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.156796548 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208432487 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.129643916 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176125699 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234988125 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156577845 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165145517 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142922459 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157622953 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137304303 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170882278 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130922942 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.173182055 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204778352 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129500847 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203475002 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162070904 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189720261 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181241431 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142053201 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.331274675 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.155695479 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1865076 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176978325 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192849288 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179628151 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202493894 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167790251 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175120782 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164301261 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172305148 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.218974241 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191851464 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.164448621 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157340311 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14264453 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135397408 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.161020032 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148829884 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193369863 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139275373 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132280456 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.192669384 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142728543 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.173492489 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138526671 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22821059 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147236057 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212143161 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213699045 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135471797 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200873588 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172055701 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157256856 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.159712472 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198079182 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141990714 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179607042 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132744831 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135003442 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237363159 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.1232276 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186297689 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197691194 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168816025 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196314735 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.134737461 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201948178 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14083939 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200537905 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126735044 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149632205 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196303392 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133485 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.153086147 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169517253 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185386764 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.163823509 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168902896 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.175901449 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220014208 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124342863 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133276616 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309038313 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157930647 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220361241 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.133447024 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166276665 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143761618 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184880675 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.161876081 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196836615 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.12955717 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12780862 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.172992339 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.156432475 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.165307936 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166420901 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210778776 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156027837 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211344794 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132841927 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283144296 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140696771 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198619588 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.11543169 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.126143709 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168840729 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13292636 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167870806 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207976103 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212059367 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.190687518 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.146867701 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161565639 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127226301 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129237254 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191053192 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150303992 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194528973 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146363657 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.101629171 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168015519 seconds)
  done (took 85.465392928 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161643702 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151584847 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167933858 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.22266191 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19379653 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.291049607 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.229476353 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246013611 seconds)
  done (took 2.779817535 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.120508011 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.159046333 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142010002 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143838382 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.110377684 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.481291471 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.159162463 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121396994 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.159448195 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.150622247 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.135810201 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.560741176 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.115379596 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144196464 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.12043829 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.134592017 seconds)
  done (took 4.069523079 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.66985719 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.546774953 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.955899202 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.295029222 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.258427569 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.200562742 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.749152777 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.194345999 seconds)
  done (took 11.98747982 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.665065844 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.156843024 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.446883544 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.305937469 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.180025408 seconds)
  done (took 2.881131302 seconds)
done (took 130.641439601 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.121822345 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.121279606 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121191967 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.151838358 seconds)
  done (took 1.63049755 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.193730182 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089230015 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.090888483 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116418213 seconds)
  done (took 1.613076131 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.457031051 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088904539 seconds)
  done (took 1.699754291 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.151096317 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.139653593 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.164338155 seconds)
  done (took 1.593423996 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.133525736 seconds)
  done (took 1.259500778 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.124795351 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.124323691 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.269471942 seconds)
  done (took 1.649305302 seconds)
done (took 10.577391488 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11782298 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.927713925 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.431326798 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131152273 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.709363748 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.425529409 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.418137008 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.172664356 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172261602 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.136560025 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130407341 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.692210752 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.431084634 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.873010873 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.388232554 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.901657583 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.691742393 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110775309 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.143453944 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112224814 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.39829647 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136387398 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111116392 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110685232 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.717782254 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.418945386 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108531877 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.918037211 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10906533 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.111904297 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.426186108 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110797641 seconds)
  done (took 20.910887628 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117274651 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.165480613 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145229918 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111023977 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112637856 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.138071557 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12126771 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12125068 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201211733 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110312517 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.159198892 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108658595 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114469678 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.138225727 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.13465042 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108528951 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.139528666 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.1129209 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117683788 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111048048 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161642021 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.1087315 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111876575 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139650252 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110642919 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130203028 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.139011975 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121405293 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109122305 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.141405647 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115191979 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110023822 seconds)
  done (took 5.222818301 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.155136545 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17454147 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147179763 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146339408 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.186556253 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112122935 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.194036148 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175256271 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203139021 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11088686 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130883235 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.138766643 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.1497835 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109995762 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.164401062 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.1103796 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113016987 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.139444812 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117666164 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112495106 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.159966073 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109181059 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111513768 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139950159 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110773002 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133456456 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.138750333 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122317569 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110231404 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.143071392 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116361362 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110255539 seconds)
  done (took 5.535305231 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.12441609 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123707914 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131748227 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.161130988 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118801385 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122898177 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.152962958 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119992743 seconds)
  done (took 2.194372642 seconds)
done (took 34.996659781 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.137620431 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.129443475 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.130178035 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.153906628 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.254320802 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.117244229 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.126300285 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.118758082 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.15441019 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.130786197 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108998058 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.146950455 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.129447072 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.119841238 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.254735573 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.12387287 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.262013411 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.257654184 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.117725482 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.123580434 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.149804822 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.23095281 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.15215729 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.117618824 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.247465532 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.113286942 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.24685447 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.120249079 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.120073091 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.14105452 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.22912865 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.153486711 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11828005 seconds)
  done (took 6.36387008 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.242386663 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.148922484 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.120051203 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118100132 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.11968475 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.147615485 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.275740317 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.118537966 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.117268975 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117642216 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.148892231 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.225686498 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.155373686 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.114176222 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.120256298 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.10735829 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.278909024 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.149488531 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.111199167 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.091405927 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.1141531 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.148376565 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.257160165 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.144546334 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.118563763 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.117939099 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.152655836 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.123937746 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.120323706 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120669116 seconds)
  done (took 5.598062236 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.123407597 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13232111 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.13651136 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.215943331 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.147484618 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.16064895 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138304676 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133517752 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.170661427 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11258465 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.1275533 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.177831253 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129550936 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.123121807 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146143307 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130628055 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134937585 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.143043497 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121327367 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129166237 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.162769607 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131213985 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.13536105 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.149184564 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.111638336 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120750832 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.15337694 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.128206978 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.120747547 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.15559657 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.115969247 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117295738 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.114946465 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.177190678 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.11387159 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.15510743 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.138969741 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124264923 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.156000703 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.145813679 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116973393 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.14409213 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138503527 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165678389 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.143613954 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126906953 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.12375453 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.126826448 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.142587514 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131014317 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.184149807 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.113333006 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133410953 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.11128906 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.141391969 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121502413 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.11374522 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.145170749 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.12890989 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.115255018 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.16717851 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12094717 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.123723401 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.143953202 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123796626 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.112627383 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.11213762 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.147145531 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.138736061 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.119916829 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.179472065 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.113748224 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123772184 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.156250715 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.124497004 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.124692508 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.142867529 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124538048 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124291718 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.147680803 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126539754 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.115037255 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.115455784 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.159698571 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.133709317 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.156309794 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124825531 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.12580721 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.116647936 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.144180637 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130452997 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.114117344 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.148500238 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.126317618 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.113880174 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.145491464 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126856288 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123891378 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.140244023 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139924394 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.11773447 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.112582026 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.16853863 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.116257393 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.117539799 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.153967276 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.154383448 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.112745918 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.154075999 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125971512 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.113287143 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.151068768 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116983226 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.11332102 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.160689889 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129426 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.120680971 seconds)
  done (took 16.930485973 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.354850283 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.339924938 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.186081362 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.426551762 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.126044272 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.272365504 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.338461346 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.341636207 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113050697 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.178709189 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173049067 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.310125634 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.145168185 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.142380853 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.34405139 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.399985632 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.174220639 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.147532479 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.180758082 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.126168305 seconds)
  done (took 5.987099487 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.132386608 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.146229639 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.165196258 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.140696455 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.123603151 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.159911529 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.113898289 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135304512 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.154718136 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123006328 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115064363 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.158844537 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12642452 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.129597348 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.1591882 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.145260489 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.120258374 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.147570108 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.135215861 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117377899 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.129249823 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138568397 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121945447 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.165189035 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132855272 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.124440856 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.140868536 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119210208 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.120230015 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.121994862 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.147049249 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.131937434 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.149164362 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103779351 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125672026 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.128354739 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.149606323 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.11722743 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118047418 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.146015728 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128650638 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.126864864 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121819243 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.126034502 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.131994407 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.108623337 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.126496769 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.15584097 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105081039 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.132221873 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.156308966 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128156661 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.120991784 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.165303148 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.120257313 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.129696702 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.153497312 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.129426132 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.117455852 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.141452557 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113715384 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.117867507 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.121286612 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.157133607 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126522584 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.132646037 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.157971844 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.114096977 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.117631949 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.147937747 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.117531485 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.127176341 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.164168854 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.1229172 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.12022649 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.15512265 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122326657 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.092879099 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.121780121 seconds)
  done (took 11.636314167 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141469615 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.123603141 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131766553 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.178402646 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126483718 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.120212387 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.153846677 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134435426 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128700696 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.162621996 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128325889 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.12673502 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.165689845 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125032517 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122746307 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160441416 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126820004 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.150488468 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.163142887 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140035604 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.127538781 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.150019447 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126441862 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.124382917 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.172394139 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.124483636 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.139768807 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.158668544 seconds)
  done (took 5.117273854 seconds)
done (took 52.773218094 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.314049171 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.493257476 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.268431093 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.268114137 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.318071853 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.272456485 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.290768564 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.286395701 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.696688144 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.240718283 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.270347011 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.269651506 seconds)
done (took 29.156109701 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.347029148 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.816851747 seconds)
    (2/2) benchmarking "String"...
    done (took 1.566889414 seconds)
  done (took 4.548559423 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.260944744 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.258248312 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.509699686 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.259353643 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.261037016 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.260366748 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.259575857 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.260243446 seconds)
  done (took 16.232426239 seconds)
done (took 26.551795442 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.293394302 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.442646011 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.497167088 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.240978398 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.277516449 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.260851622 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.266639076 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.280907568 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.265804119 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.257303611 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.677393625 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.52866374 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.262529269 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.635716115 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.24238278 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.264322535 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.276739532 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.493101075 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.262874506 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.292655152 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.242578815 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.243357091 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.291117664 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.261663185 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.270700358 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.264391237 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.282681442 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.275059702 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.448936311 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.3002445 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.297015416 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.266787296 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.287268515 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.264469756 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.261980889 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.272843119 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.445496117 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.269851555 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.243888103 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.292368701 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.445312397 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.267116016 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.26569863 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.273444959 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.24573812 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.299539401 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.259427476 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.376462391 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.284743858 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.275557528 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.294097875 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.637836491 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.270669556 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.266336863 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.279165277 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.482476586 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.284085529 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.317104365 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.288485116 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.266786178 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.264782065 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.273837459 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.314545633 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.271882177 seconds)
  done (took 147.474308576 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.264254522 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.267112191 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.269555357 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.331693737 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.269862946 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.269297996 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.266147891 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.264548901 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.269483412 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.296624062 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.272476072 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.267141903 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.270075338 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.202053337 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.275442778 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.286990377 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.270260254 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.267203265 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.276043958 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.265121809 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.273028746 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.268624717 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.271924407 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.270476418 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.309709045 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.339464175 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.286487633 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.29845309 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.280159293 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.266100074 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.302954984 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.27232179 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.888600696 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.119945383 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.269215616 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.289849594 seconds)
  done (took 82.596368676 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.26700614 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.266203635 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.26604396 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.299446475 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.266066686 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.265324465 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.847094029 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.852036565 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.239813205 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.988485555 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.635701356 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.51501485 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.272780075 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.35878237 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.281100005 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.269754903 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.282989647 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.29559189 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.266802343 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.26862302 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.847708043 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.284006903 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.264257838 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.448499149 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.285467441 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.301192602 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.660525479 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.26902142 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30109674 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.601345005 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.318904916 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.269157471 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.609120537 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.398189885 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.27025268 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.378626005 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.271590694 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301530135 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.26928985 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.551742254 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.269732801 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.267433154 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.27051638 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.27258163 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.907182322 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.271712198 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.853891942 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.274049633 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.21717157 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.269916833 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.268950243 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.196097 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.962461277 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.275314545 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.269520953 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.272256086 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.268565749 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.268677407 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.303785622 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.18449434 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.366713905 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.269885141 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.273644273 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304402319 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.272362055 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.433126462 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.274052269 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.898133844 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.33073257 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.37185731 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.853148097 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.275067675 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.364131382 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.388913015 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.272444656 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.271065558 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.270213994 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.272681273 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.382725868 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.271719129 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.959193452 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.448219781 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.288795658 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.643802127 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.374119791 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.272255708 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.616043994 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.277356828 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.272596448 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.967264219 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.364961595 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.272354942 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.271157339 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.272480518 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.953762423 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.856354908 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.511915877 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.276800041 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.804910116 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.277596853 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.272331274 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.132297373 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.841403653 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.933716475 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.276375038 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.38376754 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.452543759 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.28991381 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.272940117 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.650616925 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.278192232 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.328510061 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.273719936 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.675113137 seconds)
  done (took 381.686846942 seconds)
done (took 612.921799182 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.150952061 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.101301504 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.255258686 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.114211905 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.094148403 seconds)
  done (took 11.8918381 seconds)
done (took 13.065576856 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.467613306 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.469874598 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.340285847 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.472575993 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.307312243 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.486261179 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.449020078 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.293627056 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.386460212 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.359421664 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.388837904 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.332449033 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.309432627 seconds)
  done (took 19.239799941 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.553859725 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.284955599 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.342183673 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.534027143 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.322414536 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.559120979 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.585534652 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.284673756 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.42213407 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.319491804 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.296550296 seconds)
  done (took 18.682977265 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.589811173 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.287262137 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.345211803 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.542489482 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.325061751 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.567604247 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.59186351 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.286384124 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.450259392 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.300990767 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.298282678 seconds)
  done (took 18.763137687 seconds)
done (took 57.86098536 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.313828822 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.374607211 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.315113881 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.296596645 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.293485929 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.293538497 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.298509721 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.295763261 seconds)
  done (took 11.660618137 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.294080597 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.293975899 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.292002041 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.293881122 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.294320993 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.29202118 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.291830517 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.293700116 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.292619188 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.292457618 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.292312382 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.294268594 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.293202798 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.292444918 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.294481401 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.294432033 seconds)
  done (took 21.872375493 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.296094735 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.29417086 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.293588293 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.295226547 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.293689306 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.293739052 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.295085321 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.291462846 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.292953257 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.293790478 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.295259185 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.291665782 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.293871869 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.294510648 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.294387017 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.296241128 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.292305162 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.295206009 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.299814157 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.295142163 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.295260117 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.293949252 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.294485949 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.297322766 seconds)
  done (took 32.249928036 seconds)
done (took 66.959457518 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.295302265 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.279398902 seconds)
  done (took 5.754859831 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.353686734 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.353500016 seconds)
  done (took 3.88959971 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.29774308 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.294965179 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.296307228 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.294801969 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.296851091 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.296880192 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.296377617 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.295956688 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.297065078 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.296216684 seconds)
  done (took 14.144924691 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.296943688 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.29706867 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.298404324 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.297719861 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.296097944 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.297474766 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.297286409 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.297104692 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.298365066 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.296555196 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.295694808 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.298065541 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.296791489 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.296492422 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.29912906 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.298466106 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.296110748 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.298487538 seconds)
  done (took 24.534037787 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.310397521 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.316273632 seconds)
  done (took 3.808954062 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.424902896 seconds)
    (2/7) benchmarking "second"...
    done (took 1.338945639 seconds)
    (3/7) benchmarking "month"...
    done (took 1.401021638 seconds)
    (4/7) benchmarking "year"...
    done (took 1.393938748 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.340125177 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.319032462 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.341573226 seconds)
  done (took 10.740723288 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.284090806 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.571136909 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.757621604 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.441540761 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.278811873 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.29598892 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.266143585 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.297542017 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.299181406 seconds)
  done (took 14.674163537 seconds)
done (took 78.726264535 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.282984978 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.366742842 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.305066049 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.30093103 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.592663537 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.30436789 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.286991497 seconds)
done (took 16.621673719 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.264559846 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.277646884 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.271347244 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.297737784 seconds)
  done (took 10.295482011 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.28285274 seconds)
    (2/2) benchmarking "read"...
    done (took 1.609614241 seconds)
  done (took 5.076286127 seconds)
done (took 16.554744879 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.300289937 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.299727059 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.300817662 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.299018562 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.300219719 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.299305242 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.301102595 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.301088275 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.300051265 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.300854591 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.301182677 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.298035613 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.300392869 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.299634766 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.300122046 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.299807145 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299556969 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299511249 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.300492746 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300481567 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.3013867 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.300194979 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.300292152 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.302175346 seconds)
  done (took 32.391033209 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.300528302 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.300688679 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.300427535 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.302428804 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.298918899 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.301267178 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.300650664 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.300976621 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.301950066 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.301324806 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.301346864 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.30175491 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.299752105 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.302155923 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302175352 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.301630471 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.30171351 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.30109157 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301545905 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.301594095 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.303610264 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302391672 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.301570129 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.30162628 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.303137145 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.301099422 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.302656218 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.300772233 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.301270925 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.301170897 seconds)
  done (took 40.230161824 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.303463089 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.302797546 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.303436893 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.303197231 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.30255815 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.302291471 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.303340607 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.304925771 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.303119608 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.303834121 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.304661077 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.303534114 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.30378948 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.303456893 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.304074604 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.30380427 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.304569918 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.303700087 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.304351295 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.30515454 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.303897057 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.303428845 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.305090095 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.304286715 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.303246903 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.3046802 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.304434169 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.304740124 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.3058459 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.304860297 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.305407723 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.304815866 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.306101071 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.305669005 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.306490233 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.305271132 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.307198396 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.303693661 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.305447383 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.30511777 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.306321694 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.306273634 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.30390429 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.305985051 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.306174136 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.303544743 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.306096175 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.304341674 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.306204567 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.304885917 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.305473832 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.305131409 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.305762505 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.305837155 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.305606401 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.306740026 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.305559333 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.307499375 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.307624053 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.30650336 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.305521255 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.307114451 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.305110099 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.306857278 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.308130728 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.305937335 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.305952558 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.306068522 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.3085799 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.307180916 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.306833795 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.308850234 seconds)
  done (took 95.160660552 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.306903227 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.307722025 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.306901095 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.307088872 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.304547556 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.306526315 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.306534224 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308245563 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307451577 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.307534495 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308050073 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.306809112 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.307347369 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.308525355 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.308744058 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.306625579 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.306272481 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.307187715 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.308246174 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.308397586 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.307913133 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.308184562 seconds)
  done (took 29.954050449 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308133872 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.309740258 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.307585993 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.310336715 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.31078119 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.311015392 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.309073626 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.309883947 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310153434 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.309151163 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307271228 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309209257 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.31242925 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.3095234 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.308631556 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.310314748 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30749782 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.312435971 seconds)
  done (took 24.765457816 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.308953899 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.309331355 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.309488458 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.309019537 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.309831024 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.309315411 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310830426 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.308582337 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.30964114 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.307446217 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.310125817 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307630637 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.309933945 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310700333 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310004204 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.308177765 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.310604604 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311482108 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.310112995 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.310486199 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.308905153 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.310895818 seconds)
  done (took 30.005836271 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308707325 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.309106403 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.309914935 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.309826748 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.309234421 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.309510938 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.310063444 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.31026918 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.313068987 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.312021668 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.310934651 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.312865023 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.311731533 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.316688784 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.311432251 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.311168152 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.310635253 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.311099674 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.3107294 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.311846972 seconds)
  done (took 27.415736683 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.312094819 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.314125659 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.311028072 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.313306122 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.311480745 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.312017457 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.311732469 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.313221467 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.310751984 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.312296054 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.313000608 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.314220393 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.313920573 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.31450891 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.312727687 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.313705288 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.31306212 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.31280536 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.313953669 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.312951763 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.314217937 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.313221863 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.314544333 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.31282064 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.313643906 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.312932015 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.313440165 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.313956495 seconds)
  done (took 37.962251334 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.312357433 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.314179499 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.314059689 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.312776755 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.314579355 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.311860596 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.31435863 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.313557238 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.313593444 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.312992039 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.314604295 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.315095422 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.315893809 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.313386119 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.314894295 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.31454204 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313330501 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.314572171 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.31421678 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314652608 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.31477527 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.314357744 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.314377402 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.31523318 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314209589 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.313469262 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.314770609 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.316114982 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.315755714 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.314785552 seconds)
  done (took 40.625748433 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.33172602 seconds)
    (2/2) benchmarking "in"...
    done (took 1.33381955 seconds)
  done (took 3.864462151 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.315595621 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.315753696 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.314368887 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.31588928 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.316973372 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.316521361 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.315931595 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.316785478 seconds)
  done (took 11.726237883 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.308327183 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.317054043 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.31599396 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.317201513 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.317540272 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.307992937 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.31684712 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.320330205 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.310571472 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.309766692 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.310040642 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.308699953 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.312885684 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.311591021 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.31111576 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.312782138 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.319164321 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.317283269 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.316319359 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.317100999 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.31923363 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.311632524 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.316828626 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.322573467 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.309710422 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.319505593 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.319238486 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.323342054 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.311614114 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.316909992 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.315296414 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.320999994 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.3181249 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.31863789 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.319824614 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.318341826 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.320795295 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.317629588 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.321824476 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.324201071 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.319544909 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.320571071 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.314479782 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.316515922 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.317525693 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.324332067 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.319160514 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.317983078 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.311492725 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.314075951 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.322750571 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.312068921 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.321434534 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.316894119 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.316644799 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.323476576 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.326626678 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.312060907 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.315027441 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.321117121 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.329463463 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.322431528 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.318640008 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.324649034 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.318332584 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.31908699 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.323385814 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.328183146 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.320963069 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.3215267 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.319392956 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.330043277 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.325916354 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.325887157 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.322579764 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.32107609 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.315297931 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.325680417 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.322317424 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.325843266 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.32592637 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.322738832 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.318568904 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.318791715 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.317982665 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.325003916 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.322077128 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.322152989 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.314809074 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.324658682 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.330381246 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.321429849 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.315527661 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.31767505 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.31914338 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.325279909 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.315774374 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.319825617 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.323826063 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.322849571 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.323092766 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.316504493 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.321346227 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.328034491 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.324527768 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.323744819 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.329721622 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.316827649 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.326619919 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.331147285 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.323465456 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.316607927 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.320553621 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.327318151 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.318462287 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.318874674 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.329304044 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.319635166 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.329809918 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.324296866 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.320365336 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.328083544 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.330460982 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.323394162 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.318948912 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.329140134 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.323698108 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.321915377 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.330458863 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.322664326 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.324958979 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.320430312 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.331485446 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.316874145 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.32941961 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.317860182 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.328003371 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.325267953 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.324496612 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.321457179 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.324185994 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.321695474 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.324584926 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.327977102 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.331073417 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.322499231 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.333995123 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.325490544 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.32592973 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.3256693 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.329590541 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.325264243 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.320064462 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.329232808 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.317620421 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.328256044 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.320453542 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.33049459 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.325164442 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.326299059 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.325374282 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.319913801 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.323352328 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.330777785 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.325609423 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.327723991 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.330939248 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.328085011 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.327652464 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.318739419 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.328286885 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.31971344 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.321962269 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.329095439 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.327278754 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.326567545 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.325846321 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.333212562 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.327343149 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.326933164 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.320280874 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.325702719 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.332812762 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.328802599 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.335312831 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.329403266 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.327546459 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.32238252 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.323953509 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.330078994 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.321236233 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.331747684 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.335850726 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.335154112 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.32324586 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.332220822 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.321324464 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.330816929 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.328671918 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.336119199 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.328972231 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.327842462 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.322116562 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.332786925 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.32431723 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.332002388 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.320228039 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.331923478 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.331744078 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.329067845 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.330536016 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.325751342 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.328478712 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.333108778 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.330460863 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.32845683 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.32355757 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.332672012 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.321968271 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.326472232 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.333806686 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.331686555 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.329885218 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.337161794 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.327736704 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.336223317 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.331750151 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.324667855 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.333423717 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.328770337 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.330549307 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.336332329 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.333111075 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.325710667 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.335772929 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.334416168 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.326014972 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.332417524 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.338870304 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.330925167 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.322193459 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.334568064 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.331007742 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.33130393 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.331922555 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.325645165 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.335519006 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.334735885 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.341897171 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.324881525 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.334907891 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.327268569 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.336408795 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.329340328 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.333521896 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.331861944 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.336480511 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.341140665 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.334949211 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.325688362 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.33586478 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.334300748 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.333149919 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.326148397 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.336703872 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.335442376 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.334308126 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.331180971 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.331057443 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.335950557 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.325559924 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.335520537 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.325903964 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.342805941 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.349208097 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.33654864 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.33872752 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.3388104 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.335949559 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.337655914 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.328032031 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.330513835 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.33136613 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.330791091 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.328334707 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.336937654 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.328615705 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.339967048 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.332329649 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.336497495 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.335174543 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.33475357 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.327813217 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.337337898 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.334836922 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.335055971 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.327577126 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.33602518 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.330663506 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.33682354 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.336777617 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.330163511 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.340342693 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.33885251 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.333016179 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.331645648 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.331433239 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.329125936 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.331966379 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.341020429 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.330583953 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.339280612 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.329806214 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.332449095 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.332292319 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.341176022 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.347147684 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.329285662 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.340925535 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.336847967 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.328125945 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.331786805 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.339078142 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.340393754 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.348565145 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.330954186 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.34068023 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.335394058 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.338974404 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.338074082 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.336706593 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.338612271 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.336194317 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.34236701 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.344157445 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.335005407 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.340641018 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.347047845 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.33833058 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.33960023 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.328899399 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.340151083 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.348717489 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.333435939 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.33762163 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.335021043 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.339782727 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.339754888 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.338906297 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.340086464 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.338439294 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.342593192 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.343718884 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.339481339 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.340409377 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.342220643 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.349025487 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.343285613 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.34896584 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.332511016 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.3452357 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.338438015 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.334332969 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.334817184 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.335823649 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.343378659 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.332977362 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.342891644 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.339148567 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.33879763 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.341229982 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.346329104 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.333502977 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.338656813 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.34689053 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.332425458 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.342052429 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.340931359 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.33144583 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.342456657 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.339825457 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.333152028 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.33485758 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.336094512 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.344022447 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.335007722 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.344951474 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.334355204 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.345454699 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.342327455 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.341249232 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.341772235 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.343324677 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.333415926 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.343680562 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.343040167 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.351893236 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.336476449 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.341578275 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.338294682 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.348583649 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.354109677 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.336921449 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.347483696 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.342918237 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.335096947 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.341712989 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.34742997 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.336667878 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.346249842 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.336438998 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.336137712 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.336211752 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.342206986 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.344087357 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.346432275 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.336501183 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.338779907 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.344565992 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.343394286 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.342519585 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.340170357 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.351605502 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.336637448 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.33597319 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.346019409 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.338786078 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.350918487 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.335930449 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.339998797 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.340564037 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.346974796 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.346623179 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.342651877 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.336701178 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.337838655 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.349411675 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.348079423 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.339548821 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.339067818 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.345215478 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.336762644 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.340510054 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.341619431 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.339849811 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.340003747 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.347385878 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.338864608 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.339743554 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.337724753 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.347307114 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.349277512 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.347928631 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.339240966 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.352715168 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.354845057 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.351816063 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.336435238 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.342616415 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.341041093 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.346627908 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.345027671 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.338631234 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.352217709 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.352181424 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.349070977 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.345952688 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.346963958 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.339933175 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.347229236 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.346776439 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.342830495 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.353959598 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.343083218 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.353503826 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.346760761 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.346265741 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.339293198 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.340351635 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.344331556 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.341748945 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.348583896 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.346053755 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.350440885 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.346211479 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.352130522 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.350023827 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.346617359 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.347801959 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.341107778 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.349838109 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.341075687 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.34898748 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.351215179 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.341682045 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.35032253 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.347147973 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.342031018 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.344377652 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.35229848 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.347814583 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.341924902 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.347180015 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.35502689 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.35873283 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.34789145 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.343988503 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.346534 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.351964654 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.346836158 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.348020718 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.343250635 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.356872863 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.362521542 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.342387327 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.345312966 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.353273752 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.359870317 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.348676401 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.348080392 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.345465315 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.347233392 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.353303732 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.348157078 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.351976503 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.355545826 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.346382202 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.35163788 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.342891175 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.345336689 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.350991918 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.361456577 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.350145018 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.345226134 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.357519785 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.360181113 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.349237762 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.362191095 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.357081554 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.350987045 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.357045803 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.344049069 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.35206683 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.349343142 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.355532911 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.351793776 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.350442907 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.350849978 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.344116103 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.352141872 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.359608168 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.361576496 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.35170788 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.345364262 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.347484651 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.35411202 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.351175947 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.352997421 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.352397322 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.351698176 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.35308823 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.346586204 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.363725793 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.366177309 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.355992352 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.353197637 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.352027003 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.353360045 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.354751653 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.349855366 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.356270715 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.353163907 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.353154775 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.351219923 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.36176823 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.354264812 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.34673399 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.348967941 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.348078678 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.355206509 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.360780081 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.371580721 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.356953025 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.357505626 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.357123276 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.354343398 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.347389931 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.356096961 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.354845093 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.348382901 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.351855496 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.356988328 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.35517377 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.355156827 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.348153368 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.357712597 seconds)
  done (took 797.01022268 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.355737617 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.354092064 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.355813106 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.355980583 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.355212867 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.353581494 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.355521885 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.353680116 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.355948875 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.354292803 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.354953048 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.354901845 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.357005882 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.354342078 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.355782793 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.354941561 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.354497752 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.355437102 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.356299231 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.355343622 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.35623388 seconds)
  done (took 29.691149555 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.355000184 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.355276289 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.356491425 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.356719529 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.354649144 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.357163596 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.356193439 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.358014231 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.357779567 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.356606814 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.355907055 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.357713595 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.355811317 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.354343788 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.357603134 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.358065316 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.356798134 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.357184228 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.35683885 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.356368572 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.356972138 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.356577601 seconds)
  done (took 31.076346799 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.357723442 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.356479616 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.35069168 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.360526876 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.357148586 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.356927335 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.357280974 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.357471182 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.355783027 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.348851266 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.350192312 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.351223554 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.353176753 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.360596029 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.354906022 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.36376448 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.358506014 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.357311591 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.358255845 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.356848178 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.362311096 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.36981691 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.358970618 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.350177312 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.361932716 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.358674485 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.358831918 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.358383213 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.350280306 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.361268323 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.359899369 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.35195607 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.362385996 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.361234014 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.353316579 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.361376763 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.358595444 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.358725586 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.359511718 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.356088482 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.3666424 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.359642729 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.362175386 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.369870315 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.359748297 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.353497671 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.364434368 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.358338292 seconds)
  done (took 66.426868535 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.359876476 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.360611953 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.360437517 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.36017139 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.362105226 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.362757379 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.359831259 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.360402578 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.359512865 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.361060868 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.360197362 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.361375884 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.360511833 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.361750766 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.360605981 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.362070498 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.360606312 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.361338348 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.361654937 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.360889418 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.36222847 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.361227524 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.363790267 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.362124392 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.362221557 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.361877441 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.360990975 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.361180131 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.361437303 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.359881342 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.362567905 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.360508853 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.363412067 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.362655245 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.362155205 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.362830519 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.362794046 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.363862732 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.362762018 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.36102759 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.362954182 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.36202221 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.361709851 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.362803959 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.361022467 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.363025699 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.36068914 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.36254132 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.362599686 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.361750941 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.363751136 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.363808367 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.362516602 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.361830903 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.362531848 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.361269173 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.362353275 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.363429342 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.362249663 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.362123416 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.362226536 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.3619508 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.363023335 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.362901236 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.362797608 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.361556964 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.363802649 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.36099858 seconds)
  done (took 93.845290513 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.362495926 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.362717633 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.363473781 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.362769424 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.362927059 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.364285221 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.361985434 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.363130604 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.364079519 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.363733463 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.36472453 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.362331342 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.362113226 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.363826788 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.361575364 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.362849672 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.362664773 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.362923226 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.364215752 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.361378282 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.364213821 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.362762049 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.363476454 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.362290523 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.362777011 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.364381556 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.361045299 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.364020717 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.362874923 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.362768538 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.362986156 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.363291028 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.363437791 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.364213681 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.362468813 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.361781435 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.361569242 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.364262809 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.361557814 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.362532779 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.364127495 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.362720209 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.362031616 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.363922249 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.363317089 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.362947172 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.36278052 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.363544298 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.36443209 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.363849425 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.363655207 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.362970245 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.361718232 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.363210255 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.363444142 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.363524575 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.363378489 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.365123235 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.363920074 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.362104173 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.363460361 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.361267844 seconds)
  done (took 85.749413407 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.36393245 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.362429691 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.362284059 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.362842795 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.362307915 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.363050377 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.363721538 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.362720046 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.362373442 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.363509283 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.364802782 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.36263187 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.363186972 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.364296865 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.363426226 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.365069718 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.364432257 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.36360847 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.363504855 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.364290622 seconds)
  done (took 28.506685548 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.363773003 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.365486381 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.362226956 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.364841774 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.36273445 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.364217887 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.36421483 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.362945276 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.363944421 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.365656534 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.366355189 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.363619207 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.363092426 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.36359827 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.365699223 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.364970858 seconds)
  done (took 23.06436848 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.367547548 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.36625753 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.364045064 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.365138992 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.366137318 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.365113173 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.364698139 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.365063075 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.366360737 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.364627538 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.365500462 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.366329797 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.366737449 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.365475106 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.364889197 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.367170533 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.364670713 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.365028896 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.366933861 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.368494799 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.365459366 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.367381317 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.364833756 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.366439327 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.36470615 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.36617664 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.364868002 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.365696775 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.365375606 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.366132472 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.36650103 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.365455162 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.367141197 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.36690872 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.367924048 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.366484487 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.365573631 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.367844033 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.366923746 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.36720078 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.366986312 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.367026548 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.366587198 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.366490965 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.366643468 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.36701451 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.366959104 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.367901006 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.368872153 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.367202462 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.367537357 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.370563376 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.369468847 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.369052268 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.366798542 seconds)
  done (took 76.396996949 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.367613822 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.368921074 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.368779876 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.367653758 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.367256833 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.370724921 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.370298853 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.373387531 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.36948924 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.370701516 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.370362877 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.369670178 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.368646098 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.368669954 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.371098485 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.370573633 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.369713999 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.369031476 seconds)
  done (took 25.896340465 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.369944583 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.369457442 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.369981587 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.367792179 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.370682828 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.368341181 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.368268185 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.371098556 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.370801383 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.369839445 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.370386625 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.369001196 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.367570893 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.369444825 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.371575971 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.368649885 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.370655664 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.368170276 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.370927718 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.370753231 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.371027141 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.370685805 seconds)
  done (took 31.378962771 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.361691022 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.361878989 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.360621145 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.374715763 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.369840019 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.360676051 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.361507713 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.362330825 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.380454597 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.387681504 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.381646959 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.37147462 seconds)
  done (took 17.679576816 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370959856 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.373024759 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.372861931 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.371806919 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3723892 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371735925 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371997445 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371869348 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370969739 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372394015 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37455918 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37227473 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372653239 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.371157293 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372852633 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372792595 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374266232 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.373078485 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.372604459 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372060376 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.372796004 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372280728 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372559134 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371448283 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371686873 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.373885158 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374281159 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.375114944 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.37353237 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374776291 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.374448206 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.374534706 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.373195775 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.375520455 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.37335644 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.373604458 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.375827927 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374539133 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.374181485 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37314171 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.374231946 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.376179603 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.373904572 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.373915415 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.37326894 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374370147 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.373377946 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373626613 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.374860971 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374170263 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374560566 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372740644 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372325501 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37325534 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372952557 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.376008269 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375302929 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373078808 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372538262 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374253174 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.373358399 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37452864 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.375688247 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374159612 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.373804736 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.373543469 seconds)
  done (took 91.893881279 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372831452 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.371916306 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374338795 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.375639694 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.372620549 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373758286 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373384731 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.37279102 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372704168 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.373766572 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.37425959 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373178297 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374494609 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37300397 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.373940338 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375753245 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374049387 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.374429797 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.374425698 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.373842405 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372896699 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.374196226 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374488443 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.373709175 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.374029999 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.375988089 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.373998833 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374144359 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376706395 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.373532822 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375732231 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.376428545 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.374632815 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.374698559 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374120227 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.374460903 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.376055315 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37373474 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.373540554 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37702259 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375155556 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.376610548 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.375083856 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.374369247 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.376307293 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.375304719 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.376753266 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.374317049 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.374568903 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374318168 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.376949766 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.376107708 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.377821888 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.375412581 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376939666 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.375187527 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.375274562 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.374898939 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.373740072 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.375575232 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.375755099 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.377140075 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376761763 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375838059 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375053463 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.376366667 seconds)
  done (took 91.985540125 seconds)
done (took 1865.886169877 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.530781641 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.486198384 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.366413232 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.370088285 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.366019856 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.363881383 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.379174001 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.36320129 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.36412753 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.364885016 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.366495947 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.557896242 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.398969856 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.365455174 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.364064448 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.461391456 seconds)
  done (took 27.716519894 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.390266858 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.372036752 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.485621729 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.374565297 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.394065998 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.559077595 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.432345272 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.375103495 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.543123043 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.393312739 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.361718298 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.39221041 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.373191277 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.365477766 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.392535993 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.559766855 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.637072621 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.364403253 seconds)
  done (took 30.013140089 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.816034995 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.400546034 seconds)
  done (took 5.463132476 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.388174012 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.372984698 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.373100704 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.370607436 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.363102737 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.37901492 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.370824692 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.367656234 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.384151397 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.499821851 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.378247479 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.384378715 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.3716274 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.37211507 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.380918658 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.417948031 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.533606311 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.38123885 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.37700568 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.376207126 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.370193102 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.469373777 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.412631034 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.381381175 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.498073651 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.378995067 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.378726934 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.379232977 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.488269861 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.382736583 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.369053127 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.372857195 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.371017419 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.316492754 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.91560073 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.38029003 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.395597474 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.382672757 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.380364226 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.526415193 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.373937592 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.38182702 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.379590551 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.912551579 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.480986803 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.492489956 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.38392904 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.373872236 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.375236608 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.438975412 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.376379081 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.376494686 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.432505444 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.185911726 seconds)
  done (took 87.606643773 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.408382729 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.364773725 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.551573116 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.388802128 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.377112905 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.364652011 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.36446638 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.650429871 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.3741628 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.369402742 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.684919886 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.990494242 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.367569533 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.430101251 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.405905671 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.42086111 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.369544522 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.367106801 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.366922994 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.369073945 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.936110367 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.366383292 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.366491648 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.444429827 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.410870699 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.914173396 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.370945641 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.382200242 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.387186459 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.368305469 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.963886011 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.36908002 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.418858763 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.368433308 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.659759913 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.761563175 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.719531469 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.371536123 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.386926792 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.370661663 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.389576112 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.898281284 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.741293945 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.366375537 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.373792675 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.898635242 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.365400687 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.366314832 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.375371634 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.63821313 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.372134335 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.367776121 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.370515154 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.384998155 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.369029998 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.425290872 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.420908518 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.903816659 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.36605191 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.368747798 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.413693702 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.376771428 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.373956088 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.369026633 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.368985096 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.741176539 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.597671189 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.37467069 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.740321255 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.946151034 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.367623516 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.041045308 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.369161726 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.389211156 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.399298626 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.368361316 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.371271338 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.898514369 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.403208105 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.365600923 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.714924169 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.367671928 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.67262603 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.390574225 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.367261809 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.948201459 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.379904598 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.418983425 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.369425298 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.365997602 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.36808326 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.365618173 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.659981881 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.404383388 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.367984582 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.36792656 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.391965266 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.366119465 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.386377609 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.368413702 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.017238161 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.373635121 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.366933316 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.384914809 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.367626873 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.372096431 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.367921069 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.367060285 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.647629605 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.368061656 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.372320315 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.366530355 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.36695514 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.369679693 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.441816223 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.366062243 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.675087778 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.36955784 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.364969316 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.367065964 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.378506849 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.371917136 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.366689322 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.37217903 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.366504633 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.667158768 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.37991165 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.378669474 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.3657158 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.369155071 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.377315723 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.366171357 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.418896922 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.367382883 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.168913361 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.40583609 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.368189474 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.366159701 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.380211071 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.368809087 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.371516639 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.366363912 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.676355154 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.658099957 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.593708582 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.36906928 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.367581714 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.17156212 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.399765356 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.546753426 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.380047641 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.366806341 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.648496856 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.583116863 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.369947822 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.36840504 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.369666161 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.644869041 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.364632045 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.697469871 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.966562307 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.366322725 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.377750755 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.165213092 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.18298111 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.370504162 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.370006216 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.660035997 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.385571553 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.365004665 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.364150523 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.366159254 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.36983292 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.371256386 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.371062498 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.36491246 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.364433237 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.708546041 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.5613323 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.379621571 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.368876915 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.891055666 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.385710706 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.365802203 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.370671204 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.367542017 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.366563239 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.419465037 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.366686574 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.392362794 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.368356725 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.371005937 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.91009675 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.363490012 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.366214341 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.560903721 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.094766682 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.368778283 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.365285289 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.366706062 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.428635506 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.915871592 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.39133109 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.659802541 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.365514305 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.40612955 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.364775149 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.377490221 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.917018855 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.374815349 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.368947436 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.091153937 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.365293478 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.799420187 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.369304269 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.376052435 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.016905308 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.371456744 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.368170813 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.366172796 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.366057419 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.686509215 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.369219753 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.417653849 seconds)
  done (took 506.669702316 seconds)
done (took 658.713756375 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.37106047 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.37007551 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.371867961 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.372295091 seconds)
  done (took 10.730377478 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.388168893 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.374084168 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.384749379 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.375333226 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.38573115 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.373010615 seconds)
  done (took 9.528056141 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.36894997 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.374052024 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.369081643 seconds)
  done (took 8.361525622 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.569239026 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.378261321 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.714203881 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.378384979 seconds)
  done (took 9.291147485 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.382671368 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.382533113 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.382759384 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.385045887 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.384309326 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.384676039 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.386216758 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.387159 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.385025716 seconds)
  done (took 13.703341278 seconds)
done (took 52.862415856 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.463403842 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.611112927 seconds)
    (3/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.352301146 seconds)
    (4/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.574916379 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.49496651 seconds)
    (6/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.49479272 seconds)
    (7/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.396652642 seconds)
    (8/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.39676187 seconds)
    (9/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.456636766 seconds)
    (10/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.408514566 seconds)
    (11/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.356441812 seconds)
    (12/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.437388632 seconds)
    (13/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.349319275 seconds)
    (14/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.522008465 seconds)
    (15/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.413314061 seconds)
    (16/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.521144493 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.534287339 seconds)
    (18/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.512772537 seconds)
    (19/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.573052777 seconds)
    (20/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.579784309 seconds)
    (21/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.661793425 seconds)
    (22/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.496144305 seconds)
    (23/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.34630252 seconds)
    (24/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.502772753 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.451926024 seconds)
    (26/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.618157732 seconds)
    (27/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.462932242 seconds)
    (28/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.591292094 seconds)
    (29/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.453040375 seconds)
    (30/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.596750714 seconds)
    (31/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.435758411 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.453549631 seconds)
    (33/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.464385608 seconds)
    (34/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.48341705 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.523889851 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.519728684 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.617049438 seconds)
    (38/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.407932247 seconds)
    (39/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.381265828 seconds)
    (40/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.406302624 seconds)
    (41/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.350961321 seconds)
    (42/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.470756988 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.443022093 seconds)
    (44/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.447012837 seconds)
    (45/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.34684493 seconds)
    (46/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.455909415 seconds)
    (47/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.571020697 seconds)
    (48/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.601751257 seconds)
    (49/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.556946715 seconds)
    (50/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.352064306 seconds)
    (51/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.410462127 seconds)
    (52/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.442484427 seconds)
    (53/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.368956652 seconds)
    (54/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.5819915 seconds)
    (55/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.360704802 seconds)
    (56/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.511542117 seconds)
    (57/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.353844031 seconds)
    (58/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.407410678 seconds)
    (59/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.582797972 seconds)
    (60/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.545305001 seconds)
    (61/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.406548984 seconds)
    (62/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.473144617 seconds)
    (63/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.350078846 seconds)
    (64/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.371269205 seconds)
    (65/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.670204109 seconds)
    (66/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.350106905 seconds)
    (67/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.530981113 seconds)
    (68/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.610747623 seconds)
    (69/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.617348436 seconds)
    (70/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.715926698 seconds)
    (71/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.355183605 seconds)
    (72/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.415463016 seconds)
    (73/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.52078416 seconds)
    (74/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.594720096 seconds)
    (75/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.358324442 seconds)
    (76/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.465734436 seconds)
    (77/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.487048344 seconds)
    (78/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.480422934 seconds)
    (79/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.649971059 seconds)
    (80/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.48934883 seconds)
    (81/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.359512146 seconds)
    (82/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.519155009 seconds)
    (83/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.354443395 seconds)
    (84/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.46661769 seconds)
    (85/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.476037972 seconds)
    (86/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.415075663 seconds)
    (87/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.652951528 seconds)
    (88/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.498043681 seconds)
    (89/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.512698481 seconds)
    (90/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.54275292 seconds)
    (91/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.367512101 seconds)
    (92/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.532513432 seconds)
    (93/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.460180615 seconds)
    (94/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.366445207 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.488424126 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.527225066 seconds)
    (97/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.461321862 seconds)
    (98/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.450770112 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.499425961 seconds)
    (100/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.356545771 seconds)
    (101/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.362228496 seconds)
    (102/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.401564077 seconds)
    (103/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.494128798 seconds)
    (104/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.405727019 seconds)
    (105/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.394360772 seconds)
    (106/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.455188428 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.451486411 seconds)
    (108/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.354063463 seconds)
    (109/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.50136479 seconds)
    (110/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.372323833 seconds)
    (111/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.41835598 seconds)
    (112/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.356584147 seconds)
    (113/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.580050037 seconds)
    (114/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.50968568 seconds)
    (115/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.352548525 seconds)
    (116/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.54665857 seconds)
    (117/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.620998004 seconds)
    (118/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.385947893 seconds)
    (119/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.413849752 seconds)
    (120/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.354678551 seconds)
    (121/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.503704934 seconds)
    (122/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.400343251 seconds)
    (123/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.787997165 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.538239637 seconds)
    (125/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.616567737 seconds)
    (126/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.545600659 seconds)
    (127/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.442817104 seconds)
    (128/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.353854848 seconds)
    (129/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.354899293 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.620023581 seconds)
    (131/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.451325685 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.484801344 seconds)
    (133/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.417459845 seconds)
    (134/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.490241547 seconds)
    (135/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.452849093 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.468031547 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.509731762 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.491930924 seconds)
    (139/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.354816102 seconds)
    (140/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.451407302 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.444918021 seconds)
    (142/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.354601016 seconds)
    (143/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.403283035 seconds)
    (144/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.45072433 seconds)
    (145/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.495777666 seconds)
    (146/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.40392425 seconds)
    (147/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.589039012 seconds)
    (148/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.360496435 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.524416551 seconds)
    (150/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.441040096 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.477139755 seconds)
    (152/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.417386096 seconds)
    (153/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.408913298 seconds)
    (154/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.582120013 seconds)
    (155/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.595119997 seconds)
    (156/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.439492931 seconds)
    (157/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.414263593 seconds)
    (158/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.413421973 seconds)
    (159/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.414200442 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.534115456 seconds)
    (161/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.583928535 seconds)
    (162/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.563661008 seconds)
    (163/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.539116032 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.491327231 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.483798523 seconds)
    (166/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.359771194 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.498711045 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.485447595 seconds)
    (169/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.458453807 seconds)
    (170/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.44479889 seconds)
    (171/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.355793056 seconds)
    (172/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.355353684 seconds)
    (173/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.60026553 seconds)
    (174/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.718647628 seconds)
    (175/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.536208764 seconds)
    (176/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.590998063 seconds)
    (177/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.36035511 seconds)
    (178/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.364640545 seconds)
    (179/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.478559465 seconds)
    (180/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.562816 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.587215064 seconds)
    (182/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.372720126 seconds)
    (183/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.442805081 seconds)
    (184/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.383527362 seconds)
    (185/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.659072357 seconds)
    (186/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.540408165 seconds)
    (187/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.360038425 seconds)
    (188/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.450729499 seconds)
    (189/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.785653308 seconds)
    (190/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.415157897 seconds)
    (191/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.379842955 seconds)
    (192/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.509871689 seconds)
  done (took 332.324511697 seconds)
done (took 333.570108914 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.405959654 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.475993246 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.387731818 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.388487087 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.391070366 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.379807521 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.424758312 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.389130445 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.406876156 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.404246587 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.379468983 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.418739407 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.40297454 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.402070043 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.421332709 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.388951681 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.386772078 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.398671584 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.4031826 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.403907924 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.390244839 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.389865555 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.415340408 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.387871418 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.395500616 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.398081852 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.394879133 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.391648847 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.401281176 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.406861247 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.381111522 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.39840162 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.406624756 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.403254974 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.394234379 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.397096972 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.391077257 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.476522674 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.414750263 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.404192043 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.399737634 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.409051617 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.39650341 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.397242492 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.404344037 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.421487473 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.395636784 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.407306512 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.382880747 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.360960552 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.410405097 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.404586089 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.398751329 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.361528477 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.390878153 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.407118873 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.402461292 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.410819269 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.398142635 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.395432898 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.424984642 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.410778142 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.405672641 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.403177266 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.399757022 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.406125556 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.403574132 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.409451322 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.401799203 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.396554287 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.397750149 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.403249107 seconds)
done (took 110.173899987 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.512413964 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.391772806 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.552144589 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.402240116 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.556647239 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.520189854 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.400556223 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.398035043 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.399208586 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.200556599 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.399903585 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.401100356 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.39086432 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.399090391 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.516734844 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.399405534 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.398519984 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.099263778 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.405691882 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.522606767 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.389454144 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.403244958 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.403168391 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.203826291 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.392893864 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.386867287 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.531240627 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.402699397 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.105547169 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.384135371 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.389605214 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.103475099 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.531067151 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.421080464 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.411626657 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.407038127 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.560065028 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.400952703 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.518379323 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.513987934 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.551792725 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.441765133 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.384033013 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.389225536 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.403133 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.404050235 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.403034683 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.428584412 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.393412868 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.403909375 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.105672584 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.413100319 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.403844192 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.401897954 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.403398464 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.434050999 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.402350897 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.406779144 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.529907001 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.407768171 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.520694666 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.208394162 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.205056387 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.404844572 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.390208847 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.405778519 seconds)
  done (took 112.637060913 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.466644154 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.471077477 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.505230209 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.395111511 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.448380662 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.503670574 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.398092507 seconds)
  done (took 11.453028262 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.401587139 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.406698056 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.444038548 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.444655197 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.406677428 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.569140157 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.406704863 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.407881764 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.40637985 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.446845235 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.4066061 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.404676182 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.414026139 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.395478207 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.44611648 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.40794844 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.518337331 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.393459533 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.406589284 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.546265767 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.406759007 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.413186267 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.447141354 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.407359064 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.407323845 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.402289096 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.278209524 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.405258362 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.403146124 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.408363269 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.406077233 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.462182022 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.403963522 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.396870307 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.402984657 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.509341444 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.407534052 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.405299295 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.409856641 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.396586614 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.40592689 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.406485119 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.408237431 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.406152621 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.403823782 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.422465249 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.410553405 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.407435298 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.407720684 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.405555503 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.451023309 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.408157307 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.408982118 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.408413748 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.453665817 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.417208308 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.407201393 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.406710459 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.409495915 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.406768914 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.553501753 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.4461604 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.40559147 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.448555864 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.407055163 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.409450504 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.408331714 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.409443809 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.489227679 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.408391465 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.448557566 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.407522563 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.584606894 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.425769257 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.410868219 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.403992799 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.402479154 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.409354972 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.394068341 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.409773901 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.407207111 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.401874897 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.406070191 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.407386538 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.406678969 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.562563343 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.506779631 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.40964974 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.416535534 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.407788519 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.407858728 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.45151699 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.411193 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.410810884 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.451259122 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.520747056 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.453113606 seconds)
  done (took 144.511772426 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.41143357 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.413638657 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.404458892 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.426925243 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.400455581 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.398836046 seconds)
  done (took 9.727077392 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.40243799 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.411919251 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.408572684 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.407930734 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.412587111 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.409626451 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.410854385 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.400855962 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.413135909 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.410070054 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.412250006 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.411495858 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.411216787 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.410835489 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.410012348 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.41272732 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.411171923 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.408817313 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.412235706 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.411869762 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.399200912 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.410053261 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.412953152 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.404708999 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.415422632 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.41163007 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.428405999 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.409707093 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.41063442 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.414505457 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.41180952 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.41527374 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.403467015 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.41081518 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.414236364 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.403748189 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.415150505 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.416981861 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.412486449 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.41622331 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.413212988 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.413957372 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.411324717 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.414669205 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.403395597 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.406793913 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.417950683 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.431758484 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.413722649 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.410863177 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.412040785 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.414069925 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.416685878 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.412328172 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.408103097 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.407520702 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.418372627 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.412770148 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.41213045 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.404827021 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.417357195 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.416689884 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.405009625 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.415991794 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.413625079 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.415596641 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.404486086 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.418153443 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.410495965 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.401111517 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.406201552 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.405116911 seconds)
  done (took 103.89905218 seconds)
done (took 383.484899988 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.821734519 seconds)
  done (took 4.079602022 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.374358505 seconds)
  done (took 3.628224895 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.531542933 seconds)
  done (took 21.793737196 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.451224062 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.365264027 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.376239526 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.363277613 seconds)
  done (took 10.799590779 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.617514593 seconds)
  done (took 3.853435741 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.367685885 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.365911649 seconds)
  done (took 5.978395601 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.540272187 seconds)
  done (took 3.783271399 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.644201823 seconds)
  done (took 3.88695053 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.392871117 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.381373255 seconds)
  done (took 6.024563878 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.331694262 seconds)
  done (took 3.570671221 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.871183744 seconds)
  done (took 21.111361675 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.369995779 seconds)
  done (took 3.607386212 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.376568145 seconds)
  done (took 3.612010261 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.716294651 seconds)
  done (took 5.947422669 seconds)
done (took 102.939535067 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.33959023 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.343736499 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.341745738 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.340804514 seconds)
  done (took 10.598641908 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.418367612 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.418851355 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.429023893 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.413068397 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.412920667 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.42138202 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.381217778 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.381124986 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.410851115 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.406231628 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.422542826 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.41179139 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.420756073 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.38188001 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.406324172 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.423225336 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.41145015 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.426949816 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.384171786 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.413685329 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.355644133 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.410618423 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.404536232 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.35237408 seconds)
  done (took 34.949612462 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.841154125 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.414873406 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.501709017 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.391925392 seconds)
  done (took 7.375578909 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.453142026 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.453524858 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.47287192 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.507589573 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.554604784 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.465153809 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.37360421 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.368245171 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.355226604 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.451047892 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.536581469 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.450518849 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.663283812 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.344073692 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.662698771 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.344799082 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.345973932 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.449810896 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.499394936 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.527461778 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.345724041 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.4484805 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.45363803 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.44914104 seconds)
  done (took 36.202097603 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.353764672 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.362683272 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.346010023 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.361053768 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.347681335 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.346671049 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.348860675 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.353805221 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.347955821 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.347044708 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.347068705 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.360090834 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.347866521 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.347157971 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.352998722 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.34968671 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.350638639 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.35367219 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.355981533 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.348430721 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.347583251 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.353630349 seconds)
  done (took 30.952463398 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.332126143 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.33135653 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.684183762 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.586408928 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.331634247 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.331322641 seconds)
  done (took 13.819915278 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.400935067 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.540301238 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.343728339 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.667978029 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.757866443 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.346301768 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.339930857 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.570265735 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.85418676 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.851536429 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.399002446 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.405571476 seconds)
  done (took 19.699014192 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.338612598 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.33731604 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.340748881 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.353822761 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.389254581 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.343066931 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.346791634 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.33397584 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.396761468 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.393978706 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.343841846 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.392635782 seconds)
  done (took 21.535773444 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423240029 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.343533811 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.350307718 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395423684 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343249656 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.340789063 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.405842973 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.023093705 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.350039165 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620111662 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34562052 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42902505 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.594319717 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354369846 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352352949 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.309961094 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578963498 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809381124 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347955251 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348084903 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379916042 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.353673071 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.353005577 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.563717747 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355288861 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348278747 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.610470843 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347503511 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616533702 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.591903484 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.590566924 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350066687 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624429697 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981682174 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458989352 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544395431 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365789057 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.350495331 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.332835086 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.349349306 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369705634 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.371410521 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.589902506 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350074316 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34906842 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348786195 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043119179 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.356436068 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.347829615 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.348988678 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.591634438 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432744184 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.349460993 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.343979976 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358406949 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34326037 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.352135129 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46027805 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97814982 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339563862 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361163999 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.346104883 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.333880947 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363078873 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961125397 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.347579833 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.344899081 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.344515956 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338594799 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.344592911 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365006575 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34095463 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.361413054 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337540741 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070062234 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347009914 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34531798 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855537479 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351927124 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.343582339 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.566708425 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338974504 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337702394 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.337679029 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.338876466 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043472427 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348729347 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.307744346 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.380911257 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.020255341 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.537050819 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363518485 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369559826 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.561481446 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.309125201 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339866381 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.345589346 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342529309 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361916241 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.026687423 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338934409 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.345374457 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.587229981 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.552540021 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351678464 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.301042894 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800562142 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35168613 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.366049284 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.353349184 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.542182921 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.931850988 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.59517343 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344349691 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379967563 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.3414262 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110226655 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349555829 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.352813461 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.342018021 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614079463 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.141461214 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341875677 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415558787 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344093738 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.343064983 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346333059 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345247541 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.342764637 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.518006715 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348358098 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.591798018 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.345754239 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342441371 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.353793079 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350857526 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.349053473 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.565232304 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3545092 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620964529 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343118192 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34368853 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342075765 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.562396484 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.345332653 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.352256903 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.684343606 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343637338 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.367458897 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593720831 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380637675 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455978213 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375250848 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.345171552 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.598134256 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.350433009 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.349655191 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347900028 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.345447958 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349975117 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.353362237 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350774418 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93242541 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32894519 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.350294559 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345047285 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.361336559 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418166084 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.35313048 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.54311683 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.351712648 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34853796 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.352602428 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.344441097 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.587267843 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592634999 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.351069773 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.521417945 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.804852522 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.938225725 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367310797 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.346082676 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.346218727 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.346240134 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347956006 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345649211 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.347368974 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.545574196 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.599238242 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.354685596 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.941741136 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352659753 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.347650808 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.353670794 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589957882 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.360699812 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346746235 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.357467091 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352188321 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3604452 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.594807449 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570607184 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.365033184 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346492961 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.86574133 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.35603586 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.34925293 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.348414222 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373819793 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.34643027 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170568787 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.687188103 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34291795 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.59456859 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.351651359 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.366385614 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.347480523 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353333016 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353628619 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.35711293 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356833776 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.547108595 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.363482703 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355819439 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988562753 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085805751 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893059105 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356413714 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.350080871 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355419297 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.040855995 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34713351 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349593848 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.588097732 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.038450848 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349657665 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808227581 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.349749987 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.080721163 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599031174 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582072113 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354129765 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.350948172 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.602053642 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.569536965 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377788605 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357734798 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355884052 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.319739469 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879624542 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349689235 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534701607 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041856859 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350759303 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357760288 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.359885195 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.349968011 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.73308696 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.355640864 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350852465 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363596866 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.362554357 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18049221 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.356084385 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351465221 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975119225 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.368181161 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.818688899 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357199414 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.551254107 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.602851106 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.578022986 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.361948415 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.364421435 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.601784304 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596599291 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358613688 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363615609 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896776671 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.216153243 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.36102959 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354013885 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115636874 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354797829 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626160221 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.359620695 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.360296189 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362993317 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.3526273 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353603722 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.353098834 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.359770632 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328518831 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817846413 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.351924764 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349762329 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368914562 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359084515 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.600881305 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.369135009 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.946091376 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587423285 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354438646 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388259522 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.359886483 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366199736 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.331222442 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.353940755 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.35471933 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389114471 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.574945688 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.358747443 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.323170029 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.345406454 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.566018965 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.353505939 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.35420195 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58680348 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.361815113 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.365185337 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097429151 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392937831 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.35482045 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361282772 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.347339928 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394819312 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428786446 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.554801549 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.60750621 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.608748859 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.741874765 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361610252 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362397868 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.371886524 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435694128 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355246439 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.366834221 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.360514928 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944391498 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101927657 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.960304951 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610039028 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.361821602 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367204397 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356590922 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598264941 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356723064 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632706326 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35649644 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.356783016 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379496736 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357919814 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372283991 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573976851 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633431273 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358003036 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370943573 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364495848 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.35907282 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610198469 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.573899916 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826954041 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879108609 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359722751 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361195491 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.056457728 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636600192 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358276434 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360138376 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358972743 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.378791598 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.360512677 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.367640632 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369146278 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584613372 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604808669 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000046565 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.609839171 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.545195786 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.359550797 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361421185 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.613200671 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.192840753 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.559124946 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96549533 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.056767246 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620376169 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435059589 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.559818068 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.365509149 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599264756 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.360756154 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.365382983 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362255273 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360782356 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.361109226 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.605491155 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.963417776 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61764578 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.367228805 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.363062319 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395923749 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.561654773 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.588382838 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079770508 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.581782206 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612847547 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.370904916 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.362420262 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.965005413 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616790038 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363302273 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.367557187 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571966592 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.367493189 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396744685 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.233888321 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.360782797 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885152547 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.575095854 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384508449 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375978869 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.063560679 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96802453 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.376109914 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834674705 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36583087 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363119443 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660141573 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.370613537 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.373400142 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650588702 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.370187299 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378228417 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570896083 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.964488185 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.102235072 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.368196747 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392845263 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.367123704 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365190038 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433227484 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365125229 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365038011 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.751281043 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.370557802 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364800046 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377696301 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.363771484 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379175127 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.370865247 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365751229 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.374300535 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.366970049 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.346508239 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380290713 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488615185 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901068088 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367677445 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.982113416 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.701448 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.615594408 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375110091 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.341016171 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.372999802 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366789087 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367226698 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366825161 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.364740298 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891791402 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.368523387 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.639106355 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.374434317 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.580368866 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57904641 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.375229843 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.569469281 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383294516 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391210743 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.33710496 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36688834 seconds)
  done (took 969.360982615 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.361364086 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.363584111 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.373104084 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.423811601 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.368324299 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.366091529 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.36768854 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.420986215 seconds)
  done (took 20.289868815 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.35972991 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.367233602 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.357820911 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.368806298 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.3653341 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.838445471 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.367651514 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.367769101 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.381275267 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.372502542 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.372930086 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.977877601 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.368862763 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.372012001 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.375782498 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.370835983 seconds)
  done (took 32.23167838 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.01700655 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.368519567 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.805474661 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.378560582 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.378808079 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.359999536 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.479266231 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.363717076 seconds)
  done (took 25.398596202 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.374159347 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.374753316 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.375066459 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.376329435 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.373326667 seconds)
  done (took 8.12176922 seconds)
done (took 1231.768060717 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.376182366 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.37618811 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.375249676 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.376490091 seconds)
  done (took 6.751516765 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.341055225 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.341370053 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.342385918 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.361923338 seconds)
  done (took 9.633588367 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.021308851 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.867247966 seconds)
  done (took 5.135220945 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.915007834 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.90603218 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.904789251 seconds)
  done (took 6.973935984 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.641499613 seconds)
  done (took 2.889453999 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.344764591 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.370468341 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.363162463 seconds)
  done (took 8.327497734 seconds)
done (took 40.958979443 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.367319771 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.122223002 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.519409818 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.366380996 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.52396477 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.518715572 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.613198945 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.365678491 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.36795675 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.364747709 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.36832125 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.524863905 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.599999551 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.123441765 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.599791683 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.124719931 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.52421662 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.361222405 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.378797955 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.36242674 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.613002803 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.368530381 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.361684106 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.368927189 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.523599876 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.510511141 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.363122386 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.12637773 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.361848006 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.362672082 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.509023758 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.363830665 seconds)
  done (took 82.179412003 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.362828284 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.368311653 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.366910761 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.362317883 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.389948118 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.3649761 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.365744051 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.36369152 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.369835452 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.363223105 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.363326845 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.383744143 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.368260015 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.364418216 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.380268852 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.365462761 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.379152572 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.364025196 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.366007869 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.380677486 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.36611622 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.364255059 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.371277991 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.363684264 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.36273509 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.377954886 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.375839483 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.363592573 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.365039762 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.365437652 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.398170583 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.365004578 seconds)
  done (took 77.082925963 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.366219127 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.365597226 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.387074951 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.366129259 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.366200545 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.371039198 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.365568966 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.366734266 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.364804526 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.366953326 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.365702997 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.364948044 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.36571999 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.381412698 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.367967334 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.382687033 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.366249046 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.384157877 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.366488253 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.382145184 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.368633497 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.367870416 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.378558435 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.367154819 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.367773599 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.382633702 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.372790429 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.367203429 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.366833255 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.37049484 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.367997565 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.375576721 seconds)
  done (took 77.119321464 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.608274775 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.381996326 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.384904725 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.376355253 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.385758379 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.381845189 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.37729555 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.612805777 seconds)
  done (took 14.762371707 seconds)
done (took 252.39029316 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.376130496 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.862233966 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.403495908 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.377056563 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.394750124 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.405815822 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.578960301 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.4056115 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.564526132 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.380210219 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.408919299 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.383770189 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.15207269 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.515233753 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.159198204 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.300763554 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.224274269 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.369822805 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.914817044 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.598858909 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.40473577 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.372730324 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.177594378 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.239560543 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.35496973 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.43539958 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.438768586 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.52832994 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.491026743 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.43882957 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.853119426 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.385885435 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.379947507 seconds)
  done (took 63.532817355 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.376551308 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.386518103 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.386292289 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.386299233 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.386755684 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.386771527 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.376068032 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.385946875 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.38646663 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.386096819 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.387349269 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.387711492 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.388335265 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.385819603 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.385948686 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.360885455 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.377325807 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.387246585 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.378054921 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.360735865 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.386989328 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.386737148 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.38712579 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.388269156 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.38869128 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.389280102 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.388291624 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.388171098 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.387695112 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.388772102 seconds)
  done (took 42.780438354 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.390419298 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.912041415 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.089715618 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.386462996 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.380558721 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.385190794 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.656285294 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.394596138 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.384610751 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.384075112 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.826069398 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.397838681 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.412914625 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.101864142 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.384987352 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.389925785 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.391292832 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.380609613 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.921603769 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.396611423 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.655269664 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.395291613 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.653842198 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.395854776 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.38487166 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.382126606 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.387118252 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.18791468 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.400561349 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.829804004 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.112901124 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.656445891 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.121295105 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.149728013 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.113532426 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.39823032 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.39304249 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.832639964 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.384737916 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.383603957 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.655684881 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.383548494 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.103532829 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.04812082 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.400287312 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.39143915 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.217901289 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.831306817 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.61516665 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.389195845 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.1427883 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.38754064 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.394326145 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.385052526 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.613908342 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.385342638 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.383411211 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.208208675 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.388627149 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.656319255 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.392891087 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.385364876 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.920053351 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.383530664 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.920310405 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.385223107 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.392399802 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.384610618 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.108940862 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.3886559 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.068839643 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.400818934 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.393749579 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.832970471 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.922577453 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.265550364 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.388296565 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.928136316 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.149997775 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.672996985 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.388175318 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.168823515 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.674437401 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.39011168 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.397439367 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.397409222 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.395191861 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.459841679 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.654468529 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.998357943 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.068765484 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.216998552 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.660014594 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.395330468 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.386848352 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.211328704 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.395741775 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.396211512 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.106043917 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.07290293 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.403762951 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.394745149 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.056498135 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.404730986 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.662912118 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.392553577 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.147973541 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.38867153 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.462078893 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.395606147 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.39361326 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.391384713 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.661826509 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.391742942 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.3974657 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.053630395 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.861846816 seconds)
  done (took 192.809730495 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.38169129 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.381839754 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.381375331 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.381173765 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.381624941 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.390634836 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.379628367 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.382312338 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.386383019 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.380898954 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.382394962 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.390500364 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.389817599 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.382358702 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.382860778 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.381863404 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.382767496 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.387311828 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.382609492 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.382771798 seconds)
  done (took 44.93706248 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.397102424 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.922186282 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.895865151 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.400030945 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.397913567 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.388861886 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.442339312 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.398636594 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.39989113 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.673841101 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.553352745 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.405284266 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.399194464 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.397927798 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.891479074 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.377250313 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.674235282 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.922306683 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.400943129 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.921731917 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.373499838 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.399697907 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.388825599 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.923012462 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.684095484 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.661275137 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.450150762 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.923136361 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.400026419 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.398865006 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.922585772 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.402025326 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.390622246 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.912134302 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.405466182 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.414414391 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.399964147 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.446836491 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.448517619 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.676332598 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.931118058 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.67401271 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.410572268 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.544994741 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.401821434 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.372816679 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.935161359 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.401339162 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.372918048 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.402873392 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.406506095 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.911377995 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.393020779 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.91328245 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.403057654 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.402371066 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.927255806 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.912771146 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.900922514 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.55382118 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.397708135 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.665349908 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.40256382 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.93844161 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.403461804 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.403583977 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.402716435 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.558070964 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.936532118 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.669339319 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.686744678 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.687980679 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.408091435 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.458821103 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.403509891 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.681765072 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.462516163 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.758985904 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.683580382 seconds)
  done (took 125.732650013 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.667611895 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.508551462 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.764339652 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.962222067 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.891404958 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.531043641 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.505953454 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.631800551 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.406351919 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.510537965 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.031845356 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.51889648 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.101607527 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.455218638 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.496400324 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.514684216 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.778666817 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.340993896 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.005388394 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.998155526 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.400569512 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.515475132 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.901116476 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.595656194 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.395044059 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.969046199 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.290779604 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.893989534 seconds)
  done (took 52.855529638 seconds)
done (took 523.90178242 seconds)
SAVING RESULT...
DONE!
