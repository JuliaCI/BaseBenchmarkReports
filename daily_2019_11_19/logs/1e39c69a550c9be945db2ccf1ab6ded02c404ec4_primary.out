cset: moving following pidspec: 5211
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.330747569 seconds)
loading group "string"... done (took 0.543202381 seconds)
loading group "linalg"... done (took 6.914455623 seconds)
loading group "parallel"... done (took 0.149555831 seconds)
loading group "find"... done (took 1.097532822 seconds)
loading group "tuple"... done (took 1.697953565 seconds)
loading group "dates"... done (took 1.179028172 seconds)
loading group "micro"... done (took 0.210160838 seconds)
loading group "io"... done (took 0.984968527 seconds)
loading group "scalar"... done (took 35.935663077 seconds)
loading group "sparse"... done (took 11.386976775 seconds)
loading group "broadcast"... done (took 0.893321473 seconds)
loading group "union"... done (took 11.454576838 seconds)
loading group "simd"... done (took 4.230806521 seconds)
loading group "random"... done (took 8.901796289 seconds)
loading group "problem"... done (took 1.898484184 seconds)
loading group "array"... done (took 20.242124176 seconds)
loading group "misc"... done (took 1.618144662 seconds)
loading group "sort"... done (took 3.296939128 seconds)
loading group "collection"... done (took 16.30583065 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.48601807 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120252324 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11039258 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.114715617 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.141517393 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.107248491 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.119654637 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.081058483 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.81005543 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.142838023 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113757509 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.406265712 seconds)
done (took 5.140567365 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.169941037 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.079321049 seconds)
    (2/2) benchmarking "String"...
    done (took 0.077708871 seconds)
  done (took 1.381942667 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06148654 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.116974917 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.062836297 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.063197891 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.063683332 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.062822942 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.063587714 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.063681869 seconds)
  done (took 1.722418116 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.069355267 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065325846 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065022524 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064377628 seconds)
  done (took 1.489735137 seconds)
done (took 6.060936402 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.74679493 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.196019169 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.178399725 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.392885173 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.124980157 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.152724871 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.63281523 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.315194021 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.184711526 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.077884473 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.100631667 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.313498045 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.104354725 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.633196494 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07379826 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.086927161 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.134359326 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.420406095 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.064269962 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.078258706 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.08529207 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.125377273 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085150754 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.070843029 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.139743531 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.064245396 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.131409551 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.077123271 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.062949944 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206274096 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.169048113 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.657213772 seconds)
  done (took 10.153912684 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.092255043 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.094147995 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.065737634 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.119431138 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095227063 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.066403842 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.067584565 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06346969 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.083030143 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.124951142 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.086138282 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.097087064 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.061907802 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.065465329 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.080507838 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.200027505 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078260533 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.077795367 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066697545 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.071214838 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104214452 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.074761047 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.074328173 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.073934492 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.125287582 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179268568 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095762325 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.095841359 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065914866 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079427574 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.112821191 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124735758 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064070362 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.064500137 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.120294103 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09214937 seconds)
  done (took 4.568869428 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.958437558 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.136695414 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.086417523 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.128386863 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.105651721 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.061036948 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.103169666 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.062590823 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.079437275 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.196735092 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.424247438 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.561106075 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107079291 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102577634 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.063916325 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.0665226 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065252569 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.327608523 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.091789487 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101794503 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.077357471 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.066412367 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.065618658 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.350504418 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066957172 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062373926 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065460811 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.055112195 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.120400977 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064481444 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.928359362 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120947127 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.063031133 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096996332 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16379361 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086715594 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.271864091 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06447864 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.060999864 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.146689061 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.067329527 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.063908829 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080039554 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100406248 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.109275423 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.062331855 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.063858931 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.15552041 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063257043 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078318193 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.621260557 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151304319 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075199473 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.062552243 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.250685609 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084290452 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066764628 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.061397623 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.174220988 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134489871 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.064638188 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.063507571 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065351293 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066332335 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.35028443 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.063214521 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.717972189 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.06685702 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076280443 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.066978393 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.0662072 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069586308 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068913426 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.083992582 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.062687476 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.072096968 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.062409951 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.062556289 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.0633649 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.081265242 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061335653 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.352417867 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.063234428 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.064930022 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06139815 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.082742695 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093244568 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065452376 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.063791178 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098167424 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064813992 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.062856247 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.101566513 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.062865964 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.080814997 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.065479788 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.109387731 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.062512848 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.180141776 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064547549 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096333591 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.067833775 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095171076 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080997989 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066646682 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066894787 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.400757149 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.060980147 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06191377 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06142117 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.065438589 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.061947127 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.064144576 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.063149333 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.07563355 seconds)
  done (took 20.343034046 seconds)
done (took 37.251859295 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.228337296 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.071599368 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.072140768 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073722372 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.071728787 seconds)
  done (took 1.842790905 seconds)
done (took 3.147053062 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.11815289 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.095080214 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.060894414 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.092073335 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.060860048 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096348242 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095728873 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.077474532 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095621838 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.060716473 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092755011 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.060903503 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.060418075 seconds)
  done (took 2.388670325 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08088742 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081784616 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067818095 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080775996 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06208992 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080530783 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.078788457 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087031832 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.07921023 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070882764 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062032316 seconds)
  done (took 2.129279129 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.078210682 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081506753 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066645185 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.07812077 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063126767 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.079733263 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.078510116 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.083590374 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079373853 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071202466 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062439424 seconds)
  done (took 2.113191458 seconds)
done (took 7.920347133 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075003576 seconds)
  done (took 1.357870913 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.582875646 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.050066184 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078172194 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.108328946 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.179464408 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.116739802 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.275329524 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.084632555 seconds)
  done (took 8.941383371 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085267735 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.065538804 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.066075629 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.079817569 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.065544862 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065132715 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.068106066 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.068557065 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070476237 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068397178 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069413759 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069317689 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.06933616 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.067557126 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07019224 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067152029 seconds)
  done (took 2.472737353 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.088592501 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.086770449 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07002058 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.071278017 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068801988 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068747108 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.071035486 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070030566 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.067382349 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068735638 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071061303 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.069998063 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.06798705 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.061692822 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070630701 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.072092191 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067429793 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070446605 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071129804 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.071395354 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.071235468 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.061317769 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.067938667 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070503928 seconds)
  done (took 3.090391345 seconds)
done (took 17.152929144 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111243672 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067979374 seconds)
  done (took 1.471677492 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078805669 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079675784 seconds)
  done (took 1.453971937 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082730081 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062263577 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090166511 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.075353093 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.062611564 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.062227228 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085754562 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.062640152 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.062273568 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.062779676 seconds)
  done (took 2.008910964 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.066968258 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.075946857 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.06689688 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.077635237 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.0703204 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06071622 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069031439 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.064418517 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.074826611 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.059784466 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068209697 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.078724712 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068169676 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.080997018 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.069357022 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.065327686 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067961714 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064395145 seconds)
  done (took 2.554341542 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063877328 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064086086 seconds)
  done (took 1.433854659 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065367256 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06093161 seconds)
    (3/7) benchmarking "month"...
    done (took 0.064358571 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064187565 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.060194838 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059654498 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.060139616 seconds)
  done (took 1.737236992 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.368799458 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.105758485 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.294642616 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.067327296 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.078273015 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.245362634 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.062417043 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.067231702 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.067278435 seconds)
  done (took 2.70370226 seconds)
done (took 14.671296891 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.075648799 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.081608513 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.091080493 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.35516833 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.08811391 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.062753826 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.110429196 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.186484825 seconds)
done (took 2.367746498 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.207191314 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.607915663 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.382756501 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.192871997 seconds)
  done (took 2.493807307 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323296706 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.083294221 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.05523163 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06388591 seconds)
  done (took 1.841037631 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06252606 seconds)
    (2/2) benchmarking "read"...
    done (took 0.066065863 seconds)
  done (took 1.444235289 seconds)
done (took 7.300544437 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064020033 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.062821132 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079407483 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.060703477 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.060164053 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.062696251 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.059933873 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060052253 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067831224 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.062299185 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065210035 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.063927663 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.063402085 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062617601 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060350109 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060554822 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062891166 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060133142 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060610641 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.062387856 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060019508 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062654658 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.059996021 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060347401 seconds)
  done (took 2.849970366 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082111594 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065476478 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.069437214 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068193345 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06673038 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.067874448 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.067707583 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.062923431 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.067836202 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.064845557 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066717717 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.066661347 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.064603439 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.066710114 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064512701 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.066808289 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.067799216 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063024752 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064892359 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.066823422 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068402765 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063419945 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.0669734 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067700723 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06641753 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068171685 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.064584067 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.062976089 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06807835 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.066310867 seconds)
  done (took 3.331255824 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069141487 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061576011 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062585671 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.068026734 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.060820503 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061345286 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.060489394 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.060803225 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.060943443 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06047972 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.061810137 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06004683 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.060331489 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061478219 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06126976 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.063653115 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.075727951 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06069528 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.05999546 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.061029826 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063551534 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.060348044 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.0604467 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.060106838 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.060153121 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.060133557 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.060637442 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.060398408 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06095209 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.059993107 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.063550951 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.064089871 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.060090527 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.067147658 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06368729 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.060150334 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.064572133 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.059989946 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06080728 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.060030356 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061386539 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061627635 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061815725 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068725918 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06204969 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063430855 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061978503 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063256783 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.061928404 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064713468 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061214849 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.060298776 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.062173696 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.061157447 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.063678691 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.059371697 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.060703691 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059375568 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.061551656 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.059668244 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059398731 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.059545534 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.062285292 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06054811 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.074656895 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066774312 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060217011 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.061725178 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061321356 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.062645343 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062404393 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.073814537 seconds)
  done (took 5.814491386 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087695042 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084094539 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062608884 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061994128 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058905173 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060542317 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.064124942 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060754253 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062174714 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.066425272 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060958686 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061630521 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.169418492 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073291796 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06082012 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062034143 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066578314 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058753237 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060241976 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063984436 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061427029 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.064174309 seconds)
  done (took 2.868269301 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.150757075 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06677828 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.101244499 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06950872 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064031661 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06925108 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066108391 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066410135 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06640809 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064847903 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064309159 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066038736 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064122119 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064433955 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064878268 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064646409 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066414044 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064764602 seconds)
  done (took 2.629546288 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.073970953 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.063435852 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.083215953 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062678149 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.063708972 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065196471 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067343391 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070562203 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.064505414 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.062401367 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.070609439 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064796185 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.064534937 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062235448 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06495852 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.062410118 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.064797517 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062176111 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07052864 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066945922 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066803356 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070397862 seconds)
  done (took 2.795132309 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076299774 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065076341 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07879621 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06591077 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059454993 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060887686 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.066803257 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062303347 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.066498643 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.064340437 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062494396 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060598818 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.065525449 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062204496 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.065541787 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062049771 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063875532 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06239056 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063964763 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058464599 seconds)
  done (took 2.622436431 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085053763 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064550576 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064713118 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072378173 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063986094 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.063947837 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072100773 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06397391 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.064156634 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083853324 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063908882 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064192916 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071485759 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068915774 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.063725275 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071349598 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071298266 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071693499 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063925195 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064092667 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083442928 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.064075108 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071288403 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064283606 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063823742 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064066066 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064080115 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069224994 seconds)
  done (took 3.250190195 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064460038 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062592762 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.059851075 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060228282 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060496886 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.060334353 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.059995836 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.059815029 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062524479 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.059731984 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.062589808 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.062624392 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062384143 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06217546 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062618141 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06231574 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062312162 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.060044744 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060133349 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.059888863 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.062715223 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062052769 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.062682141 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.05989772 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060259603 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06226159 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061949323 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.059963949 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06228907 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.060480398 seconds)
  done (took 3.178686512 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07405576 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069878452 seconds)
  done (took 1.480442193 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062473193 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077322025 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059695275 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06660657 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067048363 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062938784 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069924236 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066367647 seconds)
  done (took 1.863951443 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080069521 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075650789 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064531661 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077591936 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.072906289 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.078944972 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128225588 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.063463481 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.069485577 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060802194 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.075816449 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.0617271 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.068813671 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062719962 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.068456191 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068612486 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060546396 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.068641814 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06465426 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.061292053 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063801687 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.070812775 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064968787 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058422557 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.063730724 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.084227952 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073352313 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06234244 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.065225241 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.069844708 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.068075496 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.056781188 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.062670026 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.063471937 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060775822 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.072043585 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077249825 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.065404497 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.070841821 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.063683016 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073138601 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.057941158 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.067000517 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.069120685 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072155256 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063709915 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063683291 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058228094 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.060806272 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06514167 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058517886 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.062974502 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.05793242 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071625628 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.066180716 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073196897 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.061786151 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.063905614 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.065336963 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.06569514 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.068972239 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.064625506 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064935499 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06262099 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072109307 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.066610038 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071868626 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.057978746 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.056773219 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060620919 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.071626506 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084261757 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.068565234 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.063396444 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.063511322 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061322851 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.065902032 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063570859 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.067935874 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.06838445 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.062921169 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068357775 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069739053 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062850051 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.064773636 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070863479 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.060982408 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.065762236 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.060519147 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07876747 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.061585442 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.060959577 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.060953572 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.072790765 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.066223258 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.062991526 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.060992777 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069871679 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.057521655 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063539277 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064115219 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063566029 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.073154162 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067675416 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068017052 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.071256637 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.070377105 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063133006 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.065842807 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.059622608 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.063651675 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.061833962 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.069623331 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.057285134 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065135421 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.063381461 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.062798415 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07089808 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.060562611 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.062571339 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.195650304 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.068796711 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062235717 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.060151204 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.066358951 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063408137 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065979105 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.070854301 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062205114 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.058589291 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059021481 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.066686133 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063174669 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.067083018 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067841269 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.066488525 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.057930151 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06142673 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069202085 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.072677513 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.063666443 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.064966899 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.068918574 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.064629826 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063043118 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.069684488 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.066302742 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062579929 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.068868123 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.064350132 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.05909219 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066591704 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06579478 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062473935 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.067719974 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066547073 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066187486 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06431109 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.061889071 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071226343 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064576337 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.062603867 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063325264 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.061837067 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.072882513 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.065729848 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058216838 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.060820116 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072739392 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061244343 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063036394 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06188755 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.065617662 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064085084 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.061528951 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.062733565 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.064635034 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074038715 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067134121 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064410749 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.068711215 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.074125494 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063035907 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.065833461 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06267939 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064825372 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064558594 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.072076359 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.068743761 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068606507 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066056978 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.059536984 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.06883572 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.06999453 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.061508992 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060404167 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.061885469 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.066767014 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.068335333 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06685537 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.063280943 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.061014105 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.063062208 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066180836 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.065003329 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.062968112 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.062052279 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069385648 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.060865751 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069511684 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.063435594 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.072405876 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.065602512 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058240312 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065919417 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.060852409 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.06831655 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058001384 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.060434254 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.061635671 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.063799145 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.061901837 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.065134877 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057237603 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069147616 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069917133 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.063111602 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.062172204 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.062847421 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.069274322 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.064425987 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066623675 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.066600499 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.068875514 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073312156 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06242258 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.066142672 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.073391785 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063376844 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057359054 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.068526931 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.061643317 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.061713846 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062034712 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.060633191 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.194644429 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072610774 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071082803 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.057829935 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.066218094 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062127975 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.062250564 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.059044446 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.06831709 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.066326838 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.064007777 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071111392 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064595986 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.064822397 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.067666234 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063493326 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064687408 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06504486 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066123357 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064200771 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.065382139 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.062382872 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066551776 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.062603199 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.061659405 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066036531 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064145019 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.063805972 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068780002 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06311256 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064205805 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.065588026 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.063935611 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.063647349 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.064315641 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.062519555 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066292522 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.063852875 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.063735555 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.065489235 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058952234 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070129889 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063682508 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071127277 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.063941033 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.060091927 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.069901028 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.064823886 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.069532547 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064665199 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064536192 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065265289 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063024153 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.065868447 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.069564435 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.061042346 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.074266389 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071667305 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.063760825 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.06601517 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06380544 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.064884087 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.062547152 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064886878 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064136272 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.063628497 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063957982 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.067905182 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.066126852 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.064016037 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065289443 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064573043 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.063372667 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064758064 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057858229 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.062770709 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062636961 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06307826 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072421273 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.063481317 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.062835858 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.062003947 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.063993453 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.062259369 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.059726058 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070817553 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072528346 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.063227466 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.069609581 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.061987679 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06424562 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.072922057 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057118534 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.060814469 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.060609438 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.060525948 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06999002 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.063764696 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.071635531 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.062822469 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.062212767 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.060075537 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.063477647 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.061798616 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057495362 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060652115 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06654472 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.061948738 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062228254 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.063279899 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.06538409 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.063936225 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07202766 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.062407529 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.063577379 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.063226027 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.060276807 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.062104049 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.061829832 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.065561941 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.063889981 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.060866042 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06049269 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06242869 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.063621166 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.063873378 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.062520061 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.064363804 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.203328215 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063705662 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066254359 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066619831 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059087616 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.066208572 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063321794 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063155754 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.062076122 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.067128963 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067445076 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064976376 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07164864 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.063771309 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064316977 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064027435 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061735342 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063500315 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063257098 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063795047 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.063115382 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065073191 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071543091 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061615914 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.066505164 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063658787 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.064020756 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.069923989 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064144801 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067163413 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070877066 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.063168139 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.065274535 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.071216007 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068329638 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.066536241 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065470647 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.065315795 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069375833 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.063024539 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07015865 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06399412 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064035522 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065304257 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06215057 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06322497 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064337084 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062765327 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.070363294 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064416932 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.063573653 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06270005 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062296669 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064443628 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067200933 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070760681 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.066056886 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066473946 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.05852416 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06068096 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064098878 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061480237 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06527285 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.066293307 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068721412 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.065481213 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06411401 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062473625 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.071849739 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068448682 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.066625246 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.061746003 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.067344257 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064516012 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.065508478 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.064008119 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.063914699 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064404649 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.066689491 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.064985157 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.062394067 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.069864216 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.066299239 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064021694 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.064701059 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.063970528 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.063406944 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058785352 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063651092 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.065221866 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.067996001 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.065247421 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063233573 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.073900996 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06082656 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.063434864 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066368595 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062711799 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.067579193 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058422725 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.064463376 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06414267 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.063883744 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058315225 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062562328 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.060896277 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.065301017 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.061815477 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.058110952 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.072824684 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.071315991 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.065375604 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06184661 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.061936673 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058301354 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.058353969 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.062058072 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.063808294 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.0645993 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.072895183 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.062020257 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.062011295 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.058338758 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062664006 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065591852 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.065728653 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.060022441 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058470631 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.061701039 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.197737202 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.069016619 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062293691 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063453257 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066594858 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.065563984 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.061704477 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066688111 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.060170867 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.067451094 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076423472 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064858622 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064257802 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.069634594 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070975654 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064773536 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059259404 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064574837 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.066470672 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.064043594 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.065210239 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.065174674 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078975302 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.065772513 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.063415486 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062697789 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066134364 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06317932 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.072013266 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065005353 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.063771684 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.06774859 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.066030798 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07336106 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067582661 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07277211 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.06908833 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068689011 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064584081 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065235609 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062723256 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.063616788 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066652745 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066133348 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070708831 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07306995 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064591835 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.074096704 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.072440335 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065348668 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06053254 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.062386671 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063438839 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.058620736 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.064632894 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062254769 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063501154 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.062753336 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063502824 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.064915583 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069522894 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065893601 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065876315 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065101969 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059104197 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.065764784 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.066006454 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065091017 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060198789 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.063702232 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.064839279 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.066828587 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067404771 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062301034 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.064235437 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.064663129 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.063954523 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058732586 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.069438918 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062040544 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.064648489 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062146746 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06318474 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.063906899 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.06710619 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069646996 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06564553 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.066565613 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068151583 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066277764 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060272006 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.059961655 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.067775682 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06174986 seconds)
  done (took 40.772015008 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.0964242 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059587001 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059048922 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.05905768 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069979736 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059742579 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058529301 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060026094 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.059761597 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061649427 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.059027913 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058374869 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.067388514 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074401854 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070117815 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063273747 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059030608 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059569573 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058343779 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059451756 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.06743461 seconds)
  done (took 2.753166687 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07081643 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.067121002 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068866421 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072635209 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064230989 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066921876 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068940833 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066997412 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072427419 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063735485 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.072024362 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067234498 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.063860068 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.063662606 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063514357 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067337544 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072576364 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063795865 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067009866 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069156383 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067268574 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068991464 seconds)
  done (took 2.882993133 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.063635902 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.062951142 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.064346087 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.058152717 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.062314163 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.058939908 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066168469 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.060908004 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.066271753 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069509975 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.061898363 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.061497713 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06384022 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.058030093 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.062633862 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.060147039 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.104179089 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.065767885 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06239282 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.063205241 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.058031244 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.063837774 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.058629577 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058458566 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.061215987 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.065898441 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06321286 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06047887 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.062590495 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.061270746 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.062618854 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.060296971 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.063670258 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.063117769 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.061423203 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.061092905 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.062121925 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.062286591 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058108758 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.060554418 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.063099353 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.058682681 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.062579405 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.063862173 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.061272599 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.060945723 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.064237297 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.062444645 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.057780012 seconds)
  done (took 4.477527339 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.076490727 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.105317926 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.065018286 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.085050297 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076812681 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07187521 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.065755133 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.085700319 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.060461526 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061253638 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077922745 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.075984133 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062498998 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.066859339 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069158889 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062483892 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063782065 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06151928 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066475487 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062058087 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.066715589 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.068801799 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076385035 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07521033 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066122195 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06242307 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062679295 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067371025 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07512393 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068387064 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068840661 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069762389 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079248243 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069985864 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063832115 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065663321 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079528634 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.063804185 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.064687382 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060124753 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064250865 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06644127 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.06861958 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077890002 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062443935 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.067262257 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062167653 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.059388113 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07458389 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065276735 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069546651 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.076228661 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065565942 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062193378 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066570635 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.07747864 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062068093 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.060415732 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066723129 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.074156653 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.059874763 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065760543 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.075221265 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064253888 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.06902454 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.076013694 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.06717035 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066292507 seconds)
  done (took 6.213959908 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071788259 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.069531225 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077918923 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076690668 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068848698 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.068963301 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068800682 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.068792558 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068885468 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073206648 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068839224 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.089292355 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.064085177 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.071700527 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068924278 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068947235 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.068787266 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068739803 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069065017 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068741694 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.069005907 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076590827 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069270434 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076786416 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.0949803 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064425873 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068506758 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069121166 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076544913 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069199197 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.075810125 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.069097698 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.068913995 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076548572 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.075617618 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.068202376 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061637315 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068287709 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.068692028 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068345298 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063683917 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076587086 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068656802 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.064182929 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068483226 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068210558 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076127081 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076223533 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.071228113 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073091515 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.068659717 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076443645 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068261585 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068452114 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076260586 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.100440322 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076054193 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076111703 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068792711 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075958781 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076648267 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082322231 seconds)
  done (took 5.88364295 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079771223 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072461641 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.073489565 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.05823564 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060641673 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066727552 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060583579 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.060803379 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071051357 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.071324117 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073515357 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066533294 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069477363 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07381521 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066600568 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069199198 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066183445 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066337317 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070945228 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066240635 seconds)
  done (took 2.771096531 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.071086299 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.079451842 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.064021566 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068844036 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.065541988 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068056058 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.065351564 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065478355 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063616652 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066605875 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073372552 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072411468 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063302314 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06792138 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072343755 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068075511 seconds)
  done (took 2.495143423 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.071250841 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.069093326 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.076408263 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063660105 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.060854178 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059061465 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06213936 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058179538 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059028563 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.074146518 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.062334101 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.06450873 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.062332781 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.061299353 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059512739 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065202988 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058841245 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059942088 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.062147297 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.074612524 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.074787381 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.062577068 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063801618 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.062433846 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.062784807 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067751037 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.062159453 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.060741395 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06012868 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063180695 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.063283835 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.066736331 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.059993595 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06035834 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.061364793 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.060617214 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.062534172 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.063137107 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.065151479 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.062466739 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06054512 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.062146058 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.062525612 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.063382302 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.059026226 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063115724 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.058939361 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.064398749 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060628782 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.063038713 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.062672438 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065266223 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063488217 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.068899684 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.065372354 seconds)
  done (took 4.895746919 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076092284 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06689519 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059564678 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06143498 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066511871 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064937921 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066125174 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064361244 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064481067 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060801855 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064388197 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.065298411 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064618691 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066136627 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06461185 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06653122 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058736181 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064538555 seconds)
  done (took 2.578010745 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.067515296 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06344118 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.069450536 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062230435 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.063258279 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064838316 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059282257 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061223181 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06129611 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062630137 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06242521 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.064852154 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061291106 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064924911 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.062466492 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06276652 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06453752 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061432619 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062923471 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058724294 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064842778 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06162076 seconds)
  done (took 2.797331384 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.088733595 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.078123624 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.134651473 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.076131839 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.080092872 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.068532269 seconds)
  done (took 1.937439069 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087717118 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075979205 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0634258 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084364415 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070525055 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063912575 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063966515 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064356423 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072274014 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072218373 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064202558 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072732122 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072663904 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071947321 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069518305 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069633145 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064163449 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064115128 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.062841182 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080528841 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064021254 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072416373 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064465468 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063762086 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064022102 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071905824 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072394693 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072442103 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063832285 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072291817 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069617405 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063991087 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072413707 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072795891 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065677419 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073052627 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064118584 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080507168 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06953376 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071773299 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065383534 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070133901 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07265231 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068725917 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072316362 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064196603 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068752643 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064214078 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064237423 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082641772 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069934961 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071808932 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070157485 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073190964 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072488082 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082375804 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072846453 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071709323 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070147648 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074827341 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072248068 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06997276 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071668091 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072545204 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070543755 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071805007 seconds)
  done (took 6.062423312 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079041292 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082308527 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064520211 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073009894 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071987942 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064613171 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064214092 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064661456 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064089382 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063814771 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103503368 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064496124 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072027963 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072154001 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064525716 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064185581 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064719826 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071940028 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063746947 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082354279 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064234683 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072037262 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072250506 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071944462 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072917823 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069741884 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064411672 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06445324 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064177705 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06439736 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068919796 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064601026 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072064827 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06370109 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071885672 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064482908 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063977258 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068935717 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064262185 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069541057 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07177797 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080154483 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064178222 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064052175 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072754198 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064045079 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06425509 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064105985 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064328395 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063792858 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072577736 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072560069 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072569682 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072086875 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064373737 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064593487 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064542629 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064125501 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064083538 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069657753 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071678702 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064346842 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082533798 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064110493 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.063941572 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071990497 seconds)
  done (took 5.973088945 seconds)
done (took 126.490855603 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.181236691 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.161630305 seconds)
  done (took 1.750899846 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.065479501 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.093329597 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.073701972 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.125636515 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.063229013 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.096760748 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.095708339 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.074295248 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.062665614 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.062911338 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.062764788 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.065271329 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.127755756 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.063024203 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.0627827 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.065269872 seconds)
  done (took 2.680483657 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09383348 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.153096674 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.095634851 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.061926367 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.093410471 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.069747135 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.061283071 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.071192638 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.067497885 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.061503997 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.069470031 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.067387641 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.061622642 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.0669878 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.067289624 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.069277538 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.061936396 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.069196113 seconds)
  done (took 2.78459602 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097157277 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.088928651 seconds)
  done (took 1.610934424 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.152831982 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.102322067 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.140122974 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.337931957 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.163226021 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.223816662 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.123265572 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.123552891 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114097483 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.120298082 seconds)
  done (took 3.021563778 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.094163873 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.147384973 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.250312275 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.111320773 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.068668 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.091396442 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.112351557 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.0739911 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.076974007 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076888282 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076732397 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.072671687 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094581174 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.069804545 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.070238301 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.072247657 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098350654 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.068860237 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.070615929 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073285101 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.095557455 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.062003185 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.069784531 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.06884735 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073606881 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.073796163 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.062129511 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.061786369 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073100709 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.070879491 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.073170895 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.090022031 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074005035 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103107391 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.068580878 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104478126 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.072827518 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070227447 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.070944755 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070407719 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075310298 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07540289 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.069091189 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.072941023 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.061968359 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.073384132 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.061910293 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.062010066 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.074368972 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.063821235 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.074422489 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.073286058 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103296751 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.063510189 seconds)
  done (took 5.835455868 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.097980683 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.100570443 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068380535 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108818268 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096718454 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069056028 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.097443876 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089809833 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.09898559 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066622467 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064647764 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067269209 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07942251 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.079588292 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108928781 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100674356 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070305305 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067907477 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100188705 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.099201466 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065396169 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.090845285 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.085766484 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.098415384 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.064226078 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067027958 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064677579 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.066891271 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073280365 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075004577 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066261776 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077270895 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.081405173 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074752799 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063748712 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06453186 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064819203 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.076480004 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076799808 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075390409 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.074503978 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064549918 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065273857 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066351768 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066930916 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064259414 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076026915 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.077441809 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.075808167 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066177163 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066858996 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.064921107 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06621773 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07672883 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.074401631 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.077526659 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076482277 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064835987 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064936085 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068606076 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077056165 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075581457 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075820145 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066113608 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075309247 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064850825 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076947647 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080903848 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064913527 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066471448 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.064921163 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065955023 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066097187 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074481477 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.074764961 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066336032 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06601608 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064611897 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076735046 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075129433 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064649939 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073301208 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.063651025 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064880833 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065935119 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065988383 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07380627 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.076436025 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066049367 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064913014 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065873157 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065123624 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.063748551 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.073247399 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07670427 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.075649694 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.075898129 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066227871 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.075873351 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075622224 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066810295 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076693679 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065084484 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066710228 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065547605 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075165842 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.202356822 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077236251 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066624242 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066031334 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076358355 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07763802 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064874396 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076252861 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078054767 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07777008 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065184611 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078570685 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066120645 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076796461 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066665003 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076736019 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066034406 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077609698 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065811396 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06506687 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066153647 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.076888561 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067888673 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065206103 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066425911 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066290556 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077346173 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080933656 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068066064 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077955145 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.075729738 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06681192 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075987032 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065574461 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076746676 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066213422 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066982859 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064154435 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079802666 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065682662 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065301288 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066310085 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077538725 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0649497 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077128516 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074958209 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065086349 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078150879 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078888447 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074788883 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.077375898 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067480478 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06574053 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065002252 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066574445 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07642772 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077756865 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066977998 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065562037 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.075475979 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.076669911 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.063733231 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075489671 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075743953 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.075119761 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065348734 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066553513 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07651421 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077326407 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.074763444 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.074612638 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074928271 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065283885 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073964167 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074663179 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064517619 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080605867 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064734243 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079394963 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075958298 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073109287 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07508823 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.076959053 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.076703657 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07624985 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.07944208 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064486607 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.0645497 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.076660054 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064519744 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065623975 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074743643 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065809695 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066038867 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.079913452 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065559832 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076315784 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.064422516 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075723756 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063821124 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066647237 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080431767 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065059062 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066163171 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076479716 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066361285 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.074461526 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077056601 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.205930175 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065062511 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06757381 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076933401 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07566888 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065265359 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065705513 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067069309 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.075670803 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075256426 seconds)
  done (took 17.985056149 seconds)
done (took 37.101294798 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.203567647 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.146086889 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.175911827 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116491473 seconds)
  done (took 2.159718128 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.117864626 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097769911 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091628081 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.061659517 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098346535 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.061174712 seconds)
  done (took 1.981909963 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.308312733 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.207235885 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178276944 seconds)
  done (took 2.144602818 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.195049127 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.182594071 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.386459537 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.248463801 seconds)
  done (took 2.570817848 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140405745 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.085747817 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06371968 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.079693336 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.130871508 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.156864032 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.097871695 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.122777927 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.074381761 seconds)
  done (took 2.455723987 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.143062589 seconds)
done (took 12.90946912 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.124458522 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.096548384 seconds)
    (3/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.089274247 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.113494309 seconds)
    (5/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.069954969 seconds)
    (6/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.189537271 seconds)
    (7/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.136202098 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067783181 seconds)
    (9/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.168310729 seconds)
    (10/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.165369533 seconds)
    (11/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.220660326 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.074105715 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.070406408 seconds)
    (14/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.161847318 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.105129422 seconds)
    (16/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.149079308 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.097474812 seconds)
    (18/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.177290174 seconds)
    (19/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.066261136 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.096802731 seconds)
    (21/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.182452594 seconds)
    (22/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.147582149 seconds)
    (23/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.103250039 seconds)
    (24/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.153255495 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.102064985 seconds)
    (26/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.152992537 seconds)
    (27/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.145541066 seconds)
    (28/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.179355998 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.148690528 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.104028502 seconds)
    (31/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.096152726 seconds)
    (32/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.14337796 seconds)
    (33/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.161137654 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.067818776 seconds)
    (35/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.169434718 seconds)
    (36/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05846242 seconds)
    (37/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.169873801 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086812074 seconds)
    (39/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.059904851 seconds)
    (40/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.069257218 seconds)
    (41/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.083986641 seconds)
    (42/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.152585391 seconds)
    (43/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.136608069 seconds)
    (44/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.064330477 seconds)
    (45/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.075268144 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.061747134 seconds)
    (47/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.048551378 seconds)
    (48/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071850695 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.061490002 seconds)
    (50/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.071564421 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.212488423 seconds)
    (52/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07385939 seconds)
    (53/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066066395 seconds)
    (54/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068997881 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.068658844 seconds)
    (56/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.070722552 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.068434201 seconds)
    (58/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071216817 seconds)
    (59/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070246339 seconds)
    (60/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.066445305 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.063389582 seconds)
    (62/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.061968045 seconds)
    (63/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.086499342 seconds)
    (64/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.136092699 seconds)
    (65/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.138872117 seconds)
    (66/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.14320799 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086005622 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.121536445 seconds)
    (69/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.092450859 seconds)
    (70/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072697471 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.169394155 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088730656 seconds)
    (73/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.160513562 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06199031 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06174814 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.136440732 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088497933 seconds)
    (78/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.181792742 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.062676266 seconds)
    (80/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.145955153 seconds)
    (81/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.073135828 seconds)
    (82/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.047821519 seconds)
    (83/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.098732661 seconds)
    (84/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.178990846 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.062740595 seconds)
    (86/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.198395645 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.117216285 seconds)
    (88/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.214058546 seconds)
    (89/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.071762175 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.0626266 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.064311474 seconds)
    (92/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085209408 seconds)
    (93/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.068785286 seconds)
    (94/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.085230848 seconds)
    (95/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.104991771 seconds)
    (96/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.049118277 seconds)
    (97/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.172016177 seconds)
    (98/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066688382 seconds)
    (99/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068858212 seconds)
    (100/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072083997 seconds)
    (101/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.146763793 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116863192 seconds)
    (103/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.063485719 seconds)
    (104/309) benchmarking ("sort", Float64, false)...
    done (took 0.121981748 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.132729328 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.135176999 seconds)
    (107/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.047979417 seconds)
    (108/309) benchmarking ("sort", BigInt, false)...
    done (took 0.185244316 seconds)
    (109/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.04787288 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084319733 seconds)
    (111/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.060538496 seconds)
    (112/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072233864 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.068763882 seconds)
    (114/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.058251332 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.085000098 seconds)
    (116/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.068494771 seconds)
    (117/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.106833156 seconds)
    (118/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077680251 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.131199553 seconds)
    (120/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.074830073 seconds)
    (121/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068244614 seconds)
    (122/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.068279429 seconds)
    (123/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067945164 seconds)
    (124/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.077537977 seconds)
    (125/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067544085 seconds)
    (126/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067946856 seconds)
    (127/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071558991 seconds)
    (128/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.154588351 seconds)
    (129/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.069205052 seconds)
    (130/309) benchmarking ("sort", Float32, false)...
    done (took 0.122448258 seconds)
    (131/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.048857832 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.12959992 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07021501 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.068121612 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.061558009 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.132517283 seconds)
    (137/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.057624765 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.067236255 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.067952704 seconds)
    (140/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.094181133 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.086381165 seconds)
    (142/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.047846559 seconds)
    (143/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.048810175 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.083440095 seconds)
    (145/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.095277345 seconds)
    (146/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.180260679 seconds)
    (147/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.063986236 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067937891 seconds)
    (149/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.069435981 seconds)
    (150/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.143939714 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.083540195 seconds)
    (152/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.049022084 seconds)
    (153/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.047985907 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.061302341 seconds)
    (155/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.061932438 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.068837104 seconds)
    (157/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.047999532 seconds)
    (158/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.075797449 seconds)
    (159/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.061478863 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.085673641 seconds)
    (161/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.061217894 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.061670628 seconds)
    (163/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.153121601 seconds)
    (164/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.048923292 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.070122603 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.061706566 seconds)
    (167/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.165138599 seconds)
    (168/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.070944635 seconds)
    (169/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.058423753 seconds)
    (170/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.048684359 seconds)
    (171/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.066993836 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.047864527 seconds)
    (173/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.168533913 seconds)
    (174/309) benchmarking ("sort", Int8, false)...
    done (took 0.137323294 seconds)
    (175/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.047920397 seconds)
    (176/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.048930357 seconds)
    (177/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.062851856 seconds)
    (178/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.098931954 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.063257595 seconds)
    (180/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.146186205 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.068274635 seconds)
    (182/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.094157663 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08344111 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.090309933 seconds)
    (185/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.070277688 seconds)
    (186/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067413373 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.097498552 seconds)
    (188/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.0624877 seconds)
    (189/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.049672488 seconds)
    (190/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.049202091 seconds)
    (191/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.048007053 seconds)
    (192/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.095517209 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.114776277 seconds)
    (194/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.069549783 seconds)
    (195/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.047628482 seconds)
    (196/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.063799294 seconds)
    (197/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067843265 seconds)
    (198/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.04835227 seconds)
    (199/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.137444578 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.060282624 seconds)
    (201/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.215707788 seconds)
    (202/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.049700384 seconds)
    (203/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.261103418 seconds)
    (204/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.063079448 seconds)
    (205/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.170148344 seconds)
    (206/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.049479998 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.114473533 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086195181 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.165258586 seconds)
    (210/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067316044 seconds)
    (211/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070250114 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.071110086 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.069221558 seconds)
    (214/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.08511696 seconds)
    (215/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.170397294 seconds)
    (216/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.050062381 seconds)
    (217/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.048554788 seconds)
    (218/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.047945569 seconds)
    (219/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066996121 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.170343932 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.0680918 seconds)
    (222/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.072675914 seconds)
    (223/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.048543204 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.060833859 seconds)
    (225/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.0596151 seconds)
    (226/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.048272564 seconds)
    (227/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.051118219 seconds)
    (228/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.147396163 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.062416024 seconds)
    (230/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.069172237 seconds)
    (231/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.048155984 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.162235733 seconds)
    (233/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.076064 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.086508473 seconds)
    (235/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.075578484 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.128825456 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.063465043 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.12937653 seconds)
    (239/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.048440604 seconds)
    (240/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.062142306 seconds)
    (241/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.065292969 seconds)
    (242/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.057941725 seconds)
    (243/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.048658916 seconds)
    (244/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.059132037 seconds)
    (245/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.049856188 seconds)
    (246/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.061023114 seconds)
    (247/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.180581185 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.125989802 seconds)
    (249/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.064471157 seconds)
    (250/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.066589809 seconds)
    (251/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.085205832 seconds)
    (252/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.073632286 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.049857088 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.086065934 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08613044 seconds)
    (256/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.068942573 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.061876809 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.061751991 seconds)
    (259/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.049261327 seconds)
    (260/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.057473388 seconds)
    (261/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.063444973 seconds)
    (262/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.069171724 seconds)
    (263/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069456783 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.068261025 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.069450071 seconds)
    (266/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.047871235 seconds)
    (267/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.048598266 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.083800449 seconds)
    (269/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.061930903 seconds)
    (270/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.063641041 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.061384771 seconds)
    (272/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.067674383 seconds)
    (273/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.145867301 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.08553682 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.061686382 seconds)
    (276/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.059531478 seconds)
    (277/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.04790804 seconds)
    (278/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.048455512 seconds)
    (279/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.062721142 seconds)
    (280/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.047745879 seconds)
    (281/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.075145338 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.06911777 seconds)
    (283/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.061267922 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.060510555 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.087322273 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.060383724 seconds)
    (287/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.064358026 seconds)
    (288/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.062508234 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.089903226 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.068994976 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.086048996 seconds)
    (292/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.063065829 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.094156358 seconds)
    (294/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.06681841 seconds)
    (295/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.060821242 seconds)
    (296/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.065975146 seconds)
    (297/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.062577067 seconds)
    (298/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.069494734 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.067291406 seconds)
    (300/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.048500748 seconds)
    (301/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.049200704 seconds)
    (302/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.133764467 seconds)
    (303/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.062463462 seconds)
    (304/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.057722948 seconds)
    (305/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.075886361 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.06206707 seconds)
    (307/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.048314348 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.0670612 seconds)
    (309/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.050091733 seconds)
  done (took 29.334125243 seconds)
done (took 30.798327823 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081036637 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088311692 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.070742402 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.088621525 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.076249051 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.072470406 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.068365755 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.074333973 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.075598692 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.077059584 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.074022955 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05087317 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.069960967 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.070030112 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070511239 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086778944 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.07398517 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.06894517 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.06876961 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.061139018 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.068930487 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064112877 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.063359883 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.0508722 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.073336867 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.06746451 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.068726375 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.069827838 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.061834903 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.062481492 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.065097413 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.069003058 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.061501518 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07337712 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.067833693 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.069180757 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.070242143 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.072164526 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.063620023 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.061938988 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.069957767 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.061897444 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.068542486 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.070013492 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.068133377 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.067046567 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.069398711 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.074394007 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087272626 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064300727 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.070452578 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.071660589 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.071863547 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068054999 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.065515822 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.068738852 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.066848466 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086736716 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.069435887 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06433511 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.070129916 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.06949926 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.066918283 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.068781624 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.068707107 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.070920049 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.071309476 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.066962357 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.070185876 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.066705486 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.061138941 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.068450873 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.064948375 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.061547685 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.071336801 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.072592766 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06123561 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.067288213 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.068325832 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.067224498 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06094083 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.063391386 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063221662 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.067426388 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.063521196 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.050615245 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.065286749 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.067425841 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.060626116 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.069040835 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.067267346 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.067978297 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.063365131 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.071129461 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.061088954 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.066551685 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.061508913 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.061638072 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062811608 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.065369529 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.061117219 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.063550572 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.070101023 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.063068328 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.067133234 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.074592179 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.061447668 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.067937839 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.060621469 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.060691503 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.074851119 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.070260177 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06154756 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.063607693 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.061257116 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.068657208 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.061055528 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.061441955 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.061680353 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.061859432 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.067590352 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.061855896 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.063669282 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.068527092 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.074036031 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062075769 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.065183709 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.063768678 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.061373205 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.066680531 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.061678424 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.061205585 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.062942542 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.057536647 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.063498793 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.061371667 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.068317384 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.196360327 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.069719921 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.062964991 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.070078259 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.066860587 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.068092179 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.067648479 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.061647034 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.054945482 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065111992 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064127292 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064297915 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06246113 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.063416224 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06261479 seconds)
done (took 11.900550778 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.062895713 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.138440985 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.095654697 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.091512882 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082047809 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06275799 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07237467 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.097896614 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.064152119 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.098465348 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.083427345 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08089006 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.108110993 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.061486882 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.062134798 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.065782819 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.063713984 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.077380338 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097062884 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.082253433 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.111788847 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.061595632 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.090292962 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.085887971 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083272357 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.088165735 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.062793516 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.065957331 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.065605942 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09620922 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.082611514 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.065926627 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.062654096 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.095477039 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.088206378 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079399538 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.062447496 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.078363527 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.062854221 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.061834247 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.064147098 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.094102013 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075836569 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.076388439 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.066184077 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.064967353 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06343066 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.079279972 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.084801262 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075049632 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.082458498 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.098261062 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.065061555 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.062243967 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.060547019 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.081374418 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.061794305 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.064859706 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.062312976 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06491617 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.062063333 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.065504565 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.077110394 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.078185077 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.065643107 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.076572762 seconds)
  done (took 6.592351113 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.079955788 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.086134271 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.078892956 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.079574921 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.062181732 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.062263872 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.062668499 seconds)
  done (took 2.069699493 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.063293204 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084007204 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084489584 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084968515 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.080124051 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.083334129 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07162631 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.062759735 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.076397919 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.063648849 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082776012 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097579296 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.063296281 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.06864647 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.086219859 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.062633032 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.08591102 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.062862554 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.065775903 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085508605 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06486065 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.077957199 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.066232414 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.062907635 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.07651054 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06286153 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10868517 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067027445 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064407144 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.065732386 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06103798 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.103163196 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.076516273 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.071938678 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063106325 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077092263 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.077118287 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.061329494 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078929311 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.067853978 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.076709395 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.063225228 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.064279049 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.061147029 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.067119653 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.072679561 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.063650119 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.063314587 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.065256275 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082498005 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.063322306 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.07666953 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.065946383 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.065242104 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.063945736 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066673338 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072421139 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.063893595 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081953584 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064324604 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.079143499 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.078816352 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.076520486 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.079499884 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.065203214 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.076820626 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.076549083 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065577032 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.064841832 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.066424941 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.079019621 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.061687976 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.064075175 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.073290894 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.064487895 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.084910077 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.084723111 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.064339778 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.071863134 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.063257957 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.062771725 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.062882711 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.084960823 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.065196096 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062731927 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.066777156 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06572072 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.061746255 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.061693905 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.066128097 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06090117 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.064068886 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065710717 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.065715741 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.065347878 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078857521 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065042456 seconds)
  done (took 8.446804977 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.065502165 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.064522784 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.065818461 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.063842473 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.064234444 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.064504656 seconds)
  done (took 1.963486242 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090677044 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.066693115 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.077552341 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068791391 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.100393898 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.082773902 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.082878446 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074845228 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.079775565 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.074836773 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08255474 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.084316497 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088449063 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.06879172 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082517223 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.067993065 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083366141 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072162497 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.074412451 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069453905 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.082343311 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.069435909 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069342845 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.078087911 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072267236 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.068218233 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.063454308 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.074851143 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.074857146 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.074876098 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.068580293 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072016295 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.067074005 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.074994033 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083288494 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.067008139 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068359341 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073465619 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068629484 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071915949 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.083956638 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069617277 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070929679 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.073487011 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.074502386 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.067236763 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07353396 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07208646 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082604643 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.073186365 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073324895 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068013603 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071596317 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.073382891 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.066713076 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074234944 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073355172 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.082594338 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.06878722 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.066882263 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.065314712 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07171847 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073846772 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071439995 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075021559 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073281779 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.066658517 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.068795883 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069107573 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068270759 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.072997812 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.065750126 seconds)
  done (took 6.870460281 seconds)
done (took 27.485009441 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.546026913 seconds)
  done (took 2.082682221 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.594682884 seconds)
  done (took 2.156198891 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.543056783 seconds)
  done (took 8.107872967 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.392594134 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.487769512 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.67673279 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.126696254 seconds)
  done (took 3.285212602 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.672986924 seconds)
  done (took 2.232875307 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.204422348 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.191858108 seconds)
  done (took 1.968333125 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.368684287 seconds)
  done (took 1.924378472 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.093084406 seconds)
  done (took 2.656904014 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.257788011 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.159017208 seconds)
  done (took 1.976727784 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.452581706 seconds)
  done (took 2.010079547 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.752266942 seconds)
  done (took 6.312770618 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.201566766 seconds)
  done (took 1.803565768 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234344068 seconds)
  done (took 1.793527396 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.661817759 seconds)
  done (took 3.224166897 seconds)
done (took 43.104125358 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.076731034 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.077937423 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.077722866 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.074308837 seconds)
  done (took 1.855696135 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.072889036 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.069941237 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.073860957 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.069655395 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.073665652 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07021835 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07083026 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073549023 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.068878104 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.069257088 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.069429174 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.06900741 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07113215 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.070819111 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.067938768 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.071825914 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.072486866 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.068851066 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.071911252 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.069283943 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.067386639 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07127324 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.071475556 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.06868944 seconds)
  done (took 3.263079633 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.074641509 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.069853307 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.071805865 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.06901678 seconds)
  done (took 1.858991172 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07398079 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.089376423 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08613086 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.074662792 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088855338 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084922133 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.065578757 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.0656318 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069208703 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.073670804 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.064865511 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.092151524 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.084034586 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.073512606 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.075887005 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.062758813 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065096904 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.083433409 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.073711963 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.073911088 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.066404887 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.073895776 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.064531624 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.084602148 seconds)
  done (took 3.380671601 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.074385946 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.099214791 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.075057461 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.083838725 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.086093507 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.061976638 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.071409728 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.085819405 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.119205387 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.061973529 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.066952393 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.062156993 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.069295127 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.061908098 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07304398 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10145343 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.104536017 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.065477781 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.092161119 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.062208467 seconds)
  done (took 3.155003269 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.069792625 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.06602482 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.063408867 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065659242 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074157922 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.069815752 seconds)
  done (took 1.981380555 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.065359271 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.064566207 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.064238408 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.063200834 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.069078822 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.063558107 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06280206 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.063809573 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.064017969 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.063628002 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.063341959 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.062436594 seconds)
  done (took 2.339741119 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.191939368 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.065300287 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.065945812 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.062687439 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.066903721 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.062882743 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.076163 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.064280256 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.086811844 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.062964768 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.063076537 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.065117458 seconds)
  done (took 2.504568261 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203518641 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072628204 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232589676 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13363025 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109178566 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112021328 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100289283 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109843567 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.13988247 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098388425 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163975847 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161492719 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103443944 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133695643 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085522465 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.094373852 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152515135 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158456653 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099966381 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161412317 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140490594 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120955 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143555564 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097415822 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102453318 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118364147 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.067476799 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076464339 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166101271 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12730843 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142252256 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107126461 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090231101 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172402254 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167360054 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13833115 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131312163 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081183464 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.09943122 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.130794352 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196354376 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085347128 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160594381 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10448845 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.214888423 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130503467 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117746018 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117778459 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10420801 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086773204 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142705329 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178542775 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.135937388 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083514375 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109818164 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11341358 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113587319 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100855791 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179641191 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157891034 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126235695 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.068078736 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096354425 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150555015 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129423469 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106825137 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.123706926 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090998682 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13100417 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152386395 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115269265 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140245538 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.125878119 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085140877 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115941122 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136328001 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124849062 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166149721 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120762094 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.069878623 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121464041 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100229886 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078258694 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.13762537 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07229746 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171380293 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095634557 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.103646609 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110223696 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105770128 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106024528 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158106272 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140572353 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099823696 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.061480395 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240709393 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117860796 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145821034 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085051521 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105168811 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114348166 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074768385 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136745683 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.071877918 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120135242 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.071633543 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122993156 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129785311 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.073406403 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118590287 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097155023 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.096672211 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130474691 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156087529 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086054438 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079433932 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164081054 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117718704 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102034464 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140844522 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153806356 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.095550455 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10055053 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146741381 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177394451 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08659968 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159192512 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104289946 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081459079 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.084061961 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120943572 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108952863 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.118764083 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078791634 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115307039 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16479326 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.071803123 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091410272 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129182992 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075965508 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077339514 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100567006 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098293602 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.092097838 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097274493 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101494561 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133588223 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119244716 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101169118 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121146199 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094747167 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311053788 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086188141 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.097117528 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101665882 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067138978 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135145064 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154131635 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07684351 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162369379 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.120553872 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10168136 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11639479 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079319044 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135836514 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075820697 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.066473599 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141330723 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10743413 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107320664 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.147493612 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101897643 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124616416 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116880676 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132608552 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129327206 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.125100205 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102242114 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.085193338 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107369065 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12338036 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.069943243 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089173129 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.076883278 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100321277 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092169134 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079658826 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138815979 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121268394 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096411091 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108079586 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093046257 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143123949 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.073345132 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125377465 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.115722109 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09095719 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.14800636 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149367838 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128066692 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095872903 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140894446 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.066653613 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070370646 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.08589401 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120205171 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079440875 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080131442 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257623028 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14571604 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126287356 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13603243 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10922215 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118613334 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152616826 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.066730879 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.112756684 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145353754 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118667691 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101511616 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086371374 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095352331 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138721457 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105463671 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179617918 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111549228 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122637075 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149879297 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.096199916 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077160644 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100505066 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131725993 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101594509 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141252197 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096288443 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084669086 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106910879 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.071117602 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096987369 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123413818 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11618646 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131473038 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111047304 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128986497 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07386595 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113540083 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116927303 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119352065 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.060616157 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116623517 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158882185 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090755996 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115745883 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14952281 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076143273 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.120248887 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172005332 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140679639 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081066845 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250299853 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116933359 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125819891 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118136824 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137337748 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10615248 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132821662 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10722927 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.082688624 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085236037 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094326272 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101476516 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.091600319 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105263307 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112179722 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092243121 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129487526 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100626007 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10731743 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115406193 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.0939587 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.086833466 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093507453 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171035495 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116461577 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168444889 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.095955967 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143232053 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162304676 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071385362 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076284566 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.075428619 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136222211 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080291049 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12718068 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.093993892 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102468781 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120307386 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138241126 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092229354 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.065171255 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104999023 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130893131 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108797844 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09495016 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101075932 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159728833 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.097150638 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076565368 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1111211 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101797496 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099311469 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167915402 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.057982914 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093736911 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07223438 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077683753 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123613464 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292338146 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079359702 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101786811 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116586227 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108269525 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125136107 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098546888 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096033144 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111045443 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146269416 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1255796 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.086984744 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1086456 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125861354 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153866059 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101619419 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.092476229 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170844296 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148171471 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.15695933 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085894629 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111303538 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111446592 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105656303 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136550402 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080645834 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160396955 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078594689 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133498218 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100596432 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087115491 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126384887 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.095228232 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084620994 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159773885 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113696392 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079089525 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074550259 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1143649 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116635187 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103402394 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07264531 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13669681 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.070100088 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129238098 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165446212 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078873399 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100963808 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092343894 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076032001 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104093251 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098567131 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085346608 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.234387353 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173017536 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084941884 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147445438 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138670525 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11068941 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133384369 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0962547 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.632846838 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.074712476 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149064301 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114220712 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170829327 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094350218 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114734749 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105444606 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121519603 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141582703 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101983265 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176247437 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128669549 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11261063 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07655482 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099770136 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099711389 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085831595 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101240593 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110198587 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112209997 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.090082818 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112586598 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120203824 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.078311089 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09193091 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152314557 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113277363 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140218598 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136650338 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081845554 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114659538 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135464427 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076766138 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119326509 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149440207 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103137146 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094581225 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.07662823 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098405875 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165018472 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.069410383 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157155029 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25830403 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107191337 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110808818 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112236335 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12909616 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105429363 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118591734 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09187414 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108560426 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109548101 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079752048 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.073996497 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101861999 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11062075 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09365695 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095381174 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096211011 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147294252 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.068203849 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092205073 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099879585 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14154846 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171007243 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.084592838 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079751153 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116421549 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110321964 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.109101703 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117829794 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076226892 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078964525 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079106125 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.073856988 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.1053694 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108818124 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100923514 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107774212 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160229855 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.079834232 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.217775754 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091560875 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100945017 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.066164334 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.075328777 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091989434 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093670059 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104577009 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096993915 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166113264 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091581815 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087184075 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089997122 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.070382541 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079990503 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124898835 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107488033 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115395385 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09420645 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.058800275 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105236842 seconds)
  done (took 57.223365271 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107377527 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.078693837 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.093234815 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147124455 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.119420419 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.208678532 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153997793 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.196296103 seconds)
  done (took 2.798391837 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.065281207 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.090249728 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.097511547 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.080061024 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.063692491 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.065899744 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.221369757 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078378575 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.063820589 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.085077248 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078106781 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067049899 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.413939098 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.062522936 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.065385969 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061085306 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.063923974 seconds)
  done (took 3.382938271 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.36216509 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.598607607 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.369246787 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.070034527 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.412700221 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08857317 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.09025148 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136355415 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07023538 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53562751 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.706115719 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.121226567 seconds)
  done (took 18.235874602 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.071971246 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.066570738 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.079734742 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.079689643 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.069187771 seconds)
  done (took 2.045977718 seconds)
done (took 105.646762468 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.076762802 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.373144181 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.050474835 seconds)
  done (took 2.123265302 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.079441622 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.081249091 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08130441 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.07982289 seconds)
  done (took 2.001438277 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.071049003 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.073090888 seconds)
  done (took 1.813855366 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.22142128 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.153289046 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.083054656 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.078710952 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07508881 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.075766263 seconds)
  done (took 1.909358043 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.069206504 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.072236809 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.069672845 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.073461861 seconds)
  done (took 1.955661307 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.073081848 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05010128 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.052394738 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.052977363 seconds)
  done (took 1.901107946 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.082576702 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.075738246 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.074839534 seconds)
  done (took 1.908503816 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.097574109 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.081412352 seconds)
  done (took 1.852123308 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.078513731 seconds)
  done (took 1.756603747 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096723342 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.110003351 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128252482 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.106434984 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.134635609 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.105273171 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.082461514 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.083445722 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.073543716 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.083674102 seconds)
  done (took 2.67856474 seconds)
done (took 22.104986838 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075479792 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.35793383 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.356982114 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086824687 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.665702224 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.352817239 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.962960042 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088698896 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110114841 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06399194 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080284296 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646232231 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.953669468 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.315002373 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.93823738 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.409539462 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.646951962 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065104872 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064133141 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064310974 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.949650921 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064784128 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064147423 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064811198 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.645508627 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.367146145 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064477187 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.406056995 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064442803 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066411019 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.3515822 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.064696213 seconds)
  done (took 16.145055609 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.067571401 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.113977904 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070742409 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.080637195 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.067210266 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066531907 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.068121938 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.065504941 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115652588 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06409636 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08105509 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064260514 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.068747106 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065574639 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083503098 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064463162 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065178875 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064882541 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064662726 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064533231 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082479924 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064283866 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064769559 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064715345 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064635105 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.076354284 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064826692 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065235773 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065102886 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066485636 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067251199 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065471238 seconds)
  done (took 3.967701188 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.111151462 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120863828 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071689772 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.098885393 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.109003017 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066829374 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.138781758 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089258421 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123567628 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064854795 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080893741 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064751463 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097338617 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065500959 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.0842116 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065416857 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065906878 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06530795 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065266607 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065333475 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083833046 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064726738 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064963691 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065209009 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065340976 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.077870725 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065112311 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065484974 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065263166 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067184508 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068043638 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065920092 seconds)
  done (took 4.224016253 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.069800625 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07240664 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.07927157 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.079938151 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.066471518 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.069143605 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.069352313 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.066236555 seconds)
  done (took 2.265708877 seconds)
done (took 28.28474626 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.076448661 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.065282424 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.068800725 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.077854369 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.069785441 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.075545479 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.0640314 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.071066803 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.068883947 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069530739 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07111212 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.064248913 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.067789379 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.063841885 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070239521 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.064491339 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.076081457 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068006053 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.076494657 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.075786858 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.067106336 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.069825905 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.071005036 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.075867229 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.075698564 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.075499436 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.074151042 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069902602 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06555245 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067453643 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.073356 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.08042188 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.065255825 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.075750951 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.064854846 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.064632646 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068113363 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.064863246 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.075979018 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.073518358 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066323469 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.072895664 seconds)
  done (took 4.636138643 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084011812 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.087935891 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.081112434 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.058161806 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.064103631 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.061328398 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.085057089 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.056284751 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.056379378 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.083855298 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.052817881 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.056067815 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.059027098 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.050833157 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.056076142 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.053506331 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.058387119 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.052805827 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.055969577 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.05634076 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.084304226 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.050826728 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.073733495 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.059018909 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.054918938 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.058183002 seconds)
  done (took 3.349655438 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.070633457 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08101193 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.084856809 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.122113808 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.100875863 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.073858238 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076003645 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089270236 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.081788691 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.063936817 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.067914628 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.090854812 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084500994 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.070439483 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06414733 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.081137401 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.078684637 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.066178572 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.070181635 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089232683 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.082295569 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081817118 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.089020115 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.077433083 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.063783265 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.066245623 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.068126774 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.077963313 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.069516641 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.073496699 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.068618424 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.06776695 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.066487136 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.075811548 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.068571894 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.065906228 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.086936121 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073715211 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.074276791 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.065137236 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.067451342 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.064904146 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088661461 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122639895 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.063535977 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.070624297 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071827966 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.073062094 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06392902 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.082392781 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074885724 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.063446049 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.067137037 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.063536719 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.064191921 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076869984 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.065809153 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.066569513 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.0728811 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.066973664 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085792056 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.068008055 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078822613 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.063719242 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.071392476 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06394826 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.064855659 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063258345 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.089044705 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.065733228 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.104673259 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.065641228 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.065188352 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.073226047 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.071727605 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.070241481 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064440168 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079016189 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074467422 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.067718048 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.072316521 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.06726804 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.066837784 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.084846011 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06676864 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.065659572 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.065021924 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.070110437 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.066385892 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.065573242 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.076925086 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.064238136 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.066995797 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.080650412 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.063743078 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.065618959 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.070301744 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.069042411 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.063633689 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075314629 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.069137769 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.064885045 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07329717 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.064054146 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.066788813 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076151414 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.070341945 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063123342 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068839549 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.070009846 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.064607662 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.065657025 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.067067929 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066314089 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.072328622 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.070703494 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.068669616 seconds)
  done (took 10.22214695 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166588243 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152969252 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.066996884 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.141429081 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.072664669 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.075522343 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.143328471 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.090236379 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.064273937 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.064900526 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.065339947 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.105932527 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.102017829 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.111806549 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.075170178 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06410666 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.079940742 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.109960953 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.144815027 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.138824233 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.080067713 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.073089066 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.066468117 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.065228911 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.066740385 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07463105 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.082015676 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.073250618 seconds)
  done (took 4.348171775 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.077901073 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.093296155 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.070661059 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.085945774 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.087434018 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.064542686 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.066720851 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.06654874 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.077060319 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.075624161 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.064659888 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.06985108 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07120499 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.067664446 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.065427162 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.071677305 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.071429634 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06595819 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.067833492 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.069742083 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.074197058 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.088065804 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.068632371 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.064187381 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.069298633 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.063777881 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.061343398 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081262743 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.064791147 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.088277503 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.062760072 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072268073 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.078200396 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.065440129 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064274702 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.064352278 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.064119686 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.064051587 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.065910699 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06347086 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.062901222 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.054355954 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06359964 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.075990566 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.070554776 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.053225492 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.069275558 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.069251927 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.069459941 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.062122481 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.067243888 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.066767128 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067744542 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.071268434 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.069373793 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.069172534 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.065407609 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.070127888 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.071744136 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.064132317 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.060725008 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.062701147 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068556954 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.062541787 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.072025466 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068682804 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.062595238 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.063903372 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.065519769 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.069952854 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.063684827 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.067088961 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.061792134 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.065744091 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.068608539 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.065846644 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.065218135 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.062503111 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.063709725 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.064169273 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.052066032 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.064207571 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.050146499 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.066970175 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.062270466 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.062675406 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.063703366 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.069015438 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.076384233 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06530995 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.069883696 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.065043704 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.063231537 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.067035469 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.056701833 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.066663042 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079195339 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.079296602 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.064273331 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.062620314 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.078390045 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.068613816 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.063414518 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05289066 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.071446604 seconds)
  done (took 8.838804392 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.085859774 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.066533582 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.080679045 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.087836366 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.082879074 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.071640352 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.072977228 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066212138 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.078611951 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070363665 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.072979817 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.064894809 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.073561112 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.073236676 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06662156 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.073378859 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.068550047 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.078879153 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.078394099 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06475829 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072432134 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.076459948 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.085436035 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.076156861 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.074993939 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.076616595 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.085041979 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.068304509 seconds)
  done (took 3.826715345 seconds)
done (took 36.911723225 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.765518187 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.946600869 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.765441048 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.117218649 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.920812332 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.820379541 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.899358701 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.761737827 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.809424934 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.800391478 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.025906278 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.795036767 seconds)
done (took 65.129814262 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.805966511 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.906954495 seconds)
    (2/2) benchmarking "String"...
    done (took 2.042333144 seconds)
  done (took 5.64843469 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.135699455 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.349757496 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.995745281 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.760733593 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.76676174 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.997532844 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.560286245 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.298357415 seconds)
  done (took 30.428935847 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.900162216 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.998311663 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.44816975 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.487794269 seconds)
  done (took 15.59235407 seconds)
done (took 63.396517365 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.784320991 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.784645893 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.780543419 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.744591677 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.821355734 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.775564911 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.319837405 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.817489566 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.759546598 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.749634671 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.760896252 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.191321336 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.775205984 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.277044501 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.761937493 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.768405737 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.808221955 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.322875046 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.917602004 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.774371509 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.760006271 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.774453029 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.763160651 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.772779601 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.761274021 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.760710951 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.190813732 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.76582212 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.377910004 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.764090225 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.791949344 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.849950344 seconds)
  done (took 203.727705638 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.759991151 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.696851837 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.760751623 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.773973272 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.141757643 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.941366541 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.869371518 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.20844981 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.763904275 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.789012357 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.921533808 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.763241484 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.943682894 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.71731294 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.793234542 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.871559399 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.937263556 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.964977774 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.796692558 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.908790316 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.774185296 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.839827698 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.786600935 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.916364754 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.781966332 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.85137791 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.767473612 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.790417151 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.963065499 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.911657226 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.787679016 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.780832891 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.899932112 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.631097811 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.77965576 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.765355629 seconds)
  done (took 169.050086562 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.157772966 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.762778138 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.759294704 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.760698692 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.75982597 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.767090093 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.762068835 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.881857224 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.888956476 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.216784027 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.282461346 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.813020458 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.612170912 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.765470871 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.829312103 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.773973275 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.761418194 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.776481486 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.788135102 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.764830641 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.762331192 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.891426712 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.771705287 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.881755004 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.764351464 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.756850872 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.765278583 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.129602451 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.760531685 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.764371553 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.001831914 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.76232602 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.757811576 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.670738379 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.086467492 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 2.047415005 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.762200323 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.764453469 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.759313676 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.987322881 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.759399309 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.759302659 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.762194714 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.047770098 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.761774141 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.883272214 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.760534267 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.284409957 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.76162277 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.758971863 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.584460487 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.485723065 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.762132093 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.759807572 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.762364417 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.759236645 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.75822981 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.766152318 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.757759742 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.844337392 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.760510172 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.760908014 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.763207672 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.758398738 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.813970829 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.756356204 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.135935457 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.814931925 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.978825738 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.878144073 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.762455861 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.825583186 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.853261998 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.75849877 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.75872324 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.757298936 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.757114741 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.838061246 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.757360355 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.903589149 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.759370531 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.766040478 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.760820822 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.810501506 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.828502174 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.760407105 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.652752138 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.760662802 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.759549382 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.106531024 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.827245396 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.759404546 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.758498206 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.759312401 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.899264006 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.880239303 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.55004924 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.758410557 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.816595111 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.767575512 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.894141666 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.756203838 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.952456749 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.756586358 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.753873308 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.836432439 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.760517769 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.754439116 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.75615679 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.756634922 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.786847775 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.756771551 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.813854734 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.754785735 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.125263107 seconds)
  done (took 400.42109787 seconds)
done (took 777.118165318 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.426899725 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.383041441 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.502760774 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.406044567 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.382456062 seconds)
  done (took 13.797003434 seconds)
done (took 15.493833621 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.845518933 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.847782887 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.781420707 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.844603257 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.776678635 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.843948226 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.827223632 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.782086513 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.814303786 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.781351313 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.815280641 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.782442522 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.769616108 seconds)
  done (took 25.20857857 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.990467957 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.992613439 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.828006381 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.981321905 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.804951113 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.982153286 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.917369676 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.904585382 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.908034397 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.773631349 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.769455164 seconds)
  done (took 22.550292809 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.990922423 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.991637823 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.835574759 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.993641484 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.8080517 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.989135311 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.919417459 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.913413489 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.909538299 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.772437525 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.7710304 seconds)
  done (took 22.592165429 seconds)
done (took 72.046504761 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.765739462 seconds)
  done (took 3.464198992 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.78778078 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.926191128 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.772250792 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.769466793 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.766672662 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.766687264 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.768929215 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.766516865 seconds)
  done (took 16.023386161 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.763147887 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.763069175 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.764748439 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.766097511 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.763612549 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.764475063 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.766907204 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.765591389 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.765646713 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.764591832 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.765834316 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.766398069 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.766067932 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.76380501 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.766300121 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.763446025 seconds)
  done (took 29.939310128 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.766505426 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.762901081 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.763557828 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.763810315 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.764102991 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.765073215 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.764765012 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.763840215 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.764277908 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.76375711 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.764915259 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.765611372 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.764774664 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.763509962 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.764959817 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.765390942 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.764689937 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.765524245 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.769193821 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.764754447 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.765859193 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.764074361 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.765295216 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.765377863 seconds)
  done (took 44.058711569 seconds)
done (took 95.183341335 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.666901869 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.169633107 seconds)
  done (took 8.536304309 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.769328696 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.767143628 seconds)
  done (took 5.276721716 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.767848494 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.769048121 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.768653826 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.767926987 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.768513204 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.768806242 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.767144032 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.768044488 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.767913342 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.768674483 seconds)
  done (took 19.382887545 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.768321653 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.768813543 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.766181708 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.768456002 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.768728101 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.766012397 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.770475499 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.767935758 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.768755321 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.765828504 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.768871596 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.767034226 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.768876758 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.766971078 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.768384437 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.766253061 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.766364866 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.766386026 seconds)
  done (took 33.521084171 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.768135229 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.768199839 seconds)
  done (took 5.238864776 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.765840433 seconds)
    (2/7) benchmarking "second"...
    done (took 1.767496723 seconds)
    (3/7) benchmarking "month"...
    done (took 1.765659439 seconds)
    (4/7) benchmarking "year"...
    done (took 1.766996189 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.766368319 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.766091057 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.766878545 seconds)
  done (took 14.067763216 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.770249835 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.930974318 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.003590015 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.40699651 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.771166732 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.772989453 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.698830434 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.773943763 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.775392262 seconds)
  done (took 19.606176314 seconds)
done (took 107.329212226 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.596202456 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.765534195 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.145237063 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.828661458 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.82452713 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.063470169 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.792918981 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.986759047 seconds)
done (took 42.707146203 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.767311891 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.313278064 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.35187222 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.147503791 seconds)
  done (took 12.516540886 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.750123368 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.288175558 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.806154622 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.359706462 seconds)
  done (took 19.93143471 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.134421513 seconds)
    (2/2) benchmarking "read"...
    done (took 2.199821192 seconds)
  done (took 6.042762425 seconds)
done (took 46.962422596 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.771710828 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.771775357 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.768288139 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.768220529 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.771309139 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.770262965 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.768882844 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.76888951 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.772464858 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.773779521 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.771891294 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.770927455 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.772036395 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771018635 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.770045663 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771720312 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771810633 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.770637961 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770671472 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.772415684 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.768595945 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.775789106 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.769847483 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.768283287 seconds)
  done (took 44.206048111 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.773025095 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.772127936 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.773118709 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.77222214 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.76952389 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.771758935 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.772122219 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.772177026 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.772073876 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.772565208 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.769721855 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.769876322 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.772301665 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.772870737 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77250416 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.77055229 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.773461494 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769931347 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775657602 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.769977424 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.772451206 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770974677 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.771263421 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.773228044 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.775194719 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.771456722 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.773008824 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.770107801 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.772434367 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.771672053 seconds)
  done (took 54.865595004 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.778177431 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.779584205 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.773032195 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.773739644 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.773961828 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.773167222 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.773965749 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.772930707 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.773635795 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.773549063 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.776238377 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.774456154 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.775753729 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.774372124 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.775073583 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.776805724 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.773819546 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.774339308 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.774295386 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.775355352 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.774609054 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.776756006 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.77465883 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.773785041 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.774955995 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.774239302 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.773942339 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.776235642 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.775247516 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.774588096 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.774317176 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.774633221 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.775997002 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.774268334 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.774521911 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.774639998 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.779762154 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.781922642 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.776666699 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.774643252 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.775906463 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.775001962 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.775219415 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.775834741 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.777653222 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.775668118 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.77566456 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.773854601 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.774769688 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.774934599 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.775474839 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.774856697 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.774924869 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.775497595 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.77591351 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.776848279 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.775588505 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.775473445 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.775641039 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.775737967 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.776879287 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.776645469 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.7763997 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.776671655 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.776723618 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.775818125 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.776135339 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.775791801 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.775816388 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.776385123 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.776542414 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.777677606 seconds)
  done (took 129.543384122 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.777208378 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.774478873 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.77438115 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.775214454 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.777301741 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.77755753 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.774560173 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777480949 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77448786 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.777982092 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777809724 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.774524322 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774929409 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.777275934 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.777970491 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.774862529 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.778161 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.775274522 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.77741772 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.777342082 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.777953603 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.776560015 seconds)
  done (took 40.793251044 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.778503115 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.777597779 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.774318004 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.776917676 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.776558215 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.778031328 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.779245506 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.778613458 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.779173474 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.77599259 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778813744 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.778906419 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.776741527 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776447173 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.775707409 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.776968878 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.778806434 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.776031189 seconds)
  done (took 33.704183308 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.77570507 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.775497489 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.779016311 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.776488854 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.7767902 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.778115429 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.775954986 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.780092749 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.780838642 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.776443879 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.779261204 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77957983 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.780024692 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778242463 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779796408 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.777908336 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.779440837 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776040813 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.780263725 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.778887488 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.777870272 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.779571956 seconds)
  done (took 40.834258604 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.780122809 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.78281868 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.778376387 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.777773091 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.776556616 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.780112577 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.780094538 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.780128529 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.779887028 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.779881514 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.777402525 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.780637021 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.77718841 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.779024423 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.778008405 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.777739081 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.780768918 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.778984236 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.782999031 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.778058176 seconds)
  done (took 37.298976516 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.780345569 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.780736666 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.782304789 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.78208369 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.78155202 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.781660292 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.781900621 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.78268322 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.783921454 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.787091204 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.78307346 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.783830146 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.781726944 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.782292176 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.783839336 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.782095416 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.782396194 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.782083359 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.782135521 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.782256542 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.784093396 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.781533279 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.781694492 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.782750008 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.782338858 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.783766905 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.782336875 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.783013944 seconds)
  done (took 51.625376507 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.782232965 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.783095104 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.77991813 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.780072718 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.779276145 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.779460177 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.779835135 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.780217582 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.782980668 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.779473497 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.782620527 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.782689685 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.783014323 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.782631782 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.781388731 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.782864132 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783461404 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.780717239 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.779798161 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780864808 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.783752303 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783329581 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.781972571 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.781510139 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780117807 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.783402963 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.781753805 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.782073701 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.785880032 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.781113464 seconds)
  done (took 55.166726044 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.802818046 seconds)
    (2/2) benchmarking "in"...
    done (took 1.80172936 seconds)
  done (took 5.320656721 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.780644617 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.783444931 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.78458588 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.781074681 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.780365183 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.783609998 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.783763271 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.781739092 seconds)
  done (took 15.974537014 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.784711846 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.784906361 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.7830633 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.783596709 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.78668176 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.783847431 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.789823293 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.784790275 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.786170631 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.786265102 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.793495219 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.791918972 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.786969257 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.785562561 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.78386066 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.787003237 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.784649921 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.785141224 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.786048293 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.78574726 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.785463085 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.78830914 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.786527279 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.78292572 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.786847631 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.794712319 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.790132886 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.784741716 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.785195168 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.788528393 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.784300246 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.782521348 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.786525214 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.785175449 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.785121985 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.787274915 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.792657514 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.785903528 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.793369224 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.786407108 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.785479791 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.783761237 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.786617331 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.786890361 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.7863951 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.785411626 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.786251941 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.783500726 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.784855307 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.790359274 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.791361124 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.785109997 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.78458982 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.789569625 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.787797014 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.791941222 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.78642291 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.78902618 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.795163363 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.795129735 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.799323769 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.793033973 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.788655317 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.786147443 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.796686472 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.809182108 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.793286956 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.785623481 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.784576433 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.789515529 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.793889921 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.801249258 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.796587694 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.789308943 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.789369342 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.787595265 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.78943828 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.789401992 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.795039551 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.790796887 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.787765699 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.789860966 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.797604147 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.807253166 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.786761184 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.789109022 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.788913046 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.788586668 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.790824227 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.798466394 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.78838903 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.789111673 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.788411863 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.789221338 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.789981568 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.788649521 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.787470314 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.78899768 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.786617501 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.790984662 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.789215692 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.7916034 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.798288044 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.790188406 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.788911209 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.795420378 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.790241567 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.788309594 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.795980988 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.789773864 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.790226599 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.789869556 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.795755802 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.7880137 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.792434579 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.797468337 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.790770953 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.790562914 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.789466433 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.790008777 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.79931642 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.814315747 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.790254387 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.790821972 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.793980954 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.800437527 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.790186256 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.794086296 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.789718854 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.787060865 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.788000295 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.791757913 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.79085315 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.792486001 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.791620116 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.791316794 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.790035486 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.790623624 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.792702365 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.792112577 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.791993773 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.792425747 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.791853522 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.793495039 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.791654347 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.79287129 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.797262788 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.790995781 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.793544046 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.792961065 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.790182177 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.791558292 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.792740554 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.792158122 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.791258347 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.793082912 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.791012033 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.792059109 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.792234455 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.791248293 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.792103757 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.79203379 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.795648538 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.792051997 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.794799364 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.793244401 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.791449715 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.792302952 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.79256648 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.792077103 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.793044506 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.791106656 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.795686011 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.79898479 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.79255028 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.792003047 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.795640004 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.792913212 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.794796219 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.792921315 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.795560934 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.79941342 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.793599745 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.800371058 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.794084003 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.793280773 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.79391022 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.79430178 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.794676624 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.793918373 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.795560186 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.799653603 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.807219101 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.801232036 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.79619069 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.797866729 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.794149633 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.797885372 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.798220008 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.794433849 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.793397828 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.794147542 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.79254477 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.794770595 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.794742774 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.794725548 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.792979929 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.7943219 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.794684619 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.794830814 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.79499704 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.796364302 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.795553565 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.790878046 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.793779884 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.794490779 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.793807554 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.791699104 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.792918982 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.794708153 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.795606671 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.795471162 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.801867683 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.79227391 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.794663284 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.796576518 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.794904967 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.794603631 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.795064725 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.797223646 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.794931489 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.801212168 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.795727785 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.79711166 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.802864434 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.795499569 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.794057231 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.798647655 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.796001865 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.792639944 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.798421038 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.803401941 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.795743685 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.795758385 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.796512937 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.795978892 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.796790127 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.802379273 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.792824709 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.795172589 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.796370714 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.796848305 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.793460703 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.797520414 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.796848619 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.797542177 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.798449081 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.796239507 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.79590907 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.797531674 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.796627436 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.798600071 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.797061299 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.799791473 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.803741025 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.80037077 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.797031946 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.798685133 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.79827772 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.801060071 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.797815477 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.797451961 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.797206221 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.810423516 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.80493188 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.80330596 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.798706216 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.798403066 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.803076448 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.798513253 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.800919021 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.797197312 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.797592255 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.797347458 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.797833168 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.795906549 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.797763992 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.797845418 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.799830522 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.800826355 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.801752049 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.798849263 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.797730404 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.799862864 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.799857977 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.799962744 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.798657856 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.799461575 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.801601653 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.800749107 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.799404092 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.799732496 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.805269238 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.799117809 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.800324439 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.800037995 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.799116267 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.798132669 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.801171118 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.799887659 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.802477354 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.808086938 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.802874618 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.808644791 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.800894137 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.808484488 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.799697221 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.801867171 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.807199365 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.797275061 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.799172271 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.801059884 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.800581383 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.806930614 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.799669385 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.80070496 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.805381197 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.799952294 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.801119363 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.801019043 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.80040791 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.800387903 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.800446865 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.809659789 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.801579488 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.803894934 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.802362914 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.798784795 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.800960874 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.800168672 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.800113922 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.804636408 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.802002921 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.802180635 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.801663776 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.801337409 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.801731035 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.801392845 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.80076059 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.798637245 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.801369971 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.808929008 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.803196487 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.805837212 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.803707503 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.810057494 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.801705462 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.808914072 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.80235563 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.80294877 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.802400697 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.802566527 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.805123755 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.801627528 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.802948436 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.80268584 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.805042364 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.805958461 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.802880687 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.804570424 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.802757682 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.803529481 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.802819593 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.812373936 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.824360399 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.80377122 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.806502713 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.799790566 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.804391358 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.807919924 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.802944599 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.802789164 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.804806868 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.813000631 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.810389408 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.8036093 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.803674941 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.803922556 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.804286963 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.804394119 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.803597126 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.803617242 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.804109381 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.805754037 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.804774843 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.809534338 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.803464531 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.804602486 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.806059357 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.806665222 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.814971289 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.804901474 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.806284297 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.804487074 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.803858464 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.805010791 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.803259007 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.80463434 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.804705813 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.804106644 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.807212696 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.810936551 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.811315836 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.806475699 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.804090552 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.804994316 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.805678024 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.805688888 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.804988621 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.805281114 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.805243406 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.805870962 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.804943878 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.805199185 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.803329235 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.804629831 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.805391588 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.805443914 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.808328411 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.812907535 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.805947804 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.80230637 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.804219271 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.805772431 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.804896741 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.805881213 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.81352212 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.810041288 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.815853499 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.814030387 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.810538877 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.806816089 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.808832858 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.81398073 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.804766579 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.808153848 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.807324607 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.806962468 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.807882828 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.810975317 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.807146754 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.812376544 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.806939274 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.806647063 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.814042842 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.808301243 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.807200149 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.80881544 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.811227139 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.807421032 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.804898887 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.80662889 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.808294284 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.814106858 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.809721042 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.808505573 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.808910331 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.806628771 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.809426606 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.810604 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.808285194 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.809420927 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.805229804 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.808182948 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.807963224 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.807795387 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.80504302 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.808007404 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.80899993 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.811220826 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.814593611 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.805461422 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.810322887 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.808737943 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.809295283 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.80882881 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.808064769 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.80633716 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.80500002 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.808221997 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.809406125 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.809181887 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.810837749 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.809388567 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.810682117 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.810574502 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.809725452 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.811853873 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.818222973 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.816917392 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.806773954 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.809295364 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.809396076 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.811528479 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.809615355 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.809900248 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.809445758 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.810323649 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.808436045 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.810649641 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.809939827 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.812997989 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.824531304 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.810266883 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.809635501 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.810128759 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.813069016 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.809854284 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.808132678 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.811403281 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.812275753 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.813375834 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.817788067 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.809638739 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.816070586 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.810005802 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.811333205 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.816749223 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.815467851 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.817993601 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.814456049 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.81143075 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.81232782 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.815858088 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.826237556 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.810157511 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.82031343 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.839470085 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.812143587 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.81282775 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.812874815 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.810776019 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.812563495 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.814757153 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.811246894 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.812993608 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.811296394 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.81187879 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.812521033 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.818378051 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.814067272 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.812644612 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.812115905 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.812755976 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.814044835 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.810429526 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.812754096 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.8111155 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.81255855 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.814140406 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.812954742 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.813543634 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.826410832 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.821986064 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.812644369 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.813930604 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.81037912 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.815861026 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.816080051 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.823917061 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.82018083 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.814083671 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.813741497 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.815262531 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.81346462 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.811022591 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.814242886 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.814501091 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.813413907 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.810587767 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.826307571 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.82132553 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.819141245 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.814753583 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.814692854 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.814114896 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.815132989 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.815197822 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.814297509 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.816082916 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.815022663 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.818355969 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.813834706 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.815102776 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.81788154 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.822094829 seconds)
  done (took 1075.0250223 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.812463677 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.812478567 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.811987708 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.812457743 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.81212253 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.811736129 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.812388025 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.812625579 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.813209029 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.812015715 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.81159456 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.812293974 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.813168892 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.812862164 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813948163 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.812529785 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.812299488 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.812808189 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.812787651 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.812262273 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.812492833 seconds)
  done (took 39.808796932 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.815952411 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.813961431 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.814185036 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.816277933 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.813418009 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.816470979 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.813617855 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.815627389 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.816290391 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.813777447 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.815734646 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.815470647 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.814246659 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.813268402 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.81382405 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.816912384 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.815836004 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.815112423 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.816429074 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.814376056 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.816733675 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.812584929 seconds)
  done (took 41.677636667 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.817931648 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.817345179 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.816426723 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.813229171 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.817931019 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.814274796 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.817095985 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.817349823 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.817553268 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.818264783 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.816746222 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.819409034 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.823809094 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.822495409 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.819026981 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.817416888 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.961823999 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.817904073 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.81792619 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.819199897 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.815231223 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.823390272 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.814819179 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.814556168 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.817077024 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.81843495 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.818384578 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.817715626 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.818985184 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.82004806 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.822664243 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.818424576 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.818404387 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.820004493 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.818350246 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.820510523 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.823001296 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.820238555 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.816652456 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.818545721 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.828274264 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.838847728 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.818994048 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.8254682 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.819638234 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.818546362 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.822965216 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.826460092 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.816475064 seconds)
  done (took 91.043605838 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.818513598 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.820527802 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.816933401 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.818559723 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.818862269 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.819054329 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.820080167 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.819302665 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.816341875 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.817537021 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.819370065 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.81764272 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.816961028 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.819164981 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.820124237 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.816387921 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.816809064 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.817318924 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.817526069 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.817725854 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.818790496 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.820815339 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.820604292 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.818080656 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.821044956 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.817514662 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.817753949 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.820425175 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.819047906 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.818182729 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.820633201 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.82056967 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.820087244 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.818338643 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.818691256 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.820031818 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.820969834 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.817909838 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.821623483 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.818367283 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.821340021 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.821681823 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.822923498 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.821466418 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.82003176 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.819115351 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.819003238 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.818607053 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.818508952 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.82157549 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.82176747 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.819153627 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.822620028 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.819826473 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.822528628 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.821270399 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.820860531 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.820371601 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.822203934 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.819648037 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.819879912 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.822969776 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.819896444 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.821620852 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.822091265 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.820309615 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.819320113 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.822050793 seconds)
  done (took 125.489162937 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.822510123 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.82223237 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.822135471 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.822950213 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.822688125 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.824057027 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.822846829 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.823299343 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.824499992 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.823674807 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.823274296 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.822865642 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.824274857 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.82285684 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.824417987 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.822819297 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.824259267 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.823219873 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.82328365 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.824058602 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.823965706 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.823002415 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.823309569 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.823400117 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.824718968 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.824628995 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.824755797 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.825057696 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.825270575 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.824275987 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.824595792 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.825300852 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.825152791 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.827288701 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.826158787 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.824819029 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.824608481 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.82562663 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.824868314 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.825031068 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.824743466 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.825397037 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.824573317 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.824464374 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.824794135 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.824705005 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.824973184 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.825992008 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.825131916 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.82591689 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.824059624 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.825628792 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.825209139 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.825612447 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.82570714 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.825394595 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.82657201 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.825660535 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.826135227 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.825539715 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.82537163 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.825623505 seconds)
  done (took 114.876151742 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.825713951 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.825069296 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.822491914 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.823074692 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.826080871 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.82400547 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.825465439 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.825650745 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.826764248 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.826428175 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825918604 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.824712038 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823808351 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.826001041 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.824130748 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.824004114 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.823818735 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.823335088 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.826586166 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.825514278 seconds)
  done (took 38.256082062 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.823531391 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.827053246 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.824544351 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.82561052 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.826517566 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.825738571 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.827511106 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.827219922 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.825567815 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.827164301 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.82929473 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.828008526 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.823743795 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.824796573 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.828340499 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.825915352 seconds)
  done (took 30.979065793 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.82535051 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.827111018 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.827376941 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.829147241 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.825820159 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.824657435 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.828291555 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.82586509 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.825939067 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.828594572 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.828390621 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.827793313 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.828265889 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.827767279 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.826170797 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.829227328 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.826716889 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.826283533 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.82894939 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.829823514 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.827320272 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.826638678 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.829414086 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.829986532 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.826395864 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.827018748 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.826919796 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.826272521 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.826846333 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.829729747 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.827387577 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.826744687 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.827469126 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.827259168 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.831383848 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.827504035 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.830192885 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.830554934 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.830963452 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.830134697 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.82985084 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.827461506 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.830154493 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.830006776 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.827652945 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.829561696 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.828191369 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.828838289 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.827808144 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.827817591 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.829970034 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.831470867 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.831482145 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.831807395 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.830333685 seconds)
  done (took 102.316559759 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.832338173 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.832275627 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.829507827 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.832326187 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.83285981 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.82916586 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.832247178 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.83066797 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.830309205 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.833495713 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.830352513 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.833297269 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.830605282 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.832175635 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.831167134 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.833179302 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.830296886 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.830007517 seconds)
  done (took 34.728229452 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.830671658 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.831041108 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.832874255 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.83046662 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.830880231 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.834578495 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.830134878 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.833293396 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.832509697 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.83097239 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.831500056 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.833730813 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.83299841 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.833794759 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.831270905 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831360229 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.833769199 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.83343043 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.831786253 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.831469972 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.834238347 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.833489776 seconds)
  done (took 42.075390048 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.833453974 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.833950819 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.849716718 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.852465193 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.855633255 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.866578521 seconds)
  done (took 12.856700406 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833845263 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834306807 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.831341987 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835551333 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834775667 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831445012 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831856925 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832010939 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834703413 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832350656 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832049508 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833889114 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833652889 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832580575 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835371172 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834582217 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83319774 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832670185 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832891 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8353804 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831916108 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834275167 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832325998 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832392752 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832836001 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833259658 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835667061 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834239964 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833538478 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836216657 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836804562 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832518152 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835867566 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834776948 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836504924 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83610086 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833537497 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836227983 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835943878 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834067195 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.836197582 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83613309 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837102616 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832752916 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836683628 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83464196 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834381362 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834222817 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834314607 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838105063 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836768213 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833792559 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836891127 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837545363 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836710187 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837860999 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836242625 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835295256 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837262228 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83616927 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83388298 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83666827 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835152989 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836215405 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837080324 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834804761 seconds)
  done (took 122.857747675 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835865124 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.836033613 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834362226 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837202475 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835278877 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83475019 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83616768 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835192154 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834518618 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835845247 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838338871 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834926737 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835497824 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835524057 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836169528 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835453651 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836550224 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835583722 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835502922 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839118512 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835954853 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835505196 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836201925 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836573048 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836723192 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838746893 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83748411 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83709108 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837321238 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835789266 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837304149 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837416151 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837449619 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.836351048 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837781878 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837227158 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836835687 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837968822 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837369443 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840709153 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836788972 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839640413 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837523394 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836250853 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83721973 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837648703 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837411933 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836488569 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837175903 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837712012 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838826861 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838213602 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838224481 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837700047 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837097254 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838763213 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837767034 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837371041 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837646429 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840784067 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837577534 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838799183 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841703532 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837845174 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837784457 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839224087 seconds)
  done (took 123.022187912 seconds)
done (took 2506.050600911 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.89474172 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.861758836 seconds)
  done (took 15.528251411 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.004011954 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.952144384 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.837162539 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.876961152 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.836073157 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.856102834 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.855379891 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.837853963 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.837724877 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.837581091 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.836262955 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.024556444 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.837210778 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.836859793 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.83696975 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.931931593 seconds)
  done (took 51.810421125 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.841429106 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.840978016 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.853331289 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.84591257 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.840478215 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.854155827 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.875321259 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.845028132 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.875593296 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.853639787 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.908616875 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.849827697 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.840030827 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.887954904 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.853064102 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.854816774 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.927359889 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.914970251 seconds)
  done (took 35.33089683 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.91984478 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.844344045 seconds)
  done (took 10.53894742 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.871531596 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.855881249 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.857047045 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.838514602 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.858000618 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.846177071 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.86846688 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.879114248 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.841307373 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.848455777 seconds)
  done (took 70.3390137 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.84714813 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.842169144 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.842177395 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.840178005 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.834460353 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.837487082 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.841493473 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.833100907 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.521656902 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.875420436 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.848120152 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.848121028 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.84320545 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.844141576 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.840655805 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.866269696 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.961884883 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.840410703 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.840119538 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.84947492 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.84196221 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.927859906 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.856110491 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.841908638 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.872643925 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.523607626 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.852963076 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.847675264 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.952579545 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.840337961 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.843132044 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.844597852 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.845422393 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.238654573 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.141798701 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.840714486 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.850919337 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.849985965 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.840233983 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.983460093 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.844077955 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.848624522 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.81991028 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.144309018 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.929777082 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.885241225 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.174726985 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.846773049 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.845197918 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.873815434 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.84568708 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.84561758 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.855708692 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.356846614 seconds)
  done (took 131.223074987 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.839525956 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.129873065 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.993784404 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.840828239 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.113069781 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.04598742 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.839328191 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.887372894 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.841435598 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.04431234 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.063891497 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.953402179 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.840262877 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.836967366 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.837278841 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.83609791 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.00137324 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.908333939 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.8422165 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.837524397 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.866379563 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.050345056 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.968693059 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.84123774 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.862674789 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.049651191 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.961920099 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.949637045 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.338335002 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.838403355 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.904795396 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.839875722 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.842314683 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.83895407 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.997041459 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.936095374 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.930913658 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.839353681 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.838386386 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.83826519 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.501175027 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.038626031 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.940406945 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.982418612 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.09215028 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.046273557 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.487914288 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.838266971 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.483348083 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.003003607 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.054138112 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.050167465 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.965186833 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.840895893 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.986056722 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.839111772 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.840290905 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.078882366 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.084535567 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.94314219 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.843183536 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.841054197 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.840559083 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.086345023 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.840908224 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.939509638 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.841189828 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.840665436 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.941130885 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.945692417 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.090732715 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.055660909 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.876216252 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.142143091 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.309882398 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.056713849 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.911571329 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.078354224 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.843136842 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.840967898 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.92658502 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.597758994 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.044199778 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.092097638 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.064971978 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.8773512 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.467034597 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.841435096 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.037402694 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.028209602 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.038228077 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.08444995 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.99426905 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.168561922 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.840342949 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.841122638 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.107794947 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.979650916 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.843657493 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.202643231 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.077168785 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.40071228 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.874592014 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.137517378 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.97909207 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.286072125 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.470956796 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.841825164 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.013121134 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.883320327 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.845138829 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.842375707 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.036583244 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.652648085 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.842342638 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.584707041 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.90848541 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.847960543 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.046625149 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.846189785 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.057404572 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.846928825 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.082500605 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.758489228 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.877405734 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.013227204 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.086660899 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.63679598 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.093092689 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.089311237 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.962437651 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.13891648 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.571772107 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.843123204 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.121817543 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.84437166 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.843370842 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.011083351 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.845296495 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.080069691 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.846389268 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.077995779 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.869515258 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.000445312 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.84600433 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.081027127 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.881281908 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.897072674 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.845588637 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.975253762 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.843931418 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.772205413 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.005505722 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.847576276 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.84284268 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.242950132 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.843758118 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.994654685 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.080709987 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872720403 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.917109534 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.375145643 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.850106886 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.932542764 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.871075195 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.293066501 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.845373624 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.064954275 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.789580315 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.289254505 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.84453463 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.086624895 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.101005445 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.848274885 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.845102874 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.587728534 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.545281584 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.845220014 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.005981831 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.382825928 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.492931417 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.049570553 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.849693766 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.974762225 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.848944057 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.929425492 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.192904497 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.845787458 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.846652907 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.847240029 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.84705666 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.845515501 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.056273278 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.876177834 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.370653766 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.984028968 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.063995122 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.157879291 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.070777735 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.893870628 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.848672731 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.122540361 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.855326178 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.908285628 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.84377586 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.864747299 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.07408125 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.843409715 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.067548336 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.096592746 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.757772222 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.891181732 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.840683186 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.837692835 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.834109149 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.984404095 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.924349092 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.832445262 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.826566358 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.946643349 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.962359418 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.027467629 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.430622896 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.995082862 seconds)
  done (took 894.060619096 seconds)
done (took 1210.602097525 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.829686427 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.830011048 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.81804523 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.825259596 seconds)
  done (took 29.062214142 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.832928887 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.827515427 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.825968932 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.825079386 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.82925221 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.827067075 seconds)
  done (took 12.728329395 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.859351028 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.818387014 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.818497126 seconds)
  done (took 21.252823011 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.890564589 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.226442622 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.93391276 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.261024566 seconds)
  done (took 10.067267497 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.820329927 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.822803567 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.822805577 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.821888231 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.821015599 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.8224626 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.820901692 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.822040662 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.823341999 seconds)
  done (took 18.151572161 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.188176536 seconds)
done (took 97.207422222 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.455804329 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.150241506 seconds)
    (3/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.885618523 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.917666314 seconds)
    (5/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.883166121 seconds)
    (6/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.963133004 seconds)
    (7/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.861128503 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.990375448 seconds)
    (9/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.99942024 seconds)
    (10/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.85879126 seconds)
    (11/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.144299263 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.897697248 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.88180425 seconds)
    (14/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.855159691 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.742836603 seconds)
    (16/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.991692936 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.176501372 seconds)
    (18/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.963166364 seconds)
    (19/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.924234057 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.179072539 seconds)
    (21/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.745356206 seconds)
    (22/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.989523237 seconds)
    (23/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.874463921 seconds)
    (24/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.055722217 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.861562977 seconds)
    (26/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.137375456 seconds)
    (27/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.853345454 seconds)
    (28/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.022125539 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.861887496 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.854935586 seconds)
    (31/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.766495706 seconds)
    (32/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.391294828 seconds)
    (33/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.025790464 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.966022736 seconds)
    (35/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.066903387 seconds)
    (36/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.145535781 seconds)
    (37/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.865089054 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.14568235 seconds)
    (39/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.160119733 seconds)
    (40/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.946805274 seconds)
    (41/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.864757851 seconds)
    (42/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.334181678 seconds)
    (43/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.248777128 seconds)
    (44/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.92365784 seconds)
    (45/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.023209049 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.150209564 seconds)
    (47/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.988249519 seconds)
    (48/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.968423701 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.237542665 seconds)
    (50/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.257368557 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.117940275 seconds)
    (52/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.892115258 seconds)
    (53/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.927781515 seconds)
    (54/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.468570517 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.082558823 seconds)
    (56/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.973625443 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.121856783 seconds)
    (58/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.887421891 seconds)
    (59/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.987849789 seconds)
    (60/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.879775969 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.918316063 seconds)
    (62/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.325374911 seconds)
    (63/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.974452094 seconds)
    (64/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.291683428 seconds)
    (65/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.485014304 seconds)
    (66/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.874925566 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.144929232 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.967050933 seconds)
    (69/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.991297216 seconds)
    (70/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.004933791 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.239906634 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.552464192 seconds)
    (73/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.17655731 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.251304092 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.240688393 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.886747927 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.861897388 seconds)
    (78/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 8.490916096 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.912902214 seconds)
    (80/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.959973792 seconds)
    (81/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.871644599 seconds)
    (82/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.972065844 seconds)
    (83/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.850798942 seconds)
    (84/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.289737883 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.584032147 seconds)
    (86/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.119486185 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.396454993 seconds)
    (88/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.951685325 seconds)
    (89/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 8.454340209 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.151049662 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.854092231 seconds)
    (92/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.89408771 seconds)
    (93/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.890601736 seconds)
    (94/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.949186961 seconds)
    (95/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.776513157 seconds)
    (96/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.537890112 seconds)
    (97/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.232760572 seconds)
    (98/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.375953168 seconds)
    (99/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.957590291 seconds)
    (100/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.115227928 seconds)
    (101/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.071337507 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.947559861 seconds)
    (103/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.862885109 seconds)
    (104/309) benchmarking ("sort", Float64, false)...
    done (took 7.442713615 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.980648986 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.969532061 seconds)
    (107/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.962486759 seconds)
    (108/309) benchmarking ("sort", BigInt, false)...
    done (took 6.8659832 seconds)
    (109/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.055287117 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.877160369 seconds)
    (111/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.754948646 seconds)
    (112/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.959636252 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.073784502 seconds)
    (114/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.069546421 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.836977539 seconds)
    (116/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.959772204 seconds)
    (117/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.191364108 seconds)
    (118/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.377020152 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.871208684 seconds)
    (120/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.55223982 seconds)
    (121/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.090237462 seconds)
    (122/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.947771735 seconds)
    (123/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.998609196 seconds)
    (124/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.709264239 seconds)
    (125/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.272199318 seconds)
    (126/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.198074791 seconds)
    (127/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.947676617 seconds)
    (128/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.494124786 seconds)
    (129/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.870494813 seconds)
    (130/309) benchmarking ("sort", Float32, false)...
    done (took 5.628407187 seconds)
    (131/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.207873921 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 2.306214801 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.884777765 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.116667753 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.234537513 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.859711671 seconds)
    (137/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.0298319 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.081801844 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.126541687 seconds)
    (140/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.010925698 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.015563503 seconds)
    (142/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.048521614 seconds)
    (143/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.695987205 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.878826313 seconds)
    (145/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.002498972 seconds)
    (146/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.210643026 seconds)
    (147/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.981781568 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.955588338 seconds)
    (149/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.876267677 seconds)
    (150/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.048341763 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.791132397 seconds)
    (152/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.361442226 seconds)
    (153/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.127428767 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.09287265 seconds)
    (155/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.262529201 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.882654864 seconds)
    (157/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.154008918 seconds)
    (158/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.544653854 seconds)
    (159/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.114234125 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.660089756 seconds)
    (161/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.084989065 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.195319803 seconds)
    (163/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.057194125 seconds)
    (164/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.330081679 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.883279667 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.090794355 seconds)
    (167/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.840537007 seconds)
    (168/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 8.411704438 seconds)
    (169/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.222949551 seconds)
    (170/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.855708831 seconds)
    (171/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.902557559 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.757831616 seconds)
    (173/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.868805141 seconds)
    (174/309) benchmarking ("sort", Int8, false)...
    done (took 4.871345408 seconds)
    (175/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.077911629 seconds)
    (176/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.258987336 seconds)
    (177/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.957694757 seconds)
    (178/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.853226691 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 8.594035659 seconds)
    (180/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 3.572836979 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.89646313 seconds)
    (182/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.203352578 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.798205224 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.428154563 seconds)
    (185/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.001537455 seconds)
    (186/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.007099378 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.94702495 seconds)
    (188/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.865265622 seconds)
    (189/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.142607536 seconds)
    (190/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.546713093 seconds)
    (191/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.477275501 seconds)
    (192/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.043592761 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.897785144 seconds)
    (194/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.894960362 seconds)
    (195/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.159201464 seconds)
    (196/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.725558342 seconds)
    (197/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.234546591 seconds)
    (198/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.019164155 seconds)
    (199/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.241813652 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.936155022 seconds)
    (201/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.083717476 seconds)
    (202/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.844580712 seconds)
    (203/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.255320351 seconds)
    (204/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.869853781 seconds)
    (205/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.940699539 seconds)
    (206/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.108080961 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.861951671 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.190012169 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.869586425 seconds)
    (210/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.953596543 seconds)
    (211/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.892958033 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.509768202 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.082730208 seconds)
    (214/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.893483075 seconds)
    (215/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.167305192 seconds)
    (216/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.231459817 seconds)
    (217/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.019666922 seconds)
    (218/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.954895253 seconds)
    (219/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.476284457 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.868350415 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.891008183 seconds)
    (222/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.966250387 seconds)
    (223/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.051622055 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.912953038 seconds)
    (225/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.849236088 seconds)
    (226/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.118572375 seconds)
    (227/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.79517826 seconds)
    (228/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.592039058 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.167014391 seconds)
    (230/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.896031775 seconds)
    (231/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.168185887 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.910466306 seconds)
    (233/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.379417723 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.526700168 seconds)
    (235/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.961326342 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.760420633 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.959165797 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.870592073 seconds)
    (239/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.171907856 seconds)
    (240/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.971472413 seconds)
    (241/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.234861007 seconds)
    (242/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.514821006 seconds)
    (243/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.046948693 seconds)
    (244/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.186856867 seconds)
    (245/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.907159106 seconds)
    (246/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.001013274 seconds)
    (247/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.858331081 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 3.872842512 seconds)
    (249/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.992718627 seconds)
    (250/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.000387116 seconds)
    (251/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.519343868 seconds)
    (252/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.971765641 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.396391128 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.794460301 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.147509723 seconds)
    (256/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.904224782 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.970812497 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.220798569 seconds)
    (259/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.475752294 seconds)
    (260/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.048657205 seconds)
    (261/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.933639584 seconds)
    (262/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.900889068 seconds)
    (263/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.349944444 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.997274099 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.254522927 seconds)
    (266/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.079747298 seconds)
    (267/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.860088107 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.95029365 seconds)
    (269/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.472941553 seconds)
    (270/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.111640517 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.526057541 seconds)
    (272/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.982831232 seconds)
    (273/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.183064152 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.520573983 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.214141385 seconds)
    (276/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.216054904 seconds)
    (277/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.090920149 seconds)
    (278/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.029579178 seconds)
    (279/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.96475293 seconds)
    (280/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.482809308 seconds)
    (281/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.446126811 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.989686969 seconds)
    (283/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.040863228 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.964370754 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.93718249 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.013745401 seconds)
    (287/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.938413412 seconds)
    (288/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.875481892 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.928946261 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.644337511 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.27832609 seconds)
    (292/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.027065728 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.949999538 seconds)
    (294/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.891207608 seconds)
    (295/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.974832026 seconds)
    (296/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.39066171 seconds)
    (297/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.884337936 seconds)
    (298/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.963590475 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.918501089 seconds)
    (300/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.258865337 seconds)
    (301/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.384873137 seconds)
    (302/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.883523406 seconds)
    (303/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.373761695 seconds)
    (304/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.177341479 seconds)
    (305/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.739881954 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.551821411 seconds)
    (307/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.322195437 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.899386282 seconds)
    (309/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.861602282 seconds)
  done (took 1014.64029223 seconds)
done (took 1016.507839488 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.909790228 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.90556473 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.888035022 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.909543451 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.999821418 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.921913207 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.897917849 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.890961076 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.936082424 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.938126091 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.88848467 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.921919427 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.889705663 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.889477285 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.888247061 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.903105008 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.206746742 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.919486501 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.905874675 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.898850601 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.905747169 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.88850672 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.938062652 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.922383665 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.893167418 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.893209929 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.892862184 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.908877137 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.001393723 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.892621049 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.893471218 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.900378017 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.204646463 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.918181348 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.883774318 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.909709203 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.898219143 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.895995752 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.891592738 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.920319582 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.349603776 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.893350238 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.888496759 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.885683029 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.887076779 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.891585671 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.885745304 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.8919815 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.897946327 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.90042481 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.348098285 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.907636794 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.8881667 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.883836801 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.895375031 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.885129238 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.888117791 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.898595737 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.903268783 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.901251783 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.190052074 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.919542849 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.884312846 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.899196851 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.891101741 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.383897177 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.886144541 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.884077956 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.337788049 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.893192957 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.381341626 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.898039081 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.880703399 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.893560385 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.911514929 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.193014533 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.904750238 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.877340258 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.8869193 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.877210583 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.888613454 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.893496783 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.882208117 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.878270958 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.892053972 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.911756468 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.890638048 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.875867024 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.88329324 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.894074611 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.882430757 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.884980849 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.877960247 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.866347678 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.880395519 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.874745106 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.873485997 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.874571419 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.874374974 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.87937497 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.327707766 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.893694681 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.866253339 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.865601621 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.868604737 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.883306091 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.32541356 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.879136877 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.890635714 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.91621876 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.87082747 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.176252691 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.904128196 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.883293865 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.876011844 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.869946305 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.862619908 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.173330262 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.356679197 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.885939631 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.865295746 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.862739246 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.880115744 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.867605341 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.857774789 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.178503219 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.894592653 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.87721989 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.983874418 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.871152848 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.892871568 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.859041836 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.864260305 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.895844963 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.875222545 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.891009259 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.860760647 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.875294607 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.877748021 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.853938592 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.869179195 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.86828467 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.858258306 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.86348485 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.852295037 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.890170477 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.868779155 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.86845277 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.876724397 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.9797188 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.853513469 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.163250998 seconds)
done (took 295.368336605 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.924043588 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.850007544 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.95380976 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.852497053 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.937391733 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.945584576 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.85075631 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.850340972 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.850724404 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.231616028 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.851415344 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.851164244 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.854263251 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.851238221 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.937674335 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.853777379 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.850883409 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.196567231 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.853750805 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.926513793 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.852713152 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.852171183 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.854105437 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.241859079 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.849933888 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.852743054 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.925958534 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.855167748 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.205473154 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.854821056 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.846983624 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.205521859 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.945908246 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.872410786 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.864242509 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.861351434 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.945530733 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.858703292 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.936658046 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.936103078 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.960885234 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.894721437 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.851725865 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.849382111 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.85861997 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.856292932 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.85404865 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.883548817 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.85257615 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.854545883 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.195640617 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.865857948 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.86169693 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.85271155 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.853578614 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.877678738 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.853543745 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.857305376 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.948142283 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.857421821 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.918055529 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.243079144 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.235412822 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.855214409 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.853381897 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.854035896 seconds)
  done (took 183.376213366 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.922230547 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.928055298 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.925090791 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.860687692 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.906353525 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.927862586 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.862127916 seconds)
  done (took 15.117620605 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.863941966 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.856689509 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.906712885 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.907012349 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.856610542 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.007191793 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.857285483 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.870281 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.855267285 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.910911652 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.857386963 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.858132859 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.862994977 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.849466352 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.905152744 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.869533395 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.975777527 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.858387965 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.859185394 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.01153223 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.855038477 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.865079642 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.91219652 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.871219729 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.859517709 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.864093986 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.450611247 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.858509752 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.855512734 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.858800046 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.855649183 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.901295206 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.858409234 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.854607598 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.856883659 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.974275747 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.858731859 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.856117948 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.858328739 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.852707279 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.858228344 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.859021502 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.85930545 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.855741669 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.858460976 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.884197902 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.857872155 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.858855004 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.859071253 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.860167588 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.910253367 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.858993219 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.857040222 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.857613648 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.915393964 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.865599186 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.860051777 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.85612991 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.860039799 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.857347161 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.013588033 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.907586142 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.859174737 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.908077305 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.859819882 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.860686577 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.858727208 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.859143007 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.95515107 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.860999924 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.907419855 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.857318297 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.016928906 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.885938216 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.861367982 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.863661371 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.864792747 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.860921064 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.852196899 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.867446859 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.856557473 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.863813394 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.868633084 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.859279761 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.856875456 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.98481607 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.969105895 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.858932242 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.872674451 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.868321952 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.8573866 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.914142937 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.860618527 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.858716182 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.91557524 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.979389824 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.916607034 seconds)
  done (took 204.817407549 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.866486417 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.869607403 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.862960479 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.877850127 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.861739309 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.861149295 seconds)
  done (took 12.989760987 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.86319548 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.862188133 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.86140902 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.861976144 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.86146745 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.862485576 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.862506117 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.863659111 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.865165185 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.862681773 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.863363978 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.863106567 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.863186142 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.862028277 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.862725234 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.861529706 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.86238799 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.858619429 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.861729623 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.862906765 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.013729291 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.862683323 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.862676252 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.865521737 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.866096248 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.861570706 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.869275318 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.861619968 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.861569173 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.870533206 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.864023486 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.861349823 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.862549928 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.866105479 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.866002893 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.860758659 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.86444176 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.861091388 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.857461561 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.8607258 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.858921741 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.856936611 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.858313309 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.859757104 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.86137911 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.864513138 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.86335435 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.865463613 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.858516849 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.860157193 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.859245295 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.856323729 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.856791064 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.857103987 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.858598247 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.863637302 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.860084743 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.855160293 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.855227516 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.85516447 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.856981341 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.855706583 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.855428676 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.858805502 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.852039854 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.85440509 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.855084568 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.857880705 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.855206684 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.854359983 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.855681545 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.85282394 seconds)
  done (took 136.910203617 seconds)
done (took 555.011323521 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.110040223 seconds)
  done (took 8.890738313 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.957844147 seconds)
  done (took 8.830588148 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.611474599 seconds)
  done (took 10.39213329 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.873418709 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.875219987 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.848269471 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.847113633 seconds)
  done (took 29.231914317 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.851331586 seconds)
  done (took 8.627134595 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.85399013 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.8408603 seconds)
  done (took 15.502272923 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.008498818 seconds)
  done (took 8.787522336 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.86451472 seconds)
  done (took 8.6465989 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.860019058 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.862123272 seconds)
  done (took 15.508476534 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.825609859 seconds)
  done (took 8.601866324 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.444724719 seconds)
  done (took 11.226164326 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.842057646 seconds)
  done (took 8.630352284 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.894510697 seconds)
  done (took 8.669874763 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.113000949 seconds)
  done (took 9.888037382 seconds)
done (took 163.216814237 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.842588276 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.840959152 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.83985564 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.839127664 seconds)
  done (took 29.137372353 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.880126208 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.881023985 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.882361413 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.891328929 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.883177288 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.881231281 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.873542162 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.872665859 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.890564602 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.882667552 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.883072785 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.882033489 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.881332701 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.872623923 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.882864408 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.882135361 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.890665735 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.882742959 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.872540346 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.883379854 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.847186807 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.893033068 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.884127714 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.847480544 seconds)
  done (took 46.8810298 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.042582461 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.916031529 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.998380484 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.89680634 seconds)
  done (took 9.625888712 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.892442689 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.894163205 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.905212472 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.94423097 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.968864071 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.900129636 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.864690973 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.858214536 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.846721016 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.891312071 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.965408446 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.905670628 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.973887719 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.835560229 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.020230739 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.836098274 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.83661309 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.888093509 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.93971841 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.953500904 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.83660415 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.888936815 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.891829657 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.905632082 seconds)
  done (took 47.41528531 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.83623929 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.844834769 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.842750913 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.836347863 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.836544757 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.835479797 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.841306663 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.837099696 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.856797682 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.837284728 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.835205187 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.835662526 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.834875684 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.835718329 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.835364217 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.849403954 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.850273854 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.836092463 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.839527956 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.842433888 seconds)
  done (took 38.564802584 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.831120685 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.684345701 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.183068299 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.086821191 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.828790327 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.829746304 seconds)
  done (took 31.210221528 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.851450737 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.843704243 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.837126843 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.89499359 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.977186824 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.847470183 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.837776017 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.848121961 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.883917386 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.906389769 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.859389839 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.866745128 seconds)
  done (took 24.219488525 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.833108333 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.832739396 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.832179718 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.85044958 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.849229597 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.84684362 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.844603706 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.830704518 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.851200753 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.85745515 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.847362772 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.850178421 seconds)
  done (took 43.896727497 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923826373 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.875491608 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.833840573 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.522053553 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.210779759 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.043514879 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.36189748 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.169176282 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.836259931 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106161033 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.839159797 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942056176 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.089427754 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.460459321 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.87162928 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.290254131 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.132010174 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043864508 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857739421 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.520991664 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901206848 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.146573203 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.635762978 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.894224891 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.047851771 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.970339122 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.096539524 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.836218589 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969513145 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874485293 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848890652 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.836511983 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.110486341 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210052703 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939166037 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848443748 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.452745956 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.553433673 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.825678135 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.597456275 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.569884551 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.963673913 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849492669 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838855672 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.774546337 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.111961607 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220250119 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.845023731 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.549032488 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.839049025 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.848940416 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92899845 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.842226712 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.655515499 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.760960432 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.840811809 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.836026144 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846304574 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.413753154 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.965048624 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.161371581 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.822213121 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.932636314 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.535457991 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237629696 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.988030145 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.844103765 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.84434981 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.774307606 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.530740898 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.898885884 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.170158059 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.865068032 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.490550802 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153212945 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.898097624 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.785517097 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115329897 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.50482038 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.824591743 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068811474 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841660354 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.776735512 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.878920276 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.775708688 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108598369 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876564016 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.609337709 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879807402 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.176029402 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.852619769 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859262116 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866416808 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.065314154 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.726367894 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841587907 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.62837242 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.986901288 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864891409 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.177268377 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.777312821 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.846315686 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097801909 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.054391563 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.036128095 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.343238261 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001033767 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.528026032 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.902081336 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.125274373 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.899831689 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.110302199 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899266279 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.965256698 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898620265 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.844096554 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139631078 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.567030083 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.988265817 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.859672986 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.973579794 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.157646968 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868973396 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91013693 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.852823159 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.843877804 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.639797092 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.398129132 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.845357917 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.846802833 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.042478628 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.90079521 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.846517428 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789953476 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.472558254 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.869669436 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.859952675 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.069149446 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.538349124 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163697452 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779620337 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.175517113 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.938610686 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.069312835 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.510984832 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.921491114 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.107730631 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.044138381 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.086766928 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901022177 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865876265 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945611031 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868119771 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.128017838 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.147125436 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.850827473 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.851168411 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.645477825 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.883253413 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846757534 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.852677283 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.600245259 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122374661 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.869788219 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.854013721 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.736788097 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.861210657 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912467723 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.853088422 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.857532707 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.395231524 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.582828958 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.855155147 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.43716369 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073336507 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858579987 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.575657774 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964212444 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.930490243 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.125350669 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906579579 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.78136504 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.559750485 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.540135143 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84898864 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.784612216 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.84939305 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858188452 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859305828 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.046066377 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.121565258 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890315071 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.545673868 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.891632295 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86090017 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.854936268 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848616548 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.363107263 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.978847594 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.181835833 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.902679299 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994107854 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.865482489 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.783953275 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.854639958 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.855675639 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.850966299 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.851372205 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884073219 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.542549735 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228495934 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112817585 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.461357675 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86493983 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.565896861 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.910608124 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.911811392 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.644452037 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.148891799 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.890672581 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868626547 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.866302009 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.63102303 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.551903474 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.4273945 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168555214 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165035196 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.294449201 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.196041675 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.889555214 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.192872004 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789087252 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.41277135 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.915534064 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.642993185 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800363357 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939323936 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.495641826 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200672471 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871656918 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083280233 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.240674442 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.575832736 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.02992619 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.068781486 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891527212 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.131763251 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.825088874 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.144201414 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000171781 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.55713314 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062692187 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189735364 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.551873502 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.983359494 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.856933082 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.527640421 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941639075 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.571436506 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.975592962 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.185633367 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.778960202 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331315251 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.862494891 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.083451058 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207373445 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.14726058 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.986294211 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795417715 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.869611775 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.868594769 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.859601073 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.859344905 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.725001782 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.115872088 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869403903 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792285404 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.093556736 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154920689 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.75988882 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.865626329 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858907809 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157577425 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.532919323 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03268245 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.082615784 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.386650797 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866509126 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.794083109 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793678675 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.551991148 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.864251435 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.83554148 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073851305 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.958364531 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.780170172 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.073566449 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.947256987 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.116259701 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.875117821 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.13115759 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.133585045 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.577626617 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886897341 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.961096962 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.555361621 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.968230256 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.860647584 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.096315268 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.611373167 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.088629047 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.88042937 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.812008942 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.859409105 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.0749157 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.861343576 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.740016017 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090849546 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.581246913 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.918150294 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182772282 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940595322 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.754523158 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.915449527 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.958836859 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877930678 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946478017 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877878402 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.878846799 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.877672074 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913970748 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.767075074 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.991634825 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.88231563 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959810005 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.998717676 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.395992409 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.873301494 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146360949 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233787607 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.194161447 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.926244541 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.868372342 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870540422 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803051879 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01663996 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.093093309 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142908994 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.000112488 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.987148637 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893639333 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.532599489 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.208637621 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115026265 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144906158 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.764257401 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.520151025 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.914924833 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.869431854 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880001164 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.08027943 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089669661 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178373309 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.014334553 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.078764365 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.239991983 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142817525 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.87020202 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.869923026 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.458788342 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.964290256 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.544473597 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.911859094 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.757455892 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151574207 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.882694728 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.251541379 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.893767542 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.03370732 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.390586696 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.599102026 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.163772519 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.856075078 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.933027447 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151780288 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.263268635 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184632573 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942671044 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884831572 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.976136378 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022018641 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.7493048 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.87555612 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.874881759 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.923742343 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.586061473 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.88461402 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152418017 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183695064 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.871769998 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.751602361 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898270499 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.885001929 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.098117391 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.135665911 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.12534994 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885344582 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.881925184 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.689975045 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.149675094 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933042872 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81116313 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.87953463 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969745831 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.12346438 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.8996993 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.327727796 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.588220721 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142266824 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.872791425 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89814485 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.155792163 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.241317628 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193898529 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.412434926 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081540052 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.460772972 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.600705194 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184357537 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.882513594 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.173909088 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187233984 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.880876534 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.083573697 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921281697 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.145909382 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189379935 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.958906598 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.589688118 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.852615838 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.225045476 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.44458608 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822467916 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.891158426 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.944449453 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.882891483 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.013734888 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.895537503 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.757810642 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.200577171 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.679063779 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.167083714 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.889449993 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.87259098 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.60451214 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.341234406 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924788823 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028656591 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884437838 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.63503654 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.24652247 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.140666599 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.098173849 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.89653366 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.88813852 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884038136 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.872392955 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.080200958 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.081255139 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167293442 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.11988356 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.927610932 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.887988468 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.101545944 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096813644 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.75967192 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.02503751 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.093795503 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.931614009 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.792008628 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.388772648 seconds)
  done (took 1673.155810457 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.913986603 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.901108566 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.888893072 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.901794498 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.894907084 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.988419315 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.897848761 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.965333745 seconds)
  done (took 57.171982678 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.884934528 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.085913045 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.892726385 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.88524901 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.89336847 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.88359474 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.060272123 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.896532828 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.894953583 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.895898557 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.88528693 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.884038881 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.197490162 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.911688232 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.885081946 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.871138744 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.893844841 seconds)
  done (took 74.624827309 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.885645948 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.989761493 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.914181789 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.901339113 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.838539313 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.887487346 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.762763857 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.93650141 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.886816331 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.120817386 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.520743793 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.909161221 seconds)
  done (took 90.373965854 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.894889273 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.892345668 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.892092223 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.893455779 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.893712335 seconds)
  done (took 11.290069838 seconds)
done (took 2179.371380007 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.233350179 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.10763008 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.126813312 seconds)
  done (took 6.054164508 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.03611962 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.083467757 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.20318269 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.210327658 seconds)
  done (took 10.357930828 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.175529924 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.27306194 seconds)
  done (took 6.268894851 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.286445056 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.890744815 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.27604057 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.887636971 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.887545186 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.888698411 seconds)
  done (took 22.49026145 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.890586042 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.894167322 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.889980683 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.89281577 seconds)
  done (took 9.387963442 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.871393864 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.552448272 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.87145688 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.887628343 seconds)
  done (took 21.003651097 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.639962173 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.650777638 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.634718488 seconds)
  done (took 9.747109401 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.381979133 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.782880465 seconds)
  done (took 8.98606055 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.142982808 seconds)
  done (took 3.964690587 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.023376894 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.199435765 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.404282452 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.420067351 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.507525155 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.632196311 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.222870467 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.149006211 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.291885244 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.340331047 seconds)
  done (took 25.013275763 seconds)
done (took 138.780414323 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.264201879 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.131485409 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.089524114 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.266361297 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.122447093 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.09065788 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.107084934 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.252645823 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.736968286 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.733545355 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.227765511 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.119992068 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.050988895 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.126860458 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.051866903 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.260090621 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.110789246 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.277764555 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.921991866 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.12652563 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.109123566 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.8644354 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.070313233 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.8756173 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.112801854 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.041799301 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.44156445 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.257485889 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.082163647 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.46314649 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.052017594 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.305681943 seconds)
  done (took 171.567891086 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.67902656 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.902483349 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.907923862 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.89062443 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.322597275 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.911690266 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.89092209 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.904726097 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.045575611 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.019969616 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.918968806 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.328315795 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.918464894 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.889206029 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.903405261 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.900788194 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.123074261 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.770208922 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.911278599 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.91018507 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.91354757 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.193465742 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.908933041 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.219459803 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.116226131 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.91173936 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.892933619 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.909635894 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.895726953 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.905705866 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.911615857 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.891732429 seconds)
  done (took 208.556862286 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.892131476 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.895937772 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.899899503 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.892625282 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.900191634 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.89809715 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.89218417 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.89229923 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.558182156 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.550791287 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.902274546 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.899200369 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.898591313 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.891898811 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.901990028 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.893942855 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.899331082 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.902669334 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.898269362 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.902536339 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.909389639 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.625943907 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.912792877 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.63763598 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.907287987 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.909481979 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.893555795 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.913148367 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.901498009 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.905381248 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.9105384 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.893570973 seconds)
  done (took 221.431197208 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.095505541 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.900286255 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.900222369 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.857092729 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.902007069 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.90130378 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.896923365 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.092210923 seconds)
  done (took 19.39695879 seconds)
done (took 622.79043207 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.363118396 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.215880272 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.086163298 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.925483672 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.148221119 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.966173442 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.920700472 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.985021394 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.655494967 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.993104444 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.566525186 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.9410891 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.654385347 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.947969187 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.049875432 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.98087565 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.460607844 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.547684731 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.104330574 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.971121901 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.10524098 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.880866033 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.99840956 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.681294528 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.677108919 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.92276382 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.125458632 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.46235359 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.93351164 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.091586439 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.688839621 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.35393662 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.936413557 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.919061245 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.972595022 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.955461074 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.290969656 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.93372202 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.052881721 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.698562732 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.973855303 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.548058555 seconds)
  done (took 104.515070947 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.892580564 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.890444699 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.889876718 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.890273191 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.891339499 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.891077996 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.890665666 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.890946082 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.892324167 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.89120521 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.891079554 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.892737296 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.890488758 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.892794573 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.889970175 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.890430676 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.892230304 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.893179981 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.891676061 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.892010342 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.892001905 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.891720359 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.903622736 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.891699398 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.892782284 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.892033135 seconds)
  done (took 51.035747043 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.905333049 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.04634457 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.131701988 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.925243005 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.904363333 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.907286034 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.923087911 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.912339377 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.906888177 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.906157297 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.002212235 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.911283791 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.925065854 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.134091125 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.921611202 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.906009083 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.905163397 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.905366474 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.052265799 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.922884584 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.926192363 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.91138183 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.927102069 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.921743334 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.907804845 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.907514477 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.909992044 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.378216314 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.91541184 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.002331333 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.948050258 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.927244143 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.347913519 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.142612275 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.960734754 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.912679568 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.906372802 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.005894018 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.912440276 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.906730352 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.925338589 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.912643388 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.130806597 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.417236964 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.921540047 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.908461719 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.389830565 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.016644474 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.948432499 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.919414643 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.136328134 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.925182981 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.908916559 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.907543399 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.943327962 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.917688896 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.907300698 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.271762594 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.920016251 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.925580641 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.911942587 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.90832722 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.062386343 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.916888738 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.048915475 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.917546183 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.915681923 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.910308061 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.134648024 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.925120555 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.42102723 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.923704509 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.909294985 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.003784296 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.057421881 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.419686189 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.924437974 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.065573807 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.367385215 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.935147115 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.918055568 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.371181212 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.93973035 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.919489419 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.911780111 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.912042126 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.911871063 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.957524345 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.928171584 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.357683027 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.434839735 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.289986658 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.938561505 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.926674766 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.91124844 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.276254616 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.919300319 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.912611722 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.131722593 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.432315567 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.925575889 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.920875639 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.409537937 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.92726015 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.931379346 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.919999942 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.144357054 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.926386927 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.955863258 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.912305269 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.918548741 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.915683778 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.932840087 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.918327492 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.912848093 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.401715112 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.03090933 seconds)
  done (took 236.807635745 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.914566181 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.906395679 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.903375376 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.906333073 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.905359038 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.911927611 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.905147848 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.905001198 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.912167499 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.906012045 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.904833532 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.908936024 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.908412423 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.915040658 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.425751805 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.914392071 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.520116105 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.909806188 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.908187574 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.90716458 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.588378675 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.914425733 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.906779186 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.907337781 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.906550151 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.906479506 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.91112935 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.944312998 seconds)
  done (took 169.126357252 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.916287535 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.095314542 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.93020402 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.949948748 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.926119468 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.912812585 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.936310377 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.932832461 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.921542406 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.913391306 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.913256898 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.975267735 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.92624334 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.051241044 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.946461572 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.946649625 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.021132371 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.923596369 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.913803832 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.913160887 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.94415785 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.909719147 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.974987105 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.042977698 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.933107627 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.032768733 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.919265566 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.917829415 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.916370348 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.036069389 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.932073279 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.976699498 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.944384893 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.934697721 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.039007754 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.034201193 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.024924581 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.946451406 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.921085138 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.914607831 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.914087657 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.904651074 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.035047468 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.934003797 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.91658109 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.025057191 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.934181032 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.916847527 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.925561609 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.91548523 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.931322332 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.934766041 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.985930984 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.050370291 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.951610115 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.942866307 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.942343767 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.216156178 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.926546583 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.017909068 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.912986627 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.036788944 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.936365792 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.904776118 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.916038695 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.921947097 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.946328436 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.947660899 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.027302253 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.927485383 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.018509053 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.953056045 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.923383864 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.918309089 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.919871994 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.03479932 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.037802969 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.953688531 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.956555879 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.948766525 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.913058145 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.917945096 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.906286249 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.936263557 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.920795237 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.034160741 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.037651918 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.926490104 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.920991154 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.918807883 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.920505302 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.942937891 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.044555743 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.952532478 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.017189838 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.988099512 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.992239776 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.93379279 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.930502333 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.92287191 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.988291245 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.935939475 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.932313275 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.266754936 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.995625542 seconds)
  done (took 207.765791237 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.386731239 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.974640494 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.974756339 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.207334322 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.350113008 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.778481868 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.965438587 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.967710194 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.99296201 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.141894622 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.029516036 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.979733889 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.957452885 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.942873407 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.969812417 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.989319069 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.971596409 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.260570505 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.089157144 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.067047902 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.950258631 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.265700553 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.292120416 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.352021323 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.002464909 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.285967466 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.649990966 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.212344175 seconds)
  done (took 62.864573003 seconds)
done (took 833.942975093 seconds)
SAVING RESULT...
DONE!
