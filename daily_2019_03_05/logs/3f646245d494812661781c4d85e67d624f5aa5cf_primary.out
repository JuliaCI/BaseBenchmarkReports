cset: moving following pidspec: 5101
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.348971255 seconds)
loading group "string"... done (took 0.59912177 seconds)
loading group "linalg"... done (took 7.425191386 seconds)
loading group "parallel"... done (took 0.17396579 seconds)
loading group "find"... done (took 1.176047698 seconds)
loading group "tuple"... done (took 1.815560234 seconds)
loading group "dates"... done (took 1.246475635 seconds)
loading group "micro"... done (took 0.232980697 seconds)
loading group "io"... done (took 1.04747511 seconds)
loading group "scalar"... done (took 40.339366231 seconds)
loading group "sparse"... done (took 13.246793707 seconds)
loading group "broadcast"... done (took 1.019462519 seconds)
loading group "union"... done (took 13.957850983 seconds)
loading group "simd"... done (took 4.72206545 seconds)
loading group "random"... done (took 9.588796931 seconds)
loading group "problem"... done (took 2.00378838 seconds)
loading group "array"... done (took 22.616734651 seconds)
loading group "misc"... done (took 2.080140439 seconds)
loading group "sort"... done (took 3.445085307 seconds)
loading group "collection"... done (took 19.426643495 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.561977137 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146730763 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118726237 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.143832422 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.192352778 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134995167 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.147099514 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085209596 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.006947967 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.171080107 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.14193699 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.519410937 seconds)
done (took 5.206172276 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.257436962 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08992558 seconds)
    (2/2) benchmarking "String"...
    done (took 0.098725489 seconds)
  done (took 0.969921793 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068612865 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127892709 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082250201 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069059638 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066878301 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082402063 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067496314 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06676253 seconds)
  done (took 1.351993112 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074981298 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069737116 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086882584 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069177263 seconds)
  done (took 1.090646691 seconds)
done (took 4.526833942 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.941718637 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.258663001 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193400712 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.468750464 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.153442692 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.191749741 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671464517 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.376194297 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.217794203 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103907969 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106852046 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.395111117 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108795613 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.703476258 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07949411 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.110123002 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.175694277 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.44168349 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084330056 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083863718 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105880667 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.148165174 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.107267388 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.082076979 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.171083039 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.07128151 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.155825492 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.097503964 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.070592424 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.251587715 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.191000036 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.695327468 seconds)
  done (took 10.844106035 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09919266 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.121015991 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069996479 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.143026958 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.123102213 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073069732 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07347864 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.0859881 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093852937 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.163725403 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.118573369 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.125254639 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068376791 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070851855 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.10397493 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.231978317 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.095616278 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104730105 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073776539 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076289265 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.126616283 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.099465189 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082150259 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096993154 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.153839458 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195459347 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101404925 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.116562258 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072941492 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.102159735 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132036732 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.133379332 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067147346 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085672964 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.161147671 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096445082 seconds)
  done (took 4.742458821 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.117949229 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.178110875 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094420998 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157064794 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.088067624 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.132336224 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067227906 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102639375 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257206423 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.168963188 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.11755739 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.495738984 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113713713 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10699494 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068153971 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08948434 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068242445 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.625089249 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.113076246 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.139046818 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104302446 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075960284 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.088570312 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360651122 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070060198 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066671353 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085359888 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061722622 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149502072 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069538366 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.279941688 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.114916097 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071877212 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124120908 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.184269664 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098513491 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125383553 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084182274 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068118231 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174916865 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074029891 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.085019148 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.090435339 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123015031 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123540376 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084491705 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06878412 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.186399485 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066896432 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102040889 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09337771 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.991250137 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.169294404 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096256571 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068701675 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.306150732 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085714525 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087495284 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.070255598 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.298717662 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.163896617 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069017375 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.086734288 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066588809 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.085921612 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.378201669 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068766605 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.013891168 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071332432 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078334887 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087658087 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068874593 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092576525 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074372092 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102614619 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06713998 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067970462 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085294959 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065847025 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086615243 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08804363 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.208327384 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.086944304 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068670128 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084495362 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067278774 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087085958 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116083076 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.088716175 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067826015 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115868066 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071495872 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069132596 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.121555268 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069484852 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.105844943 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085913227 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115190911 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.087490993 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.167895834 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069248876 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066802688 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125308484 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.089622296 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101449634 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.09936604 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069620246 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.15795802 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065877368 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084842356 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068059734 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.08490469 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069821846 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068302836 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.101454149 seconds)
  done (took 22.046132833 seconds)
done (took 39.534792156 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.318225936 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.099452193 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.097890068 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.096248392 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078705322 seconds)
  done (took 1.556599448 seconds)
done (took 2.388127001 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.151447978 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104575251 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08319113 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098432741 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083421092 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104721358 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120434251 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082964422 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120482448 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064744893 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.116912793 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065176417 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08237254 seconds)
  done (took 2.145468213 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083509176 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086087993 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088087469 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083052035 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08149665 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083902092 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08065061 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108843145 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080802512 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091640334 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065105764 seconds)
  done (took 1.759320587 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083314974 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084936665 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088468985 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081292941 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081198724 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081717882 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082254562 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106752776 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083802508 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09304258 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066301689 seconds)
  done (took 1.764041228 seconds)
done (took 6.494541513 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080671705 seconds)
  done (took 0.907283415 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.758091357 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.980358275 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084887222 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.140394009 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.224453421 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.15937375 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.464917629 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.115974875 seconds)
  done (took 10.963432093 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.115307527 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.089044068 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07251782 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090647333 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074419825 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.090692791 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071310652 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073656593 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.090550801 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072591618 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.088613925 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073964429 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.087307757 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072015111 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.090443045 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071284343 seconds)
  done (took 2.215395492 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.106652096 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.106093371 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.094128266 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079140629 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.092723568 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07447467 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.095482663 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07509981 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.090306757 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074880054 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.095173236 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075268067 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091374709 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067884915 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.095600329 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079916193 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.093821727 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.079349107 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.098093142 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079482485 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09747386 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068105182 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.094503488 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078564544 seconds)
  done (took 3.026998322 seconds)
done (took 17.942396951 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.137156317 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078270617 seconds)
  done (took 1.044932496 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08521216 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101607247 seconds)
  done (took 1.02384049 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086610567 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083590059 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092498034 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.098514462 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.085075595 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06806615 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.105920621 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069384117 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.085025338 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068659316 seconds)
  done (took 1.679942509 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072114162 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096721181 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07339793 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.100304012 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076438273 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083805026 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075248025 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087751139 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082013612 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081872795 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073770942 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.102981926 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072956063 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.104443236 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.092280053 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072774428 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.092535671 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071550451 seconds)
  done (took 2.350373032 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068598648 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068981907 seconds)
  done (took 0.975481059 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070337867 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064302208 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086987703 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067457705 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.082802903 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065268311 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082712515 seconds)
  done (took 1.358195071 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.418217712 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110574198 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.269966157 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074418967 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.109435884 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.300855476 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06808192 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072806342 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092714582 seconds)
  done (took 2.395310578 seconds)
done (took 11.66005775 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08277904 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087169536 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115786463 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.455291169 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.111016815 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068585675 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.148826994 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.222188302 seconds)
done (took 2.128849331 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.129017877 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.64096806 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.420501501 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.218677332 seconds)
  done (took 2.124767892 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.391750928 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093162837 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077103948 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069195466 seconds)
  done (took 1.480117483 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068619419 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071317901 seconds)
  done (took 0.98783539 seconds)
done (took 5.562203827 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068920978 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068274964 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.082605411 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069152562 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.065398498 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.083181597 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.100100282 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087237886 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067699465 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086288669 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068575239 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067832888 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086757152 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065921421 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064582647 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085244494 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065801594 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064980185 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.083903047 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065767588 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0816716 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068930169 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064627398 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.083190739 seconds)
  done (took 2.681679682 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08785512 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.086138273 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074559548 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089989089 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073721043 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.09317167 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074175701 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068728599 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.092477155 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.07029898 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089345839 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072159469 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.087209402 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073416266 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088093578 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072956299 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090673048 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06836163 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070516906 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091353583 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071600879 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087163154 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07297308 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091682368 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071716586 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090014649 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070547711 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.086015319 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073837231 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08917924 seconds)
  done (took 3.267422998 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073769161 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064496318 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083456808 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073149876 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065393461 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.0859664 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064936794 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083016806 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067323364 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065030728 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.085285692 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065388585 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064916255 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084869563 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066443117 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.085855158 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084094539 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064798653 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084369937 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066004246 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085763562 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066329981 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065266641 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.082880928 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06555519 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064708915 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08341932 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065363295 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.083773705 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066257115 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067884321 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08710019 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06584902 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071995908 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.087389605 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064717721 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068054907 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.083876586 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066063443 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082635513 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065780898 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063955362 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.082894575 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072903462 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065099619 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.085755739 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065082301 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083924578 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066859813 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068178455 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083968152 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065572492 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.085336064 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067643217 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068745373 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.083542403 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066464022 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063770504 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084364289 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06604431 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.082390461 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066564387 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068879111 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.08421952 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081635257 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.089690111 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066917906 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067509318 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.08495843 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070037158 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067483798 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.098817653 seconds)
  done (took 6.189215412 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.123151349 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09621957 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086628205 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068089916 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08111577 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067083826 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069532975 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084468411 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068630828 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090075171 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067977332 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084492822 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069415999 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080805262 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084985011 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068035767 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.090164616 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066201942 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065876488 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088397494 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067478848 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.086486243 seconds)
  done (took 2.61096807 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.196004589 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091490618 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.113326709 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096365227 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08804127 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077170842 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089553041 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072475599 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07113785 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088762568 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07105591 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091353847 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069174818 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088973013 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070320365 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089488072 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073260373 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088825542 seconds)
  done (took 2.481249767 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081880673 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067075488 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.111237044 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068144175 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.088625679 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071350033 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091729061 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078079681 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.089664688 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069098291 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095923305 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.180185895 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.088590534 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069068481 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088130104 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069808974 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071375825 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086514473 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077878913 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093102599 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072547321 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095957044 seconds)
  done (took 2.762211177 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085143877 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069680695 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107073541 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088162649 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065026736 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066035283 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.093617487 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069248622 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092642752 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.07109787 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086262078 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.070206183 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07363628 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087631885 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073731424 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08764079 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070856422 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085998844 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070677891 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064525905 seconds)
  done (took 2.435522317 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091055547 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086838878 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070533862 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095940268 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071063945 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087944556 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079253172 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087273204 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070503291 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.111089374 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070245143 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087675835 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079064031 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093603389 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070512789 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096873646 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077972273 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.097080371 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087206266 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071135444 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.112776878 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070821587 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096366925 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069165382 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087251789 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070944628 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086586741 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076428937 seconds)
  done (took 3.21441301 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069483587 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06859351 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083442486 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066589595 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064541247 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084613039 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066109597 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065107619 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086802016 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065990031 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084829193 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068870777 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067431738 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085544635 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069535041 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067238643 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086494121 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066515166 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065013999 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083657116 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067995352 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085210907 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069219233 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065428192 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083740822 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068501849 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065393705 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083919281 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068495198 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065119482 seconds)
  done (took 3.053356402 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07982705 seconds)
    (2/2) benchmarking "in"...
    done (took 0.093663534 seconds)
  done (took 1.038302216 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066742877 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081442064 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084762984 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071864432 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090948726 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069524478 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094617246 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073007088 seconds)
  done (took 1.495882604 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085107903 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079002197 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08842408 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.098378427 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.081330279 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084880966 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.161484731 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088614244 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074959617 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08535579 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082927161 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067599043 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093836261 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067532495 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093169018 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075040091 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.083907242 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.076053878 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07028137 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086266377 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06964944 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098632336 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070973721 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.083602553 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069926736 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077002933 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.100208961 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068530791 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090487537 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075453235 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.092274409 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063625968 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067183879 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088884188 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067299362 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.097366806 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084363844 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090299185 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077968225 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08766844 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079968555 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.082418861 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073638126 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092914833 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08019056 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069308611 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.087579614 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063769107 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083589347 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072665753 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063640323 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087266211 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.0650802 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09353538 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073814937 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078131203 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086506967 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069639078 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089952205 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072455403 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.093250559 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071139589 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07010294 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.086461483 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075772696 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090498292 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079355014 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.080817461 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063818697 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066320186 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.0972735 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091435282 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093120865 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070166841 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089008714 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066225196 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071329372 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089083045 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073210906 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093616422 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069972114 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092727506 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077053364 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086544218 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072115285 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093882961 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067880683 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070949965 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085136818 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08577603 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.085946478 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06781116 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064970187 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.099320065 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070763292 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.087391367 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06717699 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093977813 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064382725 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068962337 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087885014 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068355674 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.09865258 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074576713 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092873108 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07718564 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.094876082 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069239542 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089537419 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065985787 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069582632 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086440763 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075561484 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061631553 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091284678 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069438831 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.087927283 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077797386 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085339767 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06963504 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09360341 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075825016 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066279088 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.083868464 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071739562 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086168913 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074279456 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075279805 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.086594776 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063236806 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082155416 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071664875 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067933402 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.092345692 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073775386 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090876798 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063122433 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084421173 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074108313 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.096725567 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068936412 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069048563 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094017601 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070557042 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086309903 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075834462 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089284644 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068929381 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07458288 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088693613 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064726992 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089549321 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072503291 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067051741 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091085315 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071945292 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08943174 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06992291 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086056843 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075634641 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06807544 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086731715 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068305108 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085724977 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080259926 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.08841461 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065929393 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065324429 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.095032417 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067085194 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086329818 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069036603 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071240138 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.088184211 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066228779 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085896485 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071233607 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098218184 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07550151 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069555676 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093865743 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079216608 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.086971998 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071252354 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085914397 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070584537 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069382237 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.097494261 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073335914 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09212908 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069860748 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.084834113 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075754823 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093558488 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068621989 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065444795 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086270695 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073119136 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092634515 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073456181 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068201537 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085634974 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069471387 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090766916 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072262931 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.085833658 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068152492 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072464281 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.087239952 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073735049 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088933919 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079725847 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090807632 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065011143 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090744768 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068885161 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073835887 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.082187637 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066706066 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067338017 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.089831499 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067320702 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090565268 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062398964 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09395282 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077829085 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068369998 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086321643 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069532182 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093904346 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071339774 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071446806 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091867733 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074311937 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09854519 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068251319 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089714781 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080167769 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.086622586 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063876852 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073999745 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.08582537 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068248275 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.086009669 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067151744 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071450316 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096667213 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07522141 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.082593221 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071884593 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084938464 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069259516 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063183213 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09245793 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071652469 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087451256 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076794168 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06903784 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087770525 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073161076 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.086597619 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071106848 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087137803 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072594663 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069003996 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090352346 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067438372 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089634191 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069390589 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06635453 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089401583 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069262356 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086891332 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075492111 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067374529 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088426492 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07143431 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088418659 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069864746 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067886459 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088369284 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072358139 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088646574 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068993036 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070097297 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.083466575 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075603872 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.087085831 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076220226 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087270964 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066530576 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073783458 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08990317 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073219869 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08931606 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069692925 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087813943 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069100826 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070457098 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094961694 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066631604 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.098566907 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07857447 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088251885 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072484459 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067884165 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090701823 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068350838 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087936531 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.07067269 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.0682117 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.088219335 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07356039 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090444921 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06928225 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070220589 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.089023649 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.0680565 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088887131 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064459093 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068029553 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087840826 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068584369 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098097663 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069269933 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087456674 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069377237 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068996986 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08865727 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065987397 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.0950704 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079312524 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088193327 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076974926 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08702709 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070648428 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096330614 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.067173101 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066656074 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.085720153 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067260049 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075220603 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.089238742 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078050158 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087691626 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068739241 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065853314 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088592911 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067847175 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.082972663 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066809628 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071556325 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087914957 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067516659 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.088179479 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072912961 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08830704 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080362634 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067522194 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090017798 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069224828 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083980628 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069073023 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067693218 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091598322 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068605281 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084936088 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.067425179 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067836948 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08939841 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069745554 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087246024 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070927773 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075626157 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088265869 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071953959 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090706124 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064232375 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091035801 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069711216 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068710834 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087722458 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072998858 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090497687 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070423188 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.096861702 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070406231 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070008734 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089183274 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067125561 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086231557 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069719713 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068899073 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087461467 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070512807 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095754378 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067848023 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071527913 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088425927 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070198076 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095444574 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070357799 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090168762 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077822799 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068198955 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.089931296 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076658906 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.09176795 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072898623 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088911334 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070739135 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074236734 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087774505 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075163902 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.088816006 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071021729 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088997326 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06811076 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067361488 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.088074179 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06882202 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094181586 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069995476 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067721154 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088100659 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067777498 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088278558 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073877601 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074967075 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089978147 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071463569 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.083284551 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066855026 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069887539 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.086923441 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069867433 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.091505663 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075508069 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089451662 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071161211 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06779873 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.098303111 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074906115 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091948056 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067127462 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073036441 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.089628833 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071316294 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089342954 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069098206 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089683865 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073326715 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071188721 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088252996 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07697369 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091881843 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070561937 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069599637 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.090430207 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069290613 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.083193805 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070787119 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069886377 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094586321 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070659272 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089446158 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08011041 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.085743484 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070527821 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071814496 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088512159 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073821387 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083381861 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070819501 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08840753 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07215297 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063306461 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087995403 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067136279 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089643636 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.069569084 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064024246 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099226838 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078154115 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091612935 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068656721 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065890232 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.084174959 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063658765 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.087387566 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070370649 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069991603 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099107301 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067653261 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087748515 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06464752 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087840447 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073412246 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070950061 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.086242495 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064801689 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085608039 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073584814 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073335417 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087279015 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068626527 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091825102 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.0728752 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065738906 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093110688 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064668073 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092294817 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082696382 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088193072 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070959784 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093060885 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07773781 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068986892 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.084385503 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070454908 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091030269 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06963167 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068963423 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.089665112 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.0836734 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092095798 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067927538 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.086983268 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071868021 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06794537 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.097389518 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069485045 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088561196 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073439109 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.090118125 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077495431 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090565315 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077710728 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090884916 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074236894 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067408336 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088741034 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067055309 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066946026 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.09109852 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069922957 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092397924 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076584852 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08772046 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078739854 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098381478 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070991272 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06584036 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089444135 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06760741 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.083946882 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.07071403 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066393326 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.087863358 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067904614 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.086709824 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070286977 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07408045 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.091282475 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070082255 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088559436 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063779525 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069474923 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.091511414 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070021321 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.085281968 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070998976 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069346403 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091801012 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072832639 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086689996 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070740765 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070211081 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090416676 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064134589 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.0950683 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068622452 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071275051 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.08863505 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069417173 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.089226903 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073137444 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093587625 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07107335 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070868743 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098917392 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071544454 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085935497 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066674395 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.09310031 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068341029 seconds)
  done (took 47.934978942 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110488759 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086373951 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063887112 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083787761 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078338099 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085611203 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065523975 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064423326 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085502872 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068357599 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083649578 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064608679 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092715571 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088239433 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098466196 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08856356 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065951263 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064348285 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084380227 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065818741 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093590308 seconds)
  done (took 2.592082677 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.089654502 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.104324136 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080327987 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10347651 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093046527 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081864177 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.1002686 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079193774 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102860582 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09424852 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084466983 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099538612 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075544688 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.097011157 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075824576 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098248193 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101008837 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07516498 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.101390379 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080570996 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098376029 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098332402 seconds)
  done (took 2.919842627 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070934095 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067816156 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089886238 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064857335 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067463509 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.084162047 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07267255 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.086166538 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073010618 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.073978305 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.087092187 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067178106 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.089268314 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.067751417 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067440625 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086157605 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.13656154 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072597529 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087313483 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070481083 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063028712 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.090259274 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063702724 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083993359 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068275418 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071771102 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089100887 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066166108 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.087392419 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06830907 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067169286 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.086359272 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070075518 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068458302 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087582302 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066180939 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087793725 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069344768 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063312472 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.086152953 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06982857 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.083742947 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070839935 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06927312 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.086500274 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066391816 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06961908 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.089037512 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063261448 seconds)
  done (took 4.663325771 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08905099 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.144000186 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.09205616 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125658169 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084839029 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.098148533 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071845082 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126387471 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.086147038 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068389868 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.106211809 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083859765 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090551907 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074410723 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.092000998 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069441491 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.090395368 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068292648 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.092546754 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068612214 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.092535152 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076099427 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.103982923 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081480734 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092684324 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067141487 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088201619 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07336817 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.102689775 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092741247 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074877128 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093685588 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084742231 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.094491235 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067669574 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089907977 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.086412816 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.089275781 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070979055 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.086752888 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071255866 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093372125 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075962408 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105812832 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068410548 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.093956185 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069691863 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.085781688 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.083457512 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091660152 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.078182339 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.105326824 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071700905 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08846908 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073315678 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.105171417 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088370213 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068293403 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071196579 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.103514393 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065843179 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.093770121 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.102199427 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071563376 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.095046783 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083414952 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.095139917 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071700513 seconds)
  done (took 6.944905044 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078536775 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093839809 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084458511 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104784769 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09506162 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076108527 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094367942 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075560579 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09400928 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080550053 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094994095 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118053937 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069845823 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099495071 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074074844 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095146631 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074539573 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096708211 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093912235 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076016292 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.095256065 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083298736 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095436987 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102129473 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105071007 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.090582435 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074173224 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.095940454 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102135984 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075642687 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108581113 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074503253 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095696628 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102665998 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087552896 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095489723 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068379999 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09559617 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075014177 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.096513753 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068985581 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104496086 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094966378 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070507129 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095161771 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076098101 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103421163 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.107020171 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078744855 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100741251 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074922701 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104057447 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09565962 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076365772 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103640706 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.129659367 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083439488 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104982313 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095130308 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085229874 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104470853 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.111282127 seconds)
  done (took 6.577303046 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091232016 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099356482 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100186434 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064957794 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06572045 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093556416 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06653229 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086228903 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079010529 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096511786 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080552344 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093322568 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075611769 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101866837 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09224365 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076571897 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092755592 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073138681 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098744651 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071983173 seconds)
  done (took 2.616975098 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078390739 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105996192 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071039885 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094838456 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073144244 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074446615 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.09345496 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071669867 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089926517 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07154656 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099025479 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079221194 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089676336 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074762584 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.100426101 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073856129 seconds)
  done (took 2.262625002 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082276527 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.100268583 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083137763 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090070151 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066376036 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08602001 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070075663 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063846825 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.087354684 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081795569 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.090943462 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071080008 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.090104519 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067782601 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064749086 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093781005 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064270077 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.087015589 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069511449 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.104061247 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080745385 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.087502568 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070234165 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090385049 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069728629 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095084366 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.071144406 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06629836 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.089310888 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068167869 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090654547 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076497275 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.087183165 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06895673 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086970414 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067628788 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.0687832 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090907216 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071716578 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.089575356 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068281462 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087963062 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.07002315 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069526759 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085603775 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070113883 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.084457372 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075651677 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066111009 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090694511 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068655237 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.092351693 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069344362 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099530629 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.07278066 seconds)
  done (took 5.297293943 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082266657 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071069458 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085858142 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066603574 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092958228 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071927763 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071510344 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092756595 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070790873 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086897801 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071321507 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09090687 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071334679 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071518222 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091529376 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07193439 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084958448 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070447499 seconds)
  done (took 2.343405264 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075434893 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06833734 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096537576 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069035511 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089205061 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071165926 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063830075 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088139863 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067333585 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088421922 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069418718 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070970759 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088233699 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071616273 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088805811 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069738539 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070840601 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088601292 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068208865 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084987672 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071834585 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067427405 seconds)
  done (took 2.617273629 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07527353 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.094764925 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.169244402 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.111478612 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083734653 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.103493817 seconds)
  done (took 1.567996669 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094503193 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103190025 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070409221 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109298534 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078535741 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091113068 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071562339 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090004633 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080332899 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106705355 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070605001 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101649387 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100815554 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083330641 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097926036 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07681655 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092649845 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07054885 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091408737 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109714541 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070908458 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099650358 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071419882 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091206269 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071331635 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099524185 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099366415 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084118824 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091580086 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07928722 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097792299 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070103973 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101407917 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106721331 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071735015 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100448106 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069939786 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111370889 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095926959 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080304685 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09224853 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077460318 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10078935 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074653146 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101323389 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09047876 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076307816 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09074893 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071765117 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118053227 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097595901 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080134463 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09876672 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079907851 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102147111 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116401233 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10559718 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080565583 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09742015 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105245505 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079686483 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09777089 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078704845 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106559021 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098087318 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079590912 seconds)
  done (took 6.884246919 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085242367 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108828682 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071623458 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105850752 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099461956 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071728183 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091285453 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07203098 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091401938 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07083776 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133694477 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071250331 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100497662 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100220792 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070845648 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091917001 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071838118 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10121797 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069967267 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118547512 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091357716 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079774055 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101763144 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100085444 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085742681 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098734725 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069738245 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09179911 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069092306 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093437176 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097211787 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071767625 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100951343 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070904112 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100526788 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07072145 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092539162 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075676095 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093434783 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096986889 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080927554 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110596011 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070713512 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093145047 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104919622 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071414699 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091422793 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070984641 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091650536 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070617331 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107195007 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084647308 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107508323 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099612323 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071208438 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091909506 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069605438 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092303892 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070087502 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097655332 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100138311 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072146902 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11780429 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069592323 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091909296 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099941983 seconds)
  done (took 6.788213022 seconds)
done (took 134.084445754 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.223779274 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.189707459 seconds)
  done (took 1.343855346 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072232085 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.118571711 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081206556 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130108406 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.090955801 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102838273 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121178513 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082415399 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067879836 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.090475943 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068857847 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091411611 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133216252 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068227783 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.090326803 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070855518 seconds)
  done (took 2.418531073 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10655046 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.202530046 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.113756153 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067157943 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103604797 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080671523 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088478506 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080388405 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094740069 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067652433 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100842626 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07938505 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066728723 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100430682 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094221919 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.082440603 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067821658 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101184236 seconds)
  done (took 2.639440688 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109738341 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149479545 seconds)
  done (took 1.197390853 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.205346495 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.127635864 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.214959291 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.442000602 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.218286662 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.301580668 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.181329091 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.187294586 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.164199772 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.181205013 seconds)
  done (took 3.157544693 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102209283 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.176638742 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.324857733 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.143941402 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.090752056 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.119355283 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.143153254 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.113795211 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084998483 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.10701405 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.104781803 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081227233 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.120855347 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077488863 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098972898 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079054088 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125482591 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076043825 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.101402669 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07726299 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.122579968 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068733727 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.099896173 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076346345 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.102636562 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081418538 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.090537098 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068698068 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.099594237 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078801592 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.102833611 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.118667685 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.083193484 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.136919256 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.1078438 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.138804006 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078732566 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.09725519 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07674032 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097173696 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079979076 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102299228 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.107851658 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080878386 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066973403 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.100715998 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06817271 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.089259018 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083157443 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.101743246 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081751819 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.104076186 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.135534448 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.10136463 seconds)
  done (took 6.518046832 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.768590327 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.138496068 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073983009 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.837824239 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119377346 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086135243 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.760164602 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095608327 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.2378377 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.768797872 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116724532 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.080265929 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.213341697 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.22031365 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.911936512 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.288953863 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.650886129 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.110666173 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110517459 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.137258645 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.166744814 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.163163113 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.152153135 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.412812592 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099727698 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073711481 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.142014495 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101184287 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144269909 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.10852529 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077250918 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.160501325 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.252502848 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.166492992 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098972351 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.074239233 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071751035 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.175322216 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.228520318 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.198123525 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.163353371 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070820231 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07125777 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.169084849 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135365841 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070070906 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.145552478 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.179899559 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.156686654 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076182916 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.102985546 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.148057483 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.145905195 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.150235979 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.104658043 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.29692495 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.275366124 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094535595 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126539496 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.087374028 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.244719443 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105690662 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.187865472 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144567588 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.197652936 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072700261 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.764540517 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.152615599 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092001739 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.079431423 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124661675 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076574073 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.167647377 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.148627808 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.369157121 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.172390472 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076887413 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093756564 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.190083382 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086437587 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094769979 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.146616612 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098936811 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107216961 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.172482904 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.15250237 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.153094522 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.212821822 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.173236317 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.144771475 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07630936 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129834231 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099672528 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.199228181 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.202402693 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.147981814 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.193038078 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.14624591 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.168515439 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.15396251 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.080940094 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.153718121 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124902694 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105771088 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143933535 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.200636597 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.128794378 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084678648 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098186618 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.146347765 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.132219369 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108234521 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.14644727 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.155608971 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.438185833 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.152882875 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.091464022 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087457831 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.167542203 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.147029181 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076655787 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.24516023 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128658872 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.153312254 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126585647 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069927921 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124328582 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.146978297 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105423772 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126993815 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.145333858 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100712809 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.221846492 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.197610454 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.083715014 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.224135821 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.145492891 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100658011 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155938017 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124749993 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.150190342 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102958237 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.146428219 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076715522 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.752597414 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.148106212 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12787128 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098326603 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.168319174 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072756064 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10472127 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.086792663 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090032703 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776525964 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109344431 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.083358639 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.108447458 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077809607 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.126195705 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.162288928 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077771687 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.145586002 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.214000626 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078843062 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123708244 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10730317 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.145114158 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.09811306 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.086136181 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.108294343 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085568689 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.127679414 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097636188 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084366557 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.174810942 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.148653812 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.201752227 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.55799272 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074169918 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.109460947 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.208407472 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072586796 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.272044732 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144021126 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.207150786 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.147924916 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.103582898 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.27895368 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.146741168 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.170269176 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.110584067 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.157932364 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06964229 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.164460544 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.150423021 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071480683 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100421258 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.147263363 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.152024777 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.169465154 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.92938204 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093582742 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.20958167 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069939779 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.155376671 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100300153 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.080166589 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.270576938 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072767388 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.175248002 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.14938992 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075350658 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.108531878 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.826386005 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.108905863 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.143701766 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100322652 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204047258 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.147947296 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.143497981 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.144279762 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100588107 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.146360656 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.19400552 seconds)
  done (took 41.95029844 seconds)
done (took 60.155501336 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.287728888 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.198198176 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.26263267 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.153237285 seconds)
  done (took 1.941766225 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.151636928 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.108490298 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.123212088 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.089037946 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.107720608 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091182969 seconds)
  done (took 1.635203922 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.438827393 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.281402302 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244039469 seconds)
  done (took 1.928958093 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.307085615 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.235894176 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.465220959 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.312427324 seconds)
  done (took 2.39250197 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.198550407 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.120165412 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.093375191 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087821612 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.169290718 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.272304426 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.13007119 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.195654771 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.102066963 seconds)
  done (took 2.382191492 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.186302844 seconds)
done (took 11.426143078 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.221732727 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.239099873 seconds)
    (3/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.204216609 seconds)
    (4/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.180875198 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.20139298 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.184792144 seconds)
    (7/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.314068567 seconds)
    (8/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.120168245 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.091279572 seconds)
    (10/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.2554867 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.099402739 seconds)
    (12/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.224050853 seconds)
    (13/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.207066709 seconds)
    (14/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.143911934 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.081319546 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.12732905 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.150319533 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073302549 seconds)
    (19/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.110219106 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076107986 seconds)
    (21/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.242382437 seconds)
    (22/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.255250484 seconds)
    (23/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.063075507 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.191673949 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.11295313 seconds)
    (26/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.116781078 seconds)
    (27/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.082570776 seconds)
    (28/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.102621343 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.178548429 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068489554 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.194906084 seconds)
    (32/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079143071 seconds)
    (33/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.300921153 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.126138749 seconds)
    (35/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.078388696 seconds)
    (36/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.25582652 seconds)
    (37/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.153925368 seconds)
    (38/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.081916507 seconds)
    (39/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.272964806 seconds)
    (40/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.25593196 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075214699 seconds)
    (42/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.229017377 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.092514244 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.138467179 seconds)
    (45/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.079421915 seconds)
    (46/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.183180072 seconds)
    (47/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.149006328 seconds)
    (48/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.251231923 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.109781668 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.145227664 seconds)
    (51/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074177783 seconds)
    (52/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.105637623 seconds)
    (53/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.054591772 seconds)
    (54/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.189435219 seconds)
    (55/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07667617 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074990956 seconds)
    (57/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.100292864 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067314259 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.09731001 seconds)
    (60/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076286158 seconds)
    (61/309) benchmarking ("sort", Int8, false)...
    done (took 0.170326464 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069338526 seconds)
    (63/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.260842584 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.121726555 seconds)
    (65/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176601822 seconds)
    (66/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.078189634 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.098998017 seconds)
    (68/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.260919451 seconds)
    (69/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.078058951 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.09993282 seconds)
    (71/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.102952904 seconds)
    (72/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.081965894 seconds)
    (73/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.243951873 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.097095819 seconds)
    (75/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.239819417 seconds)
    (76/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.102264244 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099646212 seconds)
    (78/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.276057859 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.116159679 seconds)
    (80/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.080953647 seconds)
    (81/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.100915714 seconds)
    (82/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.24098945 seconds)
    (83/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.087756997 seconds)
    (84/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.101743359 seconds)
    (85/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.100897962 seconds)
    (86/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.077582197 seconds)
    (87/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.078218911 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.094145255 seconds)
    (89/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.085053407 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.09173398 seconds)
    (91/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070621926 seconds)
    (92/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068001305 seconds)
    (93/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.07898039 seconds)
    (94/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.250620198 seconds)
    (95/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.10347606 seconds)
    (96/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071801322 seconds)
    (97/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.095448449 seconds)
    (98/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.095464533 seconds)
    (99/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.16703139 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.162524914 seconds)
    (101/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.259581261 seconds)
    (102/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.163211621 seconds)
    (103/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055728712 seconds)
    (104/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079908015 seconds)
    (105/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.088378443 seconds)
    (106/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.05514213 seconds)
    (107/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076930369 seconds)
    (108/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.244449083 seconds)
    (109/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.05470711 seconds)
    (110/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094123755 seconds)
    (111/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.085193126 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.16251126 seconds)
    (113/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.179769672 seconds)
    (114/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07654805 seconds)
    (115/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.142473977 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.098298936 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.157307042 seconds)
    (118/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076988071 seconds)
    (119/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.095542208 seconds)
    (120/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.083251888 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.126590393 seconds)
    (122/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.063926576 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.162019217 seconds)
    (124/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.064315606 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.173892364 seconds)
    (126/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.115245322 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.172627778 seconds)
    (128/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076318813 seconds)
    (129/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.101560403 seconds)
    (130/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.111912527 seconds)
    (131/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.128728879 seconds)
    (132/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.196617341 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.151210993 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.117124917 seconds)
    (135/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073606398 seconds)
    (136/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052904545 seconds)
    (137/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.078078638 seconds)
    (138/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.100832375 seconds)
    (139/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.054347312 seconds)
    (140/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.11978568 seconds)
    (141/309) benchmarking ("sort", Bool, false)...
    done (took 0.163932702 seconds)
    (142/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076539706 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.099884469 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069839123 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.307485686 seconds)
    (146/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.223503224 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.097166499 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076699582 seconds)
    (149/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.053283613 seconds)
    (150/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.243141645 seconds)
    (151/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.054365575 seconds)
    (152/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.091971575 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.077199801 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.090989474 seconds)
    (155/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.241812468 seconds)
    (156/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.077371507 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068692639 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074684339 seconds)
    (159/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.077595291 seconds)
    (160/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.071468787 seconds)
    (161/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053717025 seconds)
    (162/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.099367371 seconds)
    (163/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.088394758 seconds)
    (164/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062670165 seconds)
    (165/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.242271226 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.077226124 seconds)
    (167/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.107288033 seconds)
    (168/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073917087 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.101717771 seconds)
    (170/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05414931 seconds)
    (171/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072800106 seconds)
    (172/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.117851045 seconds)
    (173/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.141075456 seconds)
    (174/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070007557 seconds)
    (175/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053469717 seconds)
    (176/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.070500008 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.092161872 seconds)
    (178/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082694669 seconds)
    (179/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.094343203 seconds)
    (180/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.103018338 seconds)
    (181/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.185090082 seconds)
    (182/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.053902242 seconds)
    (183/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.095515492 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09434171 seconds)
    (185/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.053388969 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.124531762 seconds)
    (187/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083577307 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.119466352 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089770106 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.112667746 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075250182 seconds)
    (192/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.126961498 seconds)
    (193/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054828308 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.077472839 seconds)
    (195/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.097966401 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.0778372 seconds)
    (197/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.099027888 seconds)
    (198/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067916097 seconds)
    (199/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074452657 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.195986357 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.077733489 seconds)
    (202/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.223848526 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.091847728 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070130016 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.198603894 seconds)
    (206/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076062587 seconds)
    (207/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.098382457 seconds)
    (208/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075165248 seconds)
    (209/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055830751 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.101529319 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077079139 seconds)
    (212/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062521512 seconds)
    (213/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.098699306 seconds)
    (214/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082496747 seconds)
    (215/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.246078921 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074331514 seconds)
    (217/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.09221792 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067802432 seconds)
    (219/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.052961315 seconds)
    (220/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.10027206 seconds)
    (221/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075223155 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095523378 seconds)
    (223/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063396302 seconds)
    (224/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071328206 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.089965546 seconds)
    (226/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055838914 seconds)
    (227/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.053202321 seconds)
    (228/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.053411137 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.166316702 seconds)
    (230/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.091817857 seconds)
    (231/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.055182099 seconds)
    (232/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.054369678 seconds)
    (233/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054196903 seconds)
    (234/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.105554973 seconds)
    (235/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076865398 seconds)
    (236/309) benchmarking ("sort", Float32, false)...
    done (took 0.155143337 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069263657 seconds)
    (238/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.091694394 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096394821 seconds)
    (240/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.06174951 seconds)
    (241/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.099475726 seconds)
    (242/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068787847 seconds)
    (243/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.076054507 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.130820768 seconds)
    (245/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.095752175 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092979336 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.115428878 seconds)
    (248/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.068334236 seconds)
    (249/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066736236 seconds)
    (250/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.079357172 seconds)
    (251/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055099814 seconds)
    (252/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.177756896 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054540704 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068117011 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.092963094 seconds)
    (256/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.091764107 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.099144099 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094739947 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.117410483 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.069196532 seconds)
    (261/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053703487 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.101880498 seconds)
    (263/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.055385154 seconds)
    (264/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069705936 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.118435219 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089509999 seconds)
    (267/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.246827829 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.091951702 seconds)
    (269/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.07084634 seconds)
    (270/309) benchmarking ("sort", Float64, false)...
    done (took 0.153239957 seconds)
    (271/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.066963468 seconds)
    (272/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.070990088 seconds)
    (273/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.169001845 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.173702475 seconds)
    (275/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.065040875 seconds)
    (276/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.053649993 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.126372128 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.076752407 seconds)
    (279/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.090756428 seconds)
    (280/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072147371 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06765061 seconds)
    (282/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.077303349 seconds)
    (283/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092988972 seconds)
    (284/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07487641 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.149843965 seconds)
    (286/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.055193809 seconds)
    (287/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.092044792 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116539312 seconds)
    (289/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.077545189 seconds)
    (290/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054549868 seconds)
    (291/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07352292 seconds)
    (292/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.078712872 seconds)
    (293/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.069939254 seconds)
    (294/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055203102 seconds)
    (295/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.077186213 seconds)
    (296/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07084542 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068596666 seconds)
    (298/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.079075673 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06987116 seconds)
    (300/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.05366104 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.09682016 seconds)
    (302/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.055045634 seconds)
    (303/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053724279 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.130977304 seconds)
    (305/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.054772316 seconds)
    (306/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.054441054 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.113201754 seconds)
    (308/309) benchmarking ("sort", BigInt, false)...
    done (took 0.21505757 seconds)
    (309/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.070302013 seconds)
  done (took 36.1935505 seconds)
done (took 37.15703872 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085744449 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118656583 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07856633 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.120503295 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084157807 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.10493921 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076802818 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.10642932 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084313415 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.109328281 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.085047585 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056230475 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102448536 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076793138 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.102540534 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095114512 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.105100851 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074865627 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.100349121 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069317087 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076687568 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.093054517 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070211116 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056426112 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.105684752 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075842011 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.100202519 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079287075 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068089974 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.093573346 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071823075 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.098780371 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068322691 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082050943 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.099312928 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07613322 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102810907 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080620044 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068806082 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.093592815 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077022996 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.091336536 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077007935 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075176241 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.09954384 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075283427 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100248901 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083428294 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122516588 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070693627 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076465212 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.107079116 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079037085 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.102306759 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072862367 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.101008501 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075109038 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120040982 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.078568287 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071025198 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.10156225 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078428816 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.097814165 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.078715403 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076450642 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103282655 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079142375 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.097884243 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079852525 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073594682 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.092019411 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076517368 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.096108474 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069376453 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077535146 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.104431074 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067492285 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.09705952 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076140416 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073803166 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.091758323 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07066105 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070504705 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.098988662 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070166974 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056843074 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.097318481 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07411194 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.091501638 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078777268 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073843421 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.099274678 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.07097914 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103211634 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068900873 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072525094 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.092717896 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068854314 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070122218 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.097441087 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068574874 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069664677 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.101321394 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06909179 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.098722161 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.084197271 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06698099 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.099587216 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067041259 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.090924732 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.08597451 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101436052 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068711196 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070423622 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.091902918 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076004472 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067649341 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.092940181 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069064182 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06785653 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.099502942 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068265452 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093407477 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077111094 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081158755 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.095399578 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072894636 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070389677 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.092963532 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07390519 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.091944657 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069593795 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070181672 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.089498335 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071269157 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068850905 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.100548544 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070514756 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.099633284 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071015882 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076319984 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.097082231 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074490239 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072920798 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092329774 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060982562 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093535875 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072907924 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070067021 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.091601977 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071100755 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067624938 seconds)
done (took 13.76407324 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069860051 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.176824492 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.132566462 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100529915 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.116388798 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068341622 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.104961636 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.134721389 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.07118795 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.133097699 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092141048 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.113675402 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.144724034 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069782472 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068500966 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.096687913 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070151883 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.118390172 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10809124 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.113971422 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.148066068 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06737283 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127117558 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093552773 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.118915792 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.124227177 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069212263 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.095333814 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073537165 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.131439889 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.09070144 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072223018 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.093076602 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.129537658 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.101831503 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.114443308 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068726585 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112163406 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069857992 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068147454 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.121376157 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.129581555 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.0847112 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.111005178 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.07240994 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.095668062 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071039579 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.113735487 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094639775 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.109864781 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.116072523 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.140378008 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.07333438 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.110995545 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068127227 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.116183885 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.086816668 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.094543244 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070468254 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071125575 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.092798226 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.07257546 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.115981949 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.098106391 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09789181 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086719696 seconds)
  done (took 7.604386877 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088744584 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.119975489 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088485857 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.111497954 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069610624 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068980439 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.094805581 seconds)
  done (took 1.669659813 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070929954 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090965202 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118766535 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091840448 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.114453414 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090090043 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105237389 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069438089 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.112859073 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070598599 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.115577741 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111708627 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.096085408 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078073442 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.119029043 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070029692 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093465513 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.09519825 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074008141 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.118936586 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073338413 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.115146437 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072220166 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069448677 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111479157 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069951104 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145644846 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07412365 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096350038 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072985359 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067891009 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.145664849 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.110143367 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080561634 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093767502 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08649876 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.10850791 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06880795 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087549494 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.10094883 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085039203 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.095382339 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.07285699 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066848496 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.099319925 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.082774522 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.094718979 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.07220299 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072774395 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.115296106 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070428627 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.1089724 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070487542 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073047337 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.096442965 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076092457 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.104190498 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.07216953 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090108467 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096405406 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087749952 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.112300428 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085289502 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111834522 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073006803 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108427699 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.086277494 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072074925 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097080192 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073592532 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.112153002 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068590233 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071086989 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.107426158 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071565147 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.11931506 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09468177 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096572208 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081222498 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069102204 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.096188981 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07012438 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.118951163 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073756216 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069065732 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099976119 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072040711 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.092121999 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069509401 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072492353 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.092826004 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072155045 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072212818 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.096308626 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072129884 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.112238043 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070782248 seconds)
  done (took 9.724194353 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073033291 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071396119 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.096967095 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072310041 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070376931 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096743419 seconds)
  done (took 1.519342012 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.103996484 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.097406188 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085151748 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.099636211 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111644211 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.110040549 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08648577 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112433888 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087718041 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.108703248 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085618687 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.112370162 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091244624 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.102476854 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086216165 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.101726834 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086355602 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10614683 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.0821351 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102024007 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.09295932 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.102424181 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077529787 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.110881399 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074218282 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.100502857 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080995029 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.107125786 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083871729 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.111407083 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.078361153 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07304502 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.100259436 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110813875 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087766161 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.100001177 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077154505 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074566939 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.107072721 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073255859 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.113074807 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07644553 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.107444557 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075305417 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.111444245 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075956975 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.100153425 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080386085 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.110464769 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074450511 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.098939168 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075803829 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.097210236 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076192868 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074584863 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11220076 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073786815 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.11099737 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075770294 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.101266538 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072920502 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09874919 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.08523093 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.099613876 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084253366 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.099426052 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074403983 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.101683776 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077880636 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.100660623 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076355123 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073036974 seconds)
  done (took 7.688710818 seconds)
done (took 29.223584254 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.668261529 seconds)
  done (took 1.699801781 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.831453456 seconds)
  done (took 1.863658719 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.559373862 seconds)
  done (took 17.599082221 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.663922091 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.847803214 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.832899952 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.161320708 seconds)
  done (took 3.542527709 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.908955104 seconds)
  done (took 1.969713111 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.248845471 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258817735 seconds)
  done (took 1.54941043 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.766554745 seconds)
  done (took 1.813307564 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.338674707 seconds)
  done (took 2.380167759 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.348195509 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.189849212 seconds)
  done (took 1.591297249 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.537872659 seconds)
  done (took 1.590443584 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.862248334 seconds)
  done (took 7.917493555 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.238389033 seconds)
  done (took 1.300754076 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.279065949 seconds)
  done (took 1.331930432 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.463876068 seconds)
  done (took 4.519866637 seconds)
done (took 51.706463104 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082669948 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084048566 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.110235397 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081596428 seconds)
  done (took 1.4081052 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082571077 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075851964 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106606893 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074494409 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.107044559 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076609956 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102979776 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.082064534 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.098995464 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078214166 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075475016 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.101404174 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078545004 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101865185 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074559004 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078386863 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.105327873 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075314829 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.104895158 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077246454 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.097851297 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079313377 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077986694 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.100296922 seconds)
  done (took 3.176380249 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.08156087 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074333239 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102588395 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074396906 seconds)
  done (took 1.397068041 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081458985 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.120003762 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094104988 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.104895783 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.098903551 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115730712 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072285071 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072076924 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.100625568 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079244665 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.096192287 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.105289943 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.118582513 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080333035 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.107785242 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069617316 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070519523 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092522758 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079604753 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.107053841 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073887348 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.104629563 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071861316 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.118818457 seconds)
  done (took 3.324303408 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081169347 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129761133 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083840455 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.116950492 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096509901 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068004131 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.105315636 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093942569 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.15638199 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068383577 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.099263471 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06842823 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.101022724 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069499984 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079188389 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.140049987 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.141802807 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073203236 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.124801548 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.07076849 seconds)
  done (took 3.029928427 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.080043045 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072493484 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093583103 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.072569481 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079265553 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.102418929 seconds)
  done (took 1.568501269 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072653409 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069647903 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.094568548 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069858949 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073714238 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095662754 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069630999 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06956432 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.096556192 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06970308 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093229846 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070738697 seconds)
  done (took 2.01218179 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.466911378 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071370923 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.096067072 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069710469 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073697606 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.094646566 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085055311 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070045587 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.120879134 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068703279 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.096101447 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071737706 seconds)
  done (took 2.454288522 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276944482 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081550711 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.34320874 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17519083 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144639646 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163622369 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132402513 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12060367 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.206729882 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146241096 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236356096 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207684246 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141329075 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198603886 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094674094 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.1371693 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217727148 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206114587 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134307554 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233626663 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189448164 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161210637 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214570321 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132304329 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113707113 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17707526 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075112082 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108898291 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243270373 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169207193 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185528184 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140910318 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126185522 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243219927 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231361759 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175846867 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166553951 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11507213 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.162876519 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.174188131 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272305539 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118925962 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202612003 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139862164 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110134643 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180933663 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150855437 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.153379592 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.142953908 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120339534 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182262011 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250761283 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.200911467 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090886644 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142213562 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146281462 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.150588437 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133680599 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258022049 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228424377 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167981624 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073151481 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126878598 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196729044 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193010931 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.150275089 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.1631192 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124983326 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178552571 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19634537 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177029839 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183904703 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.166085518 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12100314 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153343886 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203714194 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162667956 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21469561 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185844267 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07813849 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159087407 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134215273 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084865837 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.176358807 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104596197 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219250744 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130474034 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.147264422 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145276216 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142359153 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142585017 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20405701 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215178469 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136235237 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.069610173 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135106128 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156810981 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207168995 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094094963 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14204918 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153759905 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.109451099 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177533507 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078057731 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185232061 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.083290616 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159322097 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166551027 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.106472344 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15989982 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13418831 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.105021169 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198605307 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200749775 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12163731 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111031406 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210124664 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186146709 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.11140647 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.211114269 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196993991 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.132664692 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133256974 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21087292 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256815057 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094494791 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233353991 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136862999 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088150382 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.118725651 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161338528 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145511087 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.156316303 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11239612 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.162773962 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240622818 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07951105 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126222485 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175182108 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110050134 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085625569 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146198484 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132461571 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.124803666 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.106466062 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138406404 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204319366 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161179809 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138227654 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162034176 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130681826 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231619937 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094498971 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.136076387 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136392046 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07281051 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.171405204 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227929524 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108871063 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209722964 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.188665799 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109840969 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152113417 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114829769 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178909261 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108733911 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074646444 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2069682 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144119398 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119265419 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.221041487 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134285987 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.164149556 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.159939749 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168641654 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195463887 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.170612981 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138219695 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092278948 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147367437 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159889411 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.103912642 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.12480437 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.088424988 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136290734 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126704442 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087363092 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206775031 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164897781 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128084402 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14614101 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103495582 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216799943 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.081548336 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194024902 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.154042546 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100150195 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.222286276 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198718056 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199103003 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130489004 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185979335 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074002474 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105184333 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.120096822 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166955385 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086269639 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115453503 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151923432 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188827969 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192320293 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175566087 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142869196 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156951116 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197201021 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.100732566 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.120783418 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215018904 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158072467 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.163624333 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096086186 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.131640436 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184569338 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137578705 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28428416 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152594124 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159891631 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192900455 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.140759921 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108847088 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112022452 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201477282 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137637041 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191580515 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132380321 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118667566 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14325011 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.086198651 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137441198 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164142589 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153916873 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201557028 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150721285 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168027439 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106327826 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151936078 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159047797 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155799883 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067791667 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153485742 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234148228 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126800249 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152974388 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223417532 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083651461 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.15716799 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250758225 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210538201 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089698165 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142475551 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156279119 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165509033 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152683047 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204434527 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143847213 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171909297 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143947822 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089876634 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119888717 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129716549 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114255442 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.128909552 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146974233 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.15187223 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.126648421 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167389724 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145316361 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144205343 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153522025 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.13063464 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09582465 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128777547 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247360555 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15642317 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246008332 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.131706243 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.189760554 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238509655 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104650628 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083918914 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.111002852 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178789755 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114017779 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172882993 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.100625448 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137311446 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162210563 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207778636 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100586983 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.099728807 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143963441 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171499356 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14260558 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130595626 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138759463 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206244254 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.137492195 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0819535 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161096432 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137068356 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137182534 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247600714 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064016122 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128488751 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078414999 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113117115 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166544472 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226759067 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.087070927 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.162482015 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156995068 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156139755 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190909084 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107289114 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129022461 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145136883 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18729756 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190913691 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.097280165 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147185257 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166005341 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227044138 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139515128 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.127686144 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239082057 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197573292 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.234902312 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117839208 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150299517 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150680366 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120855821 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209710422 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113594886 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210593775 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114045249 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173702287 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13702716 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125831203 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164327727 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.128862253 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119850082 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205361372 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154770767 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113626124 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083147923 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14734289 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182659997 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110050219 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.106219566 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177213021 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.103428647 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174292597 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240316215 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085535501 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140229202 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129308553 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085735711 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140027428 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137369628 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11922732 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.126944152 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241719127 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.124101178 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220526011 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179192684 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148898878 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2055154 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133062358 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.669797618 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.08199166 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224538278 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152501218 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250162865 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130627733 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155394348 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144510376 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158760477 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181615861 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13969717 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.209149388 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16954746 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156363088 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111712623 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13692485 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145144087 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.094747545 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139597175 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148261787 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151018051 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133589641 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154513773 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192975321 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087897425 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128815233 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200442279 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153785846 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210454547 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17990825 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116910228 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154640088 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180173137 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113076993 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.159528257 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224312605 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142605831 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132770491 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.086860918 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.14104015 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240947325 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077280529 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232978572 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15978222 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146007833 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149064598 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.156115075 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198637867 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141267138 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162159868 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126670442 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.148464657 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15183215 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089897468 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.108725536 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140141588 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147863073 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.105098732 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136365783 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.153168419 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196036737 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.103153084 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127417573 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108385741 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211867222 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251558494 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.093177054 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115047607 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153763678 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149844915 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.15121154 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16198569 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.113589535 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087020329 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.114687029 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.117917641 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.14479293 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151665372 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136827942 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145930668 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240752384 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087945242 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.259437522 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128424864 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141792766 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075055395 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.110069361 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102956895 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129134137 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138679361 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129111284 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214743776 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.130653111 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.123755818 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098798127 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.104899031 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08782645 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194886195 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145728037 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158586736 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10282034 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.095050138 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142535597 seconds)
  done (took 74.789153658 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144235712 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.111472616 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.125955101 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.18185048 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.155672697 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247657536 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.189347231 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.232250193 seconds)
  done (took 2.527983833 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073036527 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.12568107 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106374909 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.121587315 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.096319257 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072816509 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.312857125 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.113820648 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.096627431 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.096326559 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.125481334 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.097760879 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.493945686 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070312827 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.099707456 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.091885447 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071922846 seconds)
  done (took 3.395792124 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.453775269 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.667345988 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.458624743 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.10429318 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.975213712 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.114320123 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.485517101 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.169547264 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.097738975 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.439496099 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.734263836 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159458543 seconds)
  done (took 17.997231796 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078031432 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071809959 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.115463101 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087295267 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.102221501 seconds)
  done (took 1.59276885 seconds)
done (took 119.719704678 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084381665 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.385634243 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055311011 seconds)
  done (took 1.614473492 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088512656 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088357094 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.116902317 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086474325 seconds)
  done (took 1.528413901 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078261081 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079096043 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.116471224 seconds)
  done (took 1.419145631 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.30136085 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172284582 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.093278288 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087944378 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081184738 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.108432694 seconds)
  done (took 1.424611079 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076684965 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077702439 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.10558527 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079430516 seconds)
  done (took 1.480042681 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080160024 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055166746 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056594861 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.086072856 seconds)
  done (took 1.4250843 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094614086 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.109730527 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.08576343 seconds)
  done (took 1.433900471 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.114523024 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.118102376 seconds)
  done (took 1.379357395 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085724596 seconds)
  done (took 1.22723787 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09909086 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.147182628 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.16992166 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.143404971 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.178569596 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.144890159 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.118592885 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092504761 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.109413948 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.121358625 seconds)
  done (took 2.473568084 seconds)
done (took 17.187167335 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082910559 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.492471072 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365113636 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121942973 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67275834 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.386204207 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.995521039 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122999367 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11163362 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098781135 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087032882 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.6807929 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.986070149 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.447933309 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.97417572 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326409155 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.685287956 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071730707 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097391136 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072555259 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.9787679 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099319068 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071129066 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098489934 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.656433355 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374678748 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099671741 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327297349 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09787118 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073774153 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358247186 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099917066 seconds)
  done (took 16.352426981 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074999918 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.148095825 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078632118 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086966881 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.103132659 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073041436 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.102934645 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072837884 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153781858 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071010754 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11642988 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071392544 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101247251 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073800657 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090618891 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100385862 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072644225 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098881148 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071747792 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071729363 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117961206 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070732048 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098287547 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073612688 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071068231 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.112017097 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070809663 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.098311149 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072863 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072571343 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.102613613 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072821592 seconds)
  done (took 4.01355015 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119909201 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.158627043 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078271122 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133814025 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.145010028 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074551885 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.17650272 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097053664 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156233847 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07056591 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117045205 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070869814 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.133540355 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072416045 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.119774736 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072654365 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099316138 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072840401 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07052449 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100002621 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090858022 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099040944 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.0723458 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071165849 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099526714 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084315154 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099828047 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07554555 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096544173 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074452111 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074305277 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09935976 seconds)
  done (took 4.333219889 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076393086 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077713977 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.114744982 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087013875 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099519292 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075827728 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074583092 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.100758847 seconds)
  done (took 1.856462264 seconds)
done (took 27.69208485 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083297434 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07238079 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.104713357 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084016218 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10232393 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083361464 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069704042 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.105843482 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078308256 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102241191 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07948579 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068995161 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.102242253 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070263439 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076902765 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.100001472 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082709446 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102508815 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082651379 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.110231521 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073757098 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078261667 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104553514 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082989621 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.110033277 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083785144 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.109949814 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077655526 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071124148 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.101713899 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080548948 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.116540605 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071737064 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081898911 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.099179601 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071212809 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.098209829 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071165764 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081656506 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.108270671 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073629986 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.106030876 seconds)
  done (took 4.8610943 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.094812886 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096356831 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.119824204 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064768024 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.100259862 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065769902 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.119966414 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064759168 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.064718611 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.121666381 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.0598607 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060565027 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.090578543 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.058052852 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060856123 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058456422 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.091686016 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059475517 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060334238 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.089285157 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.064450647 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056602226 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.089996524 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06317665 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058338322 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064679427 seconds)
  done (took 3.155897299 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079613353 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085334041 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119383295 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132564259 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.137524834 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077859923 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.110581813 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089110884 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.115964748 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071152171 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.100157493 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.10206141 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088682874 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.107084912 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071184157 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.114608146 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086173787 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07209242 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.106423694 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091633051 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.116587854 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081468076 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120580355 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084268638 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.0691808 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101364715 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075145654 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.111946574 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076832471 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079149223 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.10446194 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074271282 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.100783884 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.08282508 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.101854762 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073975448 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09019927 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.109144574 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079043241 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.098815753 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075619935 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072257036 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.119995874 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.115055746 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.098897983 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078421244 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.106126864 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082472183 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.07102201 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.117297001 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079314268 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097611039 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074888605 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070616405 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098742677 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085931046 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.100150738 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.075487355 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079645749 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.102433775 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08484113 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073570465 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.116635772 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070471673 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.107316914 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070697335 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.098607767 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070742486 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09309448 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10090525 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111391084 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101136672 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072412738 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.108160406 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080312354 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076029298 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.100487868 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086274609 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.108578522 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075690278 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078245765 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.102265741 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073683576 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.115882421 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073560506 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072503867 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.100569429 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078303694 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073239679 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.100043911 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084618754 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.099882715 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073803355 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.116107423 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071029251 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071717959 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.105604467 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076231892 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.096610924 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08472968 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075495051 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.100512807 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080878011 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.097954404 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074898201 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079814966 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.104494751 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069172439 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.103555799 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077833453 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070378758 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.101153166 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074338083 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.099530857 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.082076523 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07623461 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.103728748 seconds)
  done (took 11.788943733 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.202506002 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.194027372 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072930468 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.184624336 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080930083 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.11215451 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.188503279 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.102972503 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.10082462 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070913253 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.100066692 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111077706 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.132658621 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.14689407 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083746383 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070359805 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.119401333 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.140207244 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.188834691 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153487161 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.120176603 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079124013 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.102499575 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072479908 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072935085 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.110856775 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087448916 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.112159725 seconds)
  done (took 4.484887842 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087106702 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.131525398 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077961749 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.11970089 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.096741753 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.098975348 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.076971724 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072922921 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.111937247 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083001622 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.099447259 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077720862 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.104626582 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.082803623 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071009493 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10913925 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080877617 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.100533508 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075764551 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075133281 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.106995949 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.085249089 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.103594203 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070641276 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078118238 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.100670885 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068508083 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.119541193 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070901404 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.122621491 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069416098 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.106824049 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082456988 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07098554 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.100391603 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073450397 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.100361321 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.075167745 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073054677 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.098519715 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070245106 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060509315 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.098213549 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.085752879 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.1052193 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.06409579 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076961506 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.105512572 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076716124 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.095805659 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074947834 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073240471 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.103280584 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078739119 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075254886 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.105372194 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073900998 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097212275 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078995975 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072106901 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.095718892 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070560674 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074769431 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.099393531 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078969632 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.103280701 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070815602 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.0727107 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.104014793 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077958959 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072048416 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.102941906 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069211163 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.101443261 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077011073 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074762711 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.103455894 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069403361 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.097413876 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072472267 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058421511 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.098519869 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.058486943 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073676441 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.096534687 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071663107 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072992593 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.109150596 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084915051 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.101381292 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077316255 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.098091231 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071574371 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073963261 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.093673196 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074724418 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085259736 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.116894842 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071413852 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.098998973 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08412367 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.104071578 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071613255 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058444589 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.107545565 seconds)
  done (took 10.263423685 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.097087342 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.123567509 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074864119 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084872304 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.126159043 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096429499 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.107394851 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078366446 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07220249 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.117283071 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070629924 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107660652 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075568007 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079567506 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.12589309 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077319584 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.102416241 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.08094738 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.078353238 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136919819 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083597286 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.114773263 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081418528 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.100497262 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076415942 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082258139 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.128928422 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080670248 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.110282742 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085714981 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109830699 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099583706 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.084939448 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.105383891 seconds)
  done (took 4.435986079 seconds)
done (took 40.133808516 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.226435253 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.452610963 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.224045119 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.187875934 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.245036075 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.240898307 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.238565443 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.221899485 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.330551618 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.225523834 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.491002884 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.919614622 seconds)
done (took 59.17330354 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.263340598 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.367697877 seconds)
    (2/2) benchmarking "String"...
    done (took 1.49666824 seconds)
  done (took 4.029102832 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.573296623 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.209972949 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.510099039 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.223866856 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.223198892 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.645128594 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.914769772 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.100694675 seconds)
  done (took 27.991731225 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.229494326 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.60653685 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.703569785 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.70469794 seconds)
  done (took 18.410449361 seconds)
done (took 60.43337665 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.23115319 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.301057889 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.242841392 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.20823397 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.348743514 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.238734354 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.595143149 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.436885751 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.223936389 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.202754998 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.238026831 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.214387456 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.230751596 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.57627775 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.224804071 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.214202239 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.23997864 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.751356 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.600273546 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.223464479 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.242247787 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.272725706 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.224863947 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.215870367 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.226461291 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.215383479 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.219261046 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.214000893 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.438842099 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.219179763 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.306473431 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.765946992 seconds)
  done (took 192.268886884 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.214968202 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.073797932 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.185131715 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.27946397 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.567137936 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.416078787 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.348509332 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.651079593 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.234440125 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.233716448 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.444622201 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.214633375 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.511986949 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.252138489 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.22596614 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.306492727 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.42837208 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.533695744 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.230115956 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.483239666 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.224006903 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.289438491 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.232360487 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.426125525 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.24162496 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.312087968 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.218539904 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.24288189 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.403366282 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.363945617 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.220085736 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.23163674 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.779041733 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.073567733 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.236913286 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.234311832 seconds)
  done (took 149.723638325 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.488491322 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.213021062 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.214197343 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.213926143 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.242120075 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.213299797 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.721393355 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.727138875 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.711213191 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.722971121 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.216371466 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.271123835 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.43164133 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.215971114 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304812764 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.227253238 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.217058625 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.229751098 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.243517067 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.213548695 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.214279323 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.727790566 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.227914017 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.356947803 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.222035557 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.214606094 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.240578351 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.604677638 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.212071813 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.240615494 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.523064789 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.257000791 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.211288207 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.483377763 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.005506277 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317205634 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.21317956 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.239746062 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.211919986 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.474865152 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.211359517 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.21144563 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.213850995 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.775329837 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.214521864 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.704236753 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.212435624 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.074099108 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.211512516 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.211979198 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.212025884 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.364849388 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.639091417 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.214939204 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.212022933 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.213759865 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.210925897 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.211742825 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.239329737 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.3396974 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.309198741 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.21198809 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.213847028 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.239845377 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.210906375 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.345045774 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.211971291 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.766692749 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.268945942 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.437379718 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.706528697 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.216226201 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301266955 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32657162 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.21104978 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.211378708 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.210962929 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.212655218 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.314996373 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.214070158 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.577744648 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.217260712 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.212891782 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.211503496 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.269135679 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.303630678 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.211604261 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.483068716 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.213954513 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.211781982 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.853324666 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.301560404 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.211643802 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.211276427 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.210322512 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.579587709 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.701150789 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.358039398 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.215400859 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.319438722 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.212419982 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.209657857 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.584294083 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.682314942 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.770784517 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.212987714 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312355069 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.212271216 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.211733278 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.211056209 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.238649478 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.209636961 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.263920674 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.212208116 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.603002602 seconds)
  done (took 344.971021187 seconds)
done (took 689.618451436 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.89775969 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.848308538 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.979255427 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.86049804 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.846710056 seconds)
  done (took 10.583930564 seconds)
done (took 11.736092257 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.386415928 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.386877251 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.262629961 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.390900998 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237507886 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.404095726 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.370812097 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.232285392 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.307341557 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.278574431 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.308741931 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.255540101 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.235472351 seconds)
  done (took 18.208775236 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.528243737 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.523128328 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.276278553 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.514032967 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251176466 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.515022821 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.405025078 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.443036723 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.408120635 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.226317182 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.223097966 seconds)
  done (took 16.464383384 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.529342463 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.518203002 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.281680146 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.525271072 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.254287606 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.527373347 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.412159603 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.420033693 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.403780252 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.229498622 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224198495 seconds)
  done (took 16.47627111 seconds)
done (took 52.30446794 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.220108959 seconds)
  done (took 2.373174391 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.252625537 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.411096736 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.236049403 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.226861391 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.220612362 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.22168736 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.224372107 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.219945697 seconds)
  done (took 11.166746128 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.219029368 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.217031589 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.217771721 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.219125107 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.219709191 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.219549773 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.218043415 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.219521386 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.216811875 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.21907697 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.217037202 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.218601531 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.216954878 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.217547067 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.218635149 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.21802697 seconds)
  done (took 20.646120455 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.219357596 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.218972111 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.218554431 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.218402345 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.217427084 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.218647679 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.218503042 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.219004081 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.216482953 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.2180312 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.219837382 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.216248151 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.217258279 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.216564726 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.217964227 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.218017336 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.217229322 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.2179619 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.222253743 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.217685556 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.21819879 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.218283398 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.219348551 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.218648746 seconds)
  done (took 30.395120658 seconds)
done (took 65.734454356 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.084525809 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.669917446 seconds)
  done (took 8.908951356 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.221566124 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.220665811 seconds)
  done (took 3.598323048 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.222305451 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.220943988 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.221214203 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.221390858 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.220319044 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.22036655 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.221403567 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.221644745 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.22110261 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.221512083 seconds)
  done (took 13.367224308 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.221797775 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.220886241 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.218780383 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.222021347 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.22211188 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.218439813 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.222266102 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.221654591 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.221592524 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.218409118 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.221440605 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.219372705 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.222552929 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.219851263 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.221443568 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.219765641 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.219144027 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.219576514 seconds)
  done (took 23.127544576 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.223160866 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.223609166 seconds)
  done (took 3.6017508 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.220192742 seconds)
    (2/7) benchmarking "second"...
    done (took 1.219697232 seconds)
    (3/7) benchmarking "month"...
    done (took 1.220106891 seconds)
    (4/7) benchmarking "year"...
    done (took 1.220556259 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.22001004 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.220630325 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.220879554 seconds)
  done (took 9.697969531 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.223860717 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.395077058 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.478906434 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.819779378 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.224958371 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.226329532 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.096325546 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.228307197 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.227859875 seconds)
  done (took 14.078538488 seconds)
done (took 77.534558849 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.191554549 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.215853718 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.014548546 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.226491624 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.231156986 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.558330109 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.221150993 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.3344945 seconds)
done (took 37.152422544 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.227161887 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.890633929 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.897385343 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.219788842 seconds)
  done (took 11.165210501 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.210190972 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.090423219 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.2107822 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.171889469 seconds)
  done (took 17.841745471 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.781978904 seconds)
    (2/2) benchmarking "read"...
    done (took 1.548886169 seconds)
  done (took 4.489575297 seconds)
done (took 40.881390462 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225368723 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.223747283 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.22259079 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.224301557 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.221843092 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.222353542 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.22574409 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.225318671 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.225327808 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.223561504 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.223121451 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.225014144 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226499263 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22136341 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222330763 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225664122 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.221986845 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222181419 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.223219692 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.221840787 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222845192 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225419336 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.221916422 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.222765346 seconds)
  done (took 30.524641674 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.225560863 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.223768102 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.227023693 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.22617006 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.222555942 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.225375066 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.225151684 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.222251213 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.226214062 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.226121231 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223857877 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.224339898 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.226053313 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.224202468 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225798255 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.224252678 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.225923802 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222489808 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226849783 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.223760226 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.225919346 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223790743 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.223356251 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226565024 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.223840261 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.222892677 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.226148987 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.223799844 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.227122827 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.22477998 seconds)
  done (took 37.906647272 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.230646133 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.233351293 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.22680574 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.227222346 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.226821197 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.227344201 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.226854747 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.227221421 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.228025132 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.227497025 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.227298891 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.226786343 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.228311334 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.228679159 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.227946371 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.227554291 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.227255422 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.229305814 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.22792733 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.227617676 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.228394238 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.229139873 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.229602683 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.227589445 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.228237609 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.229166487 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.227470668 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.227281631 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.22917846 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.228643661 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.228648387 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.22957229 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.22945685 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.230871327 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.228549175 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.228479014 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.231651869 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.234475983 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.229322267 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.229489603 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.228520066 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.227978011 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.228852806 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.229846449 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.228774236 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.229142863 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.228906434 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.230305246 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.230039121 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.22958011 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.229889562 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.230306335 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.22848254 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.229727729 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.230594695 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.229811214 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.229238111 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.230646821 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.228692101 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.229451599 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.23070705 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.232285737 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.232507396 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.229359838 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.230617613 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.22929399 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.231200907 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.230493713 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.231474541 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.230494762 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.229886203 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.230326118 seconds)
  done (took 89.66561785 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.230374656 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.227981044 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.227853829 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.227838875 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227252476 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.231712327 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.228695553 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230192171 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227653844 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.230961181 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231098312 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.230874216 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229780683 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.23156412 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231954679 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.227560164 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.230467423 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230520702 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.23083231 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.232451435 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232375047 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.228775294 seconds)
  done (took 28.2242267 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232704363 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.230762058 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.230286559 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.232537981 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.229307609 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.233585278 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.233618082 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.233214537 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2318689 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230055048 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229989724 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23235653 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.229486946 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230366226 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229243047 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.230052309 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232886934 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.230077971 seconds)
  done (took 23.328779684 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.230796192 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.229764122 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.232572019 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.230251807 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.230107145 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.23431764 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231554211 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.232274375 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.233400921 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.231197739 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.232822254 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233210709 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.234378912 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232024485 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233630777 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.231456863 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.234357112 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2307478 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233750349 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230709113 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.231352069 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233950232 seconds)
  done (took 28.276227824 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234477979 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.233473166 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.231474763 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.23216587 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.231509455 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.233692536 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.234070411 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.231468405 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.233577778 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.234462873 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231098166 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.235976377 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.230505931 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.232576175 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.23093488 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231787295 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.233575898 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.232030361 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234207093 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.231604799 seconds)
  done (took 25.821879866 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.236806227 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.237129453 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.236888188 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236542608 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.236447026 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.236490378 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236130604 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.236426585 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235589044 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.237906284 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.236903796 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.235973814 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.236539617 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.235902918 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.23773583 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23694108 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.23715462 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.237790142 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.237495838 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.236610891 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.236591312 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23641228 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.238061852 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.237052689 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.237104865 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.235949787 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236874364 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.238298787 seconds)
  done (took 35.801231659 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237835762 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.237179345 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.234443819 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.233903573 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.234815937 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.234230223 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.233540598 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.233465379 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.235705736 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.233981435 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.237892172 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.236663272 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.237148239 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.235985536 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.238085343 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.236574893 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237015341 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.233346992 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233619123 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23456411 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.237492358 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23761041 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.237395599 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.233384878 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234760108 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.236634363 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235455786 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.234709954 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237966892 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.235296992 seconds)
  done (took 38.240966787 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.256445387 seconds)
    (2/2) benchmarking "in"...
    done (took 1.25715166 seconds)
  done (took 3.685467757 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.234563494 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237709358 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.23679188 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.235318643 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.234975188 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.237755423 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.237273529 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235704103 seconds)
  done (took 11.061791053 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.236851952 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.238623564 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.239014596 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.238193279 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.238557061 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.23770102 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244582209 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.253047189 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.238844628 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.237938243 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.243861397 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.243217728 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.240195285 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.239096464 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.237075094 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240418131 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.237890151 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.239864305 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.238889499 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.238773885 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238789722 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.239785914 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.240288797 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.238487083 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.239000131 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.249171982 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.242517056 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.239153589 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.236973983 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.242511261 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.238539219 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.237706685 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.23933742 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.238288143 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.23947121 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.239535665 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248717836 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254027774 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.245335194 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.239466307 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240351807 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.237805979 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.239909167 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.239516729 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239292586 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.24123439 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.241427671 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.237415181 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.238431181 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.242389447 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.24399767 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238788 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.237786275 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24355421 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.240723186 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248121571 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.257020399 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.243771263 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.247865671 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.249960998 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.253950554 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.247111858 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.24217007 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.240343376 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249436955 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.260385193 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248494254 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.254333255 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.238533936 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.240438952 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.248029676 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251541723 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.248203299 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.24174428 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241233542 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.241558322 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24116073 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242205227 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247582012 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.259705835 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.241232725 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242072473 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250512602 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260297632 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.241311567 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.242012494 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.241970664 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.241668207 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.241652844 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252138346 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.258137498 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.242226436 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.241613718 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.241348307 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.243478415 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.243206224 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.240748548 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243318581 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.240957002 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.243205984 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243309465 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.244518742 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.250459862 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.241912056 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.242442486 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.250112959 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.243604489 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241647869 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.24802137 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.241805325 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.2435376 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.243082526 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.24779392 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.240098784 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245384137 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.250926113 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.244365321 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.244424506 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.244090881 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.243805131 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.2512676 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.264975359 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.24450115 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.244347045 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.246832882 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.254051201 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24487851 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.247443139 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.243947637 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.240608314 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.243103246 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.245197428 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.244881212 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.244761134 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244481743 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244190182 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.242086935 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.244803809 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.244795209 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.246071222 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.245089912 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.244642237 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.245154071 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.247154462 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.245337378 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.246101609 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.252054845 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.244942965 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.245824635 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.245711543 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.242184993 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.245892691 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.24603036 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.246141351 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.245725188 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245935522 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.243742669 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.245865593 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.245856806 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.244497315 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246368141 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.246571043 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249288327 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.246604543 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.250090754 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.246521679 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.244374366 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.246129048 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.246224831 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.245972052 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.247165422 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.246488048 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.247406115 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.254403875 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.248197235 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.245525639 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.248457244 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.24758256 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246858713 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247449847 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.248686359 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.252142375 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.24887344 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.253703892 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.248000907 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247778226 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.247095271 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.247710029 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.245704422 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.246662518 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.248389987 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.253975047 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.257983718 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255350357 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.247838298 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.250256224 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.247524363 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.250077774 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.250425938 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.246700181 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.248914252 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249074422 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.246441225 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247227448 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.249604665 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.24875232 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.246925048 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.248172107 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.247244521 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.248793184 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.2490087 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.24804348 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24954855 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.246568247 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247307032 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247955223 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.247702434 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.24704768 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.246766838 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.248210437 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.248317376 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.251480473 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.254652535 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.246189799 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249787547 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251411798 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.248105607 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.245575174 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.249267426 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251279877 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.249732138 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.254595488 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.263951774 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.247945715 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256953837 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.263373927 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.248203449 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.251008631 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.249568866 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.246100438 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.251049175 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.256339989 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.249401574 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.249867151 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.249154942 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249099567 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248505548 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.25646892 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.248575851 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.249236952 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.250734637 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.25080105 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.247330216 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.250052949 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.248730165 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.251256903 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25095111 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.252340101 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.252007889 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251204794 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.251144529 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.251600374 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.251212796 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254104404 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.257187743 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.257078787 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.249112239 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.252590976 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.250944122 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.255012948 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.251459562 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.250380441 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.249738138 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261967198 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.258166326 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.255965785 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.251943668 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.250541301 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257775317 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.252398199 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.253514979 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249786234 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.250745407 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.25024641 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.250851069 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.249592623 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.251490182 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.253292412 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.252354311 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.252689746 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.25511036 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.253019427 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.25052775 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.252698966 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.253632136 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.251975618 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.25206714 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.253429972 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.253851763 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.253981718 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.251382938 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.252172067 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256914115 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.266645787 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.253659471 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.252597827 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.251074815 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.251574056 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.253181801 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.252415619 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.256037676 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.260747882 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.255578516 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.259649585 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.253000689 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.2603101 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.253839642 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.256721692 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.259076213 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.250535888 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.251661951 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.251616372 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.25347657 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259182263 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.268565275 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.254051715 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.256728591 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.254419973 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.254128863 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.252067032 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.254792159 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254920399 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.254504268 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26222108 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.269465662 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.255141653 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25409832 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.250867754 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.254433341 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.254593479 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.253101722 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256397034 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.254569345 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.254551814 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.252746387 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.254035543 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.253319792 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.254685853 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.255381757 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.25257074 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.254140649 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.260502427 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.270142601 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.258838165 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.25502103 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.261516245 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.253805909 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262286463 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.270085528 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.25299509 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.256135711 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.255887339 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.256811921 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.254209121 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.25569594 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.255025802 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.255895198 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.258305388 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.255532058 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.256688503 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.254561996 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.253632539 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.254788497 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263214351 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275219637 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.256471396 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260607015 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.253264848 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.25747269 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.259556751 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.255729567 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.254911252 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.259367367 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263895683 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.262105773 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.257230326 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.257256338 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256492988 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256426694 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.25676244 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.257356725 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.256822521 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.256384774 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.256042335 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.256685937 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259650597 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.257586488 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.25673799 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.257154508 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.256216083 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.264837464 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.257433497 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.257319411 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.257464498 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.257049933 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.256531519 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.25520375 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.257386269 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257468042 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256940285 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.25741505 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.261988057 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.261258629 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.258524409 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.256348168 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.257169418 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.257151299 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.258192014 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258300893 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.25780553 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.257738958 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.25770785 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.257223377 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.256918065 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.256281281 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.258689667 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.257731303 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257825713 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259893612 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.262062306 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25754754 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.255604703 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.257858072 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260288579 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.251730025 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.252453588 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.259713167 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254934384 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.260652205 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.259604128 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.256198121 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.254706961 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254327776 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.257680945 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.251071573 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.251843385 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.251184314 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.252476079 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.252079313 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.254219765 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252241182 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.258648842 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.252519784 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.252361058 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260807104 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.269771427 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255256456 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.255184635 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.257833363 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.253511164 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.251989209 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.254406801 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.251991664 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260979247 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.272162119 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.25480381 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25584343 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.252527364 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.254684409 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258557501 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25581584 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.254708327 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.255426519 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.254810547 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25636275 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254383071 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.2543922 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.255710556 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.254723217 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.256884055 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.260331367 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.254989068 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25549749 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.251521058 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.256645842 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256934415 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255879234 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.254529933 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.252991098 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.251713097 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257629184 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.257475231 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.258129469 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.256018304 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.254935825 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.256769153 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.253601773 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258312104 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.261263692 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.260172424 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.252269025 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.254620289 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.254740591 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.259036347 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254332968 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.254008512 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.25528449 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.256855376 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.254606851 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256288729 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.256489357 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.25776775 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26967629 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.272365078 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254441853 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.256504506 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258868641 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.256673514 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.254117444 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.255953966 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.258108396 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.25745938 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.262650429 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.256976592 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.262540519 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.270342222 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.25756682 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.258850525 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.259107227 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.260672271 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.258893408 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.255893614 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.258362144 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.259504667 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.270403313 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257038575 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.264690396 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.28233304 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.272986178 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.257012581 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.25582884 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256385658 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.257690278 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.256701702 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.257118635 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.257416463 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257958778 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.258449665 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.257527058 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260794722 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.25857572 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.258805736 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.257475679 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.256477319 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.259070537 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.256102812 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.257008867 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.259784729 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.257843487 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.258102356 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.258363797 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.258518946 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267020891 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.265074434 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.25932997 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.260694558 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.254964354 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.260002979 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.260598215 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266173739 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.265012356 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.25999894 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.258171865 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.259470451 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260982295 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.256709488 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.258412558 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.259003272 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257891585 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.258246406 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.270378755 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266475805 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.264148192 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.25652573 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258960608 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.262743634 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258906644 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.259877651 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258388443 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.260079631 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.259121311 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261167631 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.258844716 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.257601256 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.260130113 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.265035151 seconds)
  done (took 747.557294739 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.258974848 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257072969 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.257164616 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.257443407 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257454494 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257175778 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258479197 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.256972776 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.257068665 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.259091203 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.258140353 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256381086 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.257787768 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.257220607 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257284765 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.258676385 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259226733 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.255636791 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.257616647 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257921764 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.259516779 seconds)
  done (took 27.6042378 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.260083238 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.259212356 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.258696389 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.260725395 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.259546242 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.260106713 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.257950927 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2610442 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.260604495 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25879605 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.260639149 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260324577 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.258168921 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.258467618 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259241246 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260736907 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.26074213 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.258052356 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.261758103 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.259521679 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.261034942 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.258825833 seconds)
  done (took 28.910837085 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.261686722 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.26265615 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.261298884 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.259160425 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.262373032 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.260578106 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.262441154 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.260812674 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.26055823 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.261278932 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.260616992 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.262910244 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.265933224 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.264640905 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.264087808 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.262565566 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.406588954 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.262035213 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.264329486 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.262287209 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.261018759 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.267311902 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.259286909 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.259722829 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.262754508 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.262240934 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.263762993 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.262359096 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.262869602 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.263822564 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.267127083 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.262270298 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.262975962 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.265575209 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.263123362 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.264657555 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.266743208 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.263362899 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.261833847 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.263679838 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.271221797 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.279732875 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.264290468 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.26973183 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.265543263 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.263677417 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.265257019 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.269821108 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.261469689 seconds)
  done (took 63.262312247 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.265882962 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.263025522 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.26069492 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.264874044 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.266686631 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.264442674 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.264028825 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.263824256 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.262681609 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.262138416 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.265242128 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.263598241 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.263037207 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.264507472 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.265757092 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.261884905 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.261276632 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.261224408 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.261787011 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.262948675 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.261808659 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.264516981 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.264527096 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.261328515 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.265166224 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.263122788 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.262319096 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.263301225 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.263517292 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.2621244 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.265346321 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.266150817 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.266738152 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.263954108 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.26231278 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.26494087 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.26457334 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.262664014 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.265253959 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.264354066 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.265793316 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.266163148 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.266945063 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.26656508 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.263099238 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.263280754 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.26451599 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.263375569 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.263624874 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.266615387 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.266218286 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.26355497 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.266619846 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.264128285 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.267909576 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.267106053 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.264206735 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.263660641 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.267616297 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.264380667 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.264809309 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.266133839 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.263929124 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.267330177 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.266111348 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.264732831 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.263871948 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.266808624 seconds)
  done (took 87.176380746 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.268012121 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.266800803 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.267882048 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266947172 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.267082202 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.268001581 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.269069804 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.267950245 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.26721655 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.268381643 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.26781347 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.267869581 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.267200649 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.269147361 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.268332574 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.267387267 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.26904394 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.267607566 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.269052561 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268039451 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.267723482 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.267678729 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.267741275 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.268918967 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.267737544 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.269279432 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.269207219 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.266706586 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269111746 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.269178554 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.27025766 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.268031496 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.26912371 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.267716473 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.268330954 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.268951412 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.267696825 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269535643 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.26924893 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.269673801 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.268006533 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.268377934 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.270436264 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.269557576 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.269546857 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.269569822 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.270367286 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.269598097 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.269553549 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.269231834 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.269405792 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.268783318 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268416697 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.26952643 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.26866482 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.269219488 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269955199 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.26823558 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269150259 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.270215443 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.26900364 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.271858465 seconds)
  done (took 79.860236445 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270089565 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.269305474 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.267163249 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.268388466 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.269771907 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.267806353 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.2703755 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.269727511 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.271515411 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.270873027 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270363604 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.26754427 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268879488 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271218113 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.269012392 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267096077 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.267596021 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.268684102 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.273182327 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.268751651 seconds)
  done (took 26.589931435 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.268284552 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.271693582 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.268445067 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.268849715 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.270506438 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.270693245 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.272214819 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271618355 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269941752 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270915627 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.271872732 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.271389014 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269000008 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.270234695 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.273171475 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.27006579 seconds)
  done (took 21.531393721 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.269806712 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.272798282 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.273192366 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.272511558 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.270576787 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.269346852 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.273095436 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.270221469 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.2691672 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.273614774 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.272164356 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.272231021 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.272593469 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.274284387 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.270201324 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.272548462 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.270586929 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.269346 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.272499201 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.272122381 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.269314358 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.272004126 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.273033378 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.274002257 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.270918288 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.271044191 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.26982142 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.270729988 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.270293866 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.272874182 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.270671299 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.27100952 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.270931055 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.27015276 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.274124094 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.270866719 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.273733169 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.274145312 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.274845888 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.272695252 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.274726375 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.27094072 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.273729958 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.274038375 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.270837335 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.274024613 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.271519845 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.271953873 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.271774505 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.271825074 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.274353344 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.273609981 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.27426484 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.274257002 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.274690638 seconds)
  done (took 71.172177182 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.274725812 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.274607236 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.27110899 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.273861264 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.274539446 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.273109688 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.275475669 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.272750565 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.272154587 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.274418792 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.273963876 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.275026476 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.273652236 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.274706554 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.273362095 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.275186428 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.273341611 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.271729319 seconds)
  done (took 24.135049874 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.274039151 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.272915725 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.274567493 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.271706256 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.272440801 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.275560491 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272225295 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.274569116 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275370725 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.273159985 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273579706 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.275594994 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274586594 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.275836179 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.276462251 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27393735 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.276701865 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275205342 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.274385094 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.274184049 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.277127612 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.274849961 seconds)
  done (took 29.245857908 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.273787034 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.273451986 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.289304274 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.311422613 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.302165159 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.273789677 seconds)
  done (took 8.931076687 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274447904 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275719076 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273378271 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277125188 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275485067 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272551647 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2730354 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273492276 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276046896 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273608823 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273370434 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276221138 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276793249 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272582251 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276058823 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276622517 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274996016 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274489159 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274386368 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275725084 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275000302 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276351668 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275210933 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273177767 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273646589 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273133914 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279112933 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276455341 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274326075 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277393167 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276014779 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275429741 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277358516 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274609012 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279402994 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276252659 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275016615 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277714514 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276660167 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275875888 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.276960242 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277637164 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277995049 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274955215 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278164666 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276051096 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276333155 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276037474 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277714069 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278363816 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278062863 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276817176 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277251177 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278967097 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279122179 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278049122 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275532558 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276783727 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279391874 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275822002 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27589745 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278034628 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275966038 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276101392 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277501034 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275471271 seconds)
  done (took 85.429871778 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276967261 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277341233 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27645206 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277556029 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276667277 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277140381 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275955374 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277462406 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275819121 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277935513 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279832471 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27645829 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277585782 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276387464 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278781169 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277005883 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277370516 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27676694 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278462931 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280219432 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277134941 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27562908 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278265742 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276456078 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279038342 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279890288 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279439615 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277970755 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279329418 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278179869 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276734338 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278043727 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278821483 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.278428107 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277291091 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278522822 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277713749 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278866204 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278831029 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281179224 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279459776 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280708633 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278330657 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278955926 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278694744 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277878782 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27863481 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279705072 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279681605 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279394691 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281710323 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279518517 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280361527 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279378081 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278283563 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279426191 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27914184 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280561985 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280688015 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281499881 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280163137 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279586722 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282169162 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279719722 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28063231 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281049669 seconds)
  done (took 85.602699041 seconds)
done (took 1740.706515362 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.279712815 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.389002552 seconds)
  done (took 13.883731764 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.439354668 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.393573824 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.274222161 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.303445567 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.271444953 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.269848861 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.289470276 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.269080084 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.268860749 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.268031593 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.268719515 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.460087944 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.320709775 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.265201439 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.266220863 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.360384101 seconds)
  done (took 42.206945793 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.28803935 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.272744785 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.37526516 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.285962537 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.290087947 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.441142719 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.323686846 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.262755687 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.419975422 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.29639461 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.66663595 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.28544764 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.267661937 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.261219229 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.280903391 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.431350931 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.487386102 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.671286263 seconds)
  done (took 28.810082765 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.658063367 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.26465824 seconds)
  done (took 9.117443979 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.259705547 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.277636232 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.293149968 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.261689796 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.252933916 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.261106561 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.27624891 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.308308048 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.291645728 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.287069922 seconds)
  done (took 63.964521188 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.263384266 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.244361164 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.244691478 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.242505183 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.23607394 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.236263474 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.240679089 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.239730993 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.47286087 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.356113328 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.255493677 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.246100218 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.239477554 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.242372821 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.240363736 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.274246938 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.362749561 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.235634196 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.237040994 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.243700651 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.239191974 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.350147104 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.279189833 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.235897488 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.35215082 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.463716176 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.24272867 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.246555688 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.347703923 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.235532419 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.236639359 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.236787128 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.239048765 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.803402104 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.764732235 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.242442036 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.25848359 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.243744424 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.234533618 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.362799779 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.235268261 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.240188589 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.227802707 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.74441361 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.385396802 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.34104961 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.336450264 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.236318538 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.237152505 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.291515131 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.234005685 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.236242669 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.260327655 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.956826503 seconds)
  done (took 105.112230146 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.26611519 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.715291623 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.395160595 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.247431553 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.993563672 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.876127466 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.225144189 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.479460986 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.273672345 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.224878791 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.540789409 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.695361878 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.231111022 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.249314669 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.890900256 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.225069064 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.225212101 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.989162297 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.22612193 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.224531954 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.632309769 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.239890653 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.224977614 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.392389984 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.26409184 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.65661474 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.522325501 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.499880012 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.227093309 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.224940275 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.658372774 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.227925696 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.266716077 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.22722713 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.484405667 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.5469359 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.52766883 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.225094419 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.270609911 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.228525796 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.256595734 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.653103945 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.536681848 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.225755854 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.239376724 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.657486349 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.226446481 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.235348754 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.231687103 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.424454478 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.206281691 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.227023975 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.550276566 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.229881062 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.571870715 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.237523336 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.315281906 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.68418071 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.225071876 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.188708081 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.248880253 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.22751076 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.233090761 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.22958273 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.227168789 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.542425895 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.64631635 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.228087611 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.543006655 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.654010995 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.22919627 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.719147184 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.137791918 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.2408184 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.307516747 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.226876839 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.8123496 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.684072897 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.239927787 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.226862682 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.52783964 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.227158965 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.532039527 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.239573604 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.228228408 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.642058295 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.245818495 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.28818016 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.227884886 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.240451753 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.887592263 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.232249018 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.481973694 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.24872303 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.227456749 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.227856279 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.234485991 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.227341884 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.227810615 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.234245761 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.720211795 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.235259598 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.502934082 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.247715155 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.228363035 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.229834763 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.2320348 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.229321996 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.44379224 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.697911799 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.2358938 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.228448152 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.228982753 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.234444564 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.366519977 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.235091497 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.504252256 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.232194671 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.228699835 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.229555602 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.929254325 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.257738658 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.228944789 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.24351576 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.069843007 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.440258028 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.246469892 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.229940085 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.230013616 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.242092016 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.458296265 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.229871048 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.256661356 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.230900661 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.900983237 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.238460118 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.247804564 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.881512123 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.238687343 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.063757783 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.248837084 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.231949436 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.528496407 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.493457977 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.276523554 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.231836636 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.231057724 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.895370274 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.255064158 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.377148709 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.249808366 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.251897619 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.428588823 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.657698071 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.232497767 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.812475201 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.231689864 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.444218127 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.231026061 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.541410539 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.686699164 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.234426578 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.230840341 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.9013759 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.898522149 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.887162066 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.232129809 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.548494413 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.203536499 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.682889124 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.231494883 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.232136538 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.685435964 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.231368284 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.237831507 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.231128676 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.230843889 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.38068425 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.405215686 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.892810912 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.235959293 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.660350059 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.240488798 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.232352301 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.24739284 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.233978006 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.586376822 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.32631941 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.233278794 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.263088852 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.233320305 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.236844838 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.673772161 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.175322588 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.234467862 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.385030618 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.828519862 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.234317758 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.233251459 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.874201957 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.525807312 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.708471491 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.275665862 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.510592114 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.234892868 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.27013689 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.926487856 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.250735896 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.675669414 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.237009736 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.232275443 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.792801247 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.233520966 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.604529957 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.233936951 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.234941706 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.730955354 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.233642659 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.23507098 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.468301927 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.2339793 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.478935544 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.233305995 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.275897391 seconds)
  done (took 1086.955182084 seconds)
done (took 1351.266022316 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.234818526 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.234752656 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.222453386 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.236725933 seconds)
  done (took 26.104230218 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.24450595 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.24028107 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.241112665 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.239082121 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.241878868 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.240316871 seconds)
  done (took 8.621644763 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.316616986 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.235715742 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.235856492 seconds)
  done (took 18.963404058 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.43977342 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.426877827 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.576438404 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.247721534 seconds)
  done (took 9.866232252 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.242614155 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.241795447 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.242266401 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.243292778 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.245116558 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.246538669 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.24298164 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.243362276 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.246793394 seconds)
  done (took 12.369599783 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.817323071 seconds)
done (took 81.918569426 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.791512666 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.236677309 seconds)
    (3/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.977239459 seconds)
    (4/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.432231753 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.101455228 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.237347212 seconds)
    (7/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.51909195 seconds)
    (8/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.936809094 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.033224069 seconds)
    (10/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.52929288 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.474732167 seconds)
    (12/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.429462333 seconds)
    (13/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.237256485 seconds)
    (14/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.50363706 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.277963245 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.235821518 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.017237636 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.671027827 seconds)
    (19/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.510850814 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.263902877 seconds)
    (21/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.236442991 seconds)
    (22/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.927053758 seconds)
    (23/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.513545879 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.224179331 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.631783548 seconds)
    (26/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.259491654 seconds)
    (27/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.246019361 seconds)
    (28/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.237854923 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.393347995 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.080212386 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.318814149 seconds)
    (32/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.24916827 seconds)
    (33/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.027633175 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.704985415 seconds)
    (35/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.333967517 seconds)
    (36/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.017974388 seconds)
    (37/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.239437877 seconds)
    (38/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.361787173 seconds)
    (39/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.246958765 seconds)
    (40/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.547753029 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.341934646 seconds)
    (42/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.222440913 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.64857356 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.249694661 seconds)
    (45/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.265477094 seconds)
    (46/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.416417532 seconds)
    (47/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.241815136 seconds)
    (48/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.415346668 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.964541935 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.310965181 seconds)
    (51/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.361826683 seconds)
    (52/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.261757496 seconds)
    (53/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.435300671 seconds)
    (54/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.224466694 seconds)
    (55/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.264412964 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.349870509 seconds)
    (57/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.26411964 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.777344974 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.500737702 seconds)
    (60/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.246257978 seconds)
    (61/309) benchmarking ("sort", Int8, false)...
    done (took 4.318498287 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.29573757 seconds)
    (63/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.223536898 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.283409523 seconds)
    (65/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.237625279 seconds)
    (66/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.436238797 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.051198427 seconds)
    (68/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.224066753 seconds)
    (69/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.246120865 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.577679151 seconds)
    (71/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.250813803 seconds)
    (72/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.363683489 seconds)
    (73/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.801824275 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.447300202 seconds)
    (75/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.502450752 seconds)
    (76/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.368231192 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.288229797 seconds)
    (78/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.702075712 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.002648119 seconds)
    (80/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.249051683 seconds)
    (81/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.247949128 seconds)
    (82/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.485976613 seconds)
    (83/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.442524641 seconds)
    (84/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.445921054 seconds)
    (85/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.265434507 seconds)
    (86/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.362992386 seconds)
    (87/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.246075959 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.382014521 seconds)
    (89/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.940495251 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.105222332 seconds)
    (91/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.325480509 seconds)
    (92/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.238752239 seconds)
    (93/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.247540717 seconds)
    (94/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.22738791 seconds)
    (95/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.805828629 seconds)
    (96/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.307761183 seconds)
    (97/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.262887626 seconds)
    (98/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.240655048 seconds)
    (99/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.267270458 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.242707781 seconds)
    (101/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.491618039 seconds)
    (102/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.527116477 seconds)
    (103/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.258239393 seconds)
    (104/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.328416091 seconds)
    (105/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.405886183 seconds)
    (106/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.640781262 seconds)
    (107/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.325447724 seconds)
    (108/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.59007491 seconds)
    (109/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.867350957 seconds)
    (110/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.322297279 seconds)
    (111/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.857618013 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.241047528 seconds)
    (113/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.078912719 seconds)
    (114/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.266981305 seconds)
    (115/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.918681363 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.463422975 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.360282929 seconds)
    (118/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.250472661 seconds)
    (119/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.248027848 seconds)
    (120/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.405306724 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.234855029 seconds)
    (122/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.612772277 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.34979116 seconds)
    (124/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.600753394 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.243021553 seconds)
    (126/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.976045234 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.349578063 seconds)
    (128/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.28058007 seconds)
    (129/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.367934844 seconds)
    (130/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.435353419 seconds)
    (131/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.001246393 seconds)
    (132/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.240150336 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.263338679 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.246857549 seconds)
    (135/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.319837783 seconds)
    (136/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.496610364 seconds)
    (137/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.259256197 seconds)
    (138/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.436520513 seconds)
    (139/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.863524186 seconds)
    (140/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.283160161 seconds)
    (141/309) benchmarking ("sort", Bool, false)...
    done (took 1.749320828 seconds)
    (142/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.264861352 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.519202827 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.242567928 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.581719165 seconds)
    (146/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.524684461 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.935412011 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.497356591 seconds)
    (149/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.963443587 seconds)
    (150/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.398663951 seconds)
    (151/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.580065564 seconds)
    (152/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.5408383 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.369977903 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.637501827 seconds)
    (155/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.033497527 seconds)
    (156/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.464985362 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.938776631 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.268768473 seconds)
    (159/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.411534627 seconds)
    (160/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.365327821 seconds)
    (161/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.843584657 seconds)
    (162/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.269077468 seconds)
    (163/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.444568527 seconds)
    (164/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.565202036 seconds)
    (165/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.38983776 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.227445981 seconds)
    (167/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.231485448 seconds)
    (168/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.367837628 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.264741943 seconds)
    (170/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.575713691 seconds)
    (171/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.940394349 seconds)
    (172/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.326425433 seconds)
    (173/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.511562711 seconds)
    (174/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.489561361 seconds)
    (175/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.510513719 seconds)
    (176/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.71975244 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.786618845 seconds)
    (178/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.946076877 seconds)
    (179/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.316349173 seconds)
    (180/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.014737903 seconds)
    (181/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.720352108 seconds)
    (182/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.602498579 seconds)
    (183/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.329151736 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.645898869 seconds)
    (185/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.663016114 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.309198881 seconds)
    (187/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.455028647 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.425997794 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.535723482 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.559736212 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.269896657 seconds)
    (192/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.592550681 seconds)
    (193/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.235411008 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.84585502 seconds)
    (195/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.328339926 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.285522684 seconds)
    (197/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.2693779 seconds)
    (198/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.66149151 seconds)
    (199/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.270070679 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.244064653 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.251179158 seconds)
    (202/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.783108795 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.30300492 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.243777496 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.245101443 seconds)
    (206/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.289664686 seconds)
    (207/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.263246988 seconds)
    (208/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.269414366 seconds)
    (209/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.238980655 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.876627647 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.452737123 seconds)
    (212/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.594866489 seconds)
    (213/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.276961055 seconds)
    (214/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.314808422 seconds)
    (215/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.417405161 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.026060454 seconds)
    (217/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.250658918 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.025041752 seconds)
    (219/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.843485666 seconds)
    (220/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.340079172 seconds)
    (221/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.270412728 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.266752652 seconds)
    (223/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.589583033 seconds)
    (224/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.311594145 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.285428236 seconds)
    (226/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.830162603 seconds)
    (227/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.777419311 seconds)
    (228/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.416151701 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.244877674 seconds)
    (230/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.261844016 seconds)
    (231/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.057306921 seconds)
    (232/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.77513986 seconds)
    (233/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.726028678 seconds)
    (234/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.315301277 seconds)
    (235/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.297351575 seconds)
    (236/309) benchmarking ("sort", Float32, false)...
    done (took 5.215933936 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.245629491 seconds)
    (238/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.965397462 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.073453891 seconds)
    (240/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.590284253 seconds)
    (241/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.272894539 seconds)
    (242/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.245727597 seconds)
    (243/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.854365281 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.245548038 seconds)
    (245/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.309631827 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.56988085 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.562670428 seconds)
    (248/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.330544233 seconds)
    (249/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.962847782 seconds)
    (250/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.239228118 seconds)
    (251/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.064268499 seconds)
    (252/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.779993735 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.277827111 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.461020513 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.808205527 seconds)
    (256/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.263644633 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.272442031 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.439491456 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.08853128 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.652777605 seconds)
    (261/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.640877808 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.630719917 seconds)
    (263/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.752948483 seconds)
    (264/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.807287387 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.534067121 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.609936862 seconds)
    (267/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.453809313 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.859506334 seconds)
    (269/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.254616072 seconds)
    (270/309) benchmarking ("sort", Float64, false)...
    done (took 5.49228155 seconds)
    (271/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.235710394 seconds)
    (272/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.370046536 seconds)
    (273/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.247623694 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.247448772 seconds)
    (275/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.941196668 seconds)
    (276/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.776824315 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.289632678 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.334333836 seconds)
    (279/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.329565212 seconds)
    (280/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.310882863 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.364561873 seconds)
    (282/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.598299787 seconds)
    (283/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.262953938 seconds)
    (284/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.963932133 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.27288647 seconds)
    (286/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.234114865 seconds)
    (287/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.366585706 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.323415874 seconds)
    (289/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.388692371 seconds)
    (290/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.644739985 seconds)
    (291/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.290246495 seconds)
    (292/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.264437841 seconds)
    (293/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.256924441 seconds)
    (294/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.769346391 seconds)
    (295/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.690672364 seconds)
    (296/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.3915771 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.275683045 seconds)
    (298/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.709044649 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.115742034 seconds)
    (300/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.712479841 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.272181481 seconds)
    (302/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.311672012 seconds)
    (303/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.884088082 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.321648168 seconds)
    (305/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.82921973 seconds)
    (306/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.538672429 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.612502599 seconds)
    (308/309) benchmarking ("sort", BigInt, false)...
    done (took 6.265371768 seconds)
    (309/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.34686735 seconds)
  done (took 883.050715124 seconds)
done (took 884.228905658 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.281386102 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.275828728 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.25861754 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.280842936 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.371600157 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.289351272 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.269520561 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.261084604 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.30819179 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.308750232 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.258289488 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.287177401 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.260623559 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.260070374 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.259222799 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.273513098 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.226114791 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.260167819 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.277149493 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.269650088 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.27647899 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.259752414 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.309022985 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.287745853 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.264169478 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.26349476 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.263035332 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.278869489 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.371511679 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.263609773 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.263290365 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.271469468 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.227846307 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.259441153 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.255393051 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.279946288 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.272644822 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.270350358 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.26439643 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.292279145 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.599839534 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.260425249 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.26245926 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.261448086 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.261475143 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.265469154 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.263052146 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.26817821 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.273691324 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.275635088 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.589732885 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.276559481 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.264039554 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.262500875 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.272368982 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.262539154 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.265371418 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.277790816 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.281592468 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.278623915 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.216909637 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.266024442 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.264977517 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.278882404 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.269669158 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.631085159 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.257734828 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.266406004 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.610822582 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.268473743 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.646127472 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.273300429 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.264195586 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.278125191 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.295225777 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.234271111 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.257887291 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.26283669 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.270718194 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.261830664 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.273032998 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.276679764 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.267869904 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.2639079 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.277498947 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.292223282 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.27402392 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.265208155 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.272894197 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.282617046 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.271027955 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.274790493 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.266696696 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.259909765 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.273772378 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.268020161 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.266445778 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.267086163 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.267896646 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.275531853 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.608741385 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.280976154 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.260576995 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.260952107 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.263469932 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.278027603 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.610579718 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.265254562 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.286890288 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.311592566 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.266684369 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.22534418 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.267702769 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.281257855 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.273986411 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.267745066 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.260305833 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.22391121 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.599570679 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.279703877 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.266079684 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.263331871 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.281377878 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.266869338 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.262426263 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.239936648 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.266790796 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.279830866 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.386422889 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.276541813 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.297676288 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.264049501 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.269072297 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.294045649 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.282461808 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.297892851 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.269322455 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.282184473 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.28251802 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.263784049 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.277933623 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.277330264 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.267607377 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.272750302 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.261029779 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.29857236 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.279425272 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.279553655 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.28849042 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.387428432 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.264693308 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.227021208 seconds)
done (took 213.413233727 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.325191603 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.258538504 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.348067682 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.263737027 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.362896751 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.359911536 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.260927351 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.261281614 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.260857932 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.642373948 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.26145497 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.260672066 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.262669663 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.261348123 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.345347818 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.263480858 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.261094989 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.606825146 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.263710555 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.333890598 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.262640136 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.260657797 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.263708288 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.648507879 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.259386589 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.258913526 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.33554935 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.264681475 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.612616367 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.257086861 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.260523668 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.612044692 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.353543209 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.281593245 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.274074744 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.270608828 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.364444965 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.280333899 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.34455956 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.345174449 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.349688668 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.303818796 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.259243821 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.264537474 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.265763724 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.26558791 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.263411786 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.291344681 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.260840446 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.26349362 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.607953557 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.274684246 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.26363813 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.263564589 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.262889088 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.294560415 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.262976822 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.265941048 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.354290642 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.265727839 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.326945215 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.649972653 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.645627113 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.266150026 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.265110618 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.264314203 seconds)
  done (took 143.795408107 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.331973625 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.337817743 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.373318063 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.266703267 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.315965806 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.377366423 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.266536857 seconds)
  done (took 10.469088386 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.272907814 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.267829118 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.316782545 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.317300748 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.266008657 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.413397655 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.268316415 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.278317158 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.265666956 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.319913912 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.26769722 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.268725668 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.273811133 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.267986493 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.315412891 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.279273945 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.382057049 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.267672501 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.268002731 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.419559369 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.265048733 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.274134723 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.318802104 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.278721012 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.267748995 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.27377013 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.832105982 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.268508016 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.265334013 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.267728753 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.264837085 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.305061496 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.268752014 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.261964888 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.265188168 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.383108485 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.267992187 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.265612149 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.269127194 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.265985655 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.267475009 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.268468637 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.268416671 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.265640377 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.268455241 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.291307382 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.268704656 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.268214908 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.268092367 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.268901829 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.319212894 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.269060577 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.265775185 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.266292452 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.323741738 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.275847326 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.269850223 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.26708557 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.269619239 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.266704859 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.420836041 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.317724188 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.269593591 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.316373762 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.26932071 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.270141233 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.269613383 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.269987993 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.323331106 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.269280262 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.317323145 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.266862585 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.423468517 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.293224228 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.270599938 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.271806903 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.272589131 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.26964346 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.265222092 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.276021162 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.2676858 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.271870284 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.275898971 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.267950978 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.268329321 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.372333583 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.378813675 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.267863504 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.282885268 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.277176203 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.267846258 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.323364565 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.270431714 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.267971384 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.321966917 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.385541708 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.324196056 seconds)
  done (took 146.841527747 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.275274967 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.278922634 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.271507577 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.287070002 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.270803385 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.271276357 seconds)
  done (took 8.858322183 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.273940465 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.271677641 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.271156459 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.27154906 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.271825919 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.271036136 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.272737497 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.272760243 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.274378396 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.271422676 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.272953746 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.274170293 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.27244495 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.270742603 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.272709218 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.272443843 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.272741256 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.270371787 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.271772998 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.272269238 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.376515638 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.272517449 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.271538964 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.273287908 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.275466838 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.271540477 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.280213052 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.271858006 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.272310515 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.279670748 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.274694094 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.271930909 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.273245394 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.276862791 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.276012103 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.273457904 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.275644484 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.273839773 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.27090087 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.272055985 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.27379279 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.272267343 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.272749295 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.273521908 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.27432915 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.277513759 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.277772404 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.281633041 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.273651808 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.274223571 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.274440456 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.273277735 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.273387903 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.274251266 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.27500259 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.276504683 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.277880189 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.274136262 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.274323452 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.274789824 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.274401164 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.274009419 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.275015031 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.277191478 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.271565908 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.275523576 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.274595085 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.277423164 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.274438651 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.273841758 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.275220368 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.270555122 seconds)
  done (took 94.028692975 seconds)
done (took 405.190497385 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.461023452 seconds)
  done (took 7.668421826 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.285114567 seconds)
  done (took 7.492374906 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.82891146 seconds)
  done (took 21.043909985 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.287313195 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.286914332 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.297918671 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.276987832 seconds)
  done (took 26.356826017 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.431640233 seconds)
  done (took 7.638691122 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.277290988 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.268859741 seconds)
  done (took 13.754205949 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.665342076 seconds)
  done (took 7.873588751 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.392129341 seconds)
  done (took 7.607067718 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.287715786 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.296383452 seconds)
  done (took 14.031813088 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.252819971 seconds)
  done (took 7.460589989 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.010771528 seconds)
  done (took 8.218861595 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.273876141 seconds)
  done (took 7.482388062 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.300726931 seconds)
  done (took 7.508602407 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.944794392 seconds)
  done (took 9.152656051 seconds)
done (took 154.498095322 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.268629566 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.271239125 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.270771533 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.268496019 seconds)
  done (took 26.286979183 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.308935305 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.308968147 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.309353472 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.319638707 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.312045348 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.308541505 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.301428192 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.301919517 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.319715081 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.312477187 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.311071729 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.310978593 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.309074479 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.300978652 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.31103617 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.310914955 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.319363599 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.310948251 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.301782903 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.312448401 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.276894579 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.319436342 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.312756476 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.277142368 seconds)
  done (took 32.596743328 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.472288157 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.347447584 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.429001967 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.329023082 seconds)
  done (took 6.786900431 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.327982759 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.328622706 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.340567012 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.380132645 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.413006464 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.339969921 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.304586113 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.299333691 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.284335876 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.330027944 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.405054157 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.34603728 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.428654719 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.276494809 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.475312793 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.277067162 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.276284392 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.328730456 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.38077334 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.392673598 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.277123129 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.328764345 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.332232779 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.346147421 seconds)
  done (took 33.430374833 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.276117886 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.284278314 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.282740084 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.276717783 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.277030109 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.277253851 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.28298005 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.279301977 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.298203576 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.278054975 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.27712792 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.276848985 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.276940554 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.277211965 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.277387721 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.290517966 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.290260504 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.278015466 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.281071065 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.283706312 seconds)
  done (took 26.833156434 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.271325127 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.126049056 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.622586463 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.527880481 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.272351851 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.273526516 seconds)
  done (took 27.305503484 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.344224005 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.472842347 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.277736572 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.607681688 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.682830543 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.278496627 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.277937056 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.506491699 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.787057659 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.78512801 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.332612197 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.341181467 seconds)
  done (took 18.905851801 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.275311514 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.274196299 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.27391567 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.289623313 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.329713715 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.283463672 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.28535306 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.271557087 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.331812459 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.334949661 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.28222603 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.3317818 seconds)
  done (took 36.776643274 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360267398 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.319611959 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.105382067 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.497518411 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.992642854 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.483118677 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.042839564 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.718571991 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.275884581 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.544817034 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.257312799 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372583181 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.526111181 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271124008 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.274364211 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.239343938 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.496383931 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.744633635 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274589458 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.13095688 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296747711 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.271206193 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.227235269 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.299432868 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.48375574 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.24963161 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.532285008 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.046593126 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543498943 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.283021764 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282190939 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.272013751 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546328786 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896121241 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.368157884 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282377157 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.038609649 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.900902506 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.259396775 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.142086496 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.05954856 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.275125733 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283324739 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27355044 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.207420125 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.274750184 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.728376653 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.278358322 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.984267717 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.274182571 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.283944338 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.368251282 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.27672093 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.264183123 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.386660676 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.279443968 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.270269741 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279232189 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840712527 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.60110695 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.279314026 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.209739275 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.720759519 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.211555972 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892219418 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.377219127 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.276681123 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.27766261 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208621679 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.18558924 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.290248321 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421582835 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.29996091 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.924788951 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968648656 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.286518421 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.204856916 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.809280413 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.278463851 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.21061605 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.501107223 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.050317318 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21040587 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.219935737 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.20885194 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939362185 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282501572 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.600234592 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.282875781 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.724656288 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.285676843 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291295887 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298257389 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.4981854 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.159687335 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274967886 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.036614616 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418208697 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296640111 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.724761237 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.20931643 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.278425944 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.530170994 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.487445411 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.284311508 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.234702603 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.484558314 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277239767 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.292884674 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.288231481 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.288429551 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.849793192 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.288330852 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.604483664 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293117247 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.051108855 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978902621 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.284443397 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.379066695 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.276805444 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.524868062 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.002365133 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.174587575 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344139707 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.28172781 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.277401045 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.238985659 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.126888667 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.181353612 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.278800114 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.287706559 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.288641009 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.277595054 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.222565195 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.275457946 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.2917376 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.054579105 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.500461852 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.276963066 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555523332 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211515455 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425361794 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.286103715 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.49999938 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.435789932 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.278261788 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.538399457 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277421708 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.280240317 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.290790336 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296338148 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374658876 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299542236 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.279440087 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.535190336 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.282135573 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.282867845 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.235643896 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.058282552 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286726286 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.284115281 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.177783992 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854523905 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256963708 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.282350311 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.166732937 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.292189693 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346907486 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.285440492 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.289285228 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.980863153 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.169157619 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.283815808 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.276450926 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.51678768 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.289209798 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.2279246 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359866437 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.482963509 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.858683303 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.293884802 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.214661777 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.990105431 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.973194877 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280096071 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.46889197 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.279240093 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288256985 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.290325243 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.856694607 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.857696121 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282892304 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.159723397 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.287001139 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.290398413 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.286146084 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281085049 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.95781428 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.623551441 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.287083416 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.291452776 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424321865 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.294629935 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.214565806 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.797818692 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.286587128 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.28066453 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.055939907 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314726488 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.162037049 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.756168916 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.540568054 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.035391908 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.290935369 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.251300258 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.312303356 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.306128139 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.074613741 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297241971 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.303352348 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291501567 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.2915235 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.16903577 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.720114405 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848369392 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991568063 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807814368 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.160603054 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.283181629 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.177234573 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.736429831 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.215260388 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.938528181 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.460270673 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.735690238 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.225897105 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.488719443 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.437803312 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.007665522 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.292254212 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.509410243 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.153143398 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.084864855 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.307565227 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.494400236 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317377421 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.284288433 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.21370904 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.577830883 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546794298 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.089078171 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360571219 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.734880401 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.088681637 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.075463024 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.282387864 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.549493793 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448702189 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.827412484 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.669735235 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.290730914 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.285249387 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.756489254 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.286197628 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.809564864 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906640018 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.291804616 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.491225886 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.218214347 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.294437791 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.294068788 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.285223801 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.467891892 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.295592478 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.538432912 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.293828071 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217902299 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.28492698 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812955652 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.138584156 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.289743906 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.284270073 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992624381 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.293024221 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557032324 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.295355613 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.962040201 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288981276 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.219865307 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21900855 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.977881132 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.295326356 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260830556 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760966405 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.715656925 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.343893733 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.317066948 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129804188 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.540544476 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.299619935 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.868153683 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.510900163 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.146762704 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307068342 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.386381752 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.132366528 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.285061077 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.167300293 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.522214643 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.189286844 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.510304737 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.124431985 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.190921098 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.284147856 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.497573966 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.168008723 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.296649229 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517730801 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.995705534 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.30490063 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992009957 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310438221 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.285740489 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.311281503 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.731875931 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.292899124 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356135576 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.297325794 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.297061272 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.297140274 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452006971 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286483705 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.287455274 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.301186552 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381374292 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.653952989 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.968150094 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.061145374 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875252795 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011010902 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.874471471 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.300222119 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.28691071 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287815499 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2223568 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43609783 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.813408908 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.561045402 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418002147 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.799655262 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308772014 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.153386203 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.306926272 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5011539 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562658848 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.158440679 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287696712 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.949050121 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.169831449 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.298430895 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.499662992 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.769327483 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827928019 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404459697 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.301063111 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.742013139 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.561539756 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.378670921 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.289168121 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.879612096 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.295198914 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.572322534 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.295606869 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28925767 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435629732 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.299016139 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917191285 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.297940678 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.445047729 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.062981907 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.195372138 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.544766312 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.718144664 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.299707749 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877423931 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.992121652 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553035054 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358637309 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.300670853 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.392094741 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435184593 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.287168692 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.170943218 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.289450957 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132653359 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.999651777 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.299252371 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.879450758 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.552522679 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.288243328 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.293580051 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312660666 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.298832641 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.513478466 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964039001 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.513090039 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.299913317 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.29933734 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.8606825 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878679553 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.303463427 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.22525866 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.293927974 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521402232 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.526347988 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.315298268 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.742763471 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.002611058 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830077293 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.263871943 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3125839 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.300568288 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.995651849 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878732785 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.979068969 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767359827 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.948363893 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.292541162 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.566064535 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.296449765 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.302161248 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.568633724 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.294353436 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.29223588 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.304375168 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.878015193 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.025976773 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.293932846 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.211905776 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.227706696 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.517561363 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.99968911 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.226857143 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.291554614 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.474559474 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.293764334 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422220437 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.303896665 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.300063473 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305327437 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.052133984 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.567085444 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.297772315 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.27828417 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.219964797 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.302732381 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299882493 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.558189008 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296405518 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.967145171 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.643246582 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.54825332 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.303961839 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.279569355 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.29717104 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294258951 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.010702439 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.263201277 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.872066499 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83457663 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.30458753 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.304792584 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.296566338 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.510483482 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.50411439 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.301697517 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.305591834 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30459869 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.308980363 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.19869326 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.059994786 seconds)
  done (took 1555.910270203 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.313148967 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.301913199 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.304129185 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.344127822 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.342079347 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.344514874 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.393859583 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.353537513 seconds)
  done (took 51.930410825 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.295792232 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.446582896 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.322273078 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.297422167 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.304239368 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.298353987 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.740910975 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.297655608 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.303310877 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.303440967 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.308621109 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.298528961 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.947246284 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.303669933 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.303655417 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.291099326 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.302326909 seconds)
  done (took 64.604171832 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.294807872 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.621372926 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.387481789 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.296888433 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.012833662 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.30333746 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.663760256 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.323485502 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.297052359 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.364295256 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.947825433 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.339377225 seconds)
  done (took 83.086860142 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.303482573 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.302425658 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.303622804 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.30332439 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.303009099 seconds)
  done (took 7.749773558 seconds)
done (took 1973.413787659 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.577391228 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.969331759 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.900222191 seconds)
  done (took 5.103651204 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.441982526 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.49155597 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.611432628 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.631707176 seconds)
  done (took 7.408738709 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.582467674 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.667511022 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.489045048 seconds)
  done (took 5.972655717 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.647275562 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.314030548 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.414062058 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.29306074 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.297410189 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.295576217 seconds)
  done (took 20.120346704 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.299120708 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.302115184 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.299120554 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.300850183 seconds)
  done (took 6.43462887 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.279841919 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.988392306 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.282487556 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.297971052 seconds)
  done (took 18.081980967 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.046480768 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.057770876 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.04226514 seconds)
  done (took 7.380864599 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.295039946 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.133779707 seconds)
  done (took 9.662123527 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.58753072 seconds)
  done (took 2.821723614 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.430643563 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.624684863 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.361485644 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.233252825 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.371375341 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.864255442 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.837616578 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.427138759 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.218427896 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.331028966 seconds)
  done (took 26.93465929 seconds)
done (took 123.108625599 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.917048585 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.667091558 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.502041536 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.889228578 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.533226092 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.502238454 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.518290799 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.855313893 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.402599701 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.389727791 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.931125296 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.531352236 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.463914709 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.666443062 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.464355766 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.54412671 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.580924791 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.965934936 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.573781961 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.772727418 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.518910979 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.530313647 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.764031928 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.547468578 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.548670006 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.453192323 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.10764664 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.545683053 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.749580732 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.12968223 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.455282408 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.952085864 seconds)
  done (took 188.210275886 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.297564803 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.315594193 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.299884004 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.311692756 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.299456869 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.297214226 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.317081784 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.297608752 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.297880711 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.297237072 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.297904762 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.311939214 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.29942892 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.296983446 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.301126347 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.298234318 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.317878986 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.303793035 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.298736316 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.298039555 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.299675392 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.311468053 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.298338904 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.312636834 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.303587321 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.298880215 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.298658017 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.300951701 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.298174045 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.303217492 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.299542465 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.300674038 seconds)
  done (took 202.918277337 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.312296748 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.298712124 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.301095297 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.312537503 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.310517795 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.299801586 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.315567833 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.299214428 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.306940196 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.301401176 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.300034758 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.319176895 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.300692183 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.30051014 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.300893011 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.300010873 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.299428811 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.319517661 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.30746967 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.299475624 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.299484776 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.300141623 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.311608468 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.309363055 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.299964818 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.315254755 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.310066042 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.300763267 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.308131296 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.300481394 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.300102973 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.301109141 seconds)
  done (took 203.00020819 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.496042401 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.308326352 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.309167243 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.246218154 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.308478056 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.30801446 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.307208148 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.505939321 seconds)
  done (took 14.028515824 seconds)
done (took 609.393098916 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.565303237 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.280945362 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.506818485 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.326604237 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.05401597 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.329897756 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.327828728 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.487434341 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.224715096 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.492234857 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.523734896 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.326795604 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.662914203 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.327560836 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.570519676 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.419603644 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.141643168 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.25848977 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.629546177 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.807799199 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.580395831 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.756439187 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.492195726 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.231137417 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.665524218 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.746052901 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.963580019 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.145411659 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.329291083 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.631455798 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.892331056 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.194547351 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.383471032 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.36567268 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.422670399 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.401941264 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.171082951 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.363621011 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.505197884 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.514178554 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.815822541 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.046283403 seconds)
  done (took 89.123759592 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.298217084 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.297791524 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.298002025 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.298251604 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.299667585 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.297771885 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.297813845 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.298099618 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.297932483 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.297463919 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.297579231 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.299725924 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.297928168 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.299295037 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.298325562 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.298349435 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.298163854 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.300340335 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.298785028 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.2976577 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.297923379 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.298224662 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.299424948 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.298312728 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.299323053 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.299035428 seconds)
  done (took 35.001584638 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.312219945 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.559566135 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.706595948 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.316634434 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.312212643 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.316935271 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.384005189 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.312625891 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.313962061 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.31356479 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.459343247 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.314556446 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.344039382 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.730835958 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.314876767 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.314026731 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.313407767 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.312342095 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.567513688 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.322381496 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.403123047 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.313944901 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.38552321 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.321451983 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.331244138 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.313379193 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.316878585 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.83475622 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.314624485 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.460418205 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.053602856 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.384633539 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.792922432 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.72212288 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.051898902 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.315811859 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.313132002 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.465122816 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.314593629 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.313272292 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.385511836 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.313766054 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.717017309 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.923534497 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.329739689 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.313887799 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.853351935 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.46480711 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.54393264 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.321577465 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.738874615 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.316505139 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.315414973 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.315719883 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.543154167 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.321072212 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.313646923 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.834138242 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.334386083 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.385705834 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.315819264 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.314671768 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.574081474 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.314533321 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.562732521 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.315934544 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.322283617 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.315613784 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.719683861 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.316280335 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.943710711 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.330662005 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.315462119 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.464845749 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.564572696 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.884319714 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.318875721 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.578894167 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.800428618 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.387151388 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.320130125 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.824629556 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.389863384 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.320771868 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.316760259 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.31702328 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.315305895 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.367211999 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.385778188 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.872276306 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.932757582 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.850324198 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.406839324 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.329694211 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.316654948 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.836020675 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.332754343 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.316512639 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.71358822 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.944809197 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.331360422 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.323004215 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.928865758 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.334477125 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.389033115 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.322697765 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.727005568 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.319596753 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.366496923 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.317220099 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.322469266 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.320010627 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.38954669 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.320409923 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.317995585 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.913776377 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.484734584 seconds)
  done (took 172.895797514 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.312975664 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.310988366 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.317407165 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.310926384 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.310798614 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.317441808 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.310953254 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.311189666 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.317352542 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.311012991 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.311277354 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.31346636 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.312216871 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.313587402 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.336376297 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.317779388 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.922539254 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.313219916 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.311137854 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.327642304 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.094829332 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.314529412 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.31144637 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.325616212 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.312104488 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.313513098 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.31313873 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.313901868 seconds)
  done (took 151.459135445 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.319521054 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.84357323 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.320167771 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.441106733 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.338855994 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.316258104 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.439660239 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.372125433 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.319877578 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.317103783 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.316999564 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.599784644 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.320334283 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.797942054 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.49735173 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.441360383 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.798380094 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.320478446 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.317192159 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.316975372 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.443833382 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.326496464 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.601638338 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.846118025 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.320801445 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.847027799 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.308569591 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.31996716 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.319725508 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.84759443 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.318303093 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.603634099 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.391104191 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.37461889 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.848729593 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.799353242 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.800449697 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.456825352 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.320606685 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.318576381 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.318377511 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.308254814 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.84914075 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.322005957 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.320935682 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.844652783 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.33610682 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.322236597 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.32925498 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.319017532 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.376144872 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.376810433 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.607216924 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.857387075 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.392534861 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.342157694 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.442666509 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.688096729 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.322395172 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.800258348 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.308302175 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.852861517 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.323725266 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.308860976 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.319464324 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.325502998 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.459119595 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.443554341 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.802134362 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.323069557 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.800646685 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.460811345 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.321319097 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.320614234 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.322612029 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.851230807 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.80292979 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.461258511 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.448996887 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.503567403 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.311356683 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.321244471 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.309995356 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.393325685 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.321205028 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.855050248 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.803314378 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.323309277 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.322816228 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.323483822 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.323424726 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.486512924 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.854180511 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.394170572 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.797103265 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.621419146 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.607703509 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.32436805 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.377018812 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.322666718 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.609570183 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.323593139 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.375972076 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.750131757 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.609119279 seconds)
  done (took 156.722106359 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.558106785 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.420708599 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.410059149 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.430299321 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.880427335 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.870777595 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.526638871 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.441330186 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.426332066 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.555837285 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.408809921 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.412340222 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.48055836 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.393370715 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.04464614 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.385664972 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.410192619 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.445555661 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.412488232 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.29852278 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.910476082 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.607279969 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.485873116 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.166879156 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.41210834 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.035071269 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.856157916 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.868430793 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.485842045 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.531915802 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.843523381 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.387822231 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.231148062 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.957582304 seconds)
  done (took 63.248116035 seconds)
done (took 669.690713635 seconds)
SAVING RESULT...
DONE!
