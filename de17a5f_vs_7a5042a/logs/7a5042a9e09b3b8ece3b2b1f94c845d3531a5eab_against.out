cset: moving following pidspec: 29595
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.228844708 seconds)
loading group "string"... done (took 0.54846852 seconds)
loading group "linalg"... done (took 7.685695403 seconds)
loading group "parallel"... done (took 0.17114553 seconds)
loading group "find"... done (took 1.164453673 seconds)
loading group "tuple"... done (took 1.819883161 seconds)
loading group "dates"... done (took 1.249023059 seconds)
loading group "micro"... done (took 0.232302075 seconds)
loading group "io"... done (took 0.769006897 seconds)
loading group "scalar"... done (took 40.827435241 seconds)
loading group "sparse"... done (took 13.026371159 seconds)
loading group "broadcast"... done (took 1.160693799 seconds)
loading group "union"... done (took 13.463996582 seconds)
loading group "simd"... done (took 4.79627001 seconds)
loading group "random"... done (took 9.713867067 seconds)
loading group "problem"... done (took 2.16351421 seconds)
loading group "array"... done (took 22.64891467 seconds)
loading group "misc"... done (took 2.117891374 seconds)
loading group "sort"... done (took 3.470310824 seconds)
loading group "collection"... done (took 19.539952225 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.584397855 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142825212 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149983014 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147332734 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.189304273 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.15682786 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159523048 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097460659 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.003538857 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.17630864 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153123375 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.528608953 seconds)
done (took 5.291216201 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.250851129 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.096099855 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104230817 seconds)
  done (took 0.948231522 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078579165 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.147001522 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095274551 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077541028 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09543751 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076816124 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094697705 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077797411 seconds)
  done (took 1.417861077 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087399243 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.09774987 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.080985767 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096209193 seconds)
  done (took 1.118218428 seconds)
done (took 4.571503646 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.738258414 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.275790431 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204919555 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.465078324 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196016254 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216446176 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671342145 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.346379366 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252464328 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100020659 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143173402 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386643291 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137918793 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.677709856 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.09087793 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124582981 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178397555 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.439959166 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084941099 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109663811 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117694899 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140788947 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131916694 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090458193 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184180585 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082233449 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194978282 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108311316 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080625089 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.289186547 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200588445 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687150279 seconds)
  done (took 10.94396681 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11256383 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133259373 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097714392 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137063517 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13536115 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.1002941 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084030352 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096420548 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122331398 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176051352 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114161702 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.138726378 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095265676 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081987485 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115160656 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245257827 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12244276 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104783192 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100937773 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103662521 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120582534 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113373873 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109472623 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093090523 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167082758 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223695996 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110764993 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126454115 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097552382 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113020728 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143471388 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142708779 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095914588 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079293013 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172223771 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124255359 seconds)
  done (took 5.216629441 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.085683626 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191286119 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121130489 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169569583 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080586039 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143110858 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095139782 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113774993 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257390718 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.188017264 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176538645 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141735596 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.153773172 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098918794 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09848597 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08162546 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098881844 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.634445138 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.156107514 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134622712 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096514602 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105095729 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.10038656 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364687848 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086787013 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.099852596 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081083068 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.082506278 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160920196 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081292206 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.159442852 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.102360215 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10285664 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132937577 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191119135 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126551342 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116618955 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097235879 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077500698 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.190923347 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08724502 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096250471 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103112825 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134966896 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134962684 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096727267 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080616608 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.219277793 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079187377 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113081503 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.956384726 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182711918 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092816065 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096735278 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.322823575 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097850765 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098347338 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076231899 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.309255375 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.192455227 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.09804173 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079210486 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097728708 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080324988 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.397647827 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080704726 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.034886132 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082490302 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107254931 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082255574 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097387651 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103731988 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087202846 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115602832 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078740307 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.101870123 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077779247 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095998704 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080489404 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108365662 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101227121 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080027439 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.096163566 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147625386 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096349237 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098056026 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128844548 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100552464 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.076946476 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13177811 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099593248 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.079684941 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133966101 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097811734 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.077402983 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107807505 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099656929 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.126707299 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09676949 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.168326797 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096340273 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.078104482 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125401623 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099673258 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130131967 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114209675 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08209759 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101330685 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076795736 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095750964 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159798753 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081142858 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097445993 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081270699 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109761874 seconds)
  done (took 22.932945563 seconds)
done (took 40.929687353 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.317540421 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103926037 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103993699 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103594208 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102507558 seconds)
  done (took 1.558773937 seconds)
done (took 2.357789132 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.28838321 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172082494 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096257096 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168404295 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093991431 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173217003 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160492642 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111424115 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.200353224 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095531039 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.164138529 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094593562 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076368494 seconds)
  done (took 2.723060216 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09673349 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115507264 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084736205 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111925692 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075355533 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111946248 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091865824 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117867996 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109917428 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08449737 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094781189 seconds)
  done (took 1.890075562 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095489235 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11468867 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082336868 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110282857 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076651313 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110962806 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092191452 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117500361 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110062291 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085768302 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093743542 seconds)
  done (took 1.885910831 seconds)
done (took 7.287151141 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.093127168 seconds)
  done (took 0.885245043 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.931413399 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.010556781 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113689156 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149377861 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.296198937 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.191720798 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.481876376 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.126165904 seconds)
  done (took 11.302150024 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.145409469 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.087538224 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.102198687 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08225843 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.102786808 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083255622 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103809582 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.10158114 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086590829 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100615987 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.082350991 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102662941 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101922812 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082232538 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102699548 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082842917 seconds)
  done (took 2.409382202 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117771503 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117532517 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106942245 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110676843 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08654334 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.107273957 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107405281 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088025788 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103751547 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10476191 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089056728 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106825411 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104468069 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079087796 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107348898 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108720901 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.0855123 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107360071 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108578341 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090483585 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107279718 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09601925 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086407506 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108343833 seconds)
  done (took 3.344902764 seconds)
done (took 18.7397721 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162477881 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107964313 seconds)
  done (took 1.07113352 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097805383 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114255128 seconds)
  done (took 1.015566969 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097718174 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097591989 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.123036584 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110093568 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080500343 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097986449 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120274453 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079172304 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097163693 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079030569 seconds)
  done (took 1.788572405 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084785635 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111057955 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10172245 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096007653 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10682311 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09496123 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.08754371 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100517074 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.11044533 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077623448 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103606909 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114523397 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085999112 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117380665 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105021491 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083143888 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103708713 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099550351 seconds)
  done (took 2.588927067 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081610883 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098328827 seconds)
  done (took 0.983504952 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083664334 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094176159 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080829686 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098056824 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093820483 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077243513 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095033475 seconds)
  done (took 1.42702176 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.484875676 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135726288 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.260223115 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10213071 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103046827 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.304286648 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099423244 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083885581 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104375405 seconds)
  done (took 2.539809736 seconds)
done (took 12.218058723 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095983135 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116262467 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111797667 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.468811655 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108061838 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.100107089 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147166801 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.252025543 seconds)
done (took 2.209349934 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.147009744 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.329753454 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117172415 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06732434 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.099068628 seconds)
  done (took 1.426624294 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081814805 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100665082 seconds)
  done (took 0.9925136 seconds)
done (took 3.381555034 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083008017 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.129904266 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079039361 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.097715801 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.076919854 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.100160908 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.076407833 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097471927 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.0786132 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098839768 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.096087691 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.080615797 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.096483452 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080880349 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095063502 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078406275 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.097074971 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080878924 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094488184 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078199689 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094586342 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080927429 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094711449 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077853673 seconds)
  done (took 2.990632097 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099997649 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099374024 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103591162 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086702069 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102148664 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085386928 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105499525 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097759916 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084913269 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100531969 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09947351 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085080669 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099770911 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084083269 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100490963 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10102231 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086530109 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098925286 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081724728 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102876321 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103358773 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080490455 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101893935 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101322734 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083947366 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101795015 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081849247 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099015979 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102511451 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083522144 seconds)
  done (took 3.66178582 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086691775 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093997609 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078601441 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102265562 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077313618 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098595854 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076629787 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09637566 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078172383 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096246772 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079260115 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095941334 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.076771137 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098518558 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078162055 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100541625 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108932015 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078858248 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095762862 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079683289 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098766691 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078756162 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096708287 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077473636 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095354163 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077578269 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095891905 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078254651 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096637422 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07824441 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099687629 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080954712 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096843522 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084101617 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100512937 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076498596 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099853382 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076285303 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097842153 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095703628 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078574731 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094676656 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077954372 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102479896 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078899347 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097357455 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07824671 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097174711 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079200893 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100570159 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078122095 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096244776 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078860067 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09747369 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081222895 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.09617157 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095937805 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07858385 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09654996 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078431933 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09537771 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078698525 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100086823 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079334512 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111643532 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085049205 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096074901 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080113589 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09799932 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080091198 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098284331 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109691074 seconds)
  done (took 7.253040962 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085672085 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106817619 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080116433 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09949823 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075776795 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098155046 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099911434 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079733518 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098438275 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084762633 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097315355 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08015916 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099168837 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108220736 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080494029 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098510258 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084909602 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094956465 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078803388 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100670337 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078743681 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100746882 seconds)
  done (took 2.831550566 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.211347514 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106665604 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143037096 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108348801 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083390179 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107808552 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102358474 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086791167 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10288856 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082376487 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101775014 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103650382 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083093788 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102578858 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099696908 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085778501 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103106671 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084503991 seconds)
  done (took 2.7237053 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095600399 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09958946 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10107185 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099570615 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098819918 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083869234 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105589682 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108035208 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083326618 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099417376 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089076712 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103052783 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102135521 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081159391 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101455083 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08033592 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101856622 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079906586 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109402663 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104238185 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104106936 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091594997 seconds)
  done (took 2.952210269 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098570054 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101339758 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118381941 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084483513 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095824252 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079026554 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106305388 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080406457 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10863465 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100607626 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081345024 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098061837 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087377817 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098814707 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10391936 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080606606 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101196303 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079819038 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102189633 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07596384 seconds)
  done (took 2.711774145 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104328832 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.210590917 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100245686 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092216653 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101529661 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082014479 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111584229 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101179057 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081941051 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126602949 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100542443 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.080976874 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111095174 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107667999 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099632249 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09228952 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111198355 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109624223 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082343494 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10170512 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126454142 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082045354 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111219517 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10083239 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081756802 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101598383 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100710951 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088990181 seconds)
  done (took 3.732632547 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083928564 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098503429 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079994015 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097662322 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079476888 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096646686 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079721722 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096729673 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081832626 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097663315 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081443226 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09945838 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0846261 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100410978 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08117629 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098768445 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080989227 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097349659 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077972228 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097222789 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080970358 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099564113 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080191156 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097916519 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077690973 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.10096635 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077919113 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097224041 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080514548 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098026505 seconds)
  done (took 3.514044297 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093168332 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107690876 seconds)
  done (took 1.032572839 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081989124 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115873211 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07834783 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103857853 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084922011 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102140704 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107626584 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085656733 seconds)
  done (took 1.592327763 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099028481 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110444077 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082621351 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113532499 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109988259 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098312018 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169569417 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102444947 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086199407 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.100065184 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113489061 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079951357 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107201921 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081660947 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107048281 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086814169 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.09884764 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105271828 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085723897 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09865422 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083245692 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110263743 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082975044 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097952059 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100918408 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091718776 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11250912 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.081290508 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104845132 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10721607 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087540285 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094929774 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081833671 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101697937 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079444157 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110105107 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116409184 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084382703 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110275237 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082060179 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111309556 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095592923 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085673505 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107147817 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109083816 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083553847 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101049834 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.07711988 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097597822 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084522733 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096293821 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08036698 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095977294 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088668062 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103735978 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111296823 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081133474 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103301748 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084127795 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105072279 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087739406 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103563896 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102517616 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082267474 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106854652 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085153131 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110731426 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076559452 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095427614 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097237011 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092581383 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124012663 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090321913 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103247421 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101435092 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080930686 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104217343 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082979661 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107115645 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106067751 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084086297 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107124773 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088119552 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101121339 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083180432 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110753949 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099535767 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084078218 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098825313 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117203966 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082113169 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098432552 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080091788 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111166624 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084640232 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101199622 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079082783 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10955444 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093790088 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082740271 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101387468 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082767125 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112767745 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107071664 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088615147 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110181863 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088099332 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101636468 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103612159 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078906103 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101748216 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083853362 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107701629 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075809331 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103636501 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08280091 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101973177 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109710908 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080193456 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100542692 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088558243 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107473641 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.079021806 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098909805 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102733813 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082577525 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105051608 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.089909824 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099563533 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076382247 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097169335 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102950368 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082977106 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103718043 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087586294 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10482136 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075660729 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100269127 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.103795066 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091331881 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102487464 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082511376 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107996456 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100696944 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082298772 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107268299 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084768067 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100603839 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088050035 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102186239 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076985193 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105733901 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103705261 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081163655 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104254036 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085597731 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104211652 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.0821693 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101097309 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106133746 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083511068 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.099756882 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081512507 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100209152 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092862808 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104604414 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095630018 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079467383 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.108661035 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079452439 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100851269 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080956259 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103659142 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.08195836 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.10041202 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100212204 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.083531526 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113114357 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086204462 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103385631 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106070486 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093718417 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101726386 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.083462184 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101798009 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101218169 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084273809 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110476513 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087490185 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106828146 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.101867742 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079306741 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106945639 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089224137 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100945359 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.078883676 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099668041 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085120762 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108738247 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.104430659 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083208198 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099784685 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082650646 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105875099 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103129677 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083269672 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099529031 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.086936943 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100576273 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.088238153 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104068169 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111349565 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085275352 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097612744 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084973362 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099571774 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.105663479 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078240505 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.09817435 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082052357 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102035516 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081254096 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103557582 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076714601 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108577482 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08950767 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.10198758 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099205164 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.08338012 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108648719 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08434685 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105149424 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084671886 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108503541 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11161425 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08173629 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104286816 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092353626 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102768773 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.0745928 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108115802 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099888002 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.08222822 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100025195 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080779481 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104585054 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090172415 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.10911728 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095159288 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.084931805 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100929074 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.080857634 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097846246 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086607191 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105738144 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083078034 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109066484 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102231677 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.084058725 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105255933 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.081086318 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103541295 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101682196 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086637297 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103333901 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085027879 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101764106 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085635389 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103658819 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079565682 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104438759 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.081505969 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102467856 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107245349 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082677519 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10216833 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084610576 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103581311 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082322306 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103832715 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.099744316 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086806128 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102458878 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082487487 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104537639 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.0780512 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109651939 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081981255 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109621201 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.101704569 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079482594 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106767818 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084830194 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107538863 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083198369 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103391378 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.103254132 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082554609 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104610428 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088016833 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.100269177 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092640981 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110851057 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103334441 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.084875635 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.101442714 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083054814 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102086082 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.082769251 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104108371 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.100878912 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082929577 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.105596124 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.084946886 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102404247 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083805902 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103497527 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.08157436 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104142221 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.09507962 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083410991 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100957632 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083287286 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112817524 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.082213371 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.106153029 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099560263 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085181793 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100275925 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079748894 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110854974 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110613726 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084465043 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109312554 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081453525 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103884984 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092381526 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096800376 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099255896 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081508778 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099383533 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090659468 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103283956 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.090989985 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103119209 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081055183 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100785645 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102148901 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082189602 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096043927 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081488761 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106601036 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084849443 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100790758 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082288697 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107370501 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082379035 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113032055 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100723153 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091358778 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102884301 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079061643 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101081335 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081104877 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106008588 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101844411 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081431892 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099006829 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082697987 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102058358 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084283827 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102618728 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084070958 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109472977 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082376907 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104850547 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105722905 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077651417 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104576258 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082292774 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102955361 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081831775 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106785174 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104985802 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083990268 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112036247 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082226829 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102962318 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082574925 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.102183989 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102348561 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083110207 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103839498 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081548329 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102824905 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090884691 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101401669 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.085158343 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10267775 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102046079 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089402418 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103359794 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085834274 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11099052 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104872382 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085018719 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110648025 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.085926342 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106700252 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083146658 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.104544375 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108811616 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081613373 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108577489 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.081930215 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103681195 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.0839114 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.100768657 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080958851 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103228492 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100838327 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089391984 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103379717 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081621385 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102478395 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080322041 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103996133 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10551009 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091312118 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104964427 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086100879 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099306152 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080047372 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10505837 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.079667317 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.104784815 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105226145 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090012534 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104616939 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083063529 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102073763 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090812609 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109838397 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106961858 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081308524 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106265385 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.08373845 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105281426 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084133191 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.104172333 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103854781 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087668779 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103595859 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082563717 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10955369 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.085584703 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105519949 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.083464172 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.104096246 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101239835 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.0793806 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.10400938 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084937775 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107890211 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.084456357 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104796377 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112531998 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082325206 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102712278 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087461083 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101944728 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.0870777 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099022214 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.083385584 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106126564 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103582013 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079207771 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.102492294 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081560252 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.105382418 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081083708 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098488673 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112092637 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09296278 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106612113 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081562564 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101706105 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078142013 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099083513 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082158356 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105793542 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104349049 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09502042 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.10327874 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.081822396 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098682956 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082483478 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106178993 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.084714575 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.100937176 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097233229 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083594905 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105803666 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089572304 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101990553 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082795073 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106380489 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.085277154 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102104946 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106813409 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080506556 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106569174 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096314387 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103951757 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083163738 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.109272052 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110905337 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084008181 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099544203 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.083414648 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106642211 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102403654 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085241691 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104401681 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098207424 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10749245 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100612763 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083925844 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105178143 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082679693 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110725262 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084874501 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104324734 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106978881 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.087016538 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111331679 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084895933 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112189326 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.1057762 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.08733229 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101513021 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083352833 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.1008276 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081931692 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105381546 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.083286512 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108027201 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110817969 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.081777553 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114476684 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11176419 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089372537 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099451707 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083218239 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102520628 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078505309 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104194011 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081290075 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102446049 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080984978 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102683009 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.083356577 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10888555 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103604227 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085780124 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102964923 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079240169 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105880824 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086228741 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104458289 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.079736862 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103354621 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103002438 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088308337 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107177551 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08365965 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104636794 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084246377 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105310997 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.077946006 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.110760682 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100517429 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087247416 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102639646 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084450085 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105466561 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086985617 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110095244 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104022292 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086567168 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115953623 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085018367 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101286685 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.08049883 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.11014338 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.080780685 seconds)
  done (took 57.886916582 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149450527 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079704684 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100383571 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07928206 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11355874 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099831681 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080092232 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099501076 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07977376 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103846138 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078322495 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09921763 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108946871 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125822376 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094142931 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105118988 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077797166 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101348557 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098385695 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080929527 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11017128 seconds)
  done (took 2.952829403 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105763582 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117737447 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11509063 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120349369 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089202892 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116864171 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115230198 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116188858 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09932193 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112256864 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119003287 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115597288 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091354174 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112570858 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111877158 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093012792 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11933164 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109532486 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116364116 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095480825 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114053461 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115242816 seconds)
  done (took 3.300831984 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.087475644 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102885232 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084597008 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098830816 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082501047 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098200556 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087403531 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101483341 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086006076 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103407113 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080712511 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102942418 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104402572 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079340172 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103119926 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081307841 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150308914 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.10837771 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.081131619 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105381212 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.076694654 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107471316 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098926102 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079430235 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101861101 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.086845229 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105226592 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.080804897 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104116893 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.080978441 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104122512 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.079623134 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.107431105 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103296906 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084292289 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101970276 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083325702 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103321107 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.07895648 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101403941 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084075883 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.10046617 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.082864693 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105717297 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081118719 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102074971 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083688096 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103905075 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097734757 seconds)
  done (took 5.524648285 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104364278 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160057887 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08555112 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143614764 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120886252 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.1125661 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.086785956 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143027884 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10402921 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081478512 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123043605 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120480514 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103972877 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088757596 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111801777 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10353936 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085318432 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103013074 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.106603505 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083120701 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10904957 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089798364 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120760576 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.11809437 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107978853 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082166348 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104347182 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109678611 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096687558 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110369109 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110377039 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090370119 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.12180375 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.1065319 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08170395 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107387364 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122744552 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083271504 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.10827821 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102134181 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086409186 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109153351 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110013125 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101753111 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105291152 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107792705 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083190198 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101984191 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116366657 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.085844434 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112835161 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119831457 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.086305566 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106326754 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109890062 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120031132 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084960607 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102878061 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.086067157 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.119506222 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102590257 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089626522 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120232039 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107945361 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.091551703 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.119850716 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109576245 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108266197 seconds)
  done (took 8.185411024 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094551998 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111443458 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12125071 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120478585 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090036563 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112153694 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111286022 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089098656 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112093975 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116650078 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110856594 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.13495916 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086346884 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114470954 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111528409 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091794495 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111551186 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110921912 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090102625 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111856964 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111862866 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119512249 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089988459 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120330604 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141554597 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106049196 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089684682 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112127056 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120607223 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110566094 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122672864 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092373251 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11149645 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120435479 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122880502 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.089795177 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104121561 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111575567 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090612616 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112189227 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105914182 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099384415 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111438666 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105746344 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090257401 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111903152 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121019617 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123989934 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114325437 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096571115 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112173929 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121576924 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109907648 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090300568 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121052019 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146718064 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120877483 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.1199559 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111443088 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09905557 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121745622 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129107753 seconds)
  done (took 7.731040781 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109350378 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114647399 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119217635 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099455539 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083279092 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109715086 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082229688 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103151231 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114220253 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094127262 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117582092 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108334967 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090383183 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117172613 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10902754 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11337171 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087371041 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109915148 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115403679 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10774149 seconds)
  done (took 3.001446702 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095002712 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124577629 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083827449 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112062157 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108995619 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090054496 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10779368 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107476338 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08563932 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108350054 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096034875 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116559214 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106231231 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089566219 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11727668 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111364899 seconds)
  done (took 2.556083811 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097462535 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118140754 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121530662 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083008271 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104710355 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.079372215 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106224415 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100904006 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08093473 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.123414568 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.082842222 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108523125 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105077807 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083212569 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101811591 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.086997778 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102038495 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082032317 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105685038 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120431969 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.094019004 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105182865 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105822672 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088092301 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106311404 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090324651 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107130834 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10341291 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083025753 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106405719 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084626593 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113950724 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101485862 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084267872 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102887709 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082088136 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106129214 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084418351 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108950124 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105115003 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083050001 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104635863 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08344238 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107509516 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08003862 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106977396 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100944547 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091239977 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104755295 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084474846 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106305097 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086152823 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108033821 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116587719 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.086750724 seconds)
  done (took 6.308832495 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101519515 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109759774 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.078821839 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104294816 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086975257 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108581991 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108786464 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088336117 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106741745 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082626349 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107911951 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088382539 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108462888 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108177732 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087662746 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110186045 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080174518 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106961055 seconds)
  done (took 2.683090711 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093884491 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105855561 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092699965 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106378093 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083187034 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109718377 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079634893 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105979088 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104525885 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08563345 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105398874 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.086964718 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105027505 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086970448 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106806726 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084069318 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108986162 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102863802 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086360772 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101742726 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08777282 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104327759 seconds)
  done (took 3.039973105 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119377391 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125423949 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092867265 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.231311864 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103599905 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132776955 seconds)
  done (took 1.712849996 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11123859 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121830008 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106323727 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106697756 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116226155 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085656768 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109285347 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108894174 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117645309 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100412771 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108418084 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119314072 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118332484 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095713899 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115856525 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116738624 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106820923 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088615582 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106830466 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129065128 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087084956 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120724773 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10884237 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087060854 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108727913 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118299124 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117626794 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122854252 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088408766 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119357899 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114304263 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087078689 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118369346 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122939351 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109024594 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098893715 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108176339 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129013233 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114623586 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096044422 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110649268 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115842571 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097133205 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114975343 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11844056 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108617357 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093185739 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110470748 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107959236 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1365507 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093973377 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118191808 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115733796 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117480039 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097647195 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.155682911 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101706464 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118911401 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115053811 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123457341 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117932138 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094007373 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117575451 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123472279 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115283816 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11709786 seconds)
  done (took 8.235516036 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104477671 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126503933 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108999442 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123066356 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096838642 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109305566 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108401163 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086252499 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109175232 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10619985 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153034066 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088186135 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119461832 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118353469 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08681729 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109823362 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109476905 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116533039 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086885309 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135702729 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110178801 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118124225 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1175409 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096917429 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123341785 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115177804 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108387051 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089166859 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109671379 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108364988 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094243756 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109743664 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118587958 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08580476 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118952909 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109056407 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08560196 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115902097 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109700844 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113899852 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097332777 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129453811 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109528088 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108878697 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101219717 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110834521 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109419743 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086953127 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110509552 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107024393 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101290322 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123741249 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124292109 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118186088 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108828415 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08746936 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110037399 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109232711 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088130015 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11565036 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119293772 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086600356 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135344218 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10919251 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110539962 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118437271 seconds)
  done (took 8.113649352 seconds)
done (took 157.038257413 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.229096312 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.229787827 seconds)
  done (took 1.370325908 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.101099414 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136811788 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094625202 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170589514 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107226545 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120385228 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138697816 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097047446 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107256564 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.084697918 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107972303 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.085835637 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.183948452 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.08453277 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107754781 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107917157 seconds)
  done (took 2.756225557 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.203477355 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255751148 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101416208 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107117206 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.08849645 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111507659 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105338992 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091771882 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110801818 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085539496 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109162871 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.08563409 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106445818 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085766936 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111299121 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.086888238 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107436786 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.08671749 seconds)
  done (took 2.960050351 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115206798 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149679782 seconds)
  done (took 1.189270613 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120416977 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180265937 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316398549 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155296529 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106782237 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127246889 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15693366 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131295662 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197964543 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123352806 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122248396 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097221577 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141432214 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.11583086 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.092961019 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119269328 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141820971 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092507248 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116929181 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115702855 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116006685 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107375668 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115620644 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093119584 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181281348 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12087873 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084310653 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107688023 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115731938 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094011252 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113698228 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124850627 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097166877 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.180157412 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100601931 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177505382 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.096368715 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112767992 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114333851 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091108474 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119079706 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118166715 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103577192 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119754504 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.083990935 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120059702 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106188102 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086493026 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114992957 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096453426 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116009773 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114438971 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156072777 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118472849 seconds)
  done (took 7.609501027 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.797482594 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156854487 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089853057 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.884306375 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13531997 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104152033 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.777767491 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110784812 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252891406 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.757805714 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133019534 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120660762 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.204919362 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.256970209 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.957184664 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.288573294 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.693104951 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102129853 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15101105 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.151709832 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117961287 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136115954 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108058628 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430335186 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116508706 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111214291 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.094945994 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118828151 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160386265 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124774812 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114227546 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175643274 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247917265 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204858597 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092853306 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113227954 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110338397 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.167382514 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262896687 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190810338 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179280662 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109585062 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109038757 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100161953 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132255226 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106944473 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162120197 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.171754273 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.167918641 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115169091 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11898584 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095889543 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120279873 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.161283084 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120768196 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.318587659 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.308251216 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087344563 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12230287 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125392099 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259942182 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100148766 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222702249 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138850585 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.208883123 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089169192 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.777410634 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.167306395 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110950717 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095440164 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120567951 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117421098 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.096926117 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16533191 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391797833 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124458218 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115204615 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089158443 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226210894 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124035794 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089791222 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159107647 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118060955 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119985224 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10181852 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121860409 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.16536576 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.254704128 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099829934 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120008266 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115335697 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102228156 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116552758 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209072458 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215981907 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.16314949 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.232460165 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099341821 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184249827 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169600879 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11925891 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.172793241 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121052647 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101580712 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12235341 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215385396 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.143035194 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122429361 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092428249 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119302456 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147656264 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126291117 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09597667 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192575795 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458692629 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.164765781 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109554819 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127530512 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09633681 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182424524 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09544716 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.256642255 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121887953 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168186165 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118701295 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087167203 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121527761 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163253808 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121611949 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120621815 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098823097 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118683475 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235287575 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21602624 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122790163 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.218528353 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183451384 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118338235 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169365106 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122120608 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165698947 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120305145 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119519941 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093997042 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773664481 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123193521 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09812602 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116128745 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.1869826 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10951135 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102891863 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124616699 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085640319 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.771890165 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127621082 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121603412 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.100805243 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.1180172 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120917578 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095376185 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117411448 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160464122 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226373856 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120316695 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119178844 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102255368 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.157912744 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116406776 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124556154 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123631932 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103517403 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122252309 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115411687 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101674311 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188162373 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.160445968 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.21914127 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.566359121 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113438285 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124278315 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.224588394 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090737329 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287928363 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117530616 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.200453638 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184240129 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097927959 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.305870527 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.190690533 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.189531993 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106176794 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19351237 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087239092 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119370504 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.163808793 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112207203 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094584053 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.183182895 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103375244 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123236244 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.958963959 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089393428 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.245226752 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087698811 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.17013205 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118135806 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121029647 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.2931522 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08985632 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129768352 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.163808391 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116487499 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124302216 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.70093279 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125674362 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121254639 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096400245 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.220881714 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.1628461 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120271412 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118936309 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096548399 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.182495481 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207884922 seconds)
  done (took 43.801539108 seconds)
done (took 60.601465507 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277245524 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216182963 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.26526958 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17041726 seconds)
  done (took 1.956225904 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.174112634 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150657019 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.12050497 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107842466 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151569419 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084689354 seconds)
  done (took 1.735547641 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.365403752 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275518964 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244040939 seconds)
  done (took 1.837160672 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.317545929 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.247066501 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.475617558 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.32581481 seconds)
  done (took 2.414217297 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.21018529 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.134739579 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112091051 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103545506 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.198894164 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247800635 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142363984 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.204312965 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099286587 seconds)
  done (took 2.450435822 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.198496039 seconds)
done (took 11.542222385 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.239219157 seconds)
    (2/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.193345667 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.251348368 seconds)
    (4/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.157666427 seconds)
    (5/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.247596297 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.161284877 seconds)
    (7/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.196175424 seconds)
    (8/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.24228133 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.097833507 seconds)
    (10/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.196978922 seconds)
    (11/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.202442666 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117672001 seconds)
    (13/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.212336668 seconds)
    (14/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.098661222 seconds)
    (15/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.1154592 seconds)
    (16/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.108526052 seconds)
    (17/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.213885505 seconds)
    (18/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.155799113 seconds)
    (19/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.202437136 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.149210364 seconds)
    (21/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.125490228 seconds)
    (22/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.095546321 seconds)
    (23/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.245032381 seconds)
    (24/286) benchmarking ("sort", Int64, true)...
    done (took 0.215778671 seconds)
    (25/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.137586428 seconds)
    (26/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.092833067 seconds)
    (27/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.126491661 seconds)
    (28/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.119388046 seconds)
    (29/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.226371484 seconds)
    (30/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.248665561 seconds)
    (31/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.096813718 seconds)
    (32/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111369553 seconds)
    (33/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.230784657 seconds)
    (34/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.151750544 seconds)
    (35/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.157880106 seconds)
    (36/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.12143807 seconds)
    (37/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117440027 seconds)
    (38/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083922981 seconds)
    (39/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134739675 seconds)
    (40/286) benchmarking ("sort", Float64, false)...
    done (took 0.146976808 seconds)
    (41/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.123582992 seconds)
    (42/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.147254768 seconds)
    (43/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.113913527 seconds)
    (44/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.12847251 seconds)
    (45/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.138122934 seconds)
    (46/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.120342206 seconds)
    (47/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.117033381 seconds)
    (48/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.101431735 seconds)
    (49/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.22665555 seconds)
    (50/286) benchmarking ("sort", Int8, true)...
    done (took 0.213222092 seconds)
    (51/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.120648912 seconds)
    (52/286) benchmarking ("sort", BigInt, false)...
    done (took 0.2220365 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.109411887 seconds)
    (54/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.121845372 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111120868 seconds)
    (56/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.09356759 seconds)
    (57/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.136131643 seconds)
    (58/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09346213 seconds)
    (59/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.172940971 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.137071041 seconds)
    (61/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.140463995 seconds)
    (62/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.233379817 seconds)
    (63/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.126074668 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.119530501 seconds)
    (65/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.093863383 seconds)
    (66/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.219954693 seconds)
    (67/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.112594055 seconds)
    (68/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.114725231 seconds)
    (69/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.118171367 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.085880966 seconds)
    (71/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.089719118 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.113296357 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.109724318 seconds)
    (74/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.173609172 seconds)
    (75/286) benchmarking ("sort", Int64, false)...
    done (took 0.087557872 seconds)
    (76/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.126168241 seconds)
    (77/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093936051 seconds)
    (78/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.173536613 seconds)
    (79/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.136771439 seconds)
    (80/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.089070962 seconds)
    (81/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.177049873 seconds)
    (82/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.094100549 seconds)
    (83/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.099228952 seconds)
    (84/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.145095416 seconds)
    (85/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.122140968 seconds)
    (86/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.183578471 seconds)
    (87/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.097318272 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.144654655 seconds)
    (89/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.066846637 seconds)
    (90/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.190966903 seconds)
    (91/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.153227453 seconds)
    (92/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.068327863 seconds)
    (93/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.113780943 seconds)
    (94/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.160242605 seconds)
    (95/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.110235435 seconds)
    (96/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.136758111 seconds)
    (97/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.119240786 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.084715962 seconds)
    (99/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.11968847 seconds)
    (100/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.172325007 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.085598117 seconds)
    (102/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.116141952 seconds)
    (103/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.094094307 seconds)
    (104/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.123798377 seconds)
    (105/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.192259956 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.084896382 seconds)
    (107/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.091655319 seconds)
    (108/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.092096487 seconds)
    (109/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.139253137 seconds)
    (110/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.084178855 seconds)
    (111/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066958735 seconds)
    (112/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.112064017 seconds)
    (113/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.221475095 seconds)
    (114/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.180217141 seconds)
    (115/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.07367855 seconds)
    (116/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.084856733 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 0.20498044 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.09572341 seconds)
    (119/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.065809441 seconds)
    (120/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.092091127 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094101776 seconds)
    (122/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.090498931 seconds)
    (123/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.085337665 seconds)
    (124/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.107233839 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093968204 seconds)
    (126/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067367363 seconds)
    (127/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.092853045 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.092960989 seconds)
    (129/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.114204187 seconds)
    (130/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.092109572 seconds)
    (131/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.151529555 seconds)
    (132/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066064495 seconds)
    (133/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.179941922 seconds)
    (134/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.077699362 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.117914151 seconds)
    (136/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.139089481 seconds)
    (137/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.159867198 seconds)
    (138/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.092928001 seconds)
    (139/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06746635 seconds)
    (140/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.066394243 seconds)
    (141/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.118061257 seconds)
    (142/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137406895 seconds)
    (143/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.111907122 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.110636421 seconds)
    (145/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.093002905 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.119361298 seconds)
    (147/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066529078 seconds)
    (148/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.090842871 seconds)
    (149/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067086296 seconds)
    (150/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.110285459 seconds)
    (151/286) benchmarking ("sort", Float64, true)...
    done (took 0.198590451 seconds)
    (152/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.12780162 seconds)
    (153/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.119225819 seconds)
    (154/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095570409 seconds)
    (155/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.115795126 seconds)
    (156/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.06758863 seconds)
    (157/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.121169641 seconds)
    (158/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.107801857 seconds)
    (159/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.184589011 seconds)
    (160/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.111499503 seconds)
    (161/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.114418641 seconds)
    (162/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.216744259 seconds)
    (163/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.091475739 seconds)
    (164/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.094239323 seconds)
    (165/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.116993463 seconds)
    (166/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067995454 seconds)
    (167/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.086937174 seconds)
    (168/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.118083438 seconds)
    (169/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.165940311 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.085025379 seconds)
    (171/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.130926225 seconds)
    (172/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.118502378 seconds)
    (173/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.090905669 seconds)
    (174/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.07722835 seconds)
    (175/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.09269061 seconds)
    (176/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.085845327 seconds)
    (177/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.09101029 seconds)
    (178/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.097760242 seconds)
    (179/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126307678 seconds)
    (180/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.110722255 seconds)
    (181/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.119472272 seconds)
    (182/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066367467 seconds)
    (183/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.37808805 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.085638336 seconds)
    (185/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.11064226 seconds)
    (186/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.13747973 seconds)
    (187/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.085940229 seconds)
    (188/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.120776371 seconds)
    (189/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.172103176 seconds)
    (190/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.14163673 seconds)
    (191/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.091832591 seconds)
    (192/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066753346 seconds)
    (193/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.165713915 seconds)
    (194/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.07672342 seconds)
    (195/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.065879312 seconds)
    (196/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118179147 seconds)
    (197/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.076412719 seconds)
    (198/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.090627745 seconds)
    (199/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.110540537 seconds)
    (200/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134098693 seconds)
    (201/286) benchmarking ("sort", Bool, true)...
    done (took 0.213673391 seconds)
    (202/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.083815767 seconds)
    (203/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.12744683 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.108742698 seconds)
    (205/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.077894814 seconds)
    (206/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.084789445 seconds)
    (207/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.110371648 seconds)
    (208/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.086908387 seconds)
    (209/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136075703 seconds)
    (210/286) benchmarking ("sort", BigInt, true)...
    done (took 0.215722683 seconds)
    (211/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.186819628 seconds)
    (212/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.066582232 seconds)
    (213/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119174846 seconds)
    (214/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095029225 seconds)
    (215/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.140497204 seconds)
    (216/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.086678399 seconds)
    (217/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.100795005 seconds)
    (218/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.158484527 seconds)
    (219/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117057621 seconds)
    (220/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089069105 seconds)
    (221/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11445828 seconds)
    (222/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.090939247 seconds)
    (223/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.092324538 seconds)
    (224/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087606065 seconds)
    (225/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109349942 seconds)
    (226/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.096331138 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.110793036 seconds)
    (228/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.094845146 seconds)
    (229/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.090983239 seconds)
    (230/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067503715 seconds)
    (231/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117089931 seconds)
    (232/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.085864378 seconds)
    (233/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163991811 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.085124641 seconds)
    (235/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.112190357 seconds)
    (236/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.074528676 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.111573421 seconds)
    (238/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066158663 seconds)
    (239/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.174468577 seconds)
    (240/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067532613 seconds)
    (241/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.098316245 seconds)
    (242/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.077404115 seconds)
    (243/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066717291 seconds)
    (244/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.171906458 seconds)
    (245/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066635075 seconds)
    (246/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.093470161 seconds)
    (247/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.086623577 seconds)
    (248/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.12162036 seconds)
    (249/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085297509 seconds)
    (250/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.092278497 seconds)
    (251/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.091691176 seconds)
    (252/286) benchmarking ("sort", Float32, false)...
    done (took 0.173805734 seconds)
    (253/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067742637 seconds)
    (254/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.112271663 seconds)
    (255/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.065968449 seconds)
    (256/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.181841381 seconds)
    (257/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117126221 seconds)
    (258/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089190392 seconds)
    (259/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.133790083 seconds)
    (260/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066931395 seconds)
    (261/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.110480636 seconds)
    (262/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.094476192 seconds)
    (263/286) benchmarking ("sort", Int8, false)...
    done (took 0.189244693 seconds)
    (264/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.121102222 seconds)
    (265/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.065630602 seconds)
    (266/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.092125964 seconds)
    (267/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.068121485 seconds)
    (268/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123368016 seconds)
    (269/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089168496 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.116983537 seconds)
    (271/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.069040985 seconds)
    (272/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.1088044 seconds)
    (273/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.08670086 seconds)
    (274/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.115683708 seconds)
    (275/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095567163 seconds)
    (276/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.075048647 seconds)
    (277/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.112799106 seconds)
    (278/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067051007 seconds)
    (279/286) benchmarking ("sort", Float32, true)...
    done (took 0.224188979 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.11678136 seconds)
    (281/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.06720342 seconds)
    (282/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066839352 seconds)
    (283/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.093358063 seconds)
    (284/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.111500232 seconds)
    (285/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.117798565 seconds)
    (286/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068121654 seconds)
  done (took 36.078255637 seconds)
done (took 37.032312636 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.102905939 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148480465 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095881613 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136366143 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124844463 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091237085 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119083525 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096700778 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124522771 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124969928 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098014303 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093622818 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098921039 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121408561 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096526442 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140449309 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123929476 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093773339 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119184766 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085938709 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120592061 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085347642 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113962245 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068852058 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12302713 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.095606299 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118038175 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119503775 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086816318 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109417083 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090707212 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117517831 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087295156 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124083203 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092364532 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119603233 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.09580447 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121040942 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.086283791 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.1122713 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117200231 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087310447 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116030612 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094301189 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116652523 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092034362 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.11878456 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098260768 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139459571 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114239405 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094556631 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120201618 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096371425 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117903279 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089013796 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120038802 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090503217 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140662915 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119658318 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091455916 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118983142 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094021555 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117023778 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.093931946 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119990511 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119776039 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099676658 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116733813 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096684805 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116558385 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085742385 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.12031835 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089509831 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111652646 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095742234 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123553861 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084925773 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118682907 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.09275626 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.116408973 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109160695 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090172529 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112178173 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093597395 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112645281 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070973343 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.088980501 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118335138 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.08537905 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.120287882 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117101338 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094183432 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112395113 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098510297 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110407173 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092005952 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111534669 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086997894 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113210816 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090844558 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110746472 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088007023 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120770254 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087626425 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117734025 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.097804053 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.111392201 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.115773545 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086967314 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110536982 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101634488 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121453956 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.08639655 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116895186 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086043089 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119642077 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085848157 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111576054 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086294176 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112602717 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.091750669 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111580521 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088990495 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.119321124 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124072351 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087993004 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114136186 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090083642 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109902703 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092750798 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111683011 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087613718 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112986763 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078611274 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114203321 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.0868518 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118032481 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09050193 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118898271 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089229285 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120588865 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091222011 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117793993 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091320119 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110159031 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074041302 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116975871 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089237889 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113260841 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087121569 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112986452 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086362683 seconds)
done (took 16.997051288 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.090428329 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185080291 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150125643 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142671557 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107133901 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112741671 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121766442 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118423573 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114845013 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143100244 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109859147 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132464654 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149256848 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086305763 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112953957 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090801023 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113417864 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101079303 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146184383 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133291585 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163897047 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08661658 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.14706728 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135642285 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120615113 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114587827 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111829575 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091154425 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114970816 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101747786 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132681922 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.089242142 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112837154 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132772365 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103753929 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121310175 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086061424 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.120408672 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087446512 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113010027 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140565622 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.107872721 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.118689398 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117469427 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091867375 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114227995 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089603833 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120603769 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096871973 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117411768 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12605461 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156827341 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090984968 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121792001 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085613977 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123597258 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120293344 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090457871 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11121011 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090122044 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.113637134 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.09067687 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129052501 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143498295 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.090693318 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122465293 seconds)
  done (took 8.671937352 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.108048024 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139668432 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104643064 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131989315 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11107593 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088281769 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112853463 seconds)
  done (took 1.811572646 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092265669 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13432165 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110958821 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137712183 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.13173682 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109386215 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124559291 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.0874279 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131784659 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088982103 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134623949 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152220814 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.08960322 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121752628 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137142045 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089102947 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137727791 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087378846 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116419891 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110341552 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11775557 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135273927 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090416696 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113703979 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101833086 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114447276 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161334646 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093903493 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114920632 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091582469 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11260291 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.165846402 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101369633 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126125013 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087274959 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128887314 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127649925 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08686838 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130288627 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093331304 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128845062 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.08857804 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116269946 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.085522091 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.137135555 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124679639 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090010826 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114339953 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.090968848 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133186845 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088966843 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.12855385 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.08777764 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118770504 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089155015 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12022722 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122248612 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089538367 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13332492 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090113352 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131098513 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.103537132 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129579773 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.12984623 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09115645 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127386726 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101857606 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117841439 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089188704 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119276763 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129349839 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087851914 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114517706 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099771711 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115305766 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112687964 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137496974 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089507335 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125428702 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113581602 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089640265 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113754742 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111519311 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121434232 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.087953653 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119244105 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091342718 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113204978 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087256554 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118206416 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086339002 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116856484 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.090618119 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115727406 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115943273 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106740577 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114511568 seconds)
  done (took 11.88404445 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094226168 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11383907 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092300684 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113874277 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090238405 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114366621 seconds)
  done (took 1.645039817 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117026788 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120286766 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103064981 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121255638 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156607237 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.102774183 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129868655 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124434285 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.106070202 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128130072 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129196013 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10324062 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.13670211 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121141309 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103897618 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120861492 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103540742 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125766916 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126662941 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097053159 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137875595 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121274808 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096528311 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132142528 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116303734 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096042862 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12554402 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103183226 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128309139 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122860159 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096688053 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118277821 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095647786 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124933823 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129830795 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095209594 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121667356 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.117605972 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100654771 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118578948 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10379897 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122831884 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126723332 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09399292 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123987208 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120174079 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094570423 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125781135 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.10249832 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119938408 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118745308 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096043173 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117986458 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093554377 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.12193368 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123821196 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093900182 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129805463 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.09602969 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122479112 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118242856 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093136967 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124139351 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117486627 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106119651 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118988367 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095297747 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122687883 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120764386 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096212913 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120284466 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.091599305 seconds)
  done (took 9.279108774 seconds)
done (took 34.303047678 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.701091374 seconds)
  done (took 1.725425756 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.841263376 seconds)
  done (took 1.868123377 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.575367199 seconds)
  done (took 18.629224245 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.507883298 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.593351196 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.002474193 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179264547 seconds)
  done (took 3.309318308 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.972776895 seconds)
  done (took 2.018022605 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.287804983 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232642596 seconds)
  done (took 1.551007453 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.79765075 seconds)
  done (took 1.840179912 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.386225758 seconds)
  done (took 2.417928747 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.33229684 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.1849497 seconds)
  done (took 1.560329832 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.551908517 seconds)
  done (took 1.59106083 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.379943729 seconds)
  done (took 8.427022189 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.272160581 seconds)
  done (took 1.32615432 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.304653095 seconds)
  done (took 1.350177412 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.619762228 seconds)
  done (took 4.666616828 seconds)
done (took 53.318394167 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.101632449 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127106376 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101657238 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124071826 seconds)
  done (took 1.492281894 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.103247571 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120622631 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.09967717 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121218201 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125154665 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096050723 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122693732 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100640787 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121551396 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095900976 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12296725 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119681914 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098573439 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123326987 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092751896 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125463576 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098020783 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122415885 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124699524 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095645241 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118963831 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096902151 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126301097 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093692283 seconds)
  done (took 3.714727484 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10322264 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118841963 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096809496 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118094405 seconds)
  done (took 1.490070098 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.103491068 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142544826 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.13885575 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100477651 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143441884 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136356991 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.091945831 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117784844 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093759848 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125710232 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090271169 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.15017525 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137506344 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.09857812 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129203441 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.08754304 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118303912 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136480447 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099976074 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126957087 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.091255642 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125575537 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.088389002 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140785865 seconds)
  done (took 3.863898159 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.172545448 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127506781 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138860684 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095426525 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160478138 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139858435 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088075485 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141045275 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088086316 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132747756 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117666577 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134290855 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130268716 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087570574 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114422482 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.086089201 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130395466 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128462719 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091180661 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128099332 seconds)
  done (took 3.488295891 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.100862149 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117837665 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088560642 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115970293 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.09881051 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12052422 seconds)
  done (took 1.697387571 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.093637556 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113682779 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090729318 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113383752 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095267339 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114528311 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088656379 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115148433 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09008 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.117165036 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089571609 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113742489 seconds)
  done (took 2.287138009 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.501735364 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119609964 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.118700421 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089979391 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122268802 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089389658 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129165459 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091498091 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141803313 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.08818016 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117026905 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090095244 seconds)
  done (took 2.754153882 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235259305 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125909009 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288500642 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.369117139 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158112173 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178032588 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283897772 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164610777 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.225454609 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166966941 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201329834 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224748628 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151684751 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190327905 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138235291 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.118026786 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230966903 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247063509 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152530992 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207327516 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226624297 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167037333 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179816765 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150819411 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137292136 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171848811 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.09311019 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130494019 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232857994 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174783217 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215068056 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162855124 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145944173 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209891645 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252498509 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220484578 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282240482 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137876756 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.148493435 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.171282157 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267879294 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139482309 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201909808 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154536724 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131773116 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218076821 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167088797 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.17697674 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152403528 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138222374 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196259352 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23993684 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.19169408 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139361948 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307218398 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151715358 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.2004242 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194435409 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251152188 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200617342 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186844419 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121061468 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188313996 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221475331 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186786831 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.174986778 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.207298861 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121786456 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225964981 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189311374 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165485097 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221330851 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.187330987 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141725259 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169451973 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172884188 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171727555 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25810469 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210852648 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095494266 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169649603 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149719488 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133845354 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194295887 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099429703 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239513238 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143372573 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.13526437 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242475977 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161206547 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161730013 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201691372 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230525206 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148731321 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.082779667 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153868495 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156679086 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193496626 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141186789 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158411439 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162803431 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131368466 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184099145 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124585937 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18496621 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117887267 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175107149 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182053983 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127183857 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159935165 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15135722 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.126691414 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20163703 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197857767 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142359761 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105178414 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237225031 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178304885 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150544008 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17811151 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229761842 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117053972 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149688714 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225721367 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216498582 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14208475 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227465998 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156252108 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108391546 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132439876 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181418915 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154812285 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162496451 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134443814 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.183197102 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232448369 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099517404 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139150094 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192568652 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133696626 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133341934 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163782384 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149539241 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110649164 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.15138461 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.153723588 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208743508 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178708599 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153395835 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165092742 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153164628 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251775627 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113682152 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151897669 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149831589 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120281622 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192019391 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197304735 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132267154 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231036801 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171671084 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20432123 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170282977 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136228422 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177955959 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130405073 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092927966 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2217182 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167544636 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161051096 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196160173 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226778947 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.184003039 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.181940849 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172675974 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201700293 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165703501 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157005416 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111421205 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162586692 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170286451 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124546441 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.145400844 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133162369 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120155049 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14387481 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134249729 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194875026 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197170595 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189505284 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162009504 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150270524 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182313147 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129441489 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174481571 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178497665 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149669838 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.197619743 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220750734 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185422988 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144656799 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200244897 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122062816 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097703503 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141703647 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170413182 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1346275 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135503035 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16366132 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181395577 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180056407 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174859448 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238543928 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173826507 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217570493 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095904755 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168824686 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186109018 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177074163 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.194015708 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144185293 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.149322412 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181438178 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158199823 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255850209 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168753015 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176638916 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235486539 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123531756 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132409337 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152876844 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19228759 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154013478 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176984445 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148590657 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142361001 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16256866 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134094874 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160696512 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182580127 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163608881 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219149051 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149911102 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187069842 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127670046 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1645546 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159130841 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165026381 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.08207211 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174507493 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233571069 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149597744 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169740869 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189477189 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13164129 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.310390219 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243971183 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197974962 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138584545 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156152227 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160379892 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163812401 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171787213 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179587602 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158675313 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188355044 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16040994 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136565202 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113490088 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150419216 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151279717 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132126125 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148769309 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177626575 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138934416 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186261948 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162366145 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159939002 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172487515 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.15053435 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.142968999 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123586862 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244283615 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183868839 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240333959 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151993268 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.18090026 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204056849 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127970491 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132552457 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105185154 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177855051 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138128162 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220564068 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.188395338 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207137914 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213214674 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193411434 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14012084 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.091871213 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157130153 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173140116 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236381499 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155452813 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159643865 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228981414 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.119907427 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133413819 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178676947 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299581974 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147659639 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224796685 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081119561 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.284039081 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128415604 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104992356 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16444312 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23781626 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135617248 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.165753208 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197156916 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17200536 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165355303 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149021615 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190926671 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217328898 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230877425 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180996053 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133292113 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158049901 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177580273 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192043059 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156575436 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141323472 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231653133 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196594289 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.197280264 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143034914 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170762463 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169291963 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159358157 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215522 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108104015 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235457839 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106058542 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223199212 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152771634 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144429191 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176534473 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189933809 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143603477 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189262847 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213191513 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107203471 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134328227 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169129189 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210488938 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156905431 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.101428363 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180364862 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126809582 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193982811 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261529065 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136261582 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155019781 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148176946 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108676123 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156360069 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158557386 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141846516 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.165864005 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206434279 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13660419 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190806702 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233027153 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170766283 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174427297 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146629952 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693151709 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131751205 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195555456 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160682982 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2345803 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121088296 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202360916 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130394879 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19754424 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198134885 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161563065 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231226238 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192576571 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.208512537 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104462255 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15855921 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163180533 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.14500822 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151422187 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169248306 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160177637 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.15496351 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177820205 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199000528 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107065161 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141508894 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199079707 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161969548 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211374896 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180311088 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110613263 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173129652 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219382249 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133267867 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.182167355 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236499152 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114600622 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152831083 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135014357 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.158741335 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26227528 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097861201 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235074914 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186094901 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160567267 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169520805 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.149116725 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221648226 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159707385 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188381874 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148840861 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161849535 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157343437 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109925291 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.132188148 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15676577 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168924452 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151638153 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159920843 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139949403 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221760288 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.0956016 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146465804 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291814793 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222951318 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215312756 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137913095 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136524849 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163534358 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152103089 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177194208 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181001526 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136415666 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106880341 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137681193 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.159296384 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113379071 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15855198 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196943347 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165745029 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238547664 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136899008 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.251096169 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141047582 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156950092 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087480985 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133627119 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152656226 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147481579 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160052357 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19436473 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269326922 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149718374 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.133619263 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123641526 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127656804 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135974807 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166210212 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165222777 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178652101 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146077254 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081289815 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158410161 seconds)
  done (took 83.638208987 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172286967 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.134798539 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149093715 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204430837 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17774948 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269286742 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211972883 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255541283 seconds)
  done (took 2.719529794 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.096214651 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.147607415 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158893894 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133703659 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092311676 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119442928 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.349945117 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134786372 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.118723256 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120349077 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.175476306 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09369908 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.556600946 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.09067608 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119381402 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109767515 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.09280639 seconds)
  done (took 3.848364748 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.480838898 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.735331541 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.518789821 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.098296306 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.244016499 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112896189 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.84183592 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.202486969 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.117592377 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.492555801 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.776340275 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.162415817 seconds)
  done (took 18.932257506 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.118014684 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136902532 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.12224302 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.153128178 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141024716 seconds)
  done (took 1.825198011 seconds)
done (took 132.790235123 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.106434211 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.404268635 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071146071 seconds)
  done (took 1.660729235 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.109419174 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137283731 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108558186 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136924772 seconds)
  done (took 1.650671327 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.100712872 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126365489 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109273178 seconds)
  done (took 1.489509961 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.324363879 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.190057549 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.170986469 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.108449909 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129065109 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103313558 seconds)
  done (took 1.497173247 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.10006809 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128054677 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.09808848 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130258227 seconds)
  done (took 1.615711195 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.096762417 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071021031 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100779796 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074715828 seconds)
  done (took 1.500204132 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.1157907 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13253746 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10286853 seconds)
  done (took 1.509289868 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.13134837 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.13901213 seconds)
  done (took 1.430721764 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.10785797 seconds)
  done (took 1.260747053 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.120332191 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169645018 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.189361053 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.165681501 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.237828081 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165837563 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.14109472 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113121225 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132367841 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.14494652 seconds)
  done (took 2.738708531 seconds)
done (took 18.294729813 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.105543068 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.518237316 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.411529743 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116352708 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.724521915 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379644824 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.033243862 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146994193 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164818331 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092750811 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139563491 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673404878 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.024637513 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.473792507 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.982069283 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377963594 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676995951 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122044267 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121568212 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094554104 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.016223448 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092861097 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122238073 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092165041 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704858271 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425492055 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095392768 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.375816815 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093262964 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126183527 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381728297 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123547098 seconds)
  done (took 17.175109624 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097165078 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173880418 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097102625 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138554712 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123660871 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094639144 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124598864 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092957304 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179339395 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122984696 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110229068 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121784174 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125464142 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095170933 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142577576 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091794611 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125382071 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092617667 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122559764 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120420764 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112393481 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12025982 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093340376 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122271693 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09352479 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135792289 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093021476 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121460885 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119602534 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100039773 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127488279 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094177582 seconds)
  done (took 4.883898174 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14345307 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18193724 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128465363 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126624202 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168289557 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124123663 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200218191 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117144721 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182907211 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123465975 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138704666 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093662296 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156701716 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09286023 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143290705 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120919048 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096399801 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122762497 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091967764 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123623581 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138544771 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093283552 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121880942 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092972873 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123183063 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108359894 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.1244869 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119979011 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09365777 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12583114 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099105958 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123419438 seconds)
  done (took 5.210073744 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.099842758 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126054859 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108481226 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138432686 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094816757 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126963744 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096780919 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124604427 seconds)
  done (took 2.078842124 seconds)
done (took 30.500990439 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113066392 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126389742 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107119437 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134662098 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102090379 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132155193 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.09103023 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.13395673 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132745199 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102818697 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136932005 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092331924 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122757203 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091636321 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135925341 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097341853 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133304201 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101217407 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134399245 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131714383 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094914229 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132426694 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10334643 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133104478 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104450038 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133672543 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137114707 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099386415 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122183757 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.093846887 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124692664 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104488008 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124205821 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104788823 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127816085 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096036284 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124438078 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093076896 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133430856 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132071603 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100141243 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133490544 seconds)
  done (took 6.063729589 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.109781287 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138730661 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10476965 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079957281 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117411589 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079763808 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138012639 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078559288 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109407241 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107701316 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074184485 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106848529 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078290217 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100666945 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077904121 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074850423 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108005062 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076710682 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076405359 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105638419 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079872808 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072125973 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107877262 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078388462 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07340189 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110428231 seconds)
  done (took 3.633676584 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.103210503 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134949344 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113674715 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184325737 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.159757164 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098584667 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132734821 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138629037 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.10980157 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120013185 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097397299 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148572563 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110178253 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129611084 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090936702 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137534173 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134895286 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094270935 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127482804 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112627547 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.13880396 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102381794 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143587821 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131886078 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092683732 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121993136 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097190439 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134928995 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097123597 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131274585 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09617344 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.12557651 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121965908 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104863659 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126112891 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094155147 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141638826 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102077962 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130930794 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091509286 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.125727275 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.1203182 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113689318 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168433514 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09054445 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130074806 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.097591268 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133343575 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121374735 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110156478 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130986697 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091430631 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124847204 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091261451 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121754617 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105813478 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123801314 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.093710289 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131847912 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.12369131 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105150907 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12489573 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107651234 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121824869 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100130582 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121540167 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.091950207 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122006138 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.14360498 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094711488 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163185295 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.092280784 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123768061 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.10080848 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129889541 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127145139 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093669242 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13622582 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102212272 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124718853 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101247508 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126302262 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094231472 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141874999 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.092782758 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125138014 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.120073358 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101293863 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124014738 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094079606 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13674308 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092286112 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124807683 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109562162 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122474409 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092874004 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.131271562 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126297077 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093110653 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134630399 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.107505735 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122548215 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.131017423 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093735819 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12389145 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102824139 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126711138 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.09191813 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126454375 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098298718 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123240528 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092267619 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.12604575 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.092701215 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132143406 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128334502 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098226147 seconds)
  done (took 14.862414417 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228822331 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.213559848 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.204755562 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.293251545 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136066281 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113319792 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.21092148 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.15629452 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.12273554 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.15856216 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17421563 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.179776324 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.136841592 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.213545681 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170633079 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093262905 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142825972 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.132401637 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.243485387 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.256727891 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144267728 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.099447962 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162485034 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159135343 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137536969 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.101622365 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.141067696 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.137778135 seconds)
  done (took 5.848873558 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.111768314 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154564106 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097706793 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144760571 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14899534 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092520302 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127637412 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093280569 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135586433 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134248513 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092810486 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12864875 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099439024 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132984423 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122348022 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102828216 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130929184 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094283162 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125430469 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096315252 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129390885 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100902068 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127638855 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.090789523 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13222801 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120261467 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085865831 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141523809 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.091328886 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.145493665 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120331684 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098687174 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.132287026 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093067369 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.12258082 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095282799 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125125196 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094664118 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124877586 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091043907 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122468153 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077452714 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122640801 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.10555942 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.129772535 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079861883 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129551708 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127236474 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096779069 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119440854 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097030345 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124615448 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097698361 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129865062 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099347526 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122977075 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096489162 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114964726 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099687601 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124182348 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085284892 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.119819715 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099716427 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117694214 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101208777 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128356056 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092050188 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124417373 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097851819 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128468649 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094478993 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.127062404 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090498757 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126491842 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095080102 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127885423 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.094791426 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123459183 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.09208682 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.124536147 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074904918 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123882694 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074246093 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125254725 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091512186 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121950975 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094796709 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129927876 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136989156 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095840409 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131323375 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094481051 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121505831 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095669281 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112882743 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096756765 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139018485 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141026034 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094370315 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121088999 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107679048 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125511841 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092329331 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.104756628 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10147121 seconds)
  done (took 12.973809114 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129418306 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154057463 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09357324 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.143154713 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154337157 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.15737377 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102413203 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130004021 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.09574571 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.14251614 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093484924 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131555072 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097189158 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138075722 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156798153 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103760142 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126323506 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107705581 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131840833 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169050265 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111155724 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142847202 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107333202 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123622014 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.097662019 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.140851502 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160825018 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106829587 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137785454 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.14046773 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108159818 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160628103 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112130729 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.128522543 seconds)
  done (took 5.532163361 seconds)
done (took 50.074772591 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.303214405 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.494147001 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.260012349 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.235942457 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.258800054 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.276215489 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.268445859 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.258112662 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.382880456 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.260922377 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.522063323 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.907563292 seconds)
done (took 59.615187873 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.259258492 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.391060978 seconds)
    (2/2) benchmarking "String"...
    done (took 1.52020631 seconds)
  done (took 4.092870299 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.694738238 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.205296987 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.520640218 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.254510539 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.256037505 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.544861093 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.011695989 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.601190182 seconds)
  done (took 28.575216935 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.266684786 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.343153431 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.283274954 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.264204347 seconds)
  done (took 6.340041113 seconds)
done (took 49.151235416 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.286767316 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.29816982 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.268462302 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.237545374 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.370583344 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.287479615 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.673565676 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.305865148 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.274642225 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.240832801 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.277640986 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.259746505 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.257975179 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.627029052 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.259967124 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.258265589 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.282113382 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.808319279 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.680130714 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.266817164 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.264448633 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.304811302 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.263302115 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.25836249 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.333529291 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.258279793 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.256484139 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.268603768 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.786431612 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.257536465 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.272058899 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.872221879 seconds)
  done (took 192.79929562 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.25746114 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.136997139 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.214240839 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.287112871 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.663015528 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.451575449 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.38664463 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.780259043 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.274895816 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.270713147 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.447586267 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.254811752 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.525026874 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.303336656 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.295007081 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.261425157 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.4699544 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.528335193 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.314344497 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.410004545 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.261924637 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.317052457 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.231997805 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.419819775 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.265336175 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.3401932 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.27312442 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.282343173 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.445779166 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.384016508 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.309450097 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.273832104 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.865981997 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.117948664 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.279830082 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.269123722 seconds)
  done (took 151.052972263 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.302848788 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.258103241 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.257988565 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.255218525 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.29094638 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.254529794 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.814331149 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.819112031 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.756365515 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.728287783 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.564795515 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.501496219 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.253515437 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.252561811 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.348996392 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.2665621 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.252048354 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.269849045 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.297938219 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.256943271 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.255676941 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.80583793 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.269464277 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.413023498 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.428742662 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.270035533 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.285802492 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.642715131 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.253182776 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286033619 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.580770836 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.302329449 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.253556318 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.627004294 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.624001329 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.366983687 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.25527905 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288249521 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.254903697 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.533532528 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.253465799 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.256155524 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.258945306 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.900707321 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.257210559 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.800578263 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.259866644 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.203836046 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.257813072 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.25376159 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.735695455 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.898866674 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.273699172 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.256076846 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.257987186 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.255584316 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.253687269 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.284885417 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.666358799 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.346166088 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.273305066 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.258013874 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.285961055 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.252240368 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.264935123 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.272601519 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.339788612 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.323760199 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.464165903 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.774180618 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.252390315 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.349303257 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.368757019 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.2505971 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.24881024 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.250963255 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.253866674 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.35924603 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.250932125 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.644663317 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.416534535 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.267805861 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.252294904 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.444968728 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.346488728 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.25161352 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.590122411 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.253723418 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.249680692 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.956583439 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.342925734 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.24937695 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.24894372 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.249520289 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.24992569 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.642902937 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.763357516 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.443315296 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.25066622 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.648517517 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.253056741 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.248776743 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.655268245 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.749587356 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.87176759 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.252880935 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.360108687 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.416276762 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.264756961 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.249395372 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.409934027 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.250792044 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.309814208 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.247998232 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.645697366 seconds)
  done (took 370.859331817 seconds)
done (took 717.200822137 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.9097067 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.897402254 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.011602822 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.892443308 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.863018569 seconds)
  done (took 10.746739996 seconds)
done (took 11.925764956 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.435787464 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.430623781 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.304789376 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.436175821 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.276207157 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.448082839 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.40997721 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.270298547 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.351036573 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.324691682 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.348920709 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.298401635 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.273582902 seconds)
  done (took 18.780827679 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.557892409 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.559991008 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.310281282 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.557612566 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.289137793 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.566274611 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.451170835 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.480983165 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.456844196 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.279859179 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.262879161 seconds)
  done (took 16.947817197 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.576431835 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.570087067 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.317116369 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.563596236 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.288411623 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.560638767 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.445886244 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.465671088 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.472828489 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.281118929 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.260245392 seconds)
  done (took 16.976360295 seconds)
done (took 53.885728456 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.261133405 seconds)
  done (took 2.433424194 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.288431865 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.451863688 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.275166248 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.261375044 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.259338376 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.258690582 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.26347582 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.257965386 seconds)
  done (took 11.491514907 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.25883684 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.25838518 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.253669638 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.254988009 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.254028783 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.256735429 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.257997387 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.256958666 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.258745654 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.256391283 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.254646864 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.256595212 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.256260467 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.258024395 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.254749488 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.254001113 seconds)
  done (took 21.274971435 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.258281736 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.254450326 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.254602465 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.253678963 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.256302011 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.256256244 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.256481895 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.256618971 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.256692176 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.254949558 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.256811587 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.25607099 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.257440216 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.255256536 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.255480809 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.257221509 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.257599103 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.257086528 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.258839478 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.256578545 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.255887879 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.257599657 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.257678682 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.257509776 seconds)
  done (took 31.332430227 seconds)
done (took 67.712026481 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.174014536 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.757483015 seconds)
  done (took 9.104812424 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.2603289 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.259532459 seconds)
  done (took 3.698131779 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.259874962 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.259272758 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.257852358 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.260823589 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.260227731 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.258754083 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.260520415 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.258242659 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.25850208 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.25826306 seconds)
  done (took 13.770685951 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.25783226 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.260065766 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.256095559 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.259822753 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.260418517 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.258884884 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.25919099 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.262674502 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.259738884 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.258707321 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.261809864 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.25847976 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.262712878 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.258023563 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.26130133 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.258103252 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.259517559 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.258644275 seconds)
  done (took 23.851442188 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.26100426 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.261769895 seconds)
  done (took 3.7010762 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.262087617 seconds)
    (2/7) benchmarking "second"...
    done (took 1.258137932 seconds)
    (3/7) benchmarking "month"...
    done (took 1.258006725 seconds)
    (4/7) benchmarking "year"...
    done (took 1.257763674 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.260033603 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.259235919 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.259082884 seconds)
  done (took 9.992910271 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.266411953 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.433613558 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.510900223 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.865836467 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.262707331 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.265560683 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.139612569 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.266673172 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.266682411 seconds)
  done (took 14.456255559 seconds)
done (took 79.759887316 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.259140221 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.274996769 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.324078267 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.268162987 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.274445332 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.599493195 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.269934532 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.381164562 seconds)
done (took 37.835981447 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.273701363 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.239942531 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.899700399 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.252378734 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.22822178 seconds)
  done (took 18.798421645 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.200533814 seconds)
    (2/2) benchmarking "read"...
    done (took 1.595552296 seconds)
  done (took 4.975765852 seconds)
done (took 31.233692954 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.264463434 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.260485953 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.263084198 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.261421058 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.260222457 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.263467194 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.260023828 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.261695778 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.264252131 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.265040416 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.263489301 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.261852289 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.26287033 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264026124 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.260167702 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26061517 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.263304271 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26090869 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.263529252 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25952508 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.260534555 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.262607484 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.261973288 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.260227611 seconds)
  done (took 31.470954048 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.264236721 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.260017539 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.263920528 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.264543652 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.260860141 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.262784847 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.264573572 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.262261538 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.265176522 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.263257849 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260900036 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.261530737 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.262448211 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.261348459 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264138931 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.261179742 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.266281788 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261053642 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263747762 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.262532126 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.264213704 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261847619 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.262314466 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.263138976 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.264280146 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.262249082 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.265210675 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.265645135 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.264624417 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.262200197 seconds)
  done (took 39.071956635 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.269398376 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.271380237 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.264679727 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.264487516 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.263567954 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.265101144 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.263710043 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.26566107 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.264379357 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.267604013 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.265997252 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.266357281 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.266161556 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.266371597 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.266594269 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.267065261 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.265462164 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.266718508 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.264397656 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.267412488 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.2659704 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.266954323 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.266133802 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.269246425 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.267604082 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.266886798 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.267040547 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.267708616 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.267128193 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.266918027 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.268723883 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.268182477 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.267032759 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.268731534 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.266433643 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.267658083 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.269866419 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.275894865 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.269911278 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.268473502 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.269423038 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.267375709 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.269904999 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.267461901 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.268395053 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.269120963 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.270557144 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.266084443 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.268689876 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.26737998 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.268632785 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.268751573 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.268262331 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.269374912 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.269153891 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.267650263 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.270469365 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.265706758 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.266882901 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.267874099 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.270658134 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.269849222 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.269961375 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.268407905 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.270519723 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.270578614 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.270241895 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.269997137 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.26992111 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.271199781 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.271030874 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.26999288 seconds)
  done (took 92.477730549 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.270071227 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.267614516 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.267217426 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.267360374 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.26794787 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.268567101 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.267466341 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26879667 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267336629 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.270476621 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269989309 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.267853399 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267915464 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.27081739 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.269860251 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.267347093 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.271549953 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.268536519 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.272425051 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.271003296 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.270039549 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.268596164 seconds)
  done (took 29.104238646 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.272439121 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.273494549 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.268589522 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.273447467 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.270469677 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.270971349 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.270138509 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.272796482 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27072614 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.270088238 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268159091 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270486636 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.270091748 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268857593 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.269958491 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.270555252 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271487621 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.27148799 seconds)
  done (took 24.061399975 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.268791467 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.269266277 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.272150862 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.268721597 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.270270374 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.273084736 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.270860264 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.272636128 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.272302203 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.270590656 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.273480256 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.272425672 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.274057085 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271572181 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273175968 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.269524334 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.274888347 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269519827 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.273233586 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.270147011 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.269505146 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.274472423 seconds)
  done (took 29.161996817 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.275674073 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.273029623 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.27072708 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.268915001 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.270251892 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.272633877 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.272893513 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.271160952 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.274796401 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.273337428 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.270422222 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.273007798 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.273903988 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.27124891 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.270823053 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.271298408 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.274761183 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.27273831 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.274383245 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.273424583 seconds)
  done (took 26.63761038 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.276876994 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276220046 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.275752452 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277880939 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278166026 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.277373981 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277196028 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.276708651 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.275389263 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.276741055 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.278347303 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.276027768 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277054095 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.27777282 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.277865935 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276355492 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.279695075 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279729187 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.27851907 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277987932 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279291069 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.278584629 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.278535328 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.278746913 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.279018849 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.276174264 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278178804 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.277619756 seconds)
  done (took 36.964338839 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280931306 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.273508198 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.271347747 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.27232695 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.270761209 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.270759105 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.272929918 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.271803512 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.273604601 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.269314323 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.271105254 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.271806135 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.272286743 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.270644927 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.271083793 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.271649989 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271652585 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.266736847 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268079945 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266945505 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.270140689 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271534586 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.270289034 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.266597612 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268810929 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.269179959 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.267610473 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.267833731 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.269146667 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.265376739 seconds)
  done (took 39.309530842 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.288930722 seconds)
    (2/2) benchmarking "in"...
    done (took 1.28497406 seconds)
  done (took 3.758479074 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.264353855 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266897308 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.26523971 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.263796569 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.265652832 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.266559167 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.263308511 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.262054227 seconds)
  done (took 11.300001979 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.266284607 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.264584894 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.265795593 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.265485673 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.267627083 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.264442836 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.270484082 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.283657099 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.266042752 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.265787328 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.270912598 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.273358512 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.26931552 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262615354 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.263220082 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265697864 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.262799406 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.263765195 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.263936404 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.264919606 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.26662537 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260858674 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263223935 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.258783258 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.262659155 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.269228686 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.282215714 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.261826512 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.263187764 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.261570386 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.258527123 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.257963311 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.260463176 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.260088178 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.261167514 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.261085053 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267370416 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.275674764 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.263836765 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278552895 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25957789 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.256393255 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.259255474 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.256865076 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.260978906 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.258687194 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.257118144 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.255930441 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.258014904 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.257765317 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.261615562 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257757869 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.255751218 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257180373 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.25798156 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261543046 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.274393452 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.258120591 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.263190258 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.264759217 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.281936758 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.272690376 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253809728 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.254901057 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262566031 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.273488161 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258006411 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.267394339 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.250914943 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.251437579 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.257561115 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279080338 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.273503092 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.252348816 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253891412 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.250757112 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25074335 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250431276 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254977451 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.268258181 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.247357286 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.250999992 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258301879 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265599637 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.249938171 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.248470927 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.248706635 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.248540715 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.247787746 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25763872 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.26609578 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.247791386 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.247607643 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.245231107 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.246845658 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.249304636 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.246666752 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247818467 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.244940842 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.245148873 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248830586 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25017121 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.253348224 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.246482633 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.247142993 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.252207688 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.263401551 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.247146709 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.250292314 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.243454747 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245008691 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.246586706 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.250050256 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.240409519 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246596469 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.250106833 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.245492268 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.245247387 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.243995157 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.245529142 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253121229 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.265077904 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.246236788 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.244235923 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.249476036 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.252515873 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24272692 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.243608608 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.242164682 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.240445368 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.240600325 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.243555823 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.242488219 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.24117332 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241258471 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241502594 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.237952759 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.240795671 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.240480555 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.240984871 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.242873745 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.239551868 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.240344178 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.239398287 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.239798786 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.239637076 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.245016476 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.255518622 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.239920487 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.238299768 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.236689033 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.239438014 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.238435037 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.24077408 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.238789562 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239653878 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.23901716 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.237024975 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.237962522 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.2393061 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238655486 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.237456021 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239297087 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.238219219 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.24172722 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.236311126 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.236658157 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.235781188 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.237551257 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.235316944 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.235914046 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.234994618 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.239623466 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.243320873 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.234564686 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.236635922 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.236749937 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.236750745 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.237302057 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237270623 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.238641659 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.241496377 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.238083672 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.240507004 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.25417171 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.236849637 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.236282545 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.236405171 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.235937618 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237973903 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.237961819 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.242956747 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.246044272 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257187819 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.237736634 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.239084779 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.237784836 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.240362109 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.237774593 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.237073034 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.236746351 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.236134291 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.23440234 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.236224054 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.239414626 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.236899566 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.23513602 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.234256538 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.235401954 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.237661854 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.234137784 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.235953193 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.235533611 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.229650235 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.233864678 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.235102138 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.233391714 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.231240246 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.23321824 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.235061794 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.236505926 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.235499579 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.240876963 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.230873339 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.234295002 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234115263 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.233980961 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.23202462 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.23418133 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.236216205 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.233088354 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.238790719 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.254001807 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.233747461 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.239367391 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.251427472 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.23357974 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.235459228 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.232501026 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.230147949 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.234482206 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.239543053 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.23176961 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.234851061 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.234274421 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.234541664 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.232685965 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.23755022 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.247579904 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.232507943 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.232457196 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.232590399 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.229039413 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.232960386 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.231926601 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.233286382 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.233435746 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231337877 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.234679188 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.232319166 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.234267208 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.234773656 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.235493143 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.235737668 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.241231018 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.241154429 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.233593169 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.234669049 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.23617837 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.2367761 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.233340818 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.235423268 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.232925108 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246665817 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.256205093 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.239694175 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.251436783 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.236804389 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236687171 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.251949727 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.234638507 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232044205 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.231533912 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.231222227 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.231380838 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.231509268 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.23552311 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.233638243 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.235243962 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.234218626 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.236015026 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.233958228 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.23258041 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.23565728 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.23471785 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.234618155 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.232628409 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.234636569 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.234865624 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.234714977 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.232559332 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.23447539 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.238920048 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251016053 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.234478101 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.235386883 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.233055195 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.23473352 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.236445515 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.237628156 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.237357581 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.242874834 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.238240768 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.242037456 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.237726895 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.244742274 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.235591826 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.236207171 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.244109701 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.234302454 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.233120004 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.235271387 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.237137138 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24317506 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.252551485 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.236828303 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.242541366 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.236933679 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.238430448 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.236255699 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.236158403 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.23677415 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.233694179 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243811579 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.254196648 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.241084592 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236171382 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.234734107 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.236687205 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.238256152 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.235051919 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.239061983 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.2365431 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.238314201 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.236176346 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.236304102 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.237523908 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.236300979 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.235050266 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.234060651 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.236254635 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.242667762 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.25579847 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.241305799 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.239596068 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.242878535 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.257418393 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243951192 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.255470228 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.236764345 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.238627605 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.238916158 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.237026667 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.235654122 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.236330623 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.23778638 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.239824894 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.240189415 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.238183923 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.238776007 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.237025942 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.238735524 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.238963072 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.245573176 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256894982 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.238082801 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241838406 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.234742131 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.239222279 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.242801344 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.239459798 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.237429736 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.240715214 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.247280974 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246338935 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.237403495 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.238957802 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.239364982 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.2388661 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.240429879 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.23868463 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.238880246 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.242148258 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.238346617 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.24126819 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.241406162 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.239725334 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.238107105 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.240577808 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.238591876 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.250133148 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.261624857 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.240991416 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.241546586 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.24029761 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.241577362 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.239393297 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.240407407 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.242007983 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.239905563 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.240160537 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.245933686 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.247461553 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.242306032 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.237355381 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.239610515 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.241088764 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.24301521 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.242695492 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.240733205 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.242194857 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.243802019 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.242418303 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.242319079 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.241270571 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.242057661 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.242059751 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244288633 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.242470433 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.247506499 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242449944 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.238335888 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.24133746 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241883574 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.242521178 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.243634321 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.249680891 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263719049 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.251388992 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.250323234 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.247457602 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.244435592 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.246792505 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.250918567 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.24164369 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.244094236 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.24561124 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.245223624 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.24273885 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.24398986 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.243555803 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.249757371 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.259572401 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.244227035 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252518472 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.262122542 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243507317 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.245539478 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.248907417 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.244275243 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.243858279 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.243136761 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.241308987 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.250773011 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.256784393 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23816245 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.238933548 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.23831804 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.236310133 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243756229 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.24181772 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.24109272 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.236565128 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.238618992 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.238804002 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.240273864 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.236085357 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.235605584 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.239365056 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.242227491 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.242579548 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.232909569 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.235317272 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.236207906 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.233744449 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.234525475 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.236219585 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.235695368 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.231791429 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.232241092 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.233530328 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.238289089 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.237389795 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.234308505 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.236164606 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.238167855 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.236478105 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.235948938 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.243058279 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.241482576 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.236288163 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.2364991 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.236605538 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.240579549 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.238354318 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.239467049 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.236781694 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.236014628 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.236210746 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.239277853 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.239115991 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.236641204 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.250674833 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.255978515 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.235698939 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.237252394 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.23987677 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.237661063 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.233404863 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.236712432 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.239404904 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.240348595 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.241818108 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.239238633 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.242195424 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257981635 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.239344222 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.239805427 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.236329061 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.243811439 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.239513014 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.239486049 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.23610434 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.242350273 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.249718016 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239012497 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.244646914 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261511476 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.258030601 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.240073435 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.240165791 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.236003038 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.239653384 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.240450393 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.23873799 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.23909771 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.240344192 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.241507075 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.239720415 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.243360725 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.240210696 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.236531625 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.23543459 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.239275027 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.239451746 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.236555009 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.240778532 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.240629714 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.239787843 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.240753315 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.237478504 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.240116281 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.248888947 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.262667088 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.23923633 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.240142543 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.238259562 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.241656906 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.239857275 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.245179947 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.246687188 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.240593066 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.240981239 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.241822202 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.241068481 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.241272862 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.243058314 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.239159066 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237225896 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.239894784 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.250750564 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264259333 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.242310132 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.239612597 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23996989 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.243455427 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.240621121 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.241942143 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.243267801 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.243188037 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.242439641 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.247317725 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.241348495 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.239832001 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.244054986 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.2474897 seconds)
  done (took 742.46047815 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.23742981 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238764754 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.237270665 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.240630848 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.237987328 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241124563 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239245459 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.239610598 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.239124362 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.240694945 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.240734404 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237866958 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.240205521 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.237857538 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.236568576 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.23819205 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238544046 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.237417901 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.242159813 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.237518197 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.240563329 seconds)
  done (took 27.18208768 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.244068904 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.241812965 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.243198923 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.243691029 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.241188054 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.244078264 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.240835433 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243875016 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.242760562 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242620303 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.244021232 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244102898 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.240900203 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.243803873 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243448396 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.244236876 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.246067195 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.242749245 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.240460805 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.245068846 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.2455959 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.244191276 seconds)
  done (took 28.513776675 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.24777009 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.246411415 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.245563578 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.243953766 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.24631335 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.243849652 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.246310661 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.243155376 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.243021229 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.24419768 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.246083146 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.246761336 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.247877351 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.247251217 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.247182042 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.245901269 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.389902993 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.247280938 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.248001664 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.248876902 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.244675316 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.249386187 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.261162255 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.245296225 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.245494512 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.248985828 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.244393436 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.248485365 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.245157956 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.247165218 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.249360624 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.248044268 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.244422015 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.24332706 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.24518271 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.244320574 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.248058309 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.245562559 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.241222209 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.246324489 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.257315515 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.260564529 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.246498328 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.251878504 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.265092067 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.247815457 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.248261256 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.256372838 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.249771706 seconds)
  done (took 62.44911703 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.247874265 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.247310799 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.242227936 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.247545242 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.247279149 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.248281778 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.245741219 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.247122749 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.243517635 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.24239007 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.244934251 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.244540218 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.242766628 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.246352191 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.248183326 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.242467342 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.246616329 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.243824721 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.243738661 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.247725376 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.245461743 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.24859027 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.248975395 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.244442925 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.2464064 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.242764696 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.245906211 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.245925726 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.246655203 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.246090927 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.250946942 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.247029486 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.248652142 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.247205448 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.247389642 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.245802997 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.249830624 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.246182219 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.24600505 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.249428508 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.247507864 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.251403101 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.251166389 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.248799566 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.248565784 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.249077821 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.24819628 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.249211232 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.244435376 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.247185329 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.248245336 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.247796112 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.250447575 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.248723624 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.249833972 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.250368665 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.249473604 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.249819895 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.249092407 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.247720083 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.250606588 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.248264355 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.249440871 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.25194697 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.251749772 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.24713578 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.248335864 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.250917924 seconds)
  done (took 85.994820032 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.251687191 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.253110175 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.253490737 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.251122673 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.251297005 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.25179073 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.250315535 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.249192412 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.251260172 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.25179476 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.251911397 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.251241206 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.250042066 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.253596359 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.252394961 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.253505225 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.253875568 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.25383841 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.253158617 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253476389 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.252797994 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.254710029 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.253128723 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.256130088 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.252111686 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.255775787 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.255397951 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.252200684 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.251579967 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.253799042 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.254605162 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.254129516 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.252827124 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.255058745 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.256956509 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.251977683 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.255828594 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251968115 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.254931313 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.256425657 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.251645855 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252374636 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.255969619 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.253461881 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251697141 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.255040382 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.256803942 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.255901856 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.255677362 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.257018592 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.251520036 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.255685845 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256706623 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.256953178 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.255604075 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.25515256 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256587401 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.255573675 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258531065 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.257838923 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.25551817 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.25614416 seconds)
  done (took 78.913979769 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255986409 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.257209613 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.252459408 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.255006695 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.255188511 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.253317713 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.253412286 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.256691386 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.255313515 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.256031298 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254463556 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.252781201 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253230533 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253952233 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.257348298 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252357435 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.257634082 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.255906314 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.254419271 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.255259423 seconds)
  done (took 26.271613812 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.254797375 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.258410947 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.254212712 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.252979811 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.256837786 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.254243792 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.258188293 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.256657718 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255504534 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257881836 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.257523056 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.259433234 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256759619 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.256072494 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.261785826 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.25496977 seconds)
  done (took 21.280503377 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.258323464 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.258632201 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.259860288 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.258106104 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.257924318 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.257287821 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.259238418 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.256314718 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.256968606 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.258745734 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.259045057 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.259597324 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.259397903 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.260201399 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.254906644 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.258619468 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.256810078 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.256332423 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.260351309 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.261472441 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.257281253 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.25634205 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.260116942 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.259703837 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.26120791 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.258460984 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.261120811 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.258815085 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.257682892 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.259137614 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.258034711 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.258437918 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.259077606 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.258440768 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.26206291 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.261619288 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.260806532 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.259370475 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.261921711 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.262450071 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.261523289 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.258712024 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.26125331 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.260343236 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.25704535 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.260460115 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.258227275 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.259704683 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.255571705 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.258933316 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.258967011 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.262803637 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.26182783 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.262245136 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.259127035 seconds)
  done (took 70.434381468 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.264920194 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.261726528 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.259032442 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.258955661 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.261685425 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.259512251 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.2610611 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.26264505 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.258124861 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.260318102 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.261326686 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.264320926 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.260321797 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.263581321 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.261868073 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.262758297 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.259780716 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.259103515 seconds)
  done (took 23.880928981 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.261190037 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.259890345 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.264462021 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.260480535 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.261071526 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.264720681 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.261529156 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.261847548 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262430925 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.262605659 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260226012 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.259792405 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262838849 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.263626305 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.263215741 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26023813 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.263978969 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.26179962 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.260887845 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.261752289 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.26253818 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.260734048 seconds)
  done (took 28.942898575 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.264010084 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.263720663 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.262853704 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.276701856 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.275310963 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.285611865 seconds)
  done (took 8.808145613 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267395482 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26252104 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262690033 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266054516 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260819255 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258812927 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262217296 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262926163 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263899753 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261795252 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262416302 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265465677 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263573239 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259851866 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265655453 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264231158 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26256726 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261459603 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26237462 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266033513 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262570634 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26631072 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261880528 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264732243 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262398191 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263414192 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265606219 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263467511 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264712524 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267118233 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263378586 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264705114 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265438332 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264987324 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265651407 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26585567 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259987728 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264027381 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266600075 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263202182 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.264058473 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264823951 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267354352 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261753648 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263962894 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261197899 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263466661 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264550273 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261252981 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266176207 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267309548 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262076281 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265499561 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266049416 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269993148 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26821378 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266129803 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264708614 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265765647 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262632005 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264682202 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265904232 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266708297 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267436613 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269216678 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265773327 seconds)
  done (took 84.648342454 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266064336 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.267494619 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266887415 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26814063 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263401614 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268220915 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266209226 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268119747 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264814347 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266346717 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267527172 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265415297 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266319959 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266995501 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266567235 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267539445 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266861572 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268345861 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268647717 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273125953 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267233079 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268254035 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265893312 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266180826 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268460317 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271494267 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267496714 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268528889 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265913904 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265034914 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270853805 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26715979 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267921989 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.268171693 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267784085 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268194934 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265841625 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27066504 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268377041 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271187493 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267333687 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267527276 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264892876 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264602366 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269199277 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270565437 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268066005 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269167817 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26917433 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264627698 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268652365 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269366936 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271325083 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269427134 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274059247 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272801694 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269201775 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26748324 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267479194 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268480511 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269843048 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272224788 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268509283 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26845328 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268952165 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269750148 seconds)
  done (took 84.881710963 seconds)
done (took 1739.167912112 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.319502891 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.369485333 seconds)
  done (took 13.87455499 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.430904772 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.385382274 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.267567741 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.305095533 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.266213033 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.287339676 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.285515216 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.266837338 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.271141824 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.270510577 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.267348629 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.459132757 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.317257152 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.265825974 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.270362391 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.361852634 seconds)
  done (took 42.165248191 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.290093144 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.278229006 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.380673556 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.295961813 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.300532405 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.455474069 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.32739249 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.278115335 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.434010014 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.315780199 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.777118937 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.29835702 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.276944942 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.329959846 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.287203051 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.45456723 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.514400695 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.758777282 seconds)
  done (took 29.242647063 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.695468675 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.2930658 seconds)
  done (took 9.178970493 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.295018213 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.279567289 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.278049678 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.276280681 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.266260598 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.264749579 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.274866442 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.271082195 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.694110063 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.397210671 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.282005173 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.280879944 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.29334432 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.280269194 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.272369742 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.309642889 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.429815713 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.276894147 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.272214031 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.281011779 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.279020598 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.359803704 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.31868064 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.276256352 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.393502055 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.70781649 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.282988241 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.282777141 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.40422816 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.278135301 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.2757402 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.274008968 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.278534085 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.879663154 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.807058398 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.289853573 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.314247399 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.286585501 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.273689927 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.428340733 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.281248115 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.282374819 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.271525396 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.794658519 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.403122574 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.387348858 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.463912055 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.296789937 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.278251119 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.33148964 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.274973847 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.277775594 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.303889077 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.024428334 seconds)
  done (took 107.831340314 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.306442517 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.657084544 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.441488179 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.290848452 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.982989482 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.952593769 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.285653262 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.541410706 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.34694989 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.270329432 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.564057197 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.769039453 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.288683612 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.333578029 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.736032696 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.31219811 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.271792446 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.977194726 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.291317228 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.271001556 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.755248936 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.276192843 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.274239249 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.485542886 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.308213396 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.722202631 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.598625452 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.816749992 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.291964062 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.268203903 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.729109958 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.296352359 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.291484142 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.275251418 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.530293584 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.619456443 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.60615803 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.292445631 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.322143925 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.27316485 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.287853737 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.715644941 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.625624862 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.293610203 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.29376094 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.731255972 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.29576578 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.273226403 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.281081595 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.47758857 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.919812156 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.278335602 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.588776401 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.276366312 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.563950865 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.346200625 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.333184097 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.746152408 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.290861084 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.452387307 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.298474086 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.27486716 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.272235102 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.272683426 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.273022339 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.609910705 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.526111913 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.276486581 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.609032243 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.745164478 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.294469074 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.794115101 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.138024783 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.298376512 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.331425706 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.271811852 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.836068438 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.758502594 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.321834642 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.271179736 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.596865432 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.296443562 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.548102082 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.292167784 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.270835023 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.767455434 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.275585728 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.327541437 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.281465877 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.284397219 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.027235945 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.281919335 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.556999141 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.302760615 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.275029852 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.275314403 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.326314045 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.272244168 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.295659243 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.284587248 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.791032304 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.301689286 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.255233398 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.296460807 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.280420784 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.280595903 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.275628296 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.278334322 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.500697012 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.730126173 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.300473631 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.277286215 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.275092718 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.284103284 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.456999521 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.284727473 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.571583502 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.301862816 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.277121468 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.281755261 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.930475039 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.336667167 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.276913573 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.297288724 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.170989118 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.486188619 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.297161899 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.282742626 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.278253495 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.299190133 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.47188883 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.298880226 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.36971551 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.281560585 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.968184083 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.299989612 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.281933605 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.572211501 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.28711297 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.149503087 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.308535879 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.278704351 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.564191634 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.540282274 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.489585173 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.281271577 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.299903817 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.956018242 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.321438219 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.421961871 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.29751668 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.257386941 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.483586543 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.398320876 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.280637782 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.871706148 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.280365659 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.497957674 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.284327048 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.58017091 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.760277304 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.299733543 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.286609795 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.977302094 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.97491775 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.045968433 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.285928023 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.553095026 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.255940339 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.747059245 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.279668514 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.278749454 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.863042132 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.285463844 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.279800625 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.277175601 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.282193501 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.337641204 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.456138532 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.483972738 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.281704645 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.722362283 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.33620045 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.279850062 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.298138059 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.283260518 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.628299565 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.312047594 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.28409188 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.290230122 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.284788562 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.286349769 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.744602413 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.21984484 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.283475937 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.434170171 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.904283324 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.299357459 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.281606448 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.886437553 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.515734323 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.815103789 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.343468512 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.581452073 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.30956634 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.320520209 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.928479802 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.324022822 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.745263681 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.307366464 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.287278377 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.872439506 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.303540745 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.377690597 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.281772319 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.280690149 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.813527817 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.302565763 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.283814019 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.474714911 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.30611716 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.557937093 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.288087331 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.320815585 seconds)
  done (took 1097.42958172 seconds)
done (took 1300.919627894 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.28369319 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.281522149 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.271430243 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.287425974 seconds)
  done (took 26.329102458 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.291647313 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.289380962 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.29063751 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.289058784 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.291785999 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.293711281 seconds)
  done (took 8.952512807 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.324057871 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.279590703 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.287981776 seconds)
  done (took 19.097586206 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.483745611 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.555629882 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.626966238 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.450600301 seconds)
  done (took 10.323141471 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.295101522 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.297102442 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.298202289 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.294097877 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.296532532 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.299085725 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.296212432 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.296729597 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.297388879 seconds)
  done (took 12.876813946 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.298516721 seconds)
done (took 80.092569661 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.113092865 seconds)
    (2/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.871661579 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.178511152 seconds)
    (4/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.447576888 seconds)
    (5/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.062901102 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.550514462 seconds)
    (7/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.720370045 seconds)
    (8/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.849361734 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.331597246 seconds)
    (10/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.270131608 seconds)
    (11/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.267217421 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.332236416 seconds)
    (13/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.2674784 seconds)
    (14/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.334836893 seconds)
    (15/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.354341234 seconds)
    (16/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.296708903 seconds)
    (17/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.485022988 seconds)
    (18/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.315165015 seconds)
    (19/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.263869042 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.182983044 seconds)
    (21/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.720944643 seconds)
    (22/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.297172883 seconds)
    (23/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.313020634 seconds)
    (24/286) benchmarking ("sort", Int64, true)...
    done (took 6.282124666 seconds)
    (25/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.684798448 seconds)
    (26/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.42139792 seconds)
    (27/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.370069395 seconds)
    (28/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.37104987 seconds)
    (29/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.140956578 seconds)
    (30/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.686247124 seconds)
    (31/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.316969144 seconds)
    (32/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.283326532 seconds)
    (33/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.30685402 seconds)
    (34/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.054695487 seconds)
    (35/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.123966777 seconds)
    (36/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.340461536 seconds)
    (37/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.403279591 seconds)
    (38/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.840195337 seconds)
    (39/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.568675409 seconds)
    (40/286) benchmarking ("sort", Float64, false)...
    done (took 5.575493599 seconds)
    (41/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.319959781 seconds)
    (42/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.639930143 seconds)
    (43/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.988345512 seconds)
    (44/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.028116109 seconds)
    (45/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.578051219 seconds)
    (46/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.487791043 seconds)
    (47/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.376120968 seconds)
    (48/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.540812039 seconds)
    (49/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.296569377 seconds)
    (50/286) benchmarking ("sort", Int8, true)...
    done (took 6.293386399 seconds)
    (51/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.440092236 seconds)
    (52/286) benchmarking ("sort", BigInt, false)...
    done (took 6.287554512 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.151178198 seconds)
    (54/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.64313627 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.350297801 seconds)
    (56/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.323927832 seconds)
    (57/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.574210115 seconds)
    (58/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.318044035 seconds)
    (59/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.48106774 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.921102682 seconds)
    (61/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.26099162 seconds)
    (62/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.820161542 seconds)
    (63/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.536810936 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.643826905 seconds)
    (65/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.391215056 seconds)
    (66/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.268461943 seconds)
    (67/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.439236024 seconds)
    (68/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.471775635 seconds)
    (69/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.336084122 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.69996837 seconds)
    (71/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.752569656 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.644497026 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.878943049 seconds)
    (74/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.268775259 seconds)
    (75/286) benchmarking ("sort", Int64, false)...
    done (took 5.454142136 seconds)
    (76/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.622266602 seconds)
    (77/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.322229296 seconds)
    (78/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.222942317 seconds)
    (79/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.649253136 seconds)
    (80/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.307765989 seconds)
    (81/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.288165983 seconds)
    (82/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.30185679 seconds)
    (83/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.688169059 seconds)
    (84/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.080703624 seconds)
    (85/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.446616961 seconds)
    (86/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.275038193 seconds)
    (87/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.310144869 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.942314554 seconds)
    (89/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.872604859 seconds)
    (90/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.272715424 seconds)
    (91/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.672691184 seconds)
    (92/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.28782632 seconds)
    (93/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.091081443 seconds)
    (94/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.394378613 seconds)
    (95/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.757785617 seconds)
    (96/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.27346657 seconds)
    (97/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.322337044 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.144108676 seconds)
    (99/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.505790762 seconds)
    (100/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.46198303 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.922772468 seconds)
    (102/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.036891948 seconds)
    (103/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.379030782 seconds)
    (104/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.30573784 seconds)
    (105/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.308331703 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.212957634 seconds)
    (107/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.64847673 seconds)
    (108/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.324400178 seconds)
    (109/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.903963321 seconds)
    (110/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.833120649 seconds)
    (111/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.585439847 seconds)
    (112/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.309849661 seconds)
    (113/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.409360526 seconds)
    (114/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.002188776 seconds)
    (115/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.295658573 seconds)
    (116/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.046652481 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 1.81100003 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.33674401 seconds)
    (119/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.278917592 seconds)
    (120/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.670850672 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.570287419 seconds)
    (122/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.279219014 seconds)
    (123/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.052011435 seconds)
    (124/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.431980596 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.033572711 seconds)
    (126/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.292659537 seconds)
    (127/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.273976222 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.57195839 seconds)
    (129/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.327671965 seconds)
    (130/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.326616389 seconds)
    (131/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.663291688 seconds)
    (132/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.394483626 seconds)
    (133/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.29506272 seconds)
    (134/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.59182074 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.416470918 seconds)
    (136/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.314020062 seconds)
    (137/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.121360112 seconds)
    (138/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.891840161 seconds)
    (139/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.862257345 seconds)
    (140/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.055118058 seconds)
    (141/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.697111116 seconds)
    (142/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.382149522 seconds)
    (143/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.135439521 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.07171444 seconds)
    (145/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.379688228 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.327256847 seconds)
    (147/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.84760165 seconds)
    (148/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.275025408 seconds)
    (149/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.493775867 seconds)
    (150/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.404628391 seconds)
    (151/286) benchmarking ("sort", Float64, true)...
    done (took 6.29641971 seconds)
    (152/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.99606532 seconds)
    (153/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.344188332 seconds)
    (154/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.320625086 seconds)
    (155/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.418487352 seconds)
    (156/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.329065529 seconds)
    (157/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.303165159 seconds)
    (158/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.651382592 seconds)
    (159/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.313139012 seconds)
    (160/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.400820318 seconds)
    (161/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.755142868 seconds)
    (162/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.300281009 seconds)
    (163/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.480934576 seconds)
    (164/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.423308882 seconds)
    (165/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.121840108 seconds)
    (166/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.280140799 seconds)
    (167/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.299243324 seconds)
    (168/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.336045582 seconds)
    (169/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.278352186 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.69954708 seconds)
    (171/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.18441592 seconds)
    (172/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.325785265 seconds)
    (173/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.416186086 seconds)
    (174/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.332607564 seconds)
    (175/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.29566156 seconds)
    (176/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.501895156 seconds)
    (177/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.519481557 seconds)
    (178/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.400394337 seconds)
    (179/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.65281925 seconds)
    (180/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.350041215 seconds)
    (181/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.329839195 seconds)
    (182/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.282775442 seconds)
    (183/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.30047963 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.211714262 seconds)
    (185/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.115824682 seconds)
    (186/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.306214707 seconds)
    (187/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.678818162 seconds)
    (188/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.344151742 seconds)
    (189/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.68170483 seconds)
    (190/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.291798332 seconds)
    (191/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.286854635 seconds)
    (192/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.298686654 seconds)
    (193/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.319025154 seconds)
    (194/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.544184609 seconds)
    (195/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.279289656 seconds)
    (196/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.346389922 seconds)
    (197/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.556166233 seconds)
    (198/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.278686045 seconds)
    (199/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.320602733 seconds)
    (200/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.315474243 seconds)
    (201/286) benchmarking ("sort", Bool, true)...
    done (took 5.397573564 seconds)
    (202/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.371018688 seconds)
    (203/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.425029923 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.943233713 seconds)
    (205/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.055392266 seconds)
    (206/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.071829707 seconds)
    (207/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.398458415 seconds)
    (208/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.424573678 seconds)
    (209/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.329160872 seconds)
    (210/286) benchmarking ("sort", BigInt, true)...
    done (took 6.300430115 seconds)
    (211/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.393880165 seconds)
    (212/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.483724493 seconds)
    (213/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.959273245 seconds)
    (214/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.513813145 seconds)
    (215/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.888460981 seconds)
    (216/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.314533333 seconds)
    (217/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.035893234 seconds)
    (218/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.407026566 seconds)
    (219/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.325905823 seconds)
    (220/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.368894413 seconds)
    (221/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.366140525 seconds)
    (222/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.329191421 seconds)
    (223/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.285470666 seconds)
    (224/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.362461458 seconds)
    (225/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.344953008 seconds)
    (226/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.302935179 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.730923944 seconds)
    (228/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.324399366 seconds)
    (229/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.254300685 seconds)
    (230/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.295275112 seconds)
    (231/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.333810957 seconds)
    (232/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.314463772 seconds)
    (233/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.309887198 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.971361935 seconds)
    (235/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.335936262 seconds)
    (236/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.654175743 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.716257999 seconds)
    (238/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.108803692 seconds)
    (239/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.551868257 seconds)
    (240/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.32175549 seconds)
    (241/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.289730398 seconds)
    (242/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.557855694 seconds)
    (243/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.287934555 seconds)
    (244/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.299980305 seconds)
    (245/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.301744159 seconds)
    (246/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.287214262 seconds)
    (247/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.322510459 seconds)
    (248/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.386666437 seconds)
    (249/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.515049966 seconds)
    (250/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.313558535 seconds)
    (251/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.323116693 seconds)
    (252/286) benchmarking ("sort", Float32, false)...
    done (took 5.320346358 seconds)
    (253/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.287202958 seconds)
    (254/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.317070499 seconds)
    (255/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.329585672 seconds)
    (256/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.427383623 seconds)
    (257/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.328367695 seconds)
    (258/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.458992416 seconds)
    (259/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.719199352 seconds)
    (260/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.287240869 seconds)
    (261/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.302223051 seconds)
    (262/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.681288436 seconds)
    (263/286) benchmarking ("sort", Int8, false)...
    done (took 4.32508721 seconds)
    (264/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.317975826 seconds)
    (265/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.121517968 seconds)
    (266/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.306917048 seconds)
    (267/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.283714387 seconds)
    (268/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.495723702 seconds)
    (269/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.369960637 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.386095986 seconds)
    (271/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.322354832 seconds)
    (272/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.407205909 seconds)
    (273/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.417110243 seconds)
    (274/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.458046179 seconds)
    (275/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.089748679 seconds)
    (276/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.707815788 seconds)
    (277/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.338632363 seconds)
    (278/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.90438576 seconds)
    (279/286) benchmarking ("sort", Float32, true)...
    done (took 6.323429915 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.351680134 seconds)
    (281/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.898608534 seconds)
    (282/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.290007872 seconds)
    (283/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.292205907 seconds)
    (284/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.156755691 seconds)
    (285/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.350174048 seconds)
    (286/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.287479679 seconds)
  done (took 926.233720623 seconds)
done (took 927.449379304 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.341227813 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.334948987 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.317131879 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.339346416 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.430203791 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.342315627 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.328534796 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.32064006 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.369391654 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.368292118 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.316044965 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.34140578 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.322794135 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.31942976 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.319259287 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.336056682 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.346440247 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.321363659 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.336887166 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.329667782 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.335585603 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.319430329 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.369227482 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.340319729 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.320061735 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.318675369 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.319999037 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.340641965 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.431364105 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.324558416 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.323790941 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.32994441 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.346685424 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.32007371 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.311178952 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.338653878 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.333243999 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.331565029 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.325020803 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.354714143 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.731436945 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.332462738 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.323767643 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.32263254 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.32372305 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.324988179 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.323431013 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.329696123 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.337916913 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.336339124 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.719131378 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.343811275 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.324237647 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.322254485 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.332602927 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.322639357 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.325173121 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.341735443 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.34387229 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.340844792 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.3374637 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.327412362 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.320944561 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.335557788 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.331326299 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.756161695 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.329493371 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.326686507 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.733693608 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.338467844 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.755912601 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.341490134 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.325669044 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.336063081 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.354568933 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.347876011 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.319284264 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.319674241 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.331986218 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.318922666 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.333735429 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.33554877 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.327305274 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.3241561 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.340019198 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.345066528 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.329704713 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.324219332 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.332047587 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.341128181 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.331753639 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.334430044 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.326583093 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.318118777 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.330915381 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.329478909 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.32624377 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.327079294 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.329989127 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.332710527 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.733843281 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.352761965 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.321562687 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.320670657 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.322062336 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.335353393 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.746240029 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.341785783 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.349805114 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.373224223 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.327956881 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.337421081 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.329233378 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.345492811 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.337366918 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.329823559 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.322423033 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.340531507 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.73560361 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.35108562 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.32865357 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.321736929 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.346737726 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.328661974 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.32458297 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.357291028 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.326817434 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.343051973 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.446829918 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.336615907 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.358358806 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.326355853 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.330450999 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.352316595 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342325763 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.359474098 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.33144326 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.34594229 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.342720986 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.32770596 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.33541118 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.338652239 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.330532589 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.332279327 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.322542405 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.353394804 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.342467396 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.341203297 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.347493783 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.45004203 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.327377306 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.347824154 seconds)
done (took 223.694512097 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.387695288 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.317832224 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.410896119 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.325189617 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.425178765 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.423436679 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.320625379 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.321636496 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.318252491 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.700327436 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.322237167 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.321805384 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.32309893 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.325540278 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.405649743 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.327658597 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.32402764 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.669415827 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.327143367 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.398577249 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.325469231 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.325341902 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.326942177 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.704897402 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.328423916 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.32575497 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.398496495 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.322728793 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.672083388 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.324936632 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.324957675 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.670248996 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.415235869 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.344364446 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.337649625 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.334738126 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.428085857 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.343966045 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.408119385 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.409381429 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.412145075 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.367925392 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.323494898 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.32016942 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.329750923 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.329374861 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.328182387 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.356330329 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.326507053 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.327358875 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.6704206 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.338039634 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.327316057 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.326839104 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.326757837 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.361551755 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.327307227 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.330609611 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.416433837 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.329573776 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.39053428 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.709041679 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.706322654 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.330257348 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.32716979 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.32728682 seconds)
  done (took 147.968899388 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.396885553 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.400892282 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.439609981 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.3382771 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.380255567 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.443708391 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.337766579 seconds)
  done (took 10.97162155 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.33563692 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.331189272 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.380296103 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.377276118 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.330752255 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.477880334 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.331544835 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.341126833 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.326675065 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.380161277 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.330108323 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.330815287 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.337288656 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.326347438 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.378684733 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.340169879 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.4443605 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.332223853 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.333091333 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.486467766 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.327302562 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.335522787 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.376589496 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.343486629 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.329836652 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.336951037 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.895697033 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.333672258 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.327318196 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.329600906 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.32577326 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.368372685 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.331150347 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.328094407 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.328444075 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.446577818 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.333757542 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.328550498 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.333533955 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.32780808 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.334570345 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.331639804 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.33177995 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.327666068 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.331696782 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.351646029 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.332709864 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.327639741 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.332697233 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.331110287 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.381823548 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.33306908 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.326925167 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.327670526 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.385820257 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.339944475 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.331713566 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.332409841 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.33018772 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.327581115 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.490438731 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.383524446 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.334614345 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.379962611 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.333643282 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.333230858 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.328358258 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.33162872 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.384461188 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.334054707 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.38191964 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.332903816 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.490912507 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.355900478 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.335638453 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.33807996 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.335805544 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.335229185 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.331522472 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.340419274 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.33228815 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.336429236 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.340380399 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.33348487 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.330319453 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.436422476 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.442791049 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.333576712 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.347462651 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.338423968 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.332974932 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.385408099 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.3356209 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.333386451 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.386714365 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.450561457 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.3887986 seconds)
  done (took 153.026014756 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.340034476 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.341121482 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.334105821 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.347879818 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.331687307 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.332095189 seconds)
  done (took 9.268805878 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.33731524 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.332612574 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.334255289 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.332679086 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.332684715 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.334564741 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.338635407 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.337053705 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.340051344 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.336312079 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.334874906 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.334280096 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.333866283 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.337815877 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.336913195 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.336380825 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.332494691 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.332884061 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.334644612 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.335327019 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.433531058 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.3392778 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.338051379 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.339786601 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.341321838 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.336352033 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.343413264 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.337763202 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.335948542 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.344086385 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.352591501 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.34034195 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.339101477 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.342402046 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.340598107 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.336838605 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.338919158 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.338133061 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.334489615 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.336860077 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.340480258 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.338975491 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.337350771 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.338705854 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.339804651 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.343105214 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.340762188 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.343123258 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.341048906 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.338923373 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.334456639 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.335734705 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.336200905 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.335236565 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.335213672 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.356426592 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.342709396 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.338544184 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.340040812 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.340137219 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.339502631 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.335872527 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.33922526 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.341763849 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.346508726 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.338915642 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.342072561 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.343774453 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.342406682 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.340080971 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.337485177 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.335661877 seconds)
  done (took 98.71968379 seconds)
done (took 421.197596221 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.645945562 seconds)
  done (took 7.889502365 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.410665761 seconds)
  done (took 7.657626948 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.776726151 seconds)
  done (took 22.023122067 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.400231939 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.377037628 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.350452344 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.328815666 seconds)
  done (took 26.698272964 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.681083571 seconds)
  done (took 7.926538046 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.329692186 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.323921079 seconds)
  done (took 13.89729331 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.799083914 seconds)
  done (took 8.039508439 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.562119488 seconds)
  done (took 7.80633317 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.332976235 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.337348476 seconds)
  done (took 14.169245578 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.310077197 seconds)
  done (took 7.552299986 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.091861106 seconds)
  done (took 8.334611084 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.341069704 seconds)
  done (took 7.584809182 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.401868433 seconds)
  done (took 7.644748908 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.310269845 seconds)
  done (took 9.553830494 seconds)
done (took 158.033291616 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.329145483 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.331947136 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.324808541 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.331108581 seconds)
  done (took 26.560349782 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.369996967 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.370668396 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.373148311 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.386374265 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.372699188 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.369618429 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.363245292 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.363838404 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.377875268 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.369252881 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.369846734 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.37077322 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.36613342 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.359618419 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.371892391 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.368769701 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.378891544 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.368932394 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.359442146 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.37405436 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.336318281 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.379937768 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.371492598 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.334535463 seconds)
  done (took 34.073250873 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.85979831 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.405861922 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.488787179 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.391630562 seconds)
  done (took 7.390860967 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.391491575 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.388773579 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.401108312 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.436782046 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.465208581 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.399566333 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.362660569 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.360447647 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.345262471 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.390732562 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.466449226 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.407507413 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.47233909 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.336809426 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.567806295 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.333526789 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.334928275 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.390643189 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.445616279 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.45279069 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.336916687 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.390114254 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.399998717 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.406546295 seconds)
  done (took 34.931989789 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.340278074 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.35812887 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.340125403 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.338405729 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.343275314 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.334836957 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.336037974 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.337715107 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.336611118 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.345994898 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.334199963 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.350109811 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.335540694 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.335199313 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.34393773 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.337805795 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.344973143 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.336800147 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.3411382 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.347634408 seconds)
  done (took 28.065654882 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.335004972 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.18847034 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.687274134 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.590165463 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.335664982 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.329652813 seconds)
  done (took 27.714079628 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.410252182 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.557858076 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.341250793 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.69188991 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.773069054 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.350688757 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.344178824 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.579909845 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.889292324 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.883432721 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.391820332 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.409081355 seconds)
  done (took 19.871778192 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.347262111 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.337359607 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.350387483 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.355133347 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.390428467 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.356804304 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.34828019 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.33434381 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.391995985 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.413884108 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.355119631 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.396316389 seconds)
  done (took 37.627670784 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42295867 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384186604 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.203099202 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391078298 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.043296164 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.539002904 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.36756865 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.81269786 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.336014226 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607263774 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338876108 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423785771 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.587518046 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337828879 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.333074773 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.296974883 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.577378902 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813131479 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329476826 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.333561695 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360838388 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.333376287 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.432926097 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.364828597 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.539037728 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.468501655 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.587488145 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.103245233 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.620522387 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.340730678 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344935837 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.331642692 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603342245 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991755699 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452634546 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342839171 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346476894 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.873287285 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.327317363 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.341507198 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.279112981 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.332632486 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342157873 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333157321 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.267310933 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.332671196 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.807865473 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.337832908 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.043383715 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.332942214 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346933557 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426766213 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.335695741 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.321507436 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367656403 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.33719957 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.331201253 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425184232 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92314671 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.748992031 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.342049486 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.273747995 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.333285148 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.264691165 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97168716 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.452999525 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.339358632 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.338155025 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26924673 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.347030319 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352851514 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481433689 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.354085913 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.983353354 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024074551 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.35379576 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.263345639 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882339721 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.332823644 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.28762093 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.560894031 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.11209979 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270620272 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.275203828 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.268406848 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03344191 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340821352 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.707957537 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350653349 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.819861722 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.347462467 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35093908 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361425344 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.556789742 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.241319023 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335520977 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.26990625 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47707652 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356519092 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.799403778 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.269765542 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.337140502 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59104188 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.547172353 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341862835 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.325486563 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571477746 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340562667 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.359918261 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.346055249 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.351461384 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.905620306 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.368390611 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.757847612 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360201862 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.112723777 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062864109 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334089048 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.462881764 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.339264239 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576701947 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.087721607 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.218984134 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401805059 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.34123037 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.754345807 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.372501672 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.936007711 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.221307774 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.335342601 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.339984005 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.353871106 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.338756632 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.284195583 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.34215699 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341164204 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.133768882 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.562904369 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.336904765 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61831269 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270994862 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486395115 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.345552379 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.556984551 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.536141571 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.35237566 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.595763687 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344150163 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.345516458 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.349251784 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353485676 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436299171 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352412788 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.332000037 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.593413181 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.332281381 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.333029088 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.375182943 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.118027944 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339275915 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.336599171 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332114528 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926589102 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334197449 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.341655981 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.221954089 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.345279596 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398984381 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.337209321 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.341671208 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.117126163 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361573327 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.337426526 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.33425757 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562218765 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.342428393 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.366027875 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420411221 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.542407003 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.9143035 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366224999 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.265789014 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.043646609 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.025758834 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332354392 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.528722492 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.331948952 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342488047 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.343358062 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.348074416 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.90925594 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359438964 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.289307448 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.34286572 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.343929745 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.33882569 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333509791 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.09261796 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.792433042 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.349627996 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.350983433 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476511554 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.347558293 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.268398162 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.850060698 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.339336542 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.334436334 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.11038245 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368644412 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.286242828 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825093478 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.593388344 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.33384766 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366523207 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.463769881 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.371229519 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.334412105 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.301507196 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359445668 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.344362953 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343599785 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.346503985 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.347165643 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.704681246 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904433128 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068730944 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897994302 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.263065521 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.344088265 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.235163905 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.798999594 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273037887 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.992111592 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.520195915 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.817778672 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.282213405 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551226434 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.534614661 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.105642697 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.352816214 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.563729282 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.240162135 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.312788483 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367393692 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.547246287 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370332056 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.348880497 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.271504204 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.633758448 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606599736 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337364445 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416165755 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.799814002 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.317816742 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.136218131 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.378838334 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.632048957 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527162145 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.885624295 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.724225852 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.343453381 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.34434651 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840328265 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.345882551 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.863980791 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961024167 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.357343056 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.555145689 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275825428 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.350103487 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.350747271 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.33405076 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.609049725 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.339019151 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.613264184 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.348997165 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272910264 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.351602383 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877902295 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.217838233 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.344783182 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339787434 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082024802 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.340923624 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635457796 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.340328585 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.10469525 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361925104 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.273759804 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273969725 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.032974636 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.342596926 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315723464 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837875593 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.346506265 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340792099 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.343451868 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187817621 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.595656856 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.35362214 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.920773319 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587849036 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347514961 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364300328 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.439921443 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.351119288 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.322053051 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.234946566 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.577301301 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341235956 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.564220085 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.224535367 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.239822606 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.352456091 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.570456587 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.23433666 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.347016903 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594316537 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.073446343 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.353667903 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031076116 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384642274 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.352327811 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.352999128 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.342989852 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363279606 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42991497 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.351486425 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.352903445 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.351174969 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512657349 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351113684 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345580206 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.356359471 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435295128 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.795083536 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.100717618 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.120368235 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926780005 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116413229 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.946624326 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375902039 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.342296125 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341982272 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.27771582 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49545642 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.86877358 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615930771 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472364884 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.344851821 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365678409 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.344606215 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.353661158 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561865631 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618581045 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.313695551 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344607579 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.132349193 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.224556725 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.352524561 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.554914879 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845955217 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909135365 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460456383 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.35180574 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.814906051 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619491326 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.433920567 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344555711 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.934135371 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.365444882 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.65152785 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.368380258 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350459808 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492218938 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.35483534 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000866238 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.378826216 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.504672538 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.118480324 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.40560239 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.604484224 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.81587777 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.355360489 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930418221 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.069748036 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607912133 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415103664 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.355212269 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.449589702 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496479225 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.344021589 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.23289242 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345207769 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189759856 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.057633232 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.35560951 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933435567 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628307762 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.343452608 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.344326337 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376964201 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.355221087 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.569837967 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044894049 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.568699924 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.357340357 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.348557606 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.338048665 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933750796 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377553969 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.281405863 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.350489134 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598135377 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.608978134 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370552363 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.798521149 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.057736673 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900036741 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.317915993 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368714802 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35536228 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.056087195 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936765297 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.127538856 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853195359 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.004490045 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.347104414 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6436684 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.354091004 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.347807425 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647216544 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.351265304 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.356315333 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.366484668 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.935653743 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.132363133 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.366533816 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.457870136 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.285427923 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.574715039 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422490436 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301607611 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347843567 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.529280352 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.356684175 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480383249 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360843964 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.3584575 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353406314 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.108172916 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.628746593 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.356011335 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.334326966 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.336283264 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.364256953 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446934746 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620728393 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355372093 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.024234068 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.701984376 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.604971505 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.356157871 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.337120963 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.353033702 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351345596 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.068056817 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.360028779 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.354120188 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917179734 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.352984465 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.368568137 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.354846048 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.565977592 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562207856 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.351525087 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.363333942 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349240504 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390426117 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.250063875 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.11762991 seconds)
  done (took 1643.597676717 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.386313956 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.355431386 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.373946169 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.406191756 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.391713403 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.420922 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.428977496 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.40247567 seconds)
  done (took 52.433168368 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.361500433 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.506425138 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.381274441 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.362820446 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.368882812 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.354326312 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.811302879 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.370827021 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.360638615 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.361805505 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.358857521 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.356088549 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.004919246 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.367695579 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.352346846 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.339297402 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.360736153 seconds)
  done (took 65.649826662 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.351753411 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.939340728 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.453326747 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.359506081 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.395606146 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.377322489 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.167791947 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.419481267 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.357585264 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.697778284 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.012385722 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.356205821 seconds)
  done (took 85.157503185 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.371041586 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.368440592 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.369823789 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.369600399 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.370357425 seconds)
  done (took 8.118649828 seconds)
done (took 2072.44817639 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.358747482 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.040902145 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.964786549 seconds)
  done (took 5.275892036 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.501461969 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.550882827 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.672839975 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.676274643 seconds)
  done (took 7.674388952 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.63437936 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.72525083 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.545793953 seconds)
  done (took 6.177645034 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.632083663 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.375114567 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.37380356 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.357175256 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.362675006 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.361077377 seconds)
  done (took 20.354114728 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.359918238 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.360675739 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.360300111 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.361733404 seconds)
  done (took 6.717504549 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.337932505 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.078021083 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.340465629 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.358645217 seconds)
  done (took 18.387757931 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.107762764 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.124909956 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.10315075 seconds)
  done (took 7.608362153 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.38418774 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.385602648 seconds)
  done (took 4.043012674 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.650132541 seconds)
  done (took 2.923392393 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.374392376 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.412587488 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.389792567 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.325670573 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.579002279 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.625097387 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.955014437 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.550971197 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.308362919 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.522033341 seconds)
  done (took 30.316428177 seconds)
done (took 126.497142225 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.136939377 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.737681638 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.567080228 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.107349806 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.588535147 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.567209231 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.565744455 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.076170237 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.661788757 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.61507604 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.152181938 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.586601481 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.515273051 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.744923664 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.512521432 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.367733965 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.587499838 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.175261998 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.790672515 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.990259435 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.56943758 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.743979435 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.978341145 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.806330135 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.593698394 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.517200484 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.32167852 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.369690223 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.960638807 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.34104741 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.523576592 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.158617141 seconds)
  done (took 190.206126167 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.35763739 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.373253659 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.359825363 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.377653475 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.360776767 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.36555243 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.376177988 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.376711804 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.375935846 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.371853008 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.360419278 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.360041012 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.360517482 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.382607978 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.35963771 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.369081607 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.360876597 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.359524796 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.360099631 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.379068448 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.361628778 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.388735951 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.367644832 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.372013647 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.359893168 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.360608126 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.361202478 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.360530126 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.361473562 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.371913709 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.360184736 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.369707441 seconds)
  done (took 205.021158334 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.367417526 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.360676103 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.361120398 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.361935162 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.375360561 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.361714534 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.361208685 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.369859721 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.359971798 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.360946332 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.363671834 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.36477664 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.362345441 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.360121925 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.380408353 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.361758744 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.362638462 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.37918292 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.362396123 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.378209065 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.361903033 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.37545784 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.363971979 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.361500265 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.362032523 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.391100047 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.362861665 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.363225904 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.389322468 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.368071131 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.379660368 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.363019574 seconds)
  done (took 205.037530623 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.557834401 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.368606178 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.37009307 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.301880245 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.371254184 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.369130619 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.366035455 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.567540818 seconds)
  done (took 14.552710785 seconds)
done (took 616.100908352 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.62718348 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.341047935 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.568546384 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.395574902 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.130818532 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.407853652 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.389870077 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.559864839 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.298497423 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.566005313 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.633227691 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.405182976 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.772163909 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.388823706 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.641681536 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.490820409 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.285877372 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.402786384 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.70131431 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.890523645 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.647051147 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.819637336 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.580538431 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.290791179 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.783580555 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.813609279 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.063374639 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.268988158 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.407976652 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.707213308 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.967119289 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.301867407 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.44998104 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.451836979 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.509590874 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.489150955 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.306085804 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.451826167 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.59304138 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.599508647 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.928761993 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.107276962 seconds)
  done (took 92.71790059 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.355544348 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.355081118 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.355244494 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.354327572 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.357305188 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.355808573 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.355898012 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.354569022 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.355743908 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.356213348 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.354868294 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.357329013 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.356373587 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.356975646 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.355309448 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.355906395 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.355791765 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.358432269 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.356604296 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.356627167 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.356632648 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.356632998 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.357171951 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.356238666 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.356079856 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.357634577 seconds)
  done (took 36.542926551 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.375259726 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.62262916 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.779919201 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.38054476 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.373674399 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.37873317 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.449629787 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.375713837 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.37739336 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.376809308 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.525766516 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.376702804 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.408325481 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.806385588 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.37840482 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.375905419 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.375800442 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.376110787 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.629204524 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.385097168 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.471437066 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.37735361 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.452528848 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.385717173 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.39521116 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.375520871 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.379971209 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.903037357 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.39493463 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.528495452 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.165593326 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.457855182 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.867799157 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.809063108 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.163880959 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.385310089 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.377399893 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.532659057 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.377950759 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.375132536 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.451499521 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.377580763 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.788219162 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.011086683 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.397065507 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.37746824 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.92382087 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.549763659 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.61837855 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.39064584 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.8123141 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.381269038 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.379039559 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.378625565 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.617703607 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.412022642 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.377284246 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.953433196 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.401811924 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.453661221 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.382135741 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.378697865 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.638446496 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.378938394 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.62746571 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.381194689 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.386224181 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.397524122 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.79116381 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.382346843 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.03053185 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.40015222 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.380274655 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.5309682 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.628169877 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.956990124 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.401343416 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.642609895 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.880979047 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.471464474 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.383663227 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.896328637 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.476496781 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.385692767 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.382003002 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.381438578 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.379243497 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.432543443 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.454032225 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.967369703 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.049504359 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.978853754 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.477660702 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.39303391 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.380425484 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.955022869 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.401217807 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.381059481 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.789361803 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.039709666 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.406576347 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.388320431 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.035860741 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.408805769 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.458372361 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.394874586 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.801600979 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.389759429 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.432648797 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.382796417 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.388803502 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.402969372 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.459024301 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.388365004 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.383066941 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.007698893 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.565380999 seconds)
  done (took 181.39260069 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.377022502 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.391161754 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.376646197 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.391786651 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.375380248 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.384719631 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.375406566 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.375381649 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.38244122 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.37578033 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.37604399 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.375309351 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.377766269 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.396897094 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.387799603 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.381800824 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.985999418 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.377428331 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.377146239 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.377055359 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.173308567 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.386849447 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.376785291 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.376908311 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.378935342 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.376612917 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.393638149 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.379616302 seconds)
  done (took 153.353938654 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.383402576 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.934000537 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.403539919 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.515501492 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.405721359 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.38158006 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.513060279 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.440423476 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.409780936 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.382394214 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.383863174 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.67937125 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.385297781 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.888733545 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.572599481 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.537433653 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.887463841 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.402365753 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.382531081 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.383527501 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.514700192 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.390363892 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.678341593 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.937439679 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.404512549 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.938553937 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.370044949 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.38579125 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.384344222 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.940012883 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.401942131 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.683178925 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.461644 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.448249889 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.9659153 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.904964623 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.91226772 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.535501119 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.386193333 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.384831772 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.382965991 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.369367261 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.946204392 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.410808372 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.386121542 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.935165703 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.413507794 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.386262145 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.390946546 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.384677972 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.443650372 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.470456357 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.710062183 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.947768397 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.479488049 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.405846339 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.514371665 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.746969107 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.389541325 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.889935477 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.369782706 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.946095764 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.405808765 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.369441369 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.386972931 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.39153813 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.533416339 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.523293595 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.90024795 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.40839618 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.896625569 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.560127495 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.393388178 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.386061601 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.388957275 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.947480288 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.91523496 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.560064155 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.527590075 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.579652031 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.379899592 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.386889979 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.371621821 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.463983776 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.389943003 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.948753921 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.910727493 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.407152861 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.38996862 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.390475743 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.390159681 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.560635704 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.973269061 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.483629133 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.88800585 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.704886074 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.688379582 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.39070246 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.44688052 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.413732786 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.690770933 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.39109101 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.445393008 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.817366711 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.689424213 seconds)
  done (took 165.005385491 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.628494825 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.564598248 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.479657041 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.526808496 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.986217869 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.943034813 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.603544891 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.528763303 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.504821345 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.651261488 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.518104622 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.480200047 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.554601488 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.470594367 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.102838861 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.472460754 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.496385715 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.540479561 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.499793933 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.386832666 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.028393494 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.679487745 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.557503782 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.196505225 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.478870582 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.152744242 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.950455654 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.961473001 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.572914845 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.643487481 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.928646931 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.490385993 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.328277322 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.071115342 seconds)
  done (took 66.278436879 seconds)
done (took 696.578829882 seconds)
SAVING RESULT...
DONE!
