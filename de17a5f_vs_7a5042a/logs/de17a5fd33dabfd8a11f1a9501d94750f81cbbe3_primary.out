cset: moving following pidspec: 3123
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.228934208 seconds)
loading group "string"... done (took 0.556021908 seconds)
loading group "linalg"... done (took 7.660078953 seconds)
loading group "parallel"... done (took 0.170433475 seconds)
loading group "find"... done (took 1.18035837 seconds)
loading group "tuple"... done (took 2.099641283 seconds)
loading group "dates"... done (took 1.326523942 seconds)
loading group "micro"... done (took 0.248163579 seconds)
loading group "io"... done (took 0.705240332 seconds)
loading group "scalar"... done (took 41.244348063 seconds)
loading group "sparse"... done (took 12.759612081 seconds)
loading group "broadcast"... done (took 1.135377585 seconds)
loading group "union"... done (took 13.985389436 seconds)
loading group "simd"... done (took 5.110416158 seconds)
loading group "random"... done (took 10.233542058 seconds)
loading group "problem"... done (took 2.180713446 seconds)
loading group "array"... done (took 23.786098966 seconds)
loading group "misc"... done (took 2.171522749 seconds)
loading group "sort"... done (took 3.531196793 seconds)
loading group "collection"... done (took 19.514984602 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.576069071 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140003151 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150558821 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.130373195 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.204384497 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.155284309 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158407718 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098482765 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.938501195 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.178174376 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15377794 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.528316338 seconds)
done (took 5.140524462 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.213883714 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093055102 seconds)
    (2/2) benchmarking "String"...
    done (took 0.10492217 seconds)
  done (took 0.864111035 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078965678 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146608538 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093890094 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078126045 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095511834 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078033732 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093929599 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077419115 seconds)
  done (took 1.34277417 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.08700172 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097431976 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.08267572 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096441639 seconds)
  done (took 1.044130151 seconds)
done (took 4.231311514 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.74309535 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.278567243 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20333509 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.47267957 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.198153234 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.219350961 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.66514368 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.361778419 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.251303173 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.1020035 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.145076136 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.389839256 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.139045981 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.676473257 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088467336 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124588782 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177184504 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.465132179 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082726285 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109859466 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116051704 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143280888 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.124886707 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090614892 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.182739173 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082403189 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.197359841 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109820021 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079067805 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.290384125 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201170309 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.680356565 seconds)
  done (took 10.91158943 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.112237601 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134937403 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097971587 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139033792 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132123621 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099401272 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085150479 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096235715 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12198945 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176415735 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.111694609 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.137196543 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095269493 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083354235 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115713522 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246362729 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121051046 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104705773 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100248078 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088830345 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138148259 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111609057 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108985524 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093148562 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167458358 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221765609 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109931349 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12337603 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09517517 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111767595 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142894755 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143445124 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093029296 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080784577 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172705039 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123964329 seconds)
  done (took 5.133878756 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.087036219 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.192334735 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123229909 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.171431524 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081498422 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.1445839 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094392699 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115057149 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257835018 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.103437917 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.17507308 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143575686 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098596454 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097422184 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08283598 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096844346 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.647844227 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.158087651 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.135831332 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09922456 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105131273 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100872729 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.1561241 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08622502 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.099713052 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081301702 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.128627478 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.32523181 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16247947 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083476292 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.146841154 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124153938 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10243103 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118551357 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.209347019 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124466497 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.118593979 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097641563 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077548508 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.19449805 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09055637 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096956534 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103212919 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13656495 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135621031 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096577176 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081634032 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.207476228 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.098151481 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114015406 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.930018721 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078667403 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181419727 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.103118349 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.079291653 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.32642259 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.119060813 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08039515 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.101217607 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.272940287 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.186943747 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099380994 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.08023677 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097360422 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080762559 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.406603272 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081336192 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.71913114 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083240004 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106654533 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083038081 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097453811 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105151322 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088823879 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11708625 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.082336699 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099671834 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079976584 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096905161 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081887978 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110516006 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102821243 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081382687 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094533702 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147933064 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.093916795 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099897169 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12879769 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101073511 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078622151 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133112118 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095094198 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082513289 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099791783 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.13414337 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081638138 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11112252 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099699291 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128234932 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098069537 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.16145341 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.093400765 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125148734 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099458978 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115840061 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11524164 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10063221 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086661779 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096872812 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.07728705 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164446095 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080936602 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097982212 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082339051 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.1111003 seconds)
  done (took 22.521881965 seconds)
done (took 40.329482317 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.324647549 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10350638 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10385701 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103875902 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.085198273 seconds)
  done (took 1.479333612 seconds)
done (took 2.206913717 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.291665531 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.175942502 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097194457 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.170717857 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09337313 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.176169199 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162089958 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111980165 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.202768492 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094971504 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.165840698 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094394788 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077637815 seconds)
  done (took 2.672343658 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096322068 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115348671 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085337429 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11190706 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076792527 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111691198 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092725704 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118533534 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10979242 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085775141 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094458285 seconds)
  done (took 1.825510531 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095069805 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113201204 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082336064 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110416596 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077439039 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11034738 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09300865 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116861012 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109588221 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085737884 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093962167 seconds)
  done (took 1.814827052 seconds)
done (took 7.031649498 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091536277 seconds)
  done (took 0.813123964 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.92395927 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.954483506 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111889843 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149950485 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.313877061 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.191480699 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.470630003 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125223267 seconds)
  done (took 11.158548927 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.145494923 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082971709 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101517469 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084530424 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.103668281 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086746779 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101538482 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102079727 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083982907 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.10000653 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082585817 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103024566 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101109227 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.082816108 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101289175 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084228754 seconds)
  done (took 2.340146411 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120045274 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118016889 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106951638 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109296806 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08685398 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104488625 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106248703 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088476949 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102727722 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103047261 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090778546 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106033438 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10365557 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080360243 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10576288 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107918978 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086341063 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10582095 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106838903 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.09113366 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107543751 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096361808 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087741533 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106856791 seconds)
  done (took 3.270612323 seconds)
done (took 18.306068461 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157921874 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109844581 seconds)
  done (took 0.998445525 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097391716 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113564758 seconds)
  done (took 0.946978696 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098769652 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096557934 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121644026 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110449271 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081216129 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096933326 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118410865 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082238654 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098367274 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081166265 seconds)
  done (took 1.722626664 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083403304 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110988916 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102502944 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095715305 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106558857 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095647753 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089284591 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100430837 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111722373 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077231953 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102480471 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114364227 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086617226 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116271743 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105268295 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083284499 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101715341 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099199815 seconds)
  done (took 2.520793956 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081086855 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098410126 seconds)
  done (took 0.918057513 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082322099 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093968288 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081319618 seconds)
    (4/7) benchmarking "year"...
    done (took 0.09707304 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093957336 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077558493 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094619301 seconds)
  done (took 1.358770367 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.488983355 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138135788 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.262078766 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084842777 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120026432 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.304460161 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098777971 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086260391 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103368006 seconds)
  done (took 2.482380854 seconds)
done (took 11.680725479 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09432751 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116468935 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112539917 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.466615072 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108316137 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.098602349 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.14760132 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.245465328 seconds)
done (took 2.132426388 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.145028535 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.331027547 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.115361125 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067630675 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.098385359 seconds)
  done (took 1.358385122 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080395553 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100996284 seconds)
  done (took 0.924474099 seconds)
done (took 3.175596518 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081710194 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097945233 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.078712484 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.098010692 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.111961302 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.096804674 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077937105 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.099759892 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080580359 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.100817961 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.09632395 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.08077584 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098081709 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078797608 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095290587 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078622286 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096970099 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078436417 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095162492 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08058968 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094747426 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081124131 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094217309 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078292752 seconds)
  done (took 2.93620472 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099533213 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098096271 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103419603 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085835241 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101803062 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086232727 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103699179 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097397939 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086361557 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099516462 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101134667 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084457917 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099738186 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084769162 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09982851 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101379046 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086755248 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097632335 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083799266 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101826193 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103037927 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081915917 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101770193 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086095838 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.101903604 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101405296 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083134156 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097771004 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10306743 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084795257 seconds)
  done (took 3.597494742 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085660515 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094832535 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078038158 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102080734 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078994374 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097208217 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078164403 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095535342 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079564698 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095798861 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079630771 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095572523 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078876335 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097211062 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079738273 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098651773 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.10865464 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078613843 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095866466 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078826967 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099251239 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078577073 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095664654 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078496537 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095415201 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077496995 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095466442 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078987243 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095753178 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078383312 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098778421 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082612786 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095887315 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084703037 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098718056 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078880307 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099238488 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077987657 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095481757 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.078361323 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.095807572 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.078858761 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.095102329 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102011181 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079347595 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098871041 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077877605 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097420549 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079586239 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098264184 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078553415 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095165622 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080628853 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097313816 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082858883 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.095299151 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.079583579 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.095033703 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095772699 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078650519 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095234149 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078056 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097942868 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078980261 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111110537 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085756526 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095816052 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080664173 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096873516 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081005808 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097872072 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.09270182 seconds)
  done (took 7.167773126 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084360625 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10648184 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081033317 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098328402 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077763314 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097081513 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099568469 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07993307 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098356931 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08551959 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095990599 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079975225 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097956466 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10833401 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080314668 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097577115 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085928918 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094289061 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079262515 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099773545 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079410481 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099098027 seconds)
  done (took 2.762602693 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209114921 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105170199 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142724792 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107580906 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082762682 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107209478 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10308356 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087963177 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102593292 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084591623 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100351621 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103109655 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083955272 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101201235 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101598396 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085517903 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102726428 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085647888 seconds)
  done (took 2.654520127 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094397987 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099518333 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104243201 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100234458 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099261341 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084246722 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103952374 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108080926 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084871595 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099831957 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091106773 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102183715 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101068226 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081770806 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102078884 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081980724 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101088399 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081731182 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107881736 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104699893 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08707235 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10919395 seconds)
  done (took 2.888884216 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097728816 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10102751 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118356662 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083908312 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09499515 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08095985 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106280364 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082531444 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107363955 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100277141 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081904363 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098157118 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088339579 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09835465 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105106439 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08220948 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101058975 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082787659 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100910672 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078003854 seconds)
  done (took 2.652040439 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103501115 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.20903978 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100540605 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093423301 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10147675 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083913246 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110814272 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101058843 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083242671 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124534205 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101234189 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083583838 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109875295 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106277053 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083268578 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109426885 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109207183 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109856304 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083182262 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101346572 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125905553 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083452093 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109333319 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100932428 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083284881 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101274714 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101233177 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089174466 seconds)
  done (took 3.66714226 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082481267 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100214008 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080640927 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097780748 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079443312 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097143814 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080290947 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097230598 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08191719 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096605482 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082033405 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099783467 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084449238 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098965474 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081837817 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099002221 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081593803 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097010262 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079163868 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097451363 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08192758 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09980526 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081757618 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096951949 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079443168 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099488428 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079612154 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097684154 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082635487 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097219095 seconds)
  done (took 3.456225454 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091961842 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106913131 seconds)
  done (took 0.964368136 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080476654 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114821351 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079448845 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104544244 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088300371 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.10061762 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108606229 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087218208 seconds)
  done (took 1.528985055 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097442983 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111082922 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085011547 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.11435225 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110301013 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098466224 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171203685 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101922902 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088110891 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099330292 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.114325439 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081836024 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.10623359 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082541109 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105890283 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089035776 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098462019 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10640947 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085716902 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098458333 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084267327 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109959398 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085350913 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098197093 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102159365 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092649329 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114011503 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.084282253 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104720497 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108580333 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088405848 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094376411 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08352447 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102418542 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081320781 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110967393 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118367424 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085741844 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.11048697 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085095136 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111841027 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096031758 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087157021 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107149194 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09324085 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102023364 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101093257 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078393283 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.0979911 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085419836 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09654086 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084782864 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094968194 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090531468 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104246034 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113094257 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081542515 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102339512 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085259565 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104333282 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089454371 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10318754 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08513718 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100191613 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107497624 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087276448 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11105286 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078703005 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094902462 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08051482 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110855294 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126291778 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089785136 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102206234 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101829317 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080842607 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103562332 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08461236 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107508642 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089195421 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101516999 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107913588 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09084775 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101189008 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085408837 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109849513 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098370646 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084539225 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098449657 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100906584 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100205736 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098956528 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080838671 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112282385 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.0870942 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100982485 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081437903 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108495914 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076773788 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102225359 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101936926 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084068527 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113634052 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088826358 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108095496 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110164523 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090502561 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101299189 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086074912 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097326255 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10213559 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08570403 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.108179728 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078308656 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103537748 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083613105 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102138269 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110487446 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081710029 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101204902 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090927478 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106580966 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081887563 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09741856 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086401653 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101568729 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105486854 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091932916 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.10016573 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078891427 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096613416 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088101817 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10145945 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.104781581 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089300415 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104527195 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078006722 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099295726 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.087841765 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110530253 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101551578 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084683064 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108061942 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085249224 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100643667 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.089686385 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.104678729 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.10048146 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089342622 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101898347 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079223238 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105610042 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086068472 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.100079814 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105416926 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087291372 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104635756 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.084936428 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099960537 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089714958 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103802905 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100685432 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083509362 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100137899 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095300757 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104622646 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078511934 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.0986817 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.109518367 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.081821301 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101397802 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082626149 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104390293 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084582147 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.100030482 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083031911 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103048651 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113933767 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088641501 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102728372 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088452277 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.114135397 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101097719 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.086444559 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101227578 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0849793 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103086513 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111034278 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088959629 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107372679 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086478455 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098655834 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089652238 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109848698 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100960163 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081850051 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100343863 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087890931 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108036308 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08798897 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10258409 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099607415 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084751298 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105896582 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086837753 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101421434 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082754036 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.106984774 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100453305 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090588605 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10321956 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094473397 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105247835 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097453682 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087633596 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099890687 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090234509 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097443554 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082342177 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100270957 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084754841 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.101144061 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086967985 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096052783 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109008804 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092327749 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102440128 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083064287 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103375498 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091372064 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.103880572 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105969753 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088296479 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109159069 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096001052 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101954773 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086768265 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113100283 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101891515 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.077982836 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107233896 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.082415786 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101080149 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083004295 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.1001298 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086912911 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111634455 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.110024147 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.078487744 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.104568731 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.083480944 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100739652 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079545173 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107190974 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105114204 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084600551 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108362186 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085692658 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103452305 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106082633 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084292341 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103738587 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085469001 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105810553 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086253015 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.105252886 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08335792 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106332649 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103107516 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082512021 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103830509 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085096424 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.10299683 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090073451 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102886514 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083624907 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.105576229 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104266373 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084650625 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103370667 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084352181 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104998164 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085046183 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103230817 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086509378 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.098465618 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110676415 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084442068 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110189187 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084126058 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098657486 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090342315 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.105052998 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107455321 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085455566 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103769536 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085503829 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102538868 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087249228 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109289606 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.081412745 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.114806548 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11203511 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084416351 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106084608 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084217653 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104206173 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101374299 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085181978 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10415789 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.084966851 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101912815 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089699262 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.106032827 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084472223 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105200093 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103250436 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084414961 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104139721 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.078576527 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.102190212 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083750169 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102916617 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094735939 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10449565 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.106050792 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.083042961 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104032312 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083584719 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.099781587 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092767041 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114296469 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.104363716 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092050054 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102629406 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086562143 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113816576 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096988753 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082798609 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.101176101 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082055893 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111578599 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085638976 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112254427 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10237832 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083946986 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099391371 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085368829 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.101846429 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.078957341 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100794057 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087803321 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.105517213 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082813331 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.103871341 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087475032 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104799789 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113605516 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084266493 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.112406394 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084627848 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.100897266 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083853032 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.102906074 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105943178 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086733364 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101392009 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082141758 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102349817 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085160919 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.1037997 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.084645647 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.105133094 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091875489 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103755139 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106265695 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088924201 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098058895 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.087380601 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.103603446 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085173627 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.10267284 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106813022 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088734326 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10519149 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093915276 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.103837085 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084570189 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103708953 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.101190555 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085417467 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102895841 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085056835 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.102244579 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086370315 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111973122 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081992458 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106068257 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10227291 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085147152 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.110697205 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086380075 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.107735631 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111851829 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.087889505 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.104631372 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093728969 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.107250592 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0881534 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105278672 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.104453674 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091626434 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.102601392 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090730289 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.104212203 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.08675423 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.105520254 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082617566 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103824319 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103285767 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084725816 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109107444 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.086124704 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102946956 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083940332 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.101963155 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085382875 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10732128 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111449971 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.088415498 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106408401 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.080403605 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.10062586 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086332174 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.102441088 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086289929 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.107575656 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109616659 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087476882 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.104241653 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083829259 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113908361 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109590637 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088598078 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101692698 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089083819 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.10464032 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086953609 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.105441068 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.085498644 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105578357 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107026839 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086925389 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103508082 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092467311 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107044995 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086252845 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105418821 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084951489 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10448864 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099440534 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087049811 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106541543 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091002145 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.106535665 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086693547 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115662675 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.103728498 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085538794 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107690566 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084615969 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108623249 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079729768 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.105404163 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105633927 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086356881 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099561796 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084489813 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.102128645 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088563696 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.102955087 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080503158 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115267731 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113350425 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088183807 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103096815 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084170465 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098736068 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.080369096 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103198901 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086600121 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105817152 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114038266 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085287946 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.103136146 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080752685 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104294429 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088790182 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10812482 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082435065 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101157328 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083372687 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.108607058 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.110519199 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083902728 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104214926 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089879465 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.107570709 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083035087 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109488261 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.100786492 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090927826 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118576425 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087050341 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106126235 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.110409188 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094462684 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105288867 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081070247 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.105170166 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088413302 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.104899746 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104876263 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087585551 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120754299 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088669535 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10404273 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084026469 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.107793031 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.103458612 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.094533636 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105866382 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.085846438 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.109269311 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.087107611 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113684215 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107271277 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093746695 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107926435 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.10751914 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.084814566 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104070389 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.083833168 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.102944684 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.086623134 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.105738174 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09051545 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112396243 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.1035912 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096511206 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11390654 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.090019513 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.102596009 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.102737273 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086075553 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099780848 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.086859918 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103360437 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.084174991 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.103106124 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.085251466 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105398867 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092025267 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.105727162 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.105345199 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.086357107 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.100543341 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088699921 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.10668002 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086541892 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101529277 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.0856195 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105740299 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089098783 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109127201 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.105245446 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087699362 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106587782 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086253715 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100626566 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092940133 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104348758 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088012001 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10444951 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085331381 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106496196 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108440527 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091859011 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106624164 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087369429 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117268386 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10723947 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.084060751 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.102449872 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091756026 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103781451 seconds)
  done (took 58.614994162 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147708143 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083435957 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100231705 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081292308 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114725855 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101329966 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081502867 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101689958 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082466419 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103645565 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081632334 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100063498 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110841504 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125689569 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094775613 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105894216 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081158247 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102837428 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099629242 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082504847 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110348151 seconds)
  done (took 2.905108916 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106889792 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.1187776 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116005464 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11997225 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09105385 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116631875 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115080797 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116854126 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100793283 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11353201 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120014447 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116959959 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092992828 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112832911 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112413009 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095286126 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.121048102 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111098093 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.118421937 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09750787 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114811385 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116120247 seconds)
  done (took 3.254974603 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086819011 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10409084 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090189186 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.100367018 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.085878311 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.100299476 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.089942533 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.103112858 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.089703765 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.104492214 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084037269 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.105430752 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.105791959 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.08165873 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.105115786 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084397323 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.153126191 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109958843 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085390533 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107776572 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.080678675 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109563299 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.101086516 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.08213781 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.104097626 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090233116 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106269979 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083870323 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.105141574 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08500517 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.105360862 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083563817 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.107584518 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.086224816 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.106126225 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.104478608 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085632077 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.104551792 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.081609177 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.103658119 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.086918612 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.101579097 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086939487 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107245946 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.083881982 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.103989824 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086752126 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.105792623 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.08139223 seconds)
  done (took 5.551941864 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.106991562 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16491141 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088625339 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145664 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122915862 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11509878 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.08976356 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.145741542 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105942412 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084932106 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124918626 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122397969 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106221578 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091155332 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109362412 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105625532 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08922763 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104635604 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.09120676 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105869301 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.11095654 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.092783412 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121255087 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120241097 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109837881 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086164203 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106516134 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.091542858 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.120366319 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111722588 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.11157218 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093217457 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122782792 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107863226 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.0864448 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108886498 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123785857 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088740371 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.109271011 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103768662 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089481896 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112215663 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.093148061 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.124258056 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.107788893 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110562617 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086716722 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103198301 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119199292 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.09046952 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.1159804 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.12182394 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091300998 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106521553 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.11164981 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.102600733 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.106369503 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.105296264 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091230332 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.119856375 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.103783334 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090846915 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120789676 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107983343 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.094857992 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.120838118 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111366268 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09122318 seconds)
  done (took 8.268247952 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096354708 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113506212 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122269602 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123219226 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093926388 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113757673 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112953706 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.093818713 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113010694 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118982613 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113555803 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.137608756 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088274929 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117477832 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114116669 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093985786 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113955908 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112876765 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094640955 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113464328 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113686437 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122442543 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094185864 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122722095 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.145021013 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.109096624 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093766103 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114380233 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123499436 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112753601 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106076277 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.113568772 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113421897 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122703466 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126279459 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094212815 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106269066 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113348511 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.094494394 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113707731 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.108170377 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103291635 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112833085 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.108180688 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093978609 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113979144 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122757709 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12569963 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116583384 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099566737 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114108784 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123381322 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113088047 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094707396 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.12267736 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149934188 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123729026 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123085182 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094281141 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.12357412 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122658571 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131240892 seconds)
  done (took 7.825547842 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110000549 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116902953 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.120260035 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.102384681 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085667844 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110445711 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08618691 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.105071531 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.116371878 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097337449 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119874071 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112108679 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094175322 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120358777 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11149374 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114613822 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092029105 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111975053 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115976482 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091291291 seconds)
  done (took 2.958856823 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.096744948 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126598827 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088141681 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114582781 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110198504 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093938131 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109559316 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110464183 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088814433 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110306237 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099458785 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.119397742 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107985051 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093326285 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118479837 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114207387 seconds)
  done (took 2.5336231 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.098232343 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120000138 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.123229087 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08699936 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106692337 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083447131 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.110663453 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.103698951 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083709204 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.125768473 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087019233 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.111413377 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10765346 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085675481 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10397658 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090219476 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103979552 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085928971 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.108325207 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121608784 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.098344578 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106688803 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.087866211 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.110242563 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.107477433 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093601869 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108830808 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104993364 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086073309 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107553546 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.091171927 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115463349 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103527954 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087134059 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.105507075 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.085398918 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106720499 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088170197 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111016805 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106637373 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.086532137 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106968995 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088250115 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.108037223 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084190717 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108829972 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.083609198 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.114708259 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104932672 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088053324 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107585477 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.08987824 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108843233 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118358262 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091757255 seconds)
  done (took 6.382013515 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101750787 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111787174 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083420094 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10616291 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090382862 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.111445985 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.111401633 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09033029 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108518419 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.0863283 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109679652 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092882149 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109597652 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111357816 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089496376 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111846741 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083705353 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110366583 seconds)
  done (took 2.656130436 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095020387 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107641376 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095871936 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108630234 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088020334 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111622111 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082886361 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.107298462 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105789889 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088042105 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107289696 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090604824 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10597006 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089466931 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108504125 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087826312 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110880788 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105505463 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089264652 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103580462 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090984312 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106503557 seconds)
  done (took 3.021135374 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.122746827 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.129062696 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.095140661 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.236567754 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.107143039 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.135693434 seconds)
  done (took 1.661559043 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112957267 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123811609 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108242585 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110509699 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118888159 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090500694 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11141101 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109552283 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119784053 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1048805 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111252459 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120789365 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120822661 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100359321 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117732485 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116818208 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110744818 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090421008 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10933752 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13157275 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090592301 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120730843 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11059672 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090098813 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112019849 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120513316 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12047464 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104928286 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11119679 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120744515 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116892976 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090382118 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121340298 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124417327 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091796341 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121606888 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110261439 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130980592 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096644606 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120708515 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111764668 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117997 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100977359 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116602162 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120636108 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111878459 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097033172 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112035224 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110755694 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137497238 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097289277 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119879798 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118577942 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120640194 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101166138 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137016396 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125449051 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120581814 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117446444 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124464717 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099995656 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119185228 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120425064 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125526868 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118033798 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099798739 seconds)
  done (took 8.311850884 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104766421 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128851732 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110915786 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12566604 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099904644 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110849772 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110336638 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090691046 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110854868 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109778751 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.155966669 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091040313 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120706431 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120488596 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091534136 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111295439 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110809123 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120172007 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090034932 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137247958 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111950708 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120604225 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099406862 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12050863 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126500217 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117799949 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111147789 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09189099 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111085853 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090452089 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117932473 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112016242 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12150079 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089375833 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120253882 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110782417 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090841628 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117366374 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111278071 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11728673 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100335712 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131278505 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111087693 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111099633 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104900648 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112734007 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111957924 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090066883 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111162553 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090122366 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126417813 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126185638 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125511446 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120204573 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11188934 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092375307 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112319669 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112143976 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091422397 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117822087 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120668292 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091386079 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137760573 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111453807 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111289043 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119789907 seconds)
  done (took 8.215031819 seconds)
done (took 157.17843025 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.222367211 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.225715202 seconds)
  done (took 1.289183886 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.102411436 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.138889301 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099871296 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171803889 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.104772299 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.122468943 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137972565 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096414845 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105905677 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089877156 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.109966002 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091179524 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.174622929 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084534819 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108721418 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.111054015 seconds)
  done (took 2.698502051 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.20553489 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.26187892 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106819665 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.10989729 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.092620063 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.114094336 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.1079086 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.095240696 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.1134496 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.088757307 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.111881945 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.089983453 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.109191544 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.089660166 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.113917205 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.09099069 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109298775 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.09134887 seconds)
  done (took 2.951016474 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117704351 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148643632 seconds)
  done (took 1.120429338 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.123110754 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.184472666 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.32126257 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.160568135 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.111187063 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130544273 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.160442672 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134430663 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.202924647 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.12626567 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.126767626 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.101634565 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.144197132 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.119316189 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098593622 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.122300556 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.145580577 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.096448265 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.119162177 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.119784038 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.121582159 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.109190346 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.119298917 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.096693568 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.185486823 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.123848098 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.089402016 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.110122406 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.119501616 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.097872443 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.117058404 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.128205243 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.101168759 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.180832278 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.106462422 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.180515851 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.101932078 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.115471775 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.097929678 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.116438365 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.12177747 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100522057 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.129851232 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.12200339 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.08875194 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.123103036 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.108664498 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.088974527 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.118375195 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.102296151 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.118780405 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.116376186 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.159373673 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121927723 seconds)
  done (took 7.731941674 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.798105794 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154357941 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089241786 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.886878401 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134841408 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104187638 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.783864096 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110880678 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254695787 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.768267157 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13217979 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119155402 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.204039004 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258811989 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.013504838 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.288117001 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.673501879 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125769526 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150925983 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.151763277 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115879703 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135810667 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113234981 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.433111409 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116449707 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113869466 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.100430249 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123210937 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163269195 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.128623095 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.090743628 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199403861 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.251715385 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202294827 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097909112 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11455748 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114811141 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.173350113 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268652071 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194280823 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.183451888 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112801536 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092546948 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126606658 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136712963 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090094467 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.187876459 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.178002632 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.172836775 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118330571 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12178539 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102401262 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125407793 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16788677 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.125538388 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.32294817 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.31232847 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093076743 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120989829 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125774563 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.23923359 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123734509 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223182131 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139603725 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.186635356 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111380006 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.787805298 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.167826614 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.108409657 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095264253 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118984134 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114474413 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.09770668 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16577088 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390492374 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122762992 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113217804 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089019916 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22212189 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102060746 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111023096 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159567586 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116089144 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117957708 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101337795 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121817135 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.165927131 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.253040129 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106407033 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124520773 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117658533 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10675644 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.120931687 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214559382 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221271189 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.165968737 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.234289452 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099582719 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.181757783 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169285925 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122074621 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.175531986 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.10136077 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127197469 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121803194 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.213742826 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148325373 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103955433 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118526081 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117985487 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149307466 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12779394 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096934913 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168218898 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.48132785 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167015494 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.107481158 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105495809 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118262321 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.158400967 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116822847 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.25395649 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098654453 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.187978443 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097549176 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.107605808 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.1185886 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165206403 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119633234 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098745091 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121368226 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117098626 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.233692216 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.2126057 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098307666 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237771069 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182194416 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.115602148 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170021931 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.1189962 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167614106 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12275578 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103377567 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12101031 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785858697 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10042778 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120050477 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11472308 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.191414477 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090402085 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124079669 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.122472148 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090505625 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.774401835 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128601185 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102551314 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.124064963 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115884321 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.097176799 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116994798 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114953672 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163575492 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227033769 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121946627 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102499197 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.129638439 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.162470088 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118162559 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.12695192 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103815904 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124667804 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120525781 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096385779 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124742582 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167078723 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.180126694 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.192413457 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.587456262 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110166565 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101815897 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.225006327 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110814973 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.284861973 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096254233 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.222639017 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161872985 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120546826 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.305678321 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166182806 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187539823 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126185035 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.171701409 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108172198 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.095114615 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.182890726 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089011945 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116227301 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.161375011 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124582554 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122066244 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.935040711 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110821298 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.222609195 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108129074 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170101646 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115588912 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096726577 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.293658779 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111229385 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126839424 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.162311822 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091634854 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123514019 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.743872693 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101675932 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122087496 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117035534 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.220936439 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166579292 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122866418 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102600669 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123966119 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.166686604 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209625336 seconds)
  done (took 44.000903382 seconds)
done (took 60.63667642 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.283691686 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.218692016 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.272154022 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173984515 seconds)
  done (took 1.906676485 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.176445547 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.155791817 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.125826397 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.11204156 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.153300772 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086784496 seconds)
  done (took 1.690481755 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.367229981 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279881044 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244799193 seconds)
  done (took 1.772942319 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.3237074 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.249186847 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.484455074 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.330661911 seconds)
  done (took 2.36839927 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.214887353 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.137532189 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.115322539 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.108492558 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.202039122 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.251811524 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.145636487 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.206258356 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.104475408 seconds)
  done (took 2.413280367 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.199354337 seconds)
done (took 11.230706638 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.251631334 seconds)
    (2/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.17577936 seconds)
    (3/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.270411393 seconds)
    (4/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.162398352 seconds)
    (5/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.115013551 seconds)
    (6/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.238707887 seconds)
    (7/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.139979804 seconds)
    (8/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.171066406 seconds)
    (9/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.202721848 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.164914148 seconds)
    (11/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.120619032 seconds)
    (12/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.206517345 seconds)
    (13/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.176829423 seconds)
    (14/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098104191 seconds)
    (15/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.215822979 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.125883211 seconds)
    (17/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.112118577 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.121547064 seconds)
    (19/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.175013398 seconds)
    (20/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.11680939 seconds)
    (21/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.123111605 seconds)
    (22/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.103801252 seconds)
    (23/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.139703498 seconds)
    (24/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.101822243 seconds)
    (25/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.093539571 seconds)
    (26/286) benchmarking ("sort", Float32, true)...
    done (took 0.227192107 seconds)
    (27/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.1185283 seconds)
    (28/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.221987913 seconds)
    (29/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.103169778 seconds)
    (30/286) benchmarking ("sort", Float64, true)...
    done (took 0.203476683 seconds)
    (31/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.184842933 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 0.216805703 seconds)
    (33/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.230803016 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.120341502 seconds)
    (35/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.098808655 seconds)
    (36/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.138510669 seconds)
    (37/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.197349905 seconds)
    (38/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.177381318 seconds)
    (39/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.218587651 seconds)
    (40/286) benchmarking ("sort", BigInt, false)...
    done (took 0.226050031 seconds)
    (41/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.122389557 seconds)
    (42/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.124474389 seconds)
    (43/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.197322634 seconds)
    (44/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.127608679 seconds)
    (45/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.239442333 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.121299633 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.098816619 seconds)
    (48/286) benchmarking ("sort", Float32, false)...
    done (took 0.178679111 seconds)
    (49/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.176949233 seconds)
    (50/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.129265536 seconds)
    (51/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.185675496 seconds)
    (52/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.198509111 seconds)
    (53/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.190167303 seconds)
    (54/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104485398 seconds)
    (55/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.118716945 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.09290044 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.153968106 seconds)
    (58/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.167923274 seconds)
    (59/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.097239745 seconds)
    (60/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.18974518 seconds)
    (61/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.191268599 seconds)
    (62/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.100116418 seconds)
    (63/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.142051499 seconds)
    (64/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.076623064 seconds)
    (65/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.121164022 seconds)
    (66/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.096086363 seconds)
    (67/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.207055669 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.11314349 seconds)
    (69/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.18404861 seconds)
    (70/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.119804015 seconds)
    (71/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.207031646 seconds)
    (72/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.129959995 seconds)
    (73/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.125505419 seconds)
    (74/286) benchmarking ("sort", Int8, false)...
    done (took 0.192655721 seconds)
    (75/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.12133078 seconds)
    (76/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.16602286 seconds)
    (77/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.128427956 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 0.113934449 seconds)
    (79/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.174834843 seconds)
    (80/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.194775679 seconds)
    (81/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.121335192 seconds)
    (82/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.112356949 seconds)
    (83/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.187388968 seconds)
    (84/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.124592997 seconds)
    (85/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.07294401 seconds)
    (86/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.198240834 seconds)
    (87/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.188313829 seconds)
    (88/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.168394617 seconds)
    (89/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.094024389 seconds)
    (90/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.16910772 seconds)
    (91/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.127358379 seconds)
    (92/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.114452573 seconds)
    (93/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.14219627 seconds)
    (94/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.1149446 seconds)
    (95/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.101904703 seconds)
    (96/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.187865487 seconds)
    (97/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.113642298 seconds)
    (98/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.095443553 seconds)
    (99/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.125744649 seconds)
    (100/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.143838557 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.139853895 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.117574127 seconds)
    (103/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.170235501 seconds)
    (104/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.124052777 seconds)
    (105/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.088730111 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.144607504 seconds)
    (107/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.204632587 seconds)
    (108/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.071924897 seconds)
    (109/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.119485362 seconds)
    (110/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.152237909 seconds)
    (111/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.149579491 seconds)
    (112/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.100449281 seconds)
    (113/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.114211317 seconds)
    (114/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.081653372 seconds)
    (115/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.142606601 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.12551649 seconds)
    (117/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.119711644 seconds)
    (118/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.105518689 seconds)
    (119/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.106205829 seconds)
    (120/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.191225348 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 0.188246697 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.123290355 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.099338756 seconds)
    (124/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.12520983 seconds)
    (125/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.071946991 seconds)
    (126/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.120479216 seconds)
    (127/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.07131894 seconds)
    (128/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.098700167 seconds)
    (129/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.093412246 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.097584174 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.12034932 seconds)
    (132/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.187561285 seconds)
    (133/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.153949022 seconds)
    (134/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116624845 seconds)
    (135/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.07168544 seconds)
    (136/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.09435233 seconds)
    (137/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.10699827 seconds)
    (138/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.091709972 seconds)
    (139/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.098830353 seconds)
    (140/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.115365471 seconds)
    (141/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.100695987 seconds)
    (142/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118375303 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.09043316 seconds)
    (144/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.121137956 seconds)
    (145/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.110577863 seconds)
    (146/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.111749161 seconds)
    (147/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.097060642 seconds)
    (148/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.095695288 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.099493274 seconds)
    (150/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.095151333 seconds)
    (151/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.10332461 seconds)
    (152/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.213098442 seconds)
    (153/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.1141747 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.091219965 seconds)
    (155/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.122136381 seconds)
    (156/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.098297666 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.113324567 seconds)
    (158/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.071427719 seconds)
    (159/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.097086464 seconds)
    (160/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.143750383 seconds)
    (161/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.079989334 seconds)
    (162/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.147449286 seconds)
    (163/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.139220942 seconds)
    (164/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.166348981 seconds)
    (165/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.091041809 seconds)
    (166/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.071885115 seconds)
    (167/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.121696404 seconds)
    (168/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.072147593 seconds)
    (169/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.071098036 seconds)
    (170/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.094638193 seconds)
    (171/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.094663331 seconds)
    (172/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.113217014 seconds)
    (173/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.092430063 seconds)
    (174/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.092167995 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.097129701 seconds)
    (176/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.120032229 seconds)
    (177/286) benchmarking ("sort", Float64, false)...
    done (took 0.176164648 seconds)
    (178/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.097145326 seconds)
    (179/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.3501052 seconds)
    (180/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.090672592 seconds)
    (181/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.115587514 seconds)
    (182/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.09952211 seconds)
    (183/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.089462595 seconds)
    (184/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.118847989 seconds)
    (185/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.094439032 seconds)
    (186/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.153780113 seconds)
    (187/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.112717045 seconds)
    (188/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.071697938 seconds)
    (189/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.180711703 seconds)
    (190/286) benchmarking ("sort", Bool, true)...
    done (took 0.218708481 seconds)
    (191/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.070805513 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108949216 seconds)
    (193/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.070470511 seconds)
    (194/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.086581603 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.113451973 seconds)
    (196/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.070213311 seconds)
    (197/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.148897585 seconds)
    (198/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.071442628 seconds)
    (199/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.100172431 seconds)
    (200/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.07170589 seconds)
    (201/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.148595353 seconds)
    (202/286) benchmarking ("sort", Int8, true)...
    done (took 0.217695302 seconds)
    (203/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091804016 seconds)
    (204/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.096325099 seconds)
    (205/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.072179205 seconds)
    (206/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.100535338 seconds)
    (207/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.117417412 seconds)
    (208/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.192276358 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.091247593 seconds)
    (210/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.104258429 seconds)
    (211/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.072027493 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.096257537 seconds)
    (213/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.114514376 seconds)
    (214/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.07221252 seconds)
    (215/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.1690118 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.113470263 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.089704465 seconds)
    (218/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.125267973 seconds)
    (219/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.070857437 seconds)
    (220/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.127646937 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.090875591 seconds)
    (222/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.0705226 seconds)
    (223/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.096305392 seconds)
    (224/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.094581827 seconds)
    (225/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.100529437 seconds)
    (226/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.090061866 seconds)
    (227/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.172507428 seconds)
    (228/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.115775083 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.090351382 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.113916868 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.091306754 seconds)
    (232/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.115662365 seconds)
    (233/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.118986111 seconds)
    (234/286) benchmarking ("sort", BigInt, true)...
    done (took 0.220307079 seconds)
    (235/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.112904651 seconds)
    (236/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.093474673 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.112829359 seconds)
    (238/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.07204268 seconds)
    (239/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.070795046 seconds)
    (240/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.0911201 seconds)
    (241/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.117555221 seconds)
    (242/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.124157765 seconds)
    (243/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.14024144 seconds)
    (244/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.098541357 seconds)
    (245/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.071110281 seconds)
    (246/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.104214075 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.090648687 seconds)
    (248/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.127020762 seconds)
    (249/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.083147362 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.122924029 seconds)
    (251/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.072738476 seconds)
    (252/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.094969734 seconds)
    (253/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.116816436 seconds)
    (254/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.116646961 seconds)
    (255/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.081248876 seconds)
    (256/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.093430675 seconds)
    (257/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.07256588 seconds)
    (258/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.081829352 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.122948841 seconds)
    (260/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.099516578 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.112986214 seconds)
    (262/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.091227765 seconds)
    (263/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.095700394 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.090690146 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.122282097 seconds)
    (266/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.097419941 seconds)
    (267/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112774793 seconds)
    (268/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.071125972 seconds)
    (269/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.14133108 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.095667944 seconds)
    (271/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.102906958 seconds)
    (272/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.071667041 seconds)
    (273/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.071723074 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.114172467 seconds)
    (275/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.097973358 seconds)
    (276/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.113117203 seconds)
    (277/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.073128479 seconds)
    (278/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119200536 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.097010845 seconds)
    (280/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.117095741 seconds)
    (281/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.091430042 seconds)
    (282/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.106513553 seconds)
    (283/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.11438767 seconds)
    (284/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.114795342 seconds)
    (285/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.128135986 seconds)
    (286/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.092513931 seconds)
  done (took 37.157033081 seconds)
done (took 38.039219629 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104554144 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.154415212 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.099239176 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134639947 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.127362197 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095980717 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.122117526 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.102957309 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.127354939 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.129063209 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.102808586 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.098017098 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103546354 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.12429066 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.101770747 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.144679691 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.128913542 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.098226165 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.12333632 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.089952007 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.12358394 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.090733862 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111152681 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073779812 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.124569517 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.098538856 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115158436 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.11978481 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.090092939 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.10834032 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093914343 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.115872951 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.090741831 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126216486 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.097694169 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.12259598 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.101496578 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.123436751 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.093500384 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.112003455 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.098362193 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.113763217 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.12010724 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.098722675 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.120148325 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.097004307 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.122091348 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.104871711 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.14256712 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096733831 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.12301483 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.124364333 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.100230769 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.121674638 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.095331948 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.123266129 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.096964105 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.145159119 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.123797647 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097115946 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.123098709 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.099532185 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.119888299 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.100079011 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.123441578 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.102638272 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.125967988 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.120458607 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.10237947 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.119471398 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.091948755 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.123106385 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.095094986 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.113819181 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.100428204 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123409498 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.091627621 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.120411174 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.099275168 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.119903105 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.090675314 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118167285 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.09291791 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.121983843 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09498331 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.097380272 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.094659093 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.115508265 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.090437674 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.118716373 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.098031597 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.121711284 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.117093042 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103440946 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.114448592 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.097714581 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.114948853 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.091972796 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.116758744 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.096202952 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.114130201 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095050374 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.123317841 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.093246389 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.115218132 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.103308113 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.109425788 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.095988409 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.109145872 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.085003045 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.123694246 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.11912459 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.089893831 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113973841 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08549491 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.116848483 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.084836948 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109069242 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086365542 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.108975035 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.09580506 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.109172127 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094580868 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.11810983 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.105566069 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.108863857 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.094708108 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112440583 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.090958666 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.114978434 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.088197302 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.113417749 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.087141418 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.101488547 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087922967 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.109616731 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.093413078 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112784659 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.1173841 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.092042812 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.11814216 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.095889559 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.1203084 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.097716001 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.113219041 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.078739257 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114064434 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09424116 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.110716436 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087561832 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111057266 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.089420315 seconds)
done (took 17.331619337 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.091307437 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185228741 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.155182484 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.146440376 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111022261 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.1104644 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121479156 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12340167 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112218869 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141317885 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.115702267 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132485087 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.151808805 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.091637182 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116703803 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.096089105 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11681781 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108177685 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.150849027 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.137693599 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.168986119 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.091134248 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.15040668 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.139853452 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.124110956 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.119336137 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11556894 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.096098617 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.119446705 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.108703193 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.130109683 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.089377432 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.11006202 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.13513385 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.1052017 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118051175 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086702568 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.117351637 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087096334 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111462103 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.144987415 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.113897155 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.11669354 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.120436613 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.095075739 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113181338 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.093113292 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122376838 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.102881795 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117762948 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127008705 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.159293795 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.09587387 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125868535 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.091040556 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.126797667 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.125612837 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.09522751 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11579544 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.095767776 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.115333044 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.095736569 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128040894 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.148025527 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.096398699 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122780125 seconds)
  done (took 8.772627974 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.108776153 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140507911 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.10927451 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130640418 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109845049 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.092555049 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.110162652 seconds)
  done (took 1.741421326 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093135879 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136831034 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113601748 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134134116 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.130514793 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.111408644 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121269473 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087407572 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130349223 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.093197673 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133286232 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150330277 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.088750405 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119567458 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136266908 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.092393254 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.135133343 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.086895589 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115121973 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111748665 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11461543 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.133364708 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092034334 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112118094 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101669386 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113338984 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.166364872 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097892481 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113180921 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091742344 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110345334 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.164454032 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107165366 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.12331672 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090433288 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128480774 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.132624556 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091072577 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.134500931 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09964441 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128272996 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.09419213 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114720027 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.08977687 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.134170555 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.122471243 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.094857608 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.112244434 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.094434828 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132347796 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089201383 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.12482696 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087291776 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116479168 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089556339 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118786073 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.09691379 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.117533119 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131579312 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089484728 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129448064 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.109140898 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127197625 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.128590772 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093893355 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.125388226 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101348172 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115775625 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090771862 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.115946612 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104640465 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.115124207 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.112916353 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099214956 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114401066 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.115294723 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.135794195 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089753044 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124522533 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.086933885 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.116880038 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.112556368 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.115495563 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118136372 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088258224 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116319105 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095184711 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111290371 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.08706768 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117370803 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.092063718 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.113823591 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091669398 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114535001 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095311047 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130630175 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.118416168 seconds)
  done (took 11.834131777 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095666377 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.118876865 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095850929 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.112931523 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.088941491 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.113892658 seconds)
  done (took 1.578946803 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.120013351 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116829582 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103981993 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.123486199 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.154777708 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.102250025 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.13159117 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123064077 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107674188 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126807255 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.127364527 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104007192 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.134145902 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120236723 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.106225699 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119179734 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103622656 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.128377789 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125189773 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095571701 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137113773 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119045339 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095597159 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131661594 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.09257383 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.123765358 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.123740909 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.106152974 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.12654548 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.121314313 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098105896 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.115937801 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095091652 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123724339 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131083254 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095430446 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120675872 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.097459657 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127262151 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.116581994 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.109068701 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120088515 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125524481 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097706444 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122069259 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119375422 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.099145171 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.122930764 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102761799 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118914034 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.117436507 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096121639 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117082138 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096922949 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.119582235 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121634291 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096850603 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.12802283 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095540538 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.120557641 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.121506539 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094728588 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123873853 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.097625627 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.128316813 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118531085 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.100685595 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122930197 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121885279 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.101828865 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120566491 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.097479053 seconds)
  done (took 9.224938752 seconds)
done (took 34.086128321 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.675927222 seconds)
  done (took 1.626114102 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.823168633 seconds)
  done (took 1.77386993 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.665597265 seconds)
  done (took 16.645522482 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.496486138 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.571581262 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.002074965 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.173967019 seconds)
  done (took 3.196617552 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.929479163 seconds)
  done (took 1.901138708 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.292735246 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232261241 seconds)
  done (took 1.479507125 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.763019233 seconds)
  done (took 1.730290596 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.37910165 seconds)
  done (took 2.334148778 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.336092583 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.1882798 seconds)
  done (took 1.489136054 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.557145913 seconds)
  done (took 1.5222186 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.820954688 seconds)
  done (took 7.792149494 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.272486167 seconds)
  done (took 1.251903798 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.306214543 seconds)
  done (took 1.275188313 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.269464444 seconds)
  done (took 4.239924676 seconds)
done (took 49.216446328 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.10346509 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125291589 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.100948837 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.122801388 seconds)
  done (took 1.414247365 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.106207821 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122056448 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100582795 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.11921279 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123697812 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.09460428 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121750374 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.098964627 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119641505 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095061078 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119652843 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117415785 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099626328 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120715406 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09214407 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.122041776 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101934513 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121057442 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.121840856 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.10103167 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.116785944 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09699927 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124324352 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.092837808 seconds)
  done (took 3.622305886 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105321809 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.12130411 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100842976 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.116023821 seconds)
  done (took 1.421804552 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.104856643 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142866434 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.141467346 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.099004337 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141566682 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137273609 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.091254959 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115229522 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096875615 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.122274829 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.089659845 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.148456702 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.134469866 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.098363608 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.126125893 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.090262783 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116110589 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.134842555 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.103624039 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124158198 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.091527871 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124132427 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.093540674 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.13820192 seconds)
  done (took 3.778287428 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.174816911 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126512763 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.143304765 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.099831495 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159087526 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.138790447 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.091458106 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140663771 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.091918369 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.129656675 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.09079195 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.162845765 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.127689152 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.092634568 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112896651 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.091094946 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127313241 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127517527 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.09568152 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127523879 seconds)
  done (took 3.428989294 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.103907912 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.121897236 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093592317 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.12027536 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.101983085 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119124724 seconds)
  done (took 1.638048785 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.096748447 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.119025766 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095336909 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.117582832 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.098669362 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113333342 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.093398128 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114511271 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.0944236 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.117384507 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.094369511 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11772246 seconds)
  done (took 2.250964673 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.510820667 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120887595 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.116333915 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089843258 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.119822707 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.093734479 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130776048 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.096806245 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.138584951 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088686135 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115183772 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.089508911 seconds)
  done (took 2.687939444 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238072382 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128327537 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288645092 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.371305038 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15155879 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175091938 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278489747 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163174499 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.223798797 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17152596 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206852517 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227231611 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155943815 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19531256 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136395221 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120470949 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231426815 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246421575 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157491386 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211366487 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227305777 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170524832 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177127705 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149317997 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137208268 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177775759 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.099135274 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129546198 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236160109 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181940606 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218294628 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166990179 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150535789 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216228955 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255027919 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226218488 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287744193 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138309424 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.147244948 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.174229157 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266436447 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135918285 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200274532 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15454975 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133836907 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191111926 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190618192 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.179161979 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150624241 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11218169 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219730523 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23630171 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.196134666 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137263374 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298305776 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153250032 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.173575134 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225230951 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255614762 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206262365 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191476932 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.126273508 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195963995 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222183937 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191371168 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.178509942 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.184523637 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151899709 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227667597 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193253544 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163134689 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218401399 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.188176116 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139307406 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16869936 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174869672 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177042378 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264207929 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214022627 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.101724408 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166774614 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151174537 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138388974 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.198841596 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104874347 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244941794 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148295407 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.142967546 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244678839 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163492291 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162744709 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206949163 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23422593 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152498158 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08898162 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153353681 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154458487 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197028489 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139071873 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158369806 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161294282 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128939956 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183508434 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.122907127 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189687787 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.09004183 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198500793 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184318211 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.124518183 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156905323 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122731601 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151818737 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171322106 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224215363 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141665203 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105324002 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233015996 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17614091 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.149137818 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175582332 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199838386 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.142702682 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147654523 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222312838 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214842469 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13883096 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201049375 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158082393 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141903606 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.137701823 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18859499 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160056187 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.167096737 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11248195 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.210357747 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213103493 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.13277751 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142934013 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199967125 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140346397 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137059271 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168032005 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152160204 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.118945939 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.15426213 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.158630429 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188153574 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210331917 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133911592 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196170623 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157538357 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233201277 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146590047 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150946959 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147697169 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095411409 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.218991243 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203515617 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129511549 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204413975 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170167334 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232883016 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169128716 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134416894 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183377541 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107345146 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122394887 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189980016 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197222296 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165430791 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.203594677 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207028473 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.211858355 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.192223459 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179674263 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179145455 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.172599678 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16129913 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.145633283 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167281789 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176615421 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.128046417 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.150295126 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.11290558 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153978634 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150235544 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13939002 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202825241 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17619259 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22321225 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164817237 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15464531 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187074001 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.107648136 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206395063 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.185307782 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153714295 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.20677052 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199919787 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21789599 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122868504 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234318863 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.126359486 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105841665 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.15011141 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176850279 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140466564 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114647775 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196904162 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187838427 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187792223 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182606201 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245029097 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178529617 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190567 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.127955637 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.172217049 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192218874 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185578025 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.195890766 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142380964 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.122888857 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178330174 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15658964 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254075506 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173008684 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209872265 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214356202 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.155549814 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13156261 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152558025 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200303579 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162675878 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184307943 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15353509 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147854962 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169493948 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.111569314 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192055446 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191574563 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168882991 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195069094 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.156037886 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218616578 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107094003 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168998531 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166732267 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172822574 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.112739963 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182412804 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210528224 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154880937 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17449006 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223022773 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110008469 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.319503272 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245987909 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228545119 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115699507 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162966266 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167453845 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17104809 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177288559 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183284869 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157687734 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215045287 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163798298 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.116129071 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146898281 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154966883 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156953613 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109939216 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150040351 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.21058904 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.119435689 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218682587 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169552974 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164693139 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179362458 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.127829585 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14384274 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158002905 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248284668 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190345948 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244275559 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.128625788 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.205745381 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21442254 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126698144 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109213896 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135431495 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178011815 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135378166 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196862324 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.210666588 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204668789 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178729616 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221773166 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11636284 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120147964 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156850093 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171759722 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22982802 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149857065 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.163780445 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209688985 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.154709223 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110007105 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207043638 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299103051 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150657234 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204679482 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.084457074 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.301946458 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104390119 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129792339 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161317211 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210617284 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.140277078 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.194869039 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172619473 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17110592 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17264773 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155090873 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.219168927 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219203385 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227093953 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187423304 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.111030489 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16211135 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209725336 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200517074 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163639107 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.145305826 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21271598 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200679461 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.23200607 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.146119982 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174956948 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175806098 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163969995 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19308035 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140837585 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214126112 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140962201 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193399326 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150191502 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146165872 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173546828 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.212265105 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142475152 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188481412 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190256751 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142350133 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138060765 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175122183 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187463123 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164188466 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.132627731 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189452218 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.102707664 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229046614 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264360608 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114205155 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162174137 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154487465 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141316156 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16101565 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165658851 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145845308 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.1433374 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227582613 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.109331628 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216994295 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206025343 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16844051 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202402084 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12254159 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.721058172 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.10901464 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198622793 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163434765 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233752691 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151635651 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179706449 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164966217 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173936127 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199539025 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165019262 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232408053 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219827086 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.185231516 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136483584 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165465555 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169525593 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.150200843 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129888768 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201526463 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164305686 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132081313 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.21109108 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178403419 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.143655122 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119279338 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232845643 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166986311 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190593313 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186230066 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135582667 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173809227 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188955669 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130874754 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.177266023 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235948863 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14805298 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129139339 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135820627 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155130594 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262028221 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.127718674 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211369808 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189053837 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165027826 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174444694 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.151641648 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228093296 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16248323 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193682522 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152233741 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.167989715 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161329708 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143977607 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.108404623 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162334485 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170958468 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.157038262 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165813982 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.171180845 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202721487 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.127636393 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122967578 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317123806 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197806146 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243401864 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.112865739 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135428378 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161282143 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150747757 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.176156153 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177283115 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135193245 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139681959 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.13965428 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.135695408 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.118366271 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153374977 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220181082 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165641141 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212095066 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.138356067 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281421573 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111507768 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154112361 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.113319243 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107802499 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148589159 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145721445 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159863348 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188719066 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264847397 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.145535957 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.131038652 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151856489 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.103794255 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135264519 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167776542 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16911369 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183717026 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143945595 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079337557 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155139164 seconds)
  done (took 84.847655082 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165138354 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.129160418 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.14489078 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.198621016 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172580544 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.266321679 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.204986157 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.249130461 seconds)
  done (took 2.594842845 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.099121878 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.14246888 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.153759402 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.12820108 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091438179 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.117283207 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.340308171 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.13120321 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.114405305 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.119489948 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.170047995 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.098542234 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.541098379 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.089499683 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.117834004 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.111988527 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.090995014 seconds)
  done (took 3.716256104 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.480272562 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.668654713 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.505692072 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.095970765 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.933013915 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.115059232 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.294970404 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.191346322 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.112949798 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.452714397 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.76611702 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.161130826 seconds)
  done (took 17.850740452 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.105971703 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.125055117 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.114826926 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.140880623 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.101057037 seconds)
  done (took 1.662991451 seconds)
done (took 131.877834105 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.110255583 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.406533836 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073172413 seconds)
  done (took 1.584161525 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.113823124 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.142918707 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.115734878 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.142177763 seconds)
  done (took 1.591593864 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.104438389 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.13106973 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.115563792 seconds)
  done (took 1.424491429 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.32514234 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.187753509 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.167823333 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.112330684 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127616495 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.107830978 seconds)
  done (took 1.422585042 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.103671838 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125889237 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102140442 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.127621553 seconds)
  done (took 1.53734398 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.100742959 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.076881006 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.105537547 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.081715637 seconds)
  done (took 1.436929912 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.118706015 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130132718 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.108226707 seconds)
  done (took 1.437696587 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.134597711 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138344677 seconds)
  done (took 1.350972952 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111414727 seconds)
  done (took 1.183065243 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.122996574 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.168611948 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.192851494 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.161873511 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.229337667 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.162064712 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.139011608 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.118315034 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.130718598 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.142014547 seconds)
  done (took 2.645411001 seconds)
done (took 17.476486332 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.108210157 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.416185792 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.388597965 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146197962 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721656863 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.38536172 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.017759768 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144058813 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167362016 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098761774 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137120048 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673612503 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.008964862 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.370865473 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.966307515 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.370069901 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676134417 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123321596 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118433829 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095163094 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.002044918 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091912593 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118866058 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090998294 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701815699 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.422955746 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093360732 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.369074107 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097538911 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124063267 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381482427 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.119713856 seconds)
  done (took 16.81273908 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.100120008 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.170401502 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.095904454 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136044377 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.12132689 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094414223 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121074597 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091744007 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178062621 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125900977 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114159454 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.118888065 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.122518557 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09334454 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140383341 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09675815 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.122510129 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091041749 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119151791 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092866599 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141516056 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117326752 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097082576 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11819708 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.091706492 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132646763 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.092442541 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122098568 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117763797 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096924803 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.124162685 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093123144 seconds)
  done (took 4.771270729 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146965915 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179302175 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.125016545 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124795604 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.16514774 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.120859559 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.195784021 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116702114 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180442041 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120921889 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136105474 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095084259 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154871877 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093076002 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144878816 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11834057 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097071575 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118691441 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.090958147 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121214488 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136045299 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097194063 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118632124 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095231635 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.119841124 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106026355 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.120801789 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.090544952 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121089782 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124087786 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.103960597 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.120729401 seconds)
  done (took 5.086874962 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.102573547 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123299152 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113796049 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.136209254 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.098971461 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124148595 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097716487 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121715545 seconds)
  done (took 2.001041413 seconds)
done (took 29.742555105 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116686329 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127649787 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.112201287 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.139589872 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.108160912 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130932738 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092506621 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.131250322 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.102933038 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.134263468 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134921136 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093210205 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.11978997 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.097907179 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.131991766 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096794539 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.13010261 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101043687 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.131025896 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.129924736 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.099945725 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.130486042 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.108514377 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.130503819 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10909592 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.136582132 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.143150365 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.106438517 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.127568096 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099996681 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.122533963 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110583862 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.129999911 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.110243005 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124951157 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.10123856 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.121524325 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095692373 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131274538 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.104774932 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.132219163 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.129559045 seconds)
  done (took 6.04178256 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.113544634 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.143440787 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.110039372 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079681241 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.115607564 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.078879721 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.135923517 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078121478 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.107810788 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.111266182 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073171366 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105143888 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.076768527 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071678826 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.109228756 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074077928 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.105869908 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.081605538 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075752197 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.104608958 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085369467 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071435838 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.106567609 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.082711593 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073539673 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.107923315 seconds)
  done (took 3.566512114 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.106774628 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133005339 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.111487447 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.180998854 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.156371074 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098003533 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.129411422 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.10852588 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.141714132 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11726679 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.094500245 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.147818296 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109089071 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127186674 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.089647684 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134878552 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132846195 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.096352286 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.125484146 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114487566 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136094369 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.100741158 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141566156 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.130170396 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091077352 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119571733 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.102193271 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.132375263 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.099132708 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129538021 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095467461 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.12268378 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.119743694 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.109998757 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.122799736 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093002254 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139288712 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101012699 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.128053111 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.0914843 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.123271655 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.091795494 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.145383232 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16656837 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.089994913 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127811864 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.098167715 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.130116908 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.118416981 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112733554 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128149949 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092324769 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.122079294 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09002554 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.119881636 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110075382 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.122210116 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.093556183 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129837287 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.092727096 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.136840244 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121789334 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.114392588 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.119561323 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.098259992 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.119373159 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.097015752 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118610656 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.112681603 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.120859271 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160596082 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.092610034 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.120820802 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.106434485 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.127559099 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096827427 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.12274422 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134458812 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.106508427 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12246127 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.108145026 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12404199 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.098603308 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139582127 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.094160171 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.121879597 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.092382366 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.127291322 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.120926217 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.098137881 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133703096 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.097905507 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.122434631 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111457394 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.119852527 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092424176 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128282554 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12349719 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.098227113 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131894126 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.09705582 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.120924638 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.107367602 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.120283967 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.094250819 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.130673361 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.095801098 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.123863577 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.122751119 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.105549675 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.119565005 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.098662855 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.122017052 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100301171 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129708034 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.09741302 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.125203519 seconds)
  done (took 14.709906832 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.233684873 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.212388478 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.229485193 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.258618611 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.131663872 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113034417 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.206684337 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.157772189 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.121409084 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.156804366 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.177414618 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.184031515 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.165545332 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.177890238 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.166780915 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.09740356 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.139879851 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.13141445 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.244461674 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.25947384 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.140924313 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.098822693 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.1584241 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.156958957 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.134124889 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.0999914 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.142064297 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.130768415 seconds)
  done (took 5.730973675 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.114227986 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153089377 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096347507 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14369506 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146008138 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091526693 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.125375097 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.092865796 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.133879656 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132307458 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.090877836 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127285356 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.102514824 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.13036799 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121677307 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.101341442 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.128136796 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.092424811 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123071948 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.095213445 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.127308134 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100454233 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125142501 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092469297 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.132131962 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.1176215 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.090921864 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139519169 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.091049366 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.142474746 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.117425196 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10323631 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.129931125 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.098701976 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120092136 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.093401784 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.122593769 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098576788 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.122655169 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.094689525 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.119755712 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076719512 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118422947 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106258421 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.127002479 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.077723805 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126767933 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.09762989 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.123447787 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.089281591 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.127723638 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.121941084 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.102652099 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.12745945 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099396422 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.120737601 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.099683219 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.112182324 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102059398 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.122210098 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.090498378 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.090144111 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126242195 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.114801507 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105721906 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.124877781 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091433707 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.122260199 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098703039 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.125779255 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094397684 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.123831531 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090344845 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.122592041 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.094461959 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.125671393 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.094363522 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.119021285 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.09075221 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.121886785 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.079290677 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.120296541 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075291127 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.123328834 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.097117691 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.118493159 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094383171 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126765799 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.134393161 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.093915179 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.128109965 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.099764569 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.118649345 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.101367011 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.110004601 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.102049236 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.135570758 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.108710571 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.126455056 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.11761722 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108329917 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.122743907 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.097689328 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.074678401 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.130077484 seconds)
  done (took 12.824012792 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132505004 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152149364 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.100797597 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.146493195 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154373481 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.163781145 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.107743615 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.127656628 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.101469089 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.139462311 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.091827662 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.130035878 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096042738 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.13500361 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.153449543 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.108297319 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122343884 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.10586545 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129528357 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.172166886 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.116901123 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.140444418 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.112817627 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.121694065 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.09730406 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.139307265 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.158045536 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.105971391 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.134710698 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141222133 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.113435295 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160125813 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.119181931 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.134273208 seconds)
  done (took 5.488778346 seconds)
done (took 49.442224285 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.221391946 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.389018693 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.179385566 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.006152947 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.203767432 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.178856984 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.191570745 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.180476495 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.325130781 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.180022959 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.446255504 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.722496694 seconds)
done (took 59.332276115 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.19320192 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.312749027 seconds)
    (2/2) benchmarking "String"...
    done (took 1.443703651 seconds)
  done (took 3.862892727 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.588412418 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.050364721 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.436542089 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.178959472 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.191074068 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.473597557 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.683620314 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.393448275 seconds)
  done (took 27.514903254 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.189740023 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.252927647 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.20294963 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.187814119 seconds)
  done (took 5.941665537 seconds)
done (took 47.213477603 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.178318145 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.199760206 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.219771305 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.166288233 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.281114341 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.20098285 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.511153567 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.202850468 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.190696186 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.154892179 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.201083014 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.180568967 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.211795457 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.512300751 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.181573204 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.180029244 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.251475685 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.680703426 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.541022378 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.20545579 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.179220438 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.219784968 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.195781742 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.193210279 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.204900634 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.184902342 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.192509666 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.182983616 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.164620847 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.181729343 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.277900202 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.679119857 seconds)
  done (took 189.414503058 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.181853549 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.159076002 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.264374911 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.228734815 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.451963456 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.378710612 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.29715641 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.709523018 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.197096791 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.192838116 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.405050102 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.182423539 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.494040486 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.152312707 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.214211 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.289631252 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.51177403 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.490794601 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.229467484 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.363567858 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.195564005 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.61290729 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.544322213 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.368889146 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.1860798 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.259835075 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.224034313 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.188852497 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.369633236 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.436775963 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.195572193 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.192983853 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.707280384 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.043175807 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.179374879 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.185855173 seconds)
  done (took 149.393527715 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.228466572 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.173090991 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.171645848 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.172421569 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.205002903 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.165216812 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.645067724 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.650198657 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.657430565 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.403238519 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.275917113 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.363190578 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.153537572 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.236378976 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.156103137 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.145840263 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.160936267 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.18637454 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.148783118 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.145062558 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.632064535 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.160974521 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.142506025 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.30568851 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.157824082 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.171257449 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.533359805 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.174740261 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.149486525 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.169790661 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.457933115 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.184627115 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.14115183 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.451798465 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.977576687 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.253724247 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.143328568 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.17015118 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.144085455 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.413590839 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.143065981 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.141768043 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.143040104 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.717673469 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.140947 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.629235497 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.146083641 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.028733388 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.142485321 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.141344302 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.622725397 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.143306119 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.621205728 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.15604405 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.138803587 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.146845451 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.145172935 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.138213219 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.166475431 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.654634322 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.224684335 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.155538568 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.143051694 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.164849916 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.139385285 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.18528216 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.148840907 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.510803317 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.208916646 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.243211004 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.626600925 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.142678201 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.235415394 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.251715018 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.135085529 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.141200558 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.141493577 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.139943097 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.248088669 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.136797845 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.515842826 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.300588739 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.152991661 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.138819653 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.256869654 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.229941876 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.13435914 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.438908722 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.142539954 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.139419307 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.852949268 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.144994625 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.235205226 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.139964415 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.138916683 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.145017603 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.51717763 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.623306003 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.331731126 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.139741199 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.60120571 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.14856428 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.532353452 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.622639083 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.73549769 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.137267651 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.253770509 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.302568239 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.155884988 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.144072124 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.263482164 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.145341576 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.205484335 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.139724289 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.542545017 seconds)
  done (took 356.537151894 seconds)
done (took 697.68466273 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.792395515 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.785917487 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.896721484 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.784844223 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.762779403 seconds)
  done (took 10.091203232 seconds)
done (took 11.169179999 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.320057873 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.320658897 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.201468172 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.321829944 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.175691182 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.333468249 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.297510197 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.168435008 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.242805549 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.220371 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.242718428 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.197596914 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.173415295 seconds)
  done (took 17.288615474 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.4451969 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.44855838 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.213906824 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.441795863 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.185957123 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.444147942 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.345062939 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.342947642 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.348960899 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.172258815 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.148032899 seconds)
  done (took 15.611094113 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.428968116 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.443420499 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.207064659 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.437526562 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.179851521 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.43523947 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.338289808 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.347217321 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.342806458 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.171753179 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.143823597 seconds)
  done (took 15.54479182 seconds)
done (took 49.524932044 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.14326108 seconds)
  done (took 2.205373875 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.173023356 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.336567739 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.162457893 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.150076002 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.144031309 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.14165294 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.143280024 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.141643466 seconds)
  done (took 10.460802931 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.141944445 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.135908332 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.136464012 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.13789124 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.139666405 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.141043275 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.142326828 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.140415763 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.139610294 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.13949395 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.13881669 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.141740966 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.137355588 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.137617533 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.142803796 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.138090479 seconds)
  done (took 19.289477929 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.141879272 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.136866887 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.137110062 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.136868275 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.137434473 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.135189968 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.138865433 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.140008169 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.139628633 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.141340165 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.140457164 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.139591035 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.139311424 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.139214655 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.140732896 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.137737742 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.139042746 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.140060497 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.147411296 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.141837185 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.138440743 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.142153671 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.142794363 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.137896393 seconds)
  done (took 28.41455777 seconds)
done (took 61.442672047 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.057209501 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.657591267 seconds)
  done (took 8.77442065 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.145809556 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.142240401 seconds)
  done (took 3.348898397 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.143237913 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.144549381 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.14478581 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.143194549 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.142939984 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.142315057 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.142179804 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.140971113 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.143008109 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.140843931 seconds)
  done (took 12.48688568 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.142786196 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.140816359 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.141019203 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.143598033 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.141062584 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.140531804 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.14219901 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.143338568 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.142033893 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.13705906 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.143224998 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.141423295 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.140529288 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.141521124 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.143660553 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.139809245 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.141214029 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.144138755 seconds)
  done (took 21.609763418 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.145137048 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.144692276 seconds)
  done (took 3.34786024 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.145033941 seconds)
    (2/7) benchmarking "second"...
    done (took 1.142249696 seconds)
    (3/7) benchmarking "month"...
    done (took 1.142631447 seconds)
    (4/7) benchmarking "year"...
    done (took 1.144150267 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.142221062 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.145429659 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.141356538 seconds)
  done (took 9.067608332 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.146859581 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.312599084 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.393073063 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.762907779 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.144439521 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.14637049 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.03302156 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.148688766 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.149656512 seconds)
  done (took 13.298523069 seconds)
done (took 73.003979371 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.114664104 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.152508905 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.200072474 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.146808194 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.157840499 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.436097802 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.191072461 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.257495504 seconds)
done (took 36.725579422 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.156366367 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.124920229 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.744006045 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.12632732 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.100036149 seconds)
  done (took 18.155006179 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.061484776 seconds)
    (2/2) benchmarking "read"...
    done (took 1.473934815 seconds)
  done (took 4.596514551 seconds)
done (took 29.979348621 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.146116891 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.146438685 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.144634414 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.145996136 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.147019794 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.14493554 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.1454985 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.145201267 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.14649275 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.147741721 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.1468411 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.145353228 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.149104745 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.143656626 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.144247693 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.1443263 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.147532777 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.143617778 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.143639058 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.145650987 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.143914502 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.145637662 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.149689442 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.142664908 seconds)
  done (took 28.553255368 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.149347769 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.146070128 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.14741405 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.147099222 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.147499042 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.145520162 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.149454502 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.144283797 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.148200721 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.150438826 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.145123018 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.145878095 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.149072636 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.145786194 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.151638669 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.14707873 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.149202822 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.145884331 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.150521311 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.142849254 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.149731462 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.146279183 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.148387997 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.148920144 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.146382764 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.147610065 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.147126404 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.147008993 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.1496648 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.14837668 seconds)
  done (took 35.490158632 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.152219156 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.160286868 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.149427892 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.151473515 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.149916868 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.14760986 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.149313025 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.149735198 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.149865543 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.14886695 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.151190915 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.148864608 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.148538558 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.150449994 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.152608908 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.150392461 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.152825368 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.14904266 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.148598909 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.152078847 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.156110775 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.153562772 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.151320608 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.150297229 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.152192064 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.15117046 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.150012218 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.14995052 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.150425337 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.153077086 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.150196412 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.153632294 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.152037054 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.153032096 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.15175107 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.15275946 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.153332983 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.159983031 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.149505684 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.151537368 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.151435895 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.149765171 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.155563231 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.151504574 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.152962743 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.151160531 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.152101658 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.151852565 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.151560703 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.154966752 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.149886189 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.152123183 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.154435745 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.152082731 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.154807663 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.155022038 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.153157273 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.150924943 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.154442629 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.151322908 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.151197256 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.152361546 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.152533965 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.153737496 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.152992224 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.154771748 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.152932662 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.151729135 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.156152304 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.153536465 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.15261061 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.158291682 seconds)
  done (took 84.020549023 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.154273556 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.153512937 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.149077569 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.152187803 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.151358884 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.155922784 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.150361999 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.154980481 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.152266493 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.15294757 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.155406813 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.153555668 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.155414483 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.154753975 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.153647015 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.149757251 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.155331033 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.15294565 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.155064661 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.154461738 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.153942763 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.150844118 seconds)
  done (took 26.441987723 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.16000834 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.158047668 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.154228589 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.157101383 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.152482119 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.154603942 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.156009984 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.158605284 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.156368008 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.151553949 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.155622274 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.154245391 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.153888786 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.153107625 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.153025285 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.156824272 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.155074523 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.154707972 seconds)
  done (took 21.871375385 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.157787936 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.153807354 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.158722165 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.154437618 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.156495466 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.158135106 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.155422432 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.156156896 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.155051779 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.153128135 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.154975653 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.157125604 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.158126225 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.154381009 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.157405769 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.156840502 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.156876982 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.155947656 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.153407848 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.155933736 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.154818206 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.159400806 seconds)
  done (took 26.504889827 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.155884814 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.156054277 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.154443011 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.154787925 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.153689673 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.155856053 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.155908989 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.152205427 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.161221446 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.159267494 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.155227876 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.156476851 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.156721444 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.157074605 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.155104355 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.153449326 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.160793561 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.156227631 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.154976218 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.153131887 seconds)
  done (took 24.190521741 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.16535344 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.16006873 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.160919292 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.16291788 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.162225382 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.162920012 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.163067553 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.159938905 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.159555114 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.160291866 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.160383947 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.161685874 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.161611005 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.163174564 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.163868489 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.162934038 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.160836696 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.160905424 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.161100506 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.164013339 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.16276587 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.161248729 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.163741069 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.160049299 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.16270294 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.162015708 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.161583042 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.161453136 seconds)
  done (took 33.605600153 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.160188817 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.160693535 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.158968817 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.159625836 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.160877696 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.158808015 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.160224704 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.159041969 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.161748232 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.158156641 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.163232284 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.160271299 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.163221519 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.1620187 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.160612433 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.161265191 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.162797844 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.159870486 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.158895485 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.160128966 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.162660249 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.162566322 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.16175374 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.159557693 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.159003979 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.164067819 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.159894978 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.159873275 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.163049143 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.163648197 seconds)
  done (took 35.902500817 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.182656386 seconds)
    (2/2) benchmarking "in"...
    done (took 1.183239494 seconds)
  done (took 3.445243053 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.159181109 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.161868196 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.16600903 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.159678904 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.160337784 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.16036024 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.160162303 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.160351118 seconds)
  done (took 10.364125918 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.162823543 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.163937296 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.167468901 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.164153585 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.169184191 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.16378016 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.170393688 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.180182882 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.162807255 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.163240814 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.17021198 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.170918673 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.166448329 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.164845158 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.167062468 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.165374927 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.163112017 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.163494781 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.166385853 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.167584538 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.164291028 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.170326869 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.166190589 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.16340711 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.166706281 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.174557975 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.185878825 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.159625734 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.164756071 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.168568262 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.165255284 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.164409467 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.166227303 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.167395476 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.1638975 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.165674656 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.175408023 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.182021307 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.171874695 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.183905561 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.168716288 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.164002554 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.168326274 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.170211987 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.163847926 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.164468324 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.16761678 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.164235444 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.164115887 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.168423398 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.171203903 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.16657723 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.164710049 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.171159368 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.163325776 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.173350937 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.184408661 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.167242448 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.173587158 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.175794724 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.198205587 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.184282643 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.169702689 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.166794885 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.175489179 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.187489108 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.17445533 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.182119017 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.165791138 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.168170264 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.17330178 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.192707872 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.191711318 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.168236799 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.169451441 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.167328654 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.168460506 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.169788691 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.177800311 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.192300865 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.17157831 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.171039847 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.178594577 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.187149365 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.168580658 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.170432137 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.170138342 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.169905863 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.170305765 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.178440361 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.188609139 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.170409511 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.167133632 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.169058426 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.169729812 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.170219887 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.168380441 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.170938953 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.166868486 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.169307146 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.170138702 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.172485782 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.179036429 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.171318207 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.170836764 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.176290574 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.186848363 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.17034709 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.17343363 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.169624132 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.171222917 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.171445774 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.176235335 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.168657419 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.171391009 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.178520278 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.17083791 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.172737077 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.172599611 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.171876932 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.180177366 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.19263878 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.171241137 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.170155569 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.178803602 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.181021702 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.173182377 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.175141376 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.170618542 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.169871781 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.172359343 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.17378435 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.170880266 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.1724825 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.173585782 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.172900497 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.170691471 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.173453524 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.173983096 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.171977965 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.173591253 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.173645713 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.174233618 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.174278778 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.172294253 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.175856387 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.179658204 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.185864334 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.172951794 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.17307478 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.173256982 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.170948334 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.17465782 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.174432673 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.172375671 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.173725287 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.172480844 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.175583272 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.176150216 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.178166471 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.175586795 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.172761373 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.174939668 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.171197901 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.176043369 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.170671359 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.170528964 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.174261195 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.171932437 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.173218442 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.174655039 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.176735562 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.175230764 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.181856872 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.174939568 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.173014099 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.175155147 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.172856497 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.176318321 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.176354924 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.17874916 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.183192698 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.172140271 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.179503774 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.187846904 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.175740286 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.175438315 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.175876747 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.174344186 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.176878559 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.178646992 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.178590558 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.184041873 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.20007934 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.177416637 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.179157925 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.176776494 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.179181375 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.178255503 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.179321503 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.176606471 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.17434958 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.175276675 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.173775168 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.178344813 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.17768871 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.176912265 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.176672552 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.174837865 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.177636746 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.178208705 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.176786164 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.17497804 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.173330576 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.177722292 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.178730675 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.178028914 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.174850977 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.177619915 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.178640638 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.181721056 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.177008795 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.188344252 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.17557951 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.180247126 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.179998693 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.176219654 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.175552321 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.178115698 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.180797513 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.18268075 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.186159507 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.195164437 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.177939564 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.188392965 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.194388781 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.178546433 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.179549739 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.177289679 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.176244734 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.18110076 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.185100832 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.177470041 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.182244264 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.177432142 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.181653877 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.180664038 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.186762224 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.192398721 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.179548056 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.181129809 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.182303162 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.175562879 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.182946141 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.180360978 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.18216388 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.185047165 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.1836505 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.181998404 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.184691284 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.181418554 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.180731815 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.181618698 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.182234005 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.188650501 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.188025104 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.180681611 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.181434885 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.182895861 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.185967057 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.183032492 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.183411793 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.179143386 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.194172958 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.198467689 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.185949721 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.19808887 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.180964766 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.187989401 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.198143233 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.184394481 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.182337242 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.186880114 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.181069847 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.181011037 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.180599215 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.185438287 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.188772556 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.180176016 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.182840704 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.185922876 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.185372872 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.180580106 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.183513724 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.183798841 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.183308514 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.182083172 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.183660015 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.184585836 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.182204422 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.182493558 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.18560392 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.194334816 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.204404202 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.183596 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.18603067 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.182092498 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.184108543 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.182342832 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.185736328 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.18514938 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.192993247 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.186232622 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.195293172 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.18821174 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.194633113 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.183800515 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.188083873 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.19020517 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.182802061 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.182993382 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.184608292 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.184855354 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.191070757 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.202780786 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.185801792 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.186890075 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.186921288 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.186984255 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.185202021 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.184349359 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.185420034 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.186766473 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.194246366 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.200274686 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.189341216 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.187839257 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.182670423 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.185021297 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.184626638 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.185683838 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.188346008 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.189949643 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.183129273 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.186843859 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.184948753 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.19089827 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.186908428 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.186751409 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.186281183 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.190343979 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.191913882 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.202942318 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.190232822 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.190925639 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.192610277 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.20488172 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.1954325 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.208560521 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.18337246 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.189758995 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.188597199 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.193548242 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.189040561 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.188571733 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.188689163 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.187351843 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.193346258 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.188709374 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.191086082 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.1865317 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.189545529 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.184883197 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.198062136 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.2090248 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.186605339 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.193886819 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.185693049 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.189809506 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.193439486 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.1906312 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.188376807 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.190476669 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.194401134 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.19710336 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.191592859 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.19541187 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.195869299 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.185952621 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.188116296 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.188704177 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.192526721 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.18692845 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.189753876 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.190075528 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.191577797 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.193932481 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.187874459 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.192234278 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.190773049 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.200410457 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.205185725 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.188955841 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.190796635 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.191782897 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.187098751 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.187305947 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.193136044 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.190945704 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.194159424 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.191399659 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.195848917 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.196253468 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.193421819 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.192025365 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.194717593 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.189211575 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.193201217 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.189440871 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.190341701 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.192088535 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.191863489 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.19432403 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.191711299 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.190311304 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.191017819 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.191931218 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.191682186 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.199047642 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.19593019 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.196181649 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.18913376 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.192808957 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.189285874 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.192125503 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.189140309 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.200054602 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.210934816 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.198980229 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.201227578 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.195418919 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.19233496 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.196605162 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.195956685 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.189324798 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.192688768 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.193993256 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.1951668 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.194389916 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.194080653 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.195499327 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.201480639 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.210431583 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.191791771 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.204080625 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.20904664 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.191801467 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.197716417 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.19840804 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.193407562 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.19485425 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.198051768 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.18849132 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.200378875 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.211347521 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.196045744 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.195331539 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.194420748 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.19269359 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.19867721 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.195152489 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.193660858 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.193185014 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.192256073 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.194775129 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.195023787 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.189891821 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.197157344 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.19706275 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.199781415 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.198829703 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.193562917 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.198426603 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.199492481 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.194505159 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.193106907 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.196353099 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.197148011 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.193283513 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.195479304 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.196834951 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.197807853 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.197393152 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.193736303 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.195167439 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.195637032 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.195221974 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.198528182 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.202465627 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.201639791 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.191443993 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.195808108 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.193942457 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.200940845 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.195189745 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.196472042 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.195190571 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.196407106 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.195431736 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.197041082 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.198612674 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.198715613 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.211579346 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.211279182 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.196489589 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.196198277 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.200778306 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.196762457 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.196582261 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.199287996 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.198614982 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.200339621 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.204150615 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.19940998 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.201276956 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.213608486 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.199385797 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.201222316 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.202239884 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.204110493 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.199014545 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.197539185 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.197345151 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.201704955 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.207666163 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.19415833 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.203669862 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.225023686 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.211859413 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.198069875 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.194341924 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.197149781 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.198161588 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.198406052 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.199510627 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.203507634 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.198660318 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.199158079 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.199542371 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.199682617 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.196907839 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.201260226 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.199446331 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.195228333 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.1986617 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.196123009 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.203270093 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.199266985 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.199852577 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.199165552 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.200560285 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.199181879 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.205987486 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.221970045 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.202904581 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.201116979 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.199209316 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.203801685 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.20180764 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.206832593 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.204899236 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.201646508 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.200808284 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.206142687 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.198850935 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.197795505 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.199457348 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.199801744 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.199729316 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.197715703 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.206566113 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.219896897 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.207215217 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.196435238 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.199289417 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.197429562 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.198434241 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.200550224 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.204017583 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.203971426 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.201679759 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.202278798 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.200981214 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.202050677 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.201022094 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.206012603 seconds)
  done (took 707.721445337 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.197889151 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.199730205 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.19833048 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.200120876 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.194825528 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.199188218 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.197008483 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.196439925 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.19829848 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.205018796 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.199141711 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.19620452 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.200454057 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.200835374 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.200428635 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.199738534 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.201534558 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.202542412 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.200408843 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.199946437 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.200471682 seconds)
  done (took 26.298208743 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.204767557 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.198142328 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.200538058 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.202890078 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.201857891 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.203986247 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.199080251 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204510944 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.204479697 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200112339 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.201435944 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.201169537 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.20071446 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.201280134 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.197188671 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.201115177 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.200756657 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.199197471 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.202741742 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.200191037 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.204009393 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.201228333 seconds)
  done (took 27.545669023 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.204687852 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.20662704 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.207620363 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.200368398 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.206332503 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.203593701 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.205682208 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.205992232 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.204249936 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.209294193 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.205467889 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.204284312 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.207695092 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.206286724 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.208444713 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.201425738 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.354514302 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.205947887 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.20542878 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.206721114 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.205731908 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.214191785 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.217062443 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.204519316 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.204672899 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.206765706 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.207442595 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.20524777 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.203248263 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.204940904 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.208297861 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.205998586 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.201672095 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.207724453 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.20454596 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.207590353 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.206209116 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.205048986 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.199940609 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.208006673 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.211258879 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.222090923 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.20323609 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.212812522 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.219823436 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.205175715 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.206201086 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.210796999 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.203451209 seconds)
  done (took 60.398019252 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.208394127 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.205300225 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.203880052 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.208212922 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.206670089 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.208015845 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.206571564 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.210440801 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.205356512 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.201548869 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.205358879 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.204096792 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.202990389 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.207516828 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.207292968 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.204269214 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.205534587 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.203559668 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.204858265 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.204793611 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.205655977 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.209507314 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.206809618 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.205737352 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.210675858 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.206280156 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.205605587 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.208202165 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.208521194 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.208723359 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.210051957 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.211639575 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.207267108 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.205792538 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.20704986 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.207469782 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.210422131 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.203673782 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.208482549 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.209203236 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.207663902 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.208623001 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.210597924 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.208774234 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.207675714 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.205418944 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.207873465 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.206967416 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.208613418 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.206913726 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.209500282 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.206898999 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.212181953 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.211459779 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.209726942 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.210806221 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.207175602 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.208882953 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.21008661 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.207741144 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.208501381 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.212163152 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.21000687 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.210406945 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.212481651 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.208833747 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.208224382 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.210629538 seconds)
  done (took 83.244260719 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.212023733 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.21263916 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.211132029 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.213541246 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.211854879 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.214259358 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.211062153 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.212044512 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.211558009 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.212654706 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.210381622 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.212253851 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.210514489 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.21070387 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.212882393 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.211230072 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.213621677 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.210956628 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.211681514 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.212720384 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.211520892 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.211962868 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.213347057 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.211144475 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.208412615 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.212564985 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.213998316 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.211826234 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.209561172 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.211729471 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.213060448 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.212260231 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.214247829 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.212658333 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.211638449 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.21339005 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.211459306 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.214706023 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.214023895 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.213540068 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.213520096 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.212728846 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.212121237 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.215312817 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.209842976 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.214085119 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.214055703 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.212042809 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.211866388 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.217311463 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.21341277 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.213678361 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.215221542 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.215431416 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.213203206 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.211729081 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.213751001 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.212343903 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.21074394 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.211952231 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.214863861 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.21350928 seconds)
  done (took 76.302248083 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211832617 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.214051711 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.211232457 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.208540702 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.215441543 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.20966486 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.215366102 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.215257765 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.215817432 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.211887042 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211841878 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208906747 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20884811 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212638335 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.209554331 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213652929 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.210157202 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.20885197 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217146812 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.208950785 seconds)
  done (took 25.365469834 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.211086818 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.216595123 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.212776409 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.211052183 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.213257312 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.211106717 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.215811486 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213506946 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210335917 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214202122 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.215290414 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.215563498 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210095969 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.213405848 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.21304714 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.217840121 seconds)
  done (took 20.53848361 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.21256002 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.214670893 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.213418969 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.213730747 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.215908052 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.214959816 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.217414413 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.21101686 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.208697451 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.218634885 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.215169681 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.217214173 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.219073894 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.214472396 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.214687349 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.217299994 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.215618104 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.215178139 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.217666151 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.214139815 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.212822069 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.212124085 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.214998211 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.214785233 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.215721479 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.212997271 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.213156804 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.215191561 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.212654185 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.220022991 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.216875493 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.217482822 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.215975769 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.211760948 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.218249415 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.214588973 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.217916294 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.215512383 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.220599116 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.215435535 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.220079719 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.21689385 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.218996446 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.216717641 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.216224966 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.219597088 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.21953863 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.214618259 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.214405306 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.215013481 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.21874596 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.215017621 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.216922857 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.217695418 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.217551934 seconds)
  done (took 67.993251569 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218737793 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.215911691 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.217488867 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.215668775 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.21487677 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.214069801 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.219530803 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.220531807 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215688029 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.215811305 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.218876347 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.224719604 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219446306 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.215003446 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.215295419 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221976808 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.216822437 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.219760443 seconds)
  done (took 23.048533921 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.217967174 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.216318878 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.219202901 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.215094006 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.214811817 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.218815966 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213172514 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.218933893 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218514061 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.215178662 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215606206 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.218644227 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217418815 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.221904911 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.214172455 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216125275 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.221372095 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219428302 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.216947029 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218811015 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.219983336 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222774444 seconds)
  done (took 27.918989564 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.220437005 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.219924337 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.217363058 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.234448983 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.23195552 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.239815268 seconds)
  done (took 8.496024401 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22990922 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218077605 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.215160584 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221262972 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223159592 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217927624 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217205158 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219626085 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222067755 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21774643 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217131048 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218622294 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222472274 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21731557 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222325232 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222624903 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216172157 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217324294 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21736432 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224519569 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218393394 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219373998 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216445087 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218653172 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219284649 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217336636 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219879875 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222099876 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218387076 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22545249 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219234046 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219944249 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223286468 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220205627 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216509423 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215028726 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215283281 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220314844 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221917133 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215992172 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.222977883 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214279335 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215464354 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211844105 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213612531 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211873834 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210837856 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21162172 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211462886 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214123399 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213971845 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211878929 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213808065 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213614931 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.21492797 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215268194 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212383149 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212795517 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215144038 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21216484 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212210321 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213765594 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21391576 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212744945 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215021279 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212685201 seconds)
  done (took 81.491399735 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213195091 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.212582044 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212685418 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212706979 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212084566 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211909211 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211993427 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212679993 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214014128 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214963388 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216223555 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213496569 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21204611 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215199445 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213180452 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213110433 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211825471 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213265672 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213398175 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215612821 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212488796 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213068898 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213709517 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213540675 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212872483 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2178215 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213810977 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212494333 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211921431 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213219838 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214962586 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214479406 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211834623 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.214718915 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214319471 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2143049 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213576242 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214737174 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215015123 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217448832 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213859433 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216964154 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214525336 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21487884 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215530358 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215592577 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214801797 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214228916 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216803507 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216180922 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215632908 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216675477 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.213634302 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214501086 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213717919 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215208982 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215585724 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214674521 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216491987 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217300545 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216139984 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216248014 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217529271 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216248148 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.21593357 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215577047 seconds)
  done (took 81.286424687 seconds)
done (took 1649.105036756 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.23921633 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.278402149 seconds)
  done (took 13.654398228 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.379214473 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.333899096 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.216036211 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.213496114 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.21501412 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.230255697 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.21076843 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.217246499 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.216690441 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.215717571 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.217375651 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.403294904 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.272957573 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.216068791 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.217518593 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.308887782 seconds)
  done (took 41.222237536 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.239346926 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.233732188 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.329615526 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.249749866 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.247883537 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.403815756 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.281509754 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.231896264 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.385124225 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.273238016 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.697506296 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.255784937 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.232132733 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.274337922 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.249522063 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.401516759 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.462199769 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.702565632 seconds)
  done (took 28.292851287 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.635205534 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.226706011 seconds)
  done (took 9.005512633 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.244933134 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.230701478 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.225373371 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.226024402 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.219355272 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.234477563 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.226958175 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.220834768 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.577802957 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.346591052 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.233488043 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.235635712 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.245449832 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.228893069 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.225684033 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.262527392 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.378862089 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.23104768 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.225924656 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.233444055 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.228096268 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.324588141 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.27175348 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.23267741 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.343265442 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.588661811 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.23640385 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.235185089 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.409938704 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.234198588 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.227034184 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.226950056 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.230296935 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.829284175 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.758027469 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.244780329 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.250881906 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.239894185 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.228740235 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.389349719 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.236086929 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.237603622 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.227417453 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.76258233 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.366164549 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.343966018 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.357244481 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.250750153 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.23038695 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.288730267 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.232631256 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.232178144 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.259173639 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.989702272 seconds)
  done (took 105.144891636 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.224075378 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.609740149 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.390851674 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.245588884 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.050129548 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.003929284 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.245215594 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.486371097 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.282293726 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.226038061 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.514308007 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.717292286 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.249545899 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.277145199 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.722049719 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.314753516 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.223964993 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.952027063 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.245750856 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.224400294 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.70240801 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.23078312 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.248205648 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.420653362 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.26195185 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.665405188 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.499966792 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.713789754 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.246632841 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.223248763 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.673474143 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.255475081 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.240970085 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.227402109 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.476803527 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.563608538 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.563880209 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.249916969 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.250796337 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.229438408 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.238397312 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.654987719 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.569668912 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.248037317 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.246413804 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.682805685 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.247737857 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.234487443 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.229781659 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.430779193 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.880583683 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.230429262 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.495421685 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.231632874 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.523742179 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.319355625 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.227228021 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.694209954 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.251369046 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.393558804 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.26567493 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.225884622 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.231722677 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.229698157 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.235368162 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.557837862 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.509331085 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.227666317 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.556041271 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.691729338 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.250402099 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.743457302 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.149039479 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.241096349 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.283217551 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.228000008 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.815989211 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.707382392 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.261954499 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.226849808 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.544402954 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.252114438 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.499062647 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.247168078 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.232472922 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.736017266 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.241437489 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.269531961 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.227532229 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.234343903 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.018652563 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.238876368 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.509313509 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.254540248 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.226329433 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.227227433 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.234647929 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.227194285 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.249320883 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.233161322 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.738683411 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.255947801 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.201133384 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.253723152 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.244438788 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.234882849 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.229456327 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.229335363 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.453177879 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.672396073 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.256429578 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.229993693 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.229021698 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.240905907 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.440399407 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.229976896 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.520990061 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.253941353 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.233545683 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.240553081 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.035989249 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.301642976 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.231192931 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.252181766 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.123303367 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.439339447 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.254002744 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.253575514 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.232003409 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.252485181 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.435146001 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.254792212 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.318699126 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.235821731 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.909029578 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.263300689 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.253428199 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.530224034 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.242318009 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.105361509 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.257803077 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.232670596 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.517799028 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.494112195 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.40879932 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.233602338 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.252887502 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.903321766 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.278526367 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.380611624 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.257114474 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.2149231 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.429482532 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.370043375 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.233113048 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.828205196 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.231636735 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.4507332 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.239574212 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.550810458 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.711903122 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.255273192 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.237934001 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.92182553 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.930115288 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.059259664 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.23273023 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.500575387 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.186216686 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.712292844 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.23485759 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.247024404 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.805880937 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.238770377 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.234590192 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.232087378 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.234818173 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.305245767 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.405204339 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.440238713 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.238244437 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.669909215 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.31233153 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.237103932 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.242137451 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.237447432 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.580958133 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.309121044 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.239471192 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.244532873 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.239205684 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.240213989 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.6931215 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.185609595 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.239801073 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.386727857 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.850606519 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.259222297 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.236866987 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.837264595 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.462942126 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.762935596 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.307727598 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.525041307 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.267127028 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.271802416 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.997884073 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.273226177 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.691669884 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.259963133 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.242169654 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.825081734 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.25581015 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.369772977 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.236466073 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.237711077 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.765886558 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.257107921 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.241887404 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.425835866 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.25971665 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.511558228 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.242367426 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.287718761 seconds)
  done (took 1087.543226897 seconds)
done (took 1286.008811359 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.236840923 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.242641889 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.223715887 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.243718938 seconds)
  done (took 26.102700415 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.249761803 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.25103264 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.246744764 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.245149187 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.245708859 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.243662503 seconds)
  done (took 8.640654226 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.275500158 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.243542194 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.244366183 seconds)
  done (took 18.922160118 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.435253204 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.486639845 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.581598672 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.363207821 seconds)
  done (took 10.024341574 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.245637724 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.247737243 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.248305658 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.249117372 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.252731896 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.252115649 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.249018493 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.248916524 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.251065299 seconds)
  done (took 12.406159576 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.248589071 seconds)
done (took 78.516015137 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.584498441 seconds)
    (2/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.295676639 seconds)
    (3/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.066443555 seconds)
    (4/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.257657399 seconds)
    (5/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.272929014 seconds)
    (6/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.417653296 seconds)
    (7/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.276365916 seconds)
    (8/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.592674982 seconds)
    (9/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.584228474 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.512557845 seconds)
    (11/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.066977614 seconds)
    (12/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.748788872 seconds)
    (13/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.084083232 seconds)
    (14/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.287822139 seconds)
    (15/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.446157278 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.287441114 seconds)
    (17/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.342479451 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.267768658 seconds)
    (19/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.339156641 seconds)
    (20/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.304157049 seconds)
    (21/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.362361636 seconds)
    (22/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.326113302 seconds)
    (23/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.584486233 seconds)
    (24/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.332059969 seconds)
    (25/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.553124912 seconds)
    (26/286) benchmarking ("sort", Float32, true)...
    done (took 6.2654647 seconds)
    (27/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.598540839 seconds)
    (28/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.260756834 seconds)
    (29/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.962783316 seconds)
    (30/286) benchmarking ("sort", Float64, true)...
    done (took 6.250171496 seconds)
    (31/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.198756473 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 6.266020614 seconds)
    (33/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.230151224 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.350805346 seconds)
    (35/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.223095332 seconds)
    (36/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.281108003 seconds)
    (37/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.423336028 seconds)
    (38/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.266745291 seconds)
    (39/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.599078729 seconds)
    (40/286) benchmarking ("sort", BigInt, false)...
    done (took 6.247190017 seconds)
    (41/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.318795003 seconds)
    (42/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.251639119 seconds)
    (43/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.245824252 seconds)
    (44/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.249842376 seconds)
    (45/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.224680543 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.370884578 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.500724417 seconds)
    (48/286) benchmarking ("sort", Float32, false)...
    done (took 5.237149908 seconds)
    (49/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.229067443 seconds)
    (50/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.653435532 seconds)
    (51/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.24803658 seconds)
    (52/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.249796968 seconds)
    (53/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.229782211 seconds)
    (54/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.977873293 seconds)
    (55/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.286254049 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.302075145 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.127272473 seconds)
    (58/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.25017096 seconds)
    (59/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.487292145 seconds)
    (60/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.376006917 seconds)
    (61/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.223402311 seconds)
    (62/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.374965415 seconds)
    (63/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.02737482 seconds)
    (64/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.229738997 seconds)
    (65/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.34689014 seconds)
    (66/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.96153668 seconds)
    (67/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.443231637 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.650779883 seconds)
    (69/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.819157078 seconds)
    (70/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.368765411 seconds)
    (71/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.224471712 seconds)
    (72/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.484640116 seconds)
    (73/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.356785864 seconds)
    (74/286) benchmarking ("sort", Int8, false)...
    done (took 4.329594625 seconds)
    (75/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.278470631 seconds)
    (76/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.336639752 seconds)
    (77/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.376854314 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 5.395738468 seconds)
    (79/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.320122254 seconds)
    (80/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.244063399 seconds)
    (81/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.050614309 seconds)
    (82/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.031590738 seconds)
    (83/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.242624779 seconds)
    (84/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.261194256 seconds)
    (85/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.236442945 seconds)
    (86/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.225572108 seconds)
    (87/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.451882598 seconds)
    (88/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.230870122 seconds)
    (89/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.230040327 seconds)
    (90/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.231599174 seconds)
    (91/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.374218242 seconds)
    (92/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.247752516 seconds)
    (93/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.36572208 seconds)
    (94/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.450656416 seconds)
    (95/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.284592726 seconds)
    (96/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.078659944 seconds)
    (97/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.262914507 seconds)
    (98/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.31029796 seconds)
    (99/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.2508587 seconds)
    (100/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.280340005 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.467976348 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.64926004 seconds)
    (103/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.258650945 seconds)
    (104/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.279338448 seconds)
    (105/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.762790037 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.850394484 seconds)
    (107/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.231364365 seconds)
    (108/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.552113586 seconds)
    (109/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.282846167 seconds)
    (110/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.021701948 seconds)
    (111/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.586534498 seconds)
    (112/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.335793537 seconds)
    (113/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.250333153 seconds)
    (114/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.409658793 seconds)
    (115/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.078070425 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.827410645 seconds)
    (117/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.257200782 seconds)
    (118/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.582829632 seconds)
    (119/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.570913774 seconds)
    (120/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.682306973 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 1.761387745 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.289496735 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.503714902 seconds)
    (124/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.273835711 seconds)
    (125/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.421981727 seconds)
    (126/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.285281039 seconds)
    (127/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.052509064 seconds)
    (128/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.278061995 seconds)
    (129/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.432648783 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.969835751 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.531756732 seconds)
    (132/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.108356479 seconds)
    (133/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.235363546 seconds)
    (134/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.292994558 seconds)
    (135/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.818158945 seconds)
    (136/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.772357046 seconds)
    (137/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.374830918 seconds)
    (138/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.226302712 seconds)
    (139/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.368706137 seconds)
    (140/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.605793828 seconds)
    (141/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.337485214 seconds)
    (142/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.370348313 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.997505455 seconds)
    (144/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.278739707 seconds)
    (145/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.518765809 seconds)
    (146/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.780842805 seconds)
    (147/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.278427048 seconds)
    (148/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.230712518 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.2789757 seconds)
    (150/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.844819751 seconds)
    (151/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.261760266 seconds)
    (152/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.940334086 seconds)
    (153/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.620965355 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.140858194 seconds)
    (155/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.277382553 seconds)
    (156/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.276269942 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.096560611 seconds)
    (158/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.235168132 seconds)
    (159/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.713169731 seconds)
    (160/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.821285161 seconds)
    (161/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.594549951 seconds)
    (162/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.44049804 seconds)
    (163/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.501068413 seconds)
    (164/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.247417291 seconds)
    (165/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.235018529 seconds)
    (166/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.341893814 seconds)
    (167/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.282311997 seconds)
    (168/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.957192978 seconds)
    (169/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.263714594 seconds)
    (170/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.243764661 seconds)
    (171/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.334593417 seconds)
    (172/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.990693059 seconds)
    (173/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.267194923 seconds)
    (174/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.916633285 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.298475943 seconds)
    (176/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.263886767 seconds)
    (177/286) benchmarking ("sort", Float64, false)...
    done (took 5.533598094 seconds)
    (178/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.380860027 seconds)
    (179/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.279140728 seconds)
    (180/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.680975377 seconds)
    (181/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.340794319 seconds)
    (182/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.29152864 seconds)
    (183/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.029727717 seconds)
    (184/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.45529622 seconds)
    (185/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.823280302 seconds)
    (186/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.180820761 seconds)
    (187/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.279876484 seconds)
    (188/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.244891052 seconds)
    (189/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.511931012 seconds)
    (190/286) benchmarking ("sort", Bool, true)...
    done (took 5.345761811 seconds)
    (191/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.274110771 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.324354272 seconds)
    (193/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.066719137 seconds)
    (194/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.357165268 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.871016842 seconds)
    (196/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.237085604 seconds)
    (197/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.048575504 seconds)
    (198/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.234854435 seconds)
    (199/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.47814386 seconds)
    (200/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.268233108 seconds)
    (201/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.249792648 seconds)
    (202/286) benchmarking ("sort", Int8, true)...
    done (took 6.252574528 seconds)
    (203/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.267666342 seconds)
    (204/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.256632991 seconds)
    (205/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.78598387 seconds)
    (206/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.881276151 seconds)
    (207/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.460032252 seconds)
    (208/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.255570073 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.80435091 seconds)
    (210/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.603732025 seconds)
    (211/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.763677605 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.278910159 seconds)
    (213/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.263381219 seconds)
    (214/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.26768265 seconds)
    (215/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.279789585 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.652828134 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.310384698 seconds)
    (218/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.251547732 seconds)
    (219/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.697227539 seconds)
    (220/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.293584684 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.152972689 seconds)
    (222/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.456522782 seconds)
    (223/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.239223978 seconds)
    (224/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.305544947 seconds)
    (225/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.636008267 seconds)
    (226/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.353977143 seconds)
    (227/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.23385511 seconds)
    (228/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.385300558 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.595225836 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.672984498 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.885360406 seconds)
    (232/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.308550869 seconds)
    (233/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.684583606 seconds)
    (234/286) benchmarking ("sort", BigInt, true)...
    done (took 6.257996943 seconds)
    (235/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.342240966 seconds)
    (236/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.418993523 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.452833303 seconds)
    (238/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.256407093 seconds)
    (239/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.254131059 seconds)
    (240/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.242100238 seconds)
    (241/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.524691387 seconds)
    (242/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.558955807 seconds)
    (243/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.089659082 seconds)
    (244/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.295855461 seconds)
    (245/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.245621566 seconds)
    (246/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.99237662 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.884968795 seconds)
    (248/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.39041404 seconds)
    (249/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.242943089 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.637856516 seconds)
    (251/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.842220949 seconds)
    (252/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.256016069 seconds)
    (253/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.363639128 seconds)
    (254/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.314198533 seconds)
    (255/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.629341423 seconds)
    (256/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.290514838 seconds)
    (257/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.244977482 seconds)
    (258/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.023283162 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.343000031 seconds)
    (260/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.263282911 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.339691341 seconds)
    (262/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.979485273 seconds)
    (263/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.247160127 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.388570566 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.051273455 seconds)
    (266/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.368014945 seconds)
    (267/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.34254972 seconds)
    (268/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.242261588 seconds)
    (269/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.182081946 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.296150421 seconds)
    (271/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.609843197 seconds)
    (272/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.793314392 seconds)
    (273/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.236681272 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.153545422 seconds)
    (275/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.280068388 seconds)
    (276/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.96493431 seconds)
    (277/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.251401134 seconds)
    (278/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.278890702 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.274794749 seconds)
    (280/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.31831103 seconds)
    (281/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.250342979 seconds)
    (282/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.238318032 seconds)
    (283/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.657401749 seconds)
    (284/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.259946866 seconds)
    (285/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.978849178 seconds)
    (286/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.278108853 seconds)
  done (took 910.777423223 seconds)
done (took 911.951313127 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.288266241 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.285050571 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.263905463 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.284133837 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.374419401 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.290842932 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.276062383 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.266402857 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.314500266 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.311213693 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.262550016 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.2862888 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.266144268 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.267920199 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.264680956 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.279181457 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.251899033 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.271146538 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.284180722 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.275010893 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.285374691 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.265999182 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.31265912 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.288053316 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.266762149 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.269889059 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.267177663 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.284790117 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.37593419 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.26827373 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.268821659 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.276389313 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.2483737 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.269102726 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.259962564 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.281787747 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.280369986 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.277281821 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.269542409 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.298840351 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.636271255 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.283457625 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.270005735 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.263358084 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.269889153 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.270962988 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.270408305 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.272247284 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.281291866 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.282971532 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.643824511 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.301555457 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.270736142 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.267282456 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.276131569 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.267823098 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.273973861 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.287315832 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.285522643 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.284784351 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.244082031 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.27793127 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.26897102 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.284104304 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.274087416 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.680785136 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.283524624 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.27269778 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.641307286 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.291411214 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.679857207 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.29565925 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.269593811 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.280766358 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.299783851 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.252307639 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.267714985 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.268756827 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.272505743 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.266846271 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.279346444 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.28187895 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.273663907 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.26810998 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.28488207 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.293684369 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.280508609 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.268947043 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.278194637 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.29212631 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.275247503 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.282292413 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.272574755 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.261953992 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.280258843 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.270806358 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.270886135 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.2693633 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.274328377 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.278197365 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.633352551 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.31060545 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.270236512 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.266017658 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.26632977 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.282335724 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.634192817 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.291745078 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.290035402 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.318111992 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.269288541 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.24072506 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.278318598 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.285629402 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.279367603 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.271988515 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.264153171 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.228057138 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.640436335 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.306614236 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.271792853 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.268336553 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.288846637 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.271616298 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.265934872 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.257971618 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.277867271 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.287102481 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.393585796 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.280516846 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.301434446 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.269312894 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.272349041 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.298598228 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.290355283 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.302971539 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.274226005 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.288347392 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.284741349 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.267600896 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.283214206 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.284884031 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.273415227 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.277751182 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.26690846 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.30005884 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.291101102 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.285866136 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.293726087 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.391980645 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.271265615 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.246450131 seconds)
done (took 214.74323632 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.33093046 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.270554287 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.350186609 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.268766275 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.37290731 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.369666226 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.265976597 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.270508463 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.270061399 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.650578419 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.27009405 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.267300708 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.270955086 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.265039966 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.350825981 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.27101908 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.26465235 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.609058981 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.271224944 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.336454941 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.271407213 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.270412411 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.269263075 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.648645565 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.270433075 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.267398661 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.345978115 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.271070576 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.614842639 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.262923856 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.266056881 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.615533793 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.361777892 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.292976417 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.281093275 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.275887843 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.369596441 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.288879333 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.350753781 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.354273522 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.354957972 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.311324813 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.264868504 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.269446448 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.277777757 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.274415065 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.26861421 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.298278321 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.269728971 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.268929517 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.613834901 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.28118217 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.266713252 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.27073474 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.269724967 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.302212776 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.276090495 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.27624948 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.361557938 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.274097329 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.335087431 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.652925506 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.652268698 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.277714571 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.27423942 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.272187947 seconds)
  done (took 144.238807585 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.338368968 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.346968321 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.382858279 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.291378144 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.327662286 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.38552293 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.289080698 seconds)
  done (took 10.541509279 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.283676031 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.278977772 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.322440901 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.32197519 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.276444069 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.420501334 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.27537732 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.284028834 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.272113272 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.325298064 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.279249962 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.274742838 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.280239588 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.27093877 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.32041356 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.288661965 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.387142364 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.272700328 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.278237322 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.431050743 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.279596147 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.286376029 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.326997265 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.289391301 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.279663256 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.280230901 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.841897893 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.27829061 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.276213836 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.279684848 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.276288801 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.311271562 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.277757 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.272785159 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.271004526 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.39182832 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.282544639 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.27495095 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.279008162 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.274587595 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.278579852 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.277782297 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.27978349 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.274186693 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.276694491 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.298755593 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.275295715 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.275991511 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.277537371 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.278475381 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.328109145 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.283404423 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.279221571 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.275392345 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.331280135 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.284905117 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.282360864 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.274001508 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.278957619 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.280255778 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.435847179 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.329628484 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.276874413 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.324496155 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.27558243 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.276704522 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.279315376 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.28225691 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.334748436 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.283292575 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.32922611 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.280631926 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.431033349 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.305548889 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.281391893 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.284744436 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.281464232 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.284607067 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.274811493 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.284163436 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.275783112 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.280074783 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.289719036 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.280926582 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.281556991 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.385006159 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.391591402 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.277537277 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.294615721 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.287598515 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.279934201 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.329078842 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.284251254 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.277420016 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.330267061 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.394607057 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.332683756 seconds)
  done (took 147.758997093 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.287908537 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.288026314 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.280627365 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.294543607 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.282561391 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.28181237 seconds)
  done (took 8.899379448 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.283546683 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.280436746 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.280779176 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.277785096 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.280860291 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.280436013 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.285336007 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.280691984 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.283785296 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.281954334 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.281184054 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.282716994 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.283337294 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.277801913 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.279937006 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.280112522 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.283608242 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.277527622 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.283047266 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.282131103 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.374983142 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.281456831 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.282327526 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.281816966 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.285586523 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.277212609 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.289209019 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.280718066 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.282634238 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.288305158 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.297340752 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.283201782 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.280465353 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.286685923 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.289820227 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.281537928 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.284331094 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.282301111 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.279212602 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.281239056 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.282339194 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.282432045 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.282164592 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.2819586 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.282179829 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.284187857 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.287932428 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.287753695 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.283787424 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.285462157 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.281004729 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.280944404 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.282067442 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.28386565 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.285184288 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.305301223 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.284634307 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.284007227 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.280722117 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.281710557 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.283366328 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.281832863 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.284340183 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.288292692 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.291438293 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.285221902 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.283005974 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.29190268 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.284854086 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.283654154 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.282930384 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.280262077 seconds)
  done (took 94.697047286 seconds)
done (took 407.322279352 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.538420864 seconds)
  done (took 7.735952047 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.514027529 seconds)
  done (took 7.712588763 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.835554801 seconds)
  done (took 21.035439366 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.309450612 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.366009156 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.288966221 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.283617878 seconds)
  done (took 26.445493127 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.384372602 seconds)
  done (took 7.579759882 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.282587596 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.285097886 seconds)
  done (took 13.765639326 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.579431501 seconds)
  done (took 7.773709361 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.383420551 seconds)
  done (took 7.581236607 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.279957277 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.295479946 seconds)
  done (took 14.026078927 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.255443621 seconds)
  done (took 7.454438826 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.234224449 seconds)
  done (took 8.430495477 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.280481398 seconds)
  done (took 7.480751438 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.288946642 seconds)
  done (took 7.491140032 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.96787023 seconds)
  done (took 9.167804385 seconds)
done (took 154.883499065 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.278146514 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.285507955 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.285508288 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.286073863 seconds)
  done (took 26.334791734 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.32091109 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.319111624 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.321527622 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.329277317 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.324339598 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.322222857 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.313089306 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.311889336 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.330988337 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.323276142 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.322191615 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.323317865 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.320578787 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.312426503 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.323959117 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.321732527 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.332035613 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.321783732 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.314821748 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.324075963 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.28699052 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.332682627 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.325697848 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.289663946 seconds)
  done (took 32.872107686 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.807913788 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.358687636 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.441137687 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.338720451 seconds)
  done (took 7.146824004 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.340033265 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.341908201 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.352531896 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.39151818 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.417426484 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.351264268 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.315659287 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.309654741 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.297649136 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.340915325 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.417257206 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.358464499 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.426991236 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.289303264 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.470433165 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.289296256 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.290169082 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.341952993 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.393109115 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.405820159 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.28942229 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.341792587 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.345258955 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.359133468 seconds)
  done (took 33.679683635 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.290957961 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.30863548 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.289529345 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.288793624 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.297509669 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.289276419 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.288614118 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.290127301 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.29059757 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.298513835 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.288781633 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.302447301 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.288677983 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.290012999 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.296033728 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.291251185 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.296492989 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.289039286 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.289060888 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.296428322 seconds)
  done (took 27.065327236 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.283831136 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.136898552 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.63434326 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.539824399 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.285437856 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.288800463 seconds)
  done (took 27.373437423 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.354409583 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.506671877 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.29744179 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.630655601 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.729562663 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.315267542 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.290492133 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.520399449 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.828835527 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.817412216 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.352154757 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.363647543 seconds)
  done (took 19.213568442 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.289097731 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.291666848 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.294402293 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.307203351 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.341304351 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.315904219 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.295839615 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.283827504 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.35026443 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.37035915 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.318866702 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.344060511 seconds)
  done (took 37.011432501 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.371640078 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.330077717 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.188918147 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.296052159 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.028865116 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.497136758 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.347900506 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.739615251 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.297518163 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560838044 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262435385 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400039713 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.540487318 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286526617 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.294975906 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.236954543 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537389937 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.74448701 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295111581 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.221159577 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320018319 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.295592814 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.309718634 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.322676195 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.498861713 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.42751154 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.54844395 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.063365718 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573118342 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.307316511 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298374665 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.289277941 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562778643 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954267628 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409516177 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298331385 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293874471 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.841650105 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.285504859 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.258688425 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.053195649 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.296921493 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299661599 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290220298 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.223816566 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.288007905 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.724523333 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.302321058 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.001657766 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.289999955 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.298330759 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384249346 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.291417909 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.279258271 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357163356 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.303539848 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.287220801 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378739645 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878271341 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.607286784 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.310087498 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.230416277 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.307464959 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.149310229 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921510568 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.417781938 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.294119323 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.29224392 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224877965 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.225337788 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.313141218 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436404299 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.313249842 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.940686906 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965802198 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.316002856 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.246357018 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853272423 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.31012972 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.231275149 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.517733294 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.067112702 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.225339812 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.230616131 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.224348407 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96653894 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306399975 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.645187325 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.319424193 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.735867993 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.30892593 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3076277 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314721043 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.513370738 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.169059502 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291325475 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.040561518 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439361377 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312948253 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.718238905 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.233705021 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.294585093 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.548088078 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.503053942 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.293401411 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.252431812 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.512008949 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303203978 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.318605053 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.302327951 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.310350379 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.848319249 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.329031561 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.60807102 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317936114 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.068065927 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99925893 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301033206 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.418704346 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.292081154 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555188733 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.027148638 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.183978076 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.359966376 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298397401 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.293550025 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.273280663 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.297696854 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.17644664 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.288463444 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.296780207 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.309670958 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.294444495 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238038356 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.290795981 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306616678 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.080724525 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.516882234 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.294031669 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.577473231 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.228654759 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441053346 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.301908536 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.516805045 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.476439406 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.319178442 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.552358918 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301464094 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.315956326 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.314244221 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314214744 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396054912 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31642021 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.31025255 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.55761684 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.298139625 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.298099098 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.274298493 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.083405198 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296571569 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.301606311 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.302508713 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866539441 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298407705 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.299696687 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.185782548 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.308297106 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365016417 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.302620004 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.3054267 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.04297283 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318539121 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.30927503 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.298969464 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.527057105 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.305680536 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.247082432 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.38507474 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.486252232 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.867160172 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.333663037 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.229955912 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.007553944 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.990197945 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295996231 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.493064312 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.298433046 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308847684 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.308352405 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.297650946 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.864841888 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3248339 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.170541829 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.310881545 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.307452823 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.303964122 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298333056 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.025664854 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.654585361 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.306455131 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.317965405 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442330065 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.311987615 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.231370035 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.815148905 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.304780198 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.299193975 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.071944796 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333473236 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.171325893 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781401086 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.56078745 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.30427502 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.338249226 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.346269885 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.338916415 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.295465349 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.092121584 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327320735 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.327563427 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332651995 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.310410597 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.225735785 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.67129744 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86481408 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998564709 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851864942 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.231647569 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.318093617 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.202764588 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.731412987 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.242755809 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.955994148 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.480939394 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.752336854 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253278975 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.494931745 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.490506282 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.065294665 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.318990638 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.525698192 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.206453611 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.11461854 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.338267576 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.512526363 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334973991 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.300038101 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.23976442 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.599039766 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.532793252 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.109223778 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387284299 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.729729002 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.106130468 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.106424618 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.363806956 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.611569016 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492466629 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.854250978 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.689389167 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.310389327 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.306980571 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.786839189 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.305466919 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.829495072 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925361901 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.343255121 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.50275086 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.245228969 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.312620552 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.313389605 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.29827124 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.547286735 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.308060705 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.563794118 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.31462806 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237820362 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.311382856 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82154538 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.181443706 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.309913442 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30234585 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024336532 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.31369141 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59651775 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.314208589 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.039240601 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33145884 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.239998935 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.240434894 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.997250974 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.312520059 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279310248 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775690269 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.320831699 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315362697 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.31304831 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172609945 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.559982471 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.318387765 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.868117064 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.554451357 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.308891265 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33655044 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.405228386 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.138724345 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.314437166 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.202306649 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.540253191 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.336113774 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.55537258 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.229738055 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.214828396 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.382580306 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.525508158 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.19912138 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.313550645 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560048176 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.043634749 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.307237413 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987648312 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358193731 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.307275537 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.324131191 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.323733884 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.337741987 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395054158 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.31620957 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.317627585 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.318079112 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472283695 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316259458 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.317029483 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.321115396 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401134527 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.656562278 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.025570317 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.087086124 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874848417 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.049187052 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.896737789 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.345672714 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.307736727 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308688389 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241575079 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459967079 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.8323931 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582559835 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437164866 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.30810455 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339762093 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.154762852 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.33799269 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.526884961 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583967587 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.279823999 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31361571 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.102260834 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.18977649 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.320994542 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.520152653 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785360218 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850325906 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423865261 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.309336331 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.745496737 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593067624 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.401614387 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.309723421 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.898419857 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.320035352 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.624555438 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.341892729 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320669906 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466411692 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.321146078 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971866868 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.346599833 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.471293039 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.083977849 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.284665193 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.5744512 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.758075159 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.329882794 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.87875244 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.015039689 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.580476728 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381549081 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.321787276 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.420490694 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461090065 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.312965779 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.200170262 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311677367 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.155042465 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.021927445 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.32051409 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877974889 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.60102629 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.30871873 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.308394453 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359705808 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.320935927 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.53290529 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991527122 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.545712853 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.322966521 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.321752226 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.304420062 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877887301 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.35143118 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.24745519 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.316032962 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556193826 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.575511419 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.335773016 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.764844776 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.02223001 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850259257 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.285272252 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330456818 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320683931 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.991020521 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887223557 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.060543849 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799604619 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.977490569 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.314401018 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594062815 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.315985963 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.309900161 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595113499 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.313830426 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.320027146 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.329218114 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.879838076 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.080275717 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.324077502 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.314438536 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.254576508 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.537381155 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364835786 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.274221532 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311996661 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.48416647 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.31932882 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44089791 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.322501502 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.311703117 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321602599 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.072683164 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.594193176 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.318812806 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.302114073 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.185693928 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.323562487 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410942716 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55217506 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31752206 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.994328276 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.664312484 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.567364187 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.316121242 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.299941156 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.316891055 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312981029 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.029825301 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.320943435 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.315774346 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887958357 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.321972194 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.32940542 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.316199628 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.529375305 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.52405814 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.324192129 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.332558392 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325377244 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.334099543 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.213271116 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.080693571 seconds)
  done (took 1621.698080058 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.326635289 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.337945904 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.341671698 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.34427497 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.352755435 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.36075312 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.365055191 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.34445726 seconds)
  done (took 52.005301672 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.321615566 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.476218596 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.342682971 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.313188014 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.332323559 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.325527089 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.764899918 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.351846963 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.331104102 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.321957173 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.324928885 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.321828428 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.947979743 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.330427922 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.313677548 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.308051607 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.33141528 seconds)
  done (took 64.991349038 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.320050084 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.85983837 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.416841392 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.325306383 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.275752064 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.332086826 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.969776029 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.379382054 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.323112852 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.58886902 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.986706312 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.350240309 seconds)
  done (took 84.3611538 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.323181433 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.324128857 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.322000811 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.324033241 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.324298418 seconds)
  done (took 7.849824697 seconds)
done (took 2042.81445717 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.320311762 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.981191764 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.934182193 seconds)
  done (took 5.148446371 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.461021703 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.511022276 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.629049114 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.638955268 seconds)
  done (took 7.473682809 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.595516079 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.684879299 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.513390785 seconds)
  done (took 6.025068526 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.584199377 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.338707263 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.332041295 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.315521265 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.320942151 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.322006255 seconds)
  done (took 20.193597331 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.319078795 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.323272267 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.320318665 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.322963905 seconds)
  done (took 6.519619507 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.296512266 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.010924596 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.305617251 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.318537875 seconds)
  done (took 18.165062867 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.066811128 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.07777619 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.062771906 seconds)
  done (took 7.440568189 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.34473556 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.343447519 seconds)
  done (took 3.921439993 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.612979117 seconds)
  done (took 2.845950862 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.332850369 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.37301563 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.322156643 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.262813941 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.63121884 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.496117198 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.880406079 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.48181289 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.21255129 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.429456713 seconds)
  done (took 29.65726506 seconds)
done (took 124.209532433 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.136881984 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.331130176 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.52289129 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.010700494 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.548884166 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.525043999 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.525942828 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.107249617 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.566202869 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.636206461 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.175785655 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.557846833 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.47503419 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.327243316 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.47504305 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.327011582 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.54948351 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.175747644 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.774890197 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.058913496 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.540404351 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.766899119 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.973042918 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.71556155 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.551226617 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.474505758 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.385393215 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.330200966 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.871731927 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.307933689 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.483015492 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.066463475 seconds)
  done (took 188.509043101 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.317915039 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.333079468 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.332830797 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.325696558 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.334627219 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.34351843 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.325851487 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.32585291 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.32750491 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.325585622 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.335279648 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.318374381 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.337041279 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.346533841 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.318310605 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.335916628 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.327621984 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.329916083 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.32778292 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.327078528 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.333693497 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.337473873 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.319377132 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.3261827 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.349250684 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.330083063 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.320065984 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.318585021 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.345182661 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.327812252 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.327247866 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.327512358 seconds)
  done (took 203.795699753 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.319942359 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.341856925 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.327290519 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.328033602 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.32421192 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.327838072 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.330799573 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.341583428 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.319427522 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.335168935 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.320058481 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.321308062 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.322104002 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.321607154 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.32260965 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.319650634 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.320585927 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.344915295 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.344289295 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.337219349 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.323127101 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.320453364 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.320174477 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.345680001 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.345510963 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.337436939 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.32222558 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.321120282 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.327965608 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.349144011 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.331999254 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.329887559 seconds)
  done (took 203.782723772 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.517510679 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.329828519 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.330186473 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.262225542 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.331037362 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.329195224 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.325431371 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.525848451 seconds)
  done (took 14.190668877 seconds)
done (took 611.520718969 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.623546821 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.341233782 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.532469686 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.35858627 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.070285481 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.36780907 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.35087553 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.511091366 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.237908378 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.52779408 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.575516934 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.373448602 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.713433186 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.355824026 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.597517023 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.45215641 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.266723321 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.401725297 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.666383015 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.864450555 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.610591805 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.829227939 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.540115845 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.233401607 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.726306524 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.828105369 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.053174466 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.267001545 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.373341505 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.661825087 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.957216625 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.302052065 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.415280114 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.411989615 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.465241375 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.443353661 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.267362629 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.415856857 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.551387877 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.602311567 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.864593814 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.062504426 seconds)
  done (took 91.311120654 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.314938402 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.315469844 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.315532737 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.315165045 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.318577395 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.316152614 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.3155248 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.31511909 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.316062518 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.315833198 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.313064197 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.316317582 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.314227685 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.318195464 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.31464 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.315064128 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.317296099 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.318368405 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.317075192 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.315240512 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.317016289 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.315392763 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.316371128 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.314456098 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.316338219 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.316654438 seconds)
  done (took 35.459375824 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.333516614 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.582267259 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.745619026 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.348160892 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.333951638 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.337188347 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.409231916 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.344330124 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.336655867 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.338055151 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.486468126 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.347230574 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.37119643 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.773437806 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.34472251 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.336687166 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.33510399 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.335279948 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.591977876 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.35396346 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.431447254 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.344250786 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.411639495 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.354975177 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.357019745 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.336646333 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.343017835 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.861757277 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.362541602 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.487150686 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.101451311 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.416273662 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.832276488 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.765323016 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.097535396 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.345841592 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.337872003 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.490251001 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.343655625 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.336819293 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.409915875 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.345474668 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.747760152 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.969671215 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.361006381 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.337689588 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.882702242 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.515211697 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.579210476 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.35305494 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.771088698 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.347514968 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.338818211 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.339364042 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.571403703 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.352819088 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.33855337 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.908229384 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.369482357 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.415675071 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.348807906 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.339667817 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.603164925 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.349767418 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.588900071 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.350389291 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.348677498 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.360572101 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.752889603 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.349517277 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.98556779 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.366412171 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.340978284 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.488832348 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.599957236 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.923724146 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.371536658 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.605281221 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.849388325 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.438851203 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.353235884 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.859252658 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.442972489 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.351698275 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.343948267 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.343706587 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.341846832 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.391727698 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.413074232 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.923722009 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.003624405 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.939043537 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.444373158 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.360294917 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.342362391 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.913932733 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.370737121 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.340796725 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.749328459 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.995069988 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.368663314 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.351885673 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.994888128 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.369208231 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.418346008 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.35607944 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.76176312 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.354086421 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.394918697 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.342815436 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.348233967 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.366104773 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.419434894 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.355449563 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.343286998 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.960660273 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.524026963 seconds)
  done (took 176.862395454 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.351560191 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.337958326 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.340141446 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.335808537 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.335880833 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.344950193 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.337016566 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.33542154 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.342159095 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.336390345 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.336603998 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.338109497 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.340781329 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.340664053 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.349421466 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.342973736 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.991089583 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.337020573 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.338241329 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.354757758 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.128498139 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.347251885 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.347539516 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.339025164 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.338455563 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.338896566 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.340412113 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.340637079 seconds)
  done (took 152.235030922 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.347772933 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.894145868 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.373385458 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.47139564 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.375262282 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.34540593 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.468222493 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.408759893 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.372250655 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.343636008 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.344292079 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.639320002 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.349852232 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.843918024 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.535070984 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.498064814 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.851575842 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.373141855 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.345300254 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.344712899 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.473259264 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.357379701 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.637320767 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.902265525 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.373218266 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.894417594 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.338553056 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.346280999 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.345750059 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.894939066 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.371028169 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.639683966 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.428563739 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.410907696 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.914936593 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.871448273 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.872543943 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.49788057 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.352030157 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.344839509 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.344600697 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.330547172 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.89484093 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.372936189 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.345739308 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.887276126 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.375099772 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.347813196 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.353573757 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.345763197 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.405418547 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.421219513 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.659540845 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.89878889 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.445687915 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.369941806 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.473474531 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.728096466 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.351286968 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.845282228 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.338374081 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.89942849 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.376096433 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.331812005 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.348406872 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.352637971 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.490135474 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.483554719 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.852176478 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.365580298 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.848937806 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.517369875 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.355335784 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.346880807 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.349188435 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.901388679 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.873173958 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.518847862 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.484508943 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.543298485 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.341037491 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.348509266 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.332385254 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.422899863 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.356682953 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.902567435 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.869953071 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.367858651 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.351374325 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.350534289 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.350678744 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.518305558 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.925919567 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.447946779 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.842500994 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.662195169 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.653836744 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.360303908 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.406147908 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.368698891 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.648384522 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.36189263 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.406061947 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.789305143 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.657240664 seconds)
  done (took 160.867657171 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.586286878 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.564572119 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.445488294 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.478576599 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.950758657 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.911431776 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.560698561 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.499754147 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.46397533 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.615640997 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.479531918 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.45138655 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.518228619 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.430301808 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.065494567 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.441700415 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.458462518 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.497463948 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.457932825 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.390187968 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.97651043 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.636419431 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.525995986 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.180304831 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.447161935 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.106632116 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.899978962 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.935085823 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.522507296 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.694163114 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.876268456 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.518528528 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.299143192 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.015239189 seconds)
  done (took 65.1607523 seconds)
done (took 683.144406664 seconds)
SAVING RESULT...
DONE!
