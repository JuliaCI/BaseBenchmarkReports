cset: moving following pidspec: 14402
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.592185557 seconds)
loading group "shootout"... done (took 1.176761778 seconds)
loading group "string"... done (took 0.406330269 seconds)
loading group "linalg"... done (took 7.628459429 seconds)
loading group "parallel"... done (took 0.16655362 seconds)
loading group "find"... done (took 1.364173717 seconds)
loading group "tuple"... done (took 1.84508377 seconds)
loading group "union"... done (took 12.329383636 seconds)
loading group "dates"... done (took 1.278269098 seconds)
loading group "micro"... done (took 0.191686753 seconds)
loading group "simd"... done (took 4.158331712 seconds)
loading group "io"... done (took 0.986186652 seconds)
loading group "random"... done (took 8.271255075 seconds)
loading group "problem"... done (took 1.523690868 seconds)
loading group "array"... done (took 18.534150953 seconds)
loading group "misc"... done (took 1.440263506 seconds)
loading group "scalar"... done (took 37.882139198 seconds)
loading group "sort"... done (took 2.881753142 seconds)
loading group "sparse"... done (took 11.323136125 seconds)
loading group "collection"... done (took 16.741003749 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.503862453 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12609392 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.129818829 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117484906 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146675438 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120210681 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12385072 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084309189 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.92109643 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.144123813 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.111523228 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.435442547 seconds)
done (took 5.280491553 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.16470859 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089372785 seconds)
    (2/2) benchmarking "String"...
    done (took 0.078231286 seconds)
  done (took 1.264086521 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.062887435 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127475071 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.064138703 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.064909024 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06508466 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064614232 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.063966667 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.063806429 seconds)
  done (took 1.611002346 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071666245 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.066779697 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.063549418 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.065888082 seconds)
  done (took 1.366300854 seconds)
done (took 5.584720395 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.238437819 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.103035885 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.28744209 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.395846578 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.464580957 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.090848477 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.073147709 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.068669919 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.126170958 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.324060578 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106657057 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.184869787 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090928312 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.179669507 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.989738044 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.118086546 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084193665 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.124625413 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092048068 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13043467 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.422378505 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.076226414 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.074336682 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.069381485 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.066804072 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.643922744 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.657094059 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.132076284 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082451035 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.101056007 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.115205916 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.645218767 seconds)
  done (took 10.494930489 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095176917 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.094042427 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067748138 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.124093551 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094330192 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068605378 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074344539 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066292456 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091964093 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.125220675 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091246056 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101492013 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06489986 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068370507 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.076164699 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.198437101 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079707234 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08011008 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067587477 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079355443 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107272221 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07837671 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079108391 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079416406 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128559085 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.169599072 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097074003 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097200946 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06613312 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081044375 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114124021 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127094451 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06592414 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065054982 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.121593198 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093917014 seconds)
  done (took 4.532058932 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.965188995 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.089881984 seconds)
    (2/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.090174173 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.10466958 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.628660798 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064497535 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.160344447 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.246520598 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072440193 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.372277335 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.089073505 seconds)
    (11/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.145786908 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.114454406 seconds)
    (13/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.147405139 seconds)
    (14/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.115486868 seconds)
    (15/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.069281667 seconds)
    (16/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.267506978 seconds)
    (17/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.11786858 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.431374528 seconds)
    (19/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067602815 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.066947551 seconds)
    (21/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065082917 seconds)
    (22/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.068631049 seconds)
    (23/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067723312 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06296741 seconds)
    (25/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.070674938 seconds)
    (26/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.091747196 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.062736665 seconds)
    (28/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.087750243 seconds)
    (29/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.334597672 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.822498832 seconds)
    (31/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.263768944 seconds)
    (32/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067994806 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.163267529 seconds)
    (34/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.087534559 seconds)
    (35/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.367422668 seconds)
    (36/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.07105391 seconds)
    (37/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.085890358 seconds)
    (38/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.404046711 seconds)
    (39/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.124828568 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.071117476 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.17602801 seconds)
    (42/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.119763072 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06543118 seconds)
    (44/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.119713848 seconds)
    (45/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.080593276 seconds)
    (46/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.070518496 seconds)
    (47/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.072703873 seconds)
    (48/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068919641 seconds)
    (49/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.073621479 seconds)
    (50/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.080657398 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.103535681 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.069466193 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06620664 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.167371985 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065848283 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.067573076 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.069213561 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151136121 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065766722 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.149935626 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064842585 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069432114 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.097904572 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.06915352 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.096230733 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.113239009 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.340446396 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.02991938 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.069441519 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.898238871 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077881457 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.067488617 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.07281929 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066990228 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.068591519 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068438247 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.077767341 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.071083182 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069417186 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.110918828 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067623365 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064806679 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070070975 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.068091935 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.076036605 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.100549528 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066625099 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.474257668 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.099209714 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.067860027 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.079592102 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.107568417 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068501791 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.075304926 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.176375673 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.068195814 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067479304 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068451109 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.072201678 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.09489162 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070336715 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114116228 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.022243618 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.07042968 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067735611 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.073382983 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.072343063 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070005643 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067460883 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.072693953 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069299253 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066569592 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.121119311 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.068497522 seconds)
  done (took 21.760814545 seconds)
done (took 38.849797844 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.264473418 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.088742215 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.088455739 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.08887292 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.08908094 seconds)
  done (took 1.818321245 seconds)
done (took 2.999840747 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.109902849 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.064369414 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.103892974 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.102828736 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.06814534 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.064996385 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.100588751 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.06519946 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.100069114 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.103730213 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.105864931 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.104926633 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.065725465 seconds)
  done (took 2.357067053 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.071610011 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.082304002 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.08574997 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.063803707 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.07358219 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.083074333 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.064142513 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.082605248 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.090839892 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.083284591 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.083598886 seconds)
  done (took 2.041906698 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.071357453 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.086678594 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.086877073 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.063773783 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.075544436 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.083733221 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.063356471 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.083655355 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.088720646 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.084034833 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.08382457 seconds)
  done (took 2.042758292 seconds)
done (took 7.611937137 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.072807417 seconds)
  done (took 1.233889943 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.587545108 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.950108732 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.07345699 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.096188021 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.19587755 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.115555169 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.26596423 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.080052836 seconds)
  done (took 8.717095367 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.103174489 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.080714617 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07383687 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074286318 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.074277034 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073420238 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.074397532 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.074725126 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.075932706 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.075343146 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.074811455 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074986306 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.074001903 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.075847664 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.074884814 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.074596274 seconds)
  done (took 2.485911224 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.105674079 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.104345791 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.079610445 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.089765919 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087181461 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.06882796 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.071468627 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070449619 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.067873752 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.06893943 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.072572946 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.070115039 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.069414457 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.060762852 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070768923 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.072547034 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067525909 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070610721 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071293558 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.072399463 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.071529774 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.060694282 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.06957663 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070945553 seconds)
  done (took 3.070329085 seconds)
done (took 16.681015557 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112492943 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073642761 seconds)
  done (took 1.36018049 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.069167245 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069358068 seconds)
  done (took 1.327702265 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.076326662 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.058705939 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08317695 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.071440383 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.059727051 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.058984949 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.080857004 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.05973555 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.059432317 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.059063191 seconds)
  done (took 1.857555284 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.061929281 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.06924621 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066837701 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.068689615 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.067058915 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.060905015 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.063994911 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.061105341 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.069322602 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.059766852 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.065387105 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080161396 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.064724019 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08206659 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.064141358 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.065491551 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067733957 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064678706 seconds)
  done (took 2.400918053 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.060444242 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.060033079 seconds)
  done (took 1.315266107 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.064779763 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060757176 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063603438 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063451599 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.060233001 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.058997248 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06036074 seconds)
  done (took 1.621682109 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.348972455 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.116334442 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.308838182 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.066159409 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.076000615 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.24419402 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.060599341 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.065741203 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065763465 seconds)
  done (took 2.583930728 seconds)
done (took 13.671138971 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078417614 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08070207 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.086800354 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.419981079 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089365213 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064046485 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.110473076 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.164531191 seconds)
done (took 2.303413019 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209338189 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.458678127 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.960091622 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.063590231 seconds)
  done (took 3.683349204 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.324611248 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.080970296 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074154309 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064375199 seconds)
  done (took 1.75430566 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.062347872 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068509443 seconds)
  done (took 1.335324787 seconds)
done (took 8.18968668 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062147253 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.060722367 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.061337643 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060342772 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.061053904 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.061081104 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.060364176 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085173374 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065875429 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.060935176 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.060112585 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.060579452 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060579356 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060836168 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061120147 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060542826 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060815858 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060563256 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06099096 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060523367 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060636736 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.061005645 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06069691 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.060394594 seconds)
  done (took 2.718475603 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.079334904 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.063335585 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.06497789 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.064801121 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.065009003 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.064700007 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.064961004 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.063487048 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.064831719 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.063273553 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065244119 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.065356426 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.062647084 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.065399307 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062607996 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.065275447 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.06473923 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063151971 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062641203 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.06495015 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.064758945 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062865946 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.065561404 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064464441 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06525088 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065284234 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.063227439 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063180376 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064928908 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.064888787 seconds)
  done (took 3.164591572 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.062073471 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.057328228 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.058507489 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.066382796 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.057759764 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.058508033 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.058740773 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.057437234 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.057978918 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.059287726 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058740894 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.057497285 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.058391116 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.057280316 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057388994 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.058213795 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.061581094 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.075317052 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.057707914 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057307754 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.061128221 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.05831539 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057611239 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.057646612 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.058170775 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.058479183 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.057161764 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.057961809 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057496989 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.058188789 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057656325 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.061458031 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.062376224 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.057426467 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066477037 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.061837424 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.058009264 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06118089 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059105714 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.05719207 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057287832 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.057367431 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.05742008 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.058023941 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.066369876 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.057851182 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.05908725 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.058332201 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.057743572 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.057036676 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.057468691 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.059973971 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06278973 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.059479691 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.057204516 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.058832251 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.056971888 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.058639281 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.057334722 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.057329205 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.056959192 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060338002 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.059368191 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.058243355 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.074834737 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.05991308 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066280014 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.057287406 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061651192 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06058606 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.058357119 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.073314256 seconds)
  done (took 5.519397658 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085805282 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085776963 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062559472 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062618774 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058842515 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058288702 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066367146 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058375869 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062339332 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077944824 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058514151 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062284826 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062710351 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062134223 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058295021 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06248087 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066999512 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058157268 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.058347761 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062072956 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058248037 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066114365 seconds)
  done (took 2.651571781 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.139064284 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064570915 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.101263968 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075335054 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06671755 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075210177 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064463066 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063944799 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064039168 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064534016 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064536846 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064095574 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066925247 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06439323 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064616925 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064323323 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064443452 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064354411 seconds)
  done (took 2.523124984 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075724899 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.063828453 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085711601 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063460145 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.063558858 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06364005 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067924826 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069103522 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.063400072 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063371832 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.068844085 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063286732 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06346341 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063736931 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063534543 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063377515 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.063321489 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063497832 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068715399 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068094038 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068247702 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068939239 seconds)
  done (took 2.697263343 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074195404 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062923417 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075741325 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064491191 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058479235 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058428017 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.063794622 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062512061 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.063970207 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.062303148 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062736489 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058669076 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.064423855 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062745864 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06457495 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062878734 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062574946 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063123923 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062976309 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058640573 seconds)
  done (took 2.500509277 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085699684 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062019682 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061249554 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079637496 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061107353 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.061614754 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079595437 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.061479604 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.061170726 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082592996 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061165304 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061868813 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079411548 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080078438 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.061346409 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079745516 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079318757 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079583102 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061384433 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061089589 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082822855 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061362608 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079711788 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061494519 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061724676 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.061696219 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061092727 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079864194 seconds)
  done (took 3.17987888 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062193657 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069943323 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.060755879 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060997549 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060988375 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.060422106 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.060529668 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.060889595 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061002551 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062066829 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.060898018 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060639546 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061269301 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060341407 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.060577608 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.060422747 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060884714 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.061151073 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061316146 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060841284 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060615325 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060267277 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060539088 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.060952216 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060892433 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060642695 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061190263 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.060570962 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060367487 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.060646035 seconds)
  done (took 3.067906566 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.072014293 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069908768 seconds)
  done (took 1.375993207 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.060950792 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075351452 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.057627769 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067944553 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066957858 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061658357 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068056308 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067067045 seconds)
  done (took 1.752431938 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.066672918 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.087707754 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.060372198 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.061523294 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.063761248 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.118210637 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.073986941 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.069199386 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074128839 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060565195 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.060207664 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.072400159 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.059482737 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070642991 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062040141 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067390465 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066969007 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071462515 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070329992 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.058180743 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072857305 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062730264 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058925853 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.061093261 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.060306122 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.065330792 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.074036435 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.069656216 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06701739 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.0574282 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.079270046 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.057973258 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.058315843 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.065476349 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.061872313 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.057145448 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092141689 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.058096634 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.063325213 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.057066471 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069095269 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080025758 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071200377 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.076314811 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06033051 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.060736053 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.056971689 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.059351276 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.060129178 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06567353 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.057060151 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063544587 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.056782188 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.059251181 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.066689667 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.057444581 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.065191253 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.065615379 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071768063 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.067289717 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.064220394 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.070917886 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066202709 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.067499504 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.058543959 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076454908 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.06073179 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069491884 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071576774 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.060446647 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071780692 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.057877692 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.05708315 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.058373565 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090476733 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.060150155 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.060135738 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.058645946 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.058098172 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.059788249 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066930436 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064946216 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064627182 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062866401 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074328533 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.066812761 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.058357895 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.06715643 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.075513203 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.060593754 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.058751553 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.073523322 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06064437 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.05821883 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075400464 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.066625773 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.061092274 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.060578404 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.061037971 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071499859 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.06034831 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.057374483 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065290364 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.060731056 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.061794447 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.063502909 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064932283 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.05827722 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067971152 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064935655 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.060478237 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.056953459 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06137783 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.059106805 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05646473 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06568934 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.057586662 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071611595 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.062487462 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.069139154 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070402535 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.067185359 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073906779 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.057182537 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.185114584 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.07778365 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067337265 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.05970468 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077132792 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.057568728 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.067256827 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058136703 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.060201214 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.066414697 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.057282642 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060175267 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.057924271 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.064416017 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.059557011 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.05989245 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.061377589 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066461389 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.070503551 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.05957869 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.064816346 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.058252078 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071805902 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.066469959 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.061884201 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062570725 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.058891953 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.06821339 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.063559892 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067378371 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.05760934 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.059071439 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.057872593 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.067328475 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066056665 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.059834403 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.067175487 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.061560014 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.058898335 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.058197312 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.05919593 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.059962122 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062535638 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.058416509 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064689 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.066155507 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.070522136 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069772132 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.065410816 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.057121198 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.057018357 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.059739895 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.057172581 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.062156181 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.066791921 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07272821 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069971105 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077629883 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.059037901 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067632737 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060800852 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074531475 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07000952 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059835987 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063992467 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.056331712 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059730421 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06641423 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.06835959 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.071667636 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072520817 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.063181015 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.062701168 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.05844876 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072095403 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.059655492 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065861221 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.068962011 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.064925253 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.059632714 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.060990451 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06674893 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.061872309 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.058231988 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.073024024 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.065631061 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058325519 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071131199 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.058842498 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.068896859 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.05833473 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061104937 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.062543551 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.060053052 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.065390243 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073846022 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.056012457 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.058504336 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074180305 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.059026611 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.05913057 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.063425672 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.071087096 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.061420937 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06386963 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066192716 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.065028115 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.060376632 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.064808899 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.05793002 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.066553125 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.060764224 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.067820981 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.057150839 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.073387547 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.055536142 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.070116556 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.05703365 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.066098709 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.05713762 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.063954014 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.057143187 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.070888546 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.057771371 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.057282778 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.067166619 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.054615496 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.065425953 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.18914484 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.062636351 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.063931002 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.068266289 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.061874191 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068143767 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061602077 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067245731 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.062858457 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067060406 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.068538497 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.062344808 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058448343 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067690474 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069604234 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066593873 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.06176928 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.060869518 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.059721674 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068730335 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.061366843 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060561401 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067762416 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.063526639 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06401729 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061889818 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.061682508 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.061597907 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069304275 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067509723 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075305579 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06632614 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065107901 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068217386 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058722733 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076439788 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.058991618 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065007626 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.057903617 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.067836702 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068353825 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.059703613 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076806324 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06039019 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.064845842 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071197973 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066392635 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.060404028 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075149474 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.063508934 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067129644 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065834078 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.062183286 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064372228 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.061054476 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066399884 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.06902918 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.068568175 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.059715027 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.064961289 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06681427 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060563391 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.068333725 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.060144724 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.064867815 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.05974564 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.05650254 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.062141051 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.067772492 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.061450476 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.061574262 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.057840869 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.056189415 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.058235443 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.066142214 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.061838598 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.065006802 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071088501 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.056179651 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.058522901 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.057207379 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062630667 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.074071975 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.0660709 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.063923725 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.062159948 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.056599472 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.059406953 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.059580949 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.057762053 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.06176436 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.056398907 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.057155314 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067117843 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.059492176 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.060742248 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.05759098 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.058886273 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.065834896 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.06350127 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.058297748 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.063100059 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.057713025 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.061419934 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.058339908 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.059308894 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.060890937 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.056316153 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.059865253 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.066481509 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.07201789 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.062619493 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.064208659 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.059336958 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.063613953 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072015381 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065626186 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058953448 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.065068956 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.056529374 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077454763 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.066119568 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065077797 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066417072 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.060184236 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.073252929 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.061476751 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.066679036 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074807127 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059199062 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.206217312 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06041943 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.078630412 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.063638654 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.060067663 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.066945161 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06635118 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.0648204 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.070981379 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.060510992 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067107813 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065846182 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.062283118 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.061356671 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.061665577 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067068912 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07417181 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.059904269 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065841145 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.0658392 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067185995 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.062722826 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070450013 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06639756 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06127408 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.061671164 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061644489 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.060271881 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.070260685 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060012108 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063994874 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.063063992 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.058694754 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.065080791 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07367412 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069082802 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067814603 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059337807 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.059594912 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.077313085 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061421028 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.064163901 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.066111303 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.06713836 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070072914 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.0681393 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07461479 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.059635203 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063463025 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070475359 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.06013971 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.058743135 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06142524 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.060661179 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067217293 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068354931 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065055022 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063395454 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.064649411 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070893551 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.060657815 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.062698308 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.065812748 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.060043881 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.067808232 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.065758178 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066153625 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.061176622 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.059003362 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061138015 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068092461 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065276106 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068575336 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060347829 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.069041515 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.073085317 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065549779 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063689101 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058970509 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063825036 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066582195 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.065056535 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058827207 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062988414 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.061768623 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.068074349 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06861284 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06274851 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.058691413 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074927591 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.0662433 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.067311375 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.061231039 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.061556747 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0595835 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.057464319 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067897171 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.057183314 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.059386602 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.061638033 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.059989748 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.075787011 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066154466 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.077151747 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060153482 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06231985 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.058492134 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067618104 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.062740009 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.058891162 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067724426 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.058164409 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075840636 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.069477157 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.068508287 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058422631 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06290982 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.065716283 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073318047 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066882963 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067810277 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.062196458 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066661163 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.05996553 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.067584135 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.056486806 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.055157132 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.065064947 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.200061894 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.070964334 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059041986 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.067817603 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.06290501 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066799987 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.067668684 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.062178501 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061654317 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.062257679 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066816881 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.061744336 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066871034 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.061787746 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074077389 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.058945559 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.069369836 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06728887 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.069534381 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072840306 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071667969 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.067590888 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.060330189 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066195227 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066677366 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.06103289 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.063073819 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.064214137 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.083305552 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061971924 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.061235628 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073199662 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.068189562 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.059694324 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.068751424 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.063120066 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.06866233 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.060656534 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.068940119 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.065244347 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.060751451 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063224774 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063608812 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.05871805 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059219587 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.05949767 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068209709 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.063270299 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.059071539 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076819071 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.061088523 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066470334 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069566568 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064710699 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.061157018 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057874389 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.061678171 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069629916 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072839174 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062086573 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066015764 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.061633663 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068927274 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.058098321 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06659614 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066465496 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0665291 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058688526 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059457144 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072442162 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072832323 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063053777 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.067591222 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067492557 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.061626974 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.083554568 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067238613 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060830985 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.069650824 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062483919 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.059030028 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060276978 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.062051857 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070421225 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.059092659 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.062371691 seconds)
  done (took 40.215931536 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100505087 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060645232 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060112769 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059825569 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071555362 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059740821 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058073791 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.058841275 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.059255898 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061011074 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.057816728 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058165084 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071362508 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075758655 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07065176 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064366461 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058982092 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059950605 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.059059912 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060086875 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070374707 seconds)
  done (took 2.702952682 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.068342981 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.075396512 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071967236 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077688527 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067999798 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064647628 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072037334 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065257181 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073044599 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070430387 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.073120951 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064732561 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.069914585 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069786028 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070091339 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064735203 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07269486 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067815993 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.064432091 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072033916 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064572864 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071826386 seconds)
  done (took 2.852150112 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.061747559 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.060162437 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067066265 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.058508764 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.059043464 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06267872 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.058409564 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.06195032 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.061894303 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.061876514 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066369258 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.059500263 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.058375732 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.062907212 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.058313176 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.059413559 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.102924303 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.060296587 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059712858 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.058317565 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.065061916 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069379281 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.058393836 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058619327 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.062027811 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06271248 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.058828909 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.062257964 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.059538079 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.062016233 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.059752544 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058303483 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066081115 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067854654 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.062366515 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06165826 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.060805925 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.059513125 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058302136 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.058666537 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06684163 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.06058496 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.059509277 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.061014747 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067731408 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.058938331 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.058097254 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066191383 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058248075 seconds)
  done (took 4.373126534 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074038756 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.10919484 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06411116 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088871823 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.074070883 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.067179472 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06474203 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090197173 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.060513265 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06151451 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.075526188 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.075122302 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062892238 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.064524852 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.064327249 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062877524 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063994004 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062051283 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066455015 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062636866 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.066743514 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.065988715 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.073750542 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07437298 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064154691 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062040412 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062339351 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.064868444 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.074140161 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.067010133 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.0648324 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065966383 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.074902221 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.06455986 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062939241 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.062651494 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.075703861 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.063311469 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062813019 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060644112 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.062508553 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06437813 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066416584 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.075654508 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062977617 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.066767349 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063180954 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06017136 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.074471942 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.062821061 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.06806076 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.075802956 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064135492 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.063392411 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06427226 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.073011415 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062885631 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.061215831 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.063452721 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07418016 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06075539 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064039677 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.075539182 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.062405274 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.066996787 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.075669468 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.06682854 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064145381 seconds)
  done (took 6.077374999 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070937154 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.089635191 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072446314 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071260537 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070409827 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071224678 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070552796 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.069920315 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070219694 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071474943 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070747592 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110272605 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.065794813 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076345353 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070396743 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070223929 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070564091 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070310227 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07066844 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070788873 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070532732 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071032978 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070368079 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071199791 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074206044 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066031998 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07019297 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070170063 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071033027 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070425753 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.074636365 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070722905 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070711026 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071141786 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.074216837 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.069896975 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.059896894 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070281645 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070090139 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07027405 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065890048 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071072449 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069963139 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.065585343 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070075001 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070214896 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071048639 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.074101141 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07980409 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070424389 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.069301993 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071484106 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070341289 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070616389 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.0714108 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.07997703 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071234577 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071442494 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0709313 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071499246 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070968572 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.080223166 seconds)
  done (took 5.813381424 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077422251 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068312264 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.080426819 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061620026 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058936774 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069466526 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058684182 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.058902782 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067603553 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.067430375 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070519835 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069049111 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072372556 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069712861 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069124182 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072124869 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068956719 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069485382 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067496425 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069440805 seconds)
  done (took 2.720944291 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.072799786 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.076985912 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065048783 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069996433 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.064376651 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069071174 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.063485663 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065218763 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065115805 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065421926 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071184721 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070900108 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065222159 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069322913 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070456592 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068949959 seconds)
  done (took 2.436393251 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.067067319 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.068372059 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.067596079 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.061046337 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063750882 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059555049 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.060046122 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058389866 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059064364 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073617501 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060296473 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071533203 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.060213162 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.058667732 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059525319 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.066173347 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059714641 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.060597203 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.060088664 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.066088815 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.067324099 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061330251 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063986501 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060430811 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065399414 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.06763806 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.062136252 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063325691 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060322563 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.060698728 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065530738 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.065779217 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.05871822 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.059302068 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.057465203 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.058994598 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060236402 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.061063061 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.066017557 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060006693 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.058553544 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065043105 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060933118 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.061742533 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.059129834 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.060725661 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.059050276 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065888442 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060607721 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065471673 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.060573636 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.062629402 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.060903795 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.068006102 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06322058 seconds)
  done (took 4.7805653 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075821575 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064451224 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058687709 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.05875907 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.064697673 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064307689 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064692974 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064525771 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064737901 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058669787 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063075364 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.062925397 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063298787 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064380495 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064406912 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064819085 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058511688 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.063816241 seconds)
  done (took 2.50159837 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070519339 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064257092 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.068658256 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063967917 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.063804913 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063446476 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.05927241 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.058932233 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058885358 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063171878 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063341395 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.062889294 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059005575 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.063360292 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063470827 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063675831 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.063649176 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058794693 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063644934 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.05916307 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063024813 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058847093 seconds)
  done (took 2.724849956 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.086693503 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081340258 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.120946511 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.076114084 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083839631 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.068998017 seconds)
  done (took 1.867549081 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08839845 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102617363 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063710907 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064436164 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074985635 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067322064 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066577878 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065970356 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073418647 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071777246 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065875736 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073344475 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075014947 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069471674 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073940749 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077395713 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067417122 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067671167 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063866276 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078891039 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067922331 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075098082 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067795648 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067454841 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067459088 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088560209 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078439206 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073213919 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070245705 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074404529 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076970871 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065933011 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073612604 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071783726 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.062657658 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073310571 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067991353 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078584889 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07534049 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069455943 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063765774 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074869327 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075360943 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069956643 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077244022 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066683147 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068674756 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066428894 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0664098 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080152869 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073947488 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068501949 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073740147 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07680504 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076847769 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080130088 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07217136 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068458667 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073648707 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071723694 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068627301 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073336017 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06815401 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07129476 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076419844 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067799317 seconds)
  done (took 6.121845403 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098111247 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064158943 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068203801 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073291285 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070251091 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067823489 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067756216 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067629592 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067741868 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064273858 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102688742 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068204536 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070391243 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070144166 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06774185 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067881122 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067860174 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070283406 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064721431 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082152015 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067930229 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070667462 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070005466 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070169279 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073356489 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078700627 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067836026 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067644284 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067462319 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067652828 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0700486 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067937354 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07006116 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063828905 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069809178 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067758594 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067644402 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070156683 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067658765 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075420044 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070354704 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078674241 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067691365 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067420592 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073634549 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067891473 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067466935 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063993658 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067799134 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064334784 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073700497 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073730201 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074072255 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070163694 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068516688 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068147147 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067965551 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067869363 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067852734 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078820507 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070520859 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067554807 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081627621 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067641065 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067616447 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070221757 seconds)
  done (took 6.033483481 seconds)
done (took 123.577326271 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.207200295 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.179865587 seconds)
  done (took 1.720876171 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071709265 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094807517 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.073356867 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131103379 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066333653 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100481315 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099171947 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07092831 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066091529 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066245584 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066614554 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069834445 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133900982 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066210614 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06686084 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070488331 seconds)
  done (took 2.668997215 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102519099 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.180133252 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106082716 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065551336 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101719973 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073994365 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065764698 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076740717 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070105166 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068558508 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074001423 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072116616 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068827678 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07210283 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069910017 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074221619 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068522522 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073487679 seconds)
  done (took 2.84702423 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.092151056 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.084063245 seconds)
  done (took 1.540702703 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156991963 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.101247334 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.140380194 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.318794951 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.134712599 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.276607258 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127833503 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.125374877 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.106647119 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122024995 seconds)
  done (took 2.968479321 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100055262 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.162134326 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298895617 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116122331 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071223286 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.082175803 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115235359 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076362913 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.07763193 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077727525 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076412099 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075231189 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.093368871 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.071868169 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.071709979 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.072349449 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.095760278 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072830711 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.071588777 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07222104 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.095242203 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066035938 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074110586 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07129267 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075655407 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.075325009 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067515535 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066298177 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073325449 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072563198 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076116117 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.081293709 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.0749312 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102063441 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070813807 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.102898622 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.072472722 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071000098 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072353183 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071045276 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074356766 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.072695525 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073002901 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.072243049 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067017295 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.070801894 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067205564 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066374201 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.075629472 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066529359 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.075182649 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.073828435 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.098776018 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066098318 seconds)
  done (took 5.889247409 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108502666 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106225164 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069940563 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112217423 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104465131 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06876338 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103194456 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096446659 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.105651132 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068000232 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067317289 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070045103 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08073022 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081356478 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115938612 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106930036 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070846771 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068387574 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105603867 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106598633 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067918891 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102119214 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097187766 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107428074 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.064674843 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067807813 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065099117 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067508305 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.0724281 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.074349617 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06654048 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077142077 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.080937701 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073763526 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064707238 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067424405 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067725583 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077609698 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077521135 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076489598 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.073296078 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064530026 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065424446 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067478327 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067619385 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064460958 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074162798 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078238398 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076355992 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067972445 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068396984 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066783247 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068543658 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077381049 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.074819288 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.076528868 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075149424 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065768019 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066148028 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072128861 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077943175 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076200301 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075443013 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067704068 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074253051 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065742515 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075192348 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079880572 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065402131 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067235848 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065599967 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066080167 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066425315 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072093336 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07205767 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067450467 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065901565 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065256291 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076665858 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073350494 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066157449 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072438822 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064129057 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065727252 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067197261 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067177322 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.073225774 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.076186697 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067458699 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065366535 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066005275 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065166053 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.064022027 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.072879203 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076264466 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.074826545 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.075225811 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067001215 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.073356841 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.071849129 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066383882 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.072815478 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06405547 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066635217 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0653065 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.072030054 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.070751481 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.205586133 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067384375 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066477258 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.074814675 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079408834 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068074397 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076762996 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07822186 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.077471729 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06713568 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081774435 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067379223 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077283137 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067060772 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078541321 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068670658 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07696319 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068191108 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066491423 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06760698 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.076988846 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069876294 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067850451 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069152136 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068607894 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.076615411 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079888375 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070077831 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075401234 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.075602365 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069425165 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076104993 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067618528 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076059562 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068915733 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069048622 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066419163 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079763444 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066799319 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068087488 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068116865 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078053532 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066582746 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077873671 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076036975 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066652204 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079558114 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075499631 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.072656729 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.075485627 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067948199 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06637217 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065791696 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068199548 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074575482 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077275044 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070402226 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067286961 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.074990287 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.077188484 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06688797 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075327699 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075742619 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.076032237 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068258731 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068096079 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078065064 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075778772 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.074445992 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.073474177 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075751772 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066650593 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074827138 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075771089 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067796807 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083777481 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067834749 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.080935133 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076664183 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074166327 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075918923 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.077577357 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.077893549 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079287457 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.080349685 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066939401 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067360583 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077376875 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067467477 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068217992 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076439685 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069721049 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069482891 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081670597 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065826083 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.074622085 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.064631091 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074922663 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064294284 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068701792 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081469994 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06746436 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068854983 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075574706 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067187997 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.073261709 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075940179 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.071392735 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064265755 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066188423 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208472521 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.074662744 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.0661035 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067906169 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070226272 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.075788108 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074955241 seconds)
  done (took 18.166079722 seconds)
done (took 37.178842529 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.20637822 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153271971 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.185003554 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111228558 seconds)
  done (took 2.115269878 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.098668846 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.096770146 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.077986242 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.062522361 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.084057142 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.062536908 seconds)
  done (took 1.88976135 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.281262704 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.196582646 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172059043 seconds)
  done (took 2.050377648 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.215378614 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.194744501 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.454680714 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.287414002 seconds)
  done (took 2.65324549 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.133449942 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.080898937 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.061799265 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.072808526 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.112536664 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.143958226 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.088171448 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.113140542 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07158686 seconds)
  done (took 2.338163299 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.133578859 seconds)
done (took 12.581433317 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.150027036 seconds)
    (2/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.185848763 seconds)
    (3/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.09963157 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067264889 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.106795178 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072382298 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.065406157 seconds)
    (8/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074794384 seconds)
    (9/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.208664354 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07292932 seconds)
    (11/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.17234455 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.213378995 seconds)
    (13/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.175823784 seconds)
    (14/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071460185 seconds)
    (15/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.10650921 seconds)
    (16/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.179011386 seconds)
    (17/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.173757944 seconds)
    (18/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071691176 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.198617696 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.125182755 seconds)
    (21/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.19468062 seconds)
    (22/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074078678 seconds)
    (23/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.065994441 seconds)
    (24/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.072570565 seconds)
    (25/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07118319 seconds)
    (26/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.085696083 seconds)
    (27/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.167276327 seconds)
    (28/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066396761 seconds)
    (29/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071557661 seconds)
    (30/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.063595281 seconds)
    (31/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.132044462 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.15927657 seconds)
    (33/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.112714182 seconds)
    (34/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.20877627 seconds)
    (35/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.071354995 seconds)
    (36/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.069395841 seconds)
    (37/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.192142491 seconds)
    (38/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.188113581 seconds)
    (39/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.072164255 seconds)
    (40/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069200441 seconds)
    (41/309) benchmarking ("sort", BigInt, false)...
    done (took 0.238994703 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.061803152 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.135735448 seconds)
    (44/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.192426862 seconds)
    (45/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.181875993 seconds)
    (46/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.172597379 seconds)
    (47/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070941542 seconds)
    (48/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.07472279 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.082958067 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 0.1479844 seconds)
    (51/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.155001668 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.078572253 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.21277148 seconds)
    (54/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086969513 seconds)
    (55/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069920323 seconds)
    (56/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.134959976 seconds)
    (57/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.068901289 seconds)
    (58/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.062864221 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 0.061886477 seconds)
    (60/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.131466261 seconds)
    (61/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.060514772 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073111899 seconds)
    (63/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.066209608 seconds)
    (64/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.063311254 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.06028364 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.069668256 seconds)
    (67/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.061836796 seconds)
    (68/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.155045812 seconds)
    (69/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.060849136 seconds)
    (70/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.060560001 seconds)
    (71/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.220122991 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.07828166 seconds)
    (73/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.05934444 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.059195602 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.112603596 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.060741734 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.110586518 seconds)
    (78/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.151881639 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.118125751 seconds)
    (80/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.069245041 seconds)
    (81/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061372999 seconds)
    (82/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069123914 seconds)
    (83/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.174724011 seconds)
    (84/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07055549 seconds)
    (85/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.218250776 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.114355367 seconds)
    (87/309) benchmarking ("sort", Float32, false)...
    done (took 0.130868125 seconds)
    (88/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.137769131 seconds)
    (89/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.075587098 seconds)
    (90/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.071145668 seconds)
    (91/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.07826875 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126801456 seconds)
    (93/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064198152 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071761921 seconds)
    (95/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.062776193 seconds)
    (96/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.20594502 seconds)
    (97/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.183381342 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075128489 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.1471267 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085030366 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.171353725 seconds)
    (102/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.061817492 seconds)
    (103/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090023181 seconds)
    (104/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.06308699 seconds)
    (105/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.0762125 seconds)
    (106/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.064496295 seconds)
    (107/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.072062094 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.069983986 seconds)
    (109/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.06213283 seconds)
    (110/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.139016364 seconds)
    (111/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067027543 seconds)
    (112/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.091613748 seconds)
    (113/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.1548711 seconds)
    (114/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070507012 seconds)
    (115/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.069815139 seconds)
    (116/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.135211537 seconds)
    (117/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.060652137 seconds)
    (118/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.191092368 seconds)
    (119/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.167417687 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.063118004 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073868982 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.085313484 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.062164455 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071742535 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.088669981 seconds)
    (126/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.217002231 seconds)
    (127/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.172122942 seconds)
    (128/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.202027913 seconds)
    (129/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.078602903 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.061011961 seconds)
    (131/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.060426019 seconds)
    (132/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.190624219 seconds)
    (133/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068567671 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.086222884 seconds)
    (135/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070902218 seconds)
    (136/309) benchmarking ("sort", Int8, false)...
    done (took 0.170012046 seconds)
    (137/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.06344199 seconds)
    (138/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.062026847 seconds)
    (139/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073164266 seconds)
    (140/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.061979149 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075304406 seconds)
    (142/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.063752687 seconds)
    (143/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07215073 seconds)
    (144/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079415571 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137452595 seconds)
    (146/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.073048158 seconds)
    (147/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.061859486 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072570412 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.107548146 seconds)
    (150/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061862897 seconds)
    (151/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.189925775 seconds)
    (152/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.072580196 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.069380382 seconds)
    (154/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066298601 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089047547 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.126451483 seconds)
    (157/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061759963 seconds)
    (158/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.069328389 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.061524652 seconds)
    (160/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.154901156 seconds)
    (161/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.172257475 seconds)
    (162/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.060147628 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.074267696 seconds)
    (164/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.062937919 seconds)
    (165/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.059729586 seconds)
    (166/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.059764954 seconds)
    (167/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.114583849 seconds)
    (168/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.060172026 seconds)
    (169/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.071802079 seconds)
    (170/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.061598031 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.08508545 seconds)
    (172/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.072546556 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.114655942 seconds)
    (174/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.0691238 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.080042405 seconds)
    (176/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.070026158 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.137712905 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.062028978 seconds)
    (179/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.063607268 seconds)
    (180/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.063076376 seconds)
    (181/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.20213956 seconds)
    (182/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.134967264 seconds)
    (183/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.061282248 seconds)
    (184/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.061250963 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085679256 seconds)
    (186/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.152360054 seconds)
    (187/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.133286479 seconds)
    (188/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.060632143 seconds)
    (189/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.061395339 seconds)
    (190/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.062304983 seconds)
    (191/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.060797621 seconds)
    (192/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.217363699 seconds)
    (193/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.063040608 seconds)
    (194/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.165822869 seconds)
    (195/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.061821753 seconds)
    (196/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.193050538 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.06162336 seconds)
    (198/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.072566654 seconds)
    (199/309) benchmarking ("sort", Float64, false)...
    done (took 0.129097335 seconds)
    (200/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.062198355 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069443385 seconds)
    (202/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072759568 seconds)
    (203/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.074430871 seconds)
    (204/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.065805393 seconds)
    (205/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.062496359 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.091531873 seconds)
    (207/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.063248326 seconds)
    (208/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.063138547 seconds)
    (209/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.063788948 seconds)
    (210/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.063562767 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088286405 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.128720417 seconds)
    (213/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.06382555 seconds)
    (214/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.067126707 seconds)
    (215/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.076209774 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069872164 seconds)
    (217/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.062993719 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.128882723 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06285705 seconds)
    (220/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.064838335 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.11711183 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.062952893 seconds)
    (223/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.062050317 seconds)
    (224/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091981252 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.072589041 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072318846 seconds)
    (227/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.060723442 seconds)
    (228/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.068629755 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.134311216 seconds)
    (230/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070616298 seconds)
    (231/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.061828174 seconds)
    (232/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.162641197 seconds)
    (233/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.065145448 seconds)
    (234/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.068041855 seconds)
    (235/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.063517541 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.085962903 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.140843606 seconds)
    (238/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.063156283 seconds)
    (239/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.068948224 seconds)
    (240/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062327903 seconds)
    (241/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.06174717 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.127786872 seconds)
    (243/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.062019554 seconds)
    (244/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.060505066 seconds)
    (245/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.067594847 seconds)
    (246/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.063550154 seconds)
    (247/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.061567591 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.069275263 seconds)
    (249/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.060663315 seconds)
    (250/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.065589605 seconds)
    (251/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.073757241 seconds)
    (252/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.060350814 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08294212 seconds)
    (254/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062038274 seconds)
    (255/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.060273611 seconds)
    (256/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.067669298 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.114484658 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.059859066 seconds)
    (259/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.062124543 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.060860596 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.160961079 seconds)
    (262/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.060461426 seconds)
    (263/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.06162311 seconds)
    (264/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.197375712 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.128000933 seconds)
    (266/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.069468546 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.085693489 seconds)
    (268/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.062091287 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.067437111 seconds)
    (270/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.157994886 seconds)
    (271/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.124945375 seconds)
    (272/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.153670406 seconds)
    (273/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.062818526 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.062533418 seconds)
    (275/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.078587099 seconds)
    (276/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.062240889 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.062727075 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.06372125 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.062714493 seconds)
    (280/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.063214051 seconds)
    (281/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.062932998 seconds)
    (282/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.16689507 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.064214871 seconds)
    (284/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.062932134 seconds)
    (285/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.062068249 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.062515106 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.12061642 seconds)
    (288/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.064009788 seconds)
    (289/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.062289967 seconds)
    (290/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.07690443 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07366791 seconds)
    (292/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.064200644 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.083868733 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.069574809 seconds)
    (295/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.064058544 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.062452514 seconds)
    (297/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.062327339 seconds)
    (298/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.077607013 seconds)
    (299/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.064090377 seconds)
    (300/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090084379 seconds)
    (301/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.064116611 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.104697645 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.084768569 seconds)
    (304/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.063012259 seconds)
    (305/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.062427624 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.060687977 seconds)
    (307/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.060347274 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.080504438 seconds)
    (309/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.060854416 seconds)
  done (took 31.511364712 seconds)
done (took 32.927537035 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085841579 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08916133 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.072123307 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.085391573 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080354083 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096538733 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071555277 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076404593 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079298699 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078024039 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078079299 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.069695435 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073325274 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073810175 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070689918 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087157692 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077314511 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071666419 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072217562 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.062909208 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071524297 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.063286222 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.062491042 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069449569 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.0748493 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.0702915 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073392135 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072705222 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.063003461 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.063514627 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067626961 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072098929 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065874683 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076121316 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072194348 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071011545 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.072746615 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075523875 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.062041843 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.062294962 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.071981183 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.063685928 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071326456 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.070478139 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.068162749 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.069994081 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071862387 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.075918489 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087118728 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068321668 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073064153 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074666711 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07554946 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068511471 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068508047 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071842923 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.067998373 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084452889 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.070051523 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064991132 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073250013 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07224899 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069613604 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071499691 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071686634 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073915457 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075897208 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069450947 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073333082 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069768011 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.061821963 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.069503045 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.065733885 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.061763406 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07276242 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.074187472 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.060180429 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.065378817 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.069797383 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07161292 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062881585 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067326939 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.062243468 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.06787091 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067065412 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069602742 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067857479 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070268418 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.061954719 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.070503377 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.068537094 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.069010541 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.060561208 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074821743 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.062232274 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.067701264 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.061282547 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.060794236 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.060652177 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.066230037 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.060825421 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064783664 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.069931231 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.060661891 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.065744539 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.074544593 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.060683703 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.068600482 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.060439669 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.061027679 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.072674803 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07154664 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.061527181 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065379223 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.060773057 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.066384432 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.061591323 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.061378651 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.060870692 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.061355142 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.06651109 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.062646104 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067480836 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.068427802 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076196046 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062398966 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067273076 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066756971 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.062589639 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.06843188 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.062972109 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.061873907 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.061603812 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076943148 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06623659 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.060465054 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.065557779 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.063468752 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.067710297 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.059247929 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.20877044 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068264029 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.066519953 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.068388932 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.061755593 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07302919 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065259352 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06521139 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.061122222 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.061539159 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.060983624 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.061340662 seconds)
done (took 12.174305105 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.064750543 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.107416275 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.07273622 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.081294359 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.075931895 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.063760229 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.068427705 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.083236439 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066677238 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.084060084 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.084870725 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08404475 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.09195546 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06265089 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.063728439 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.064318666 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06233606 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.069786554 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.079797077 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.084833515 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.094907471 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.063894709 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.073781129 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.078830893 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.074984658 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.081584432 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.064486109 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.064497329 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.066272856 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.082654699 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087142678 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.063022085 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.064182683 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.079248417 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.078429565 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.074109952 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.064395769 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.068785325 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.064052693 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.063125309 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.064683728 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.079146465 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.067853083 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.071052321 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06429442 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.064646117 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.064057522 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.067992562 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.077899312 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.068174858 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.072440874 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.076844303 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066213851 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064105895 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.062429987 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.06855169 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063606424 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.064224932 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.063634357 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.063312167 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.063171515 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.065379409 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.064072209 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.064400753 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.06708891 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067636112 seconds)
  done (took 6.182371504 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082605595 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092092116 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.080121183 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.080398498 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.063304604 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.063821979 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.064168646 seconds)
  done (took 2.039679839 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06478917 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.077237668 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079998637 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080231539 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.073287586 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.081765325 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.064300269 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.094023003 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.062953933 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.076233192 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.111950516 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081477501 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067165428 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075843203 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.063764271 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.07227297 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.063518231 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071826908 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072826954 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080145968 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068402088 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.091226022 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.077138829 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.063935123 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.085086031 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.06883192 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.063130018 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.064001404 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064988875 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.065352191 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065128063 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.103136569 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.068353627 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078102749 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065175284 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.063845803 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.070566226 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067003209 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.066589353 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.069230235 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.069858088 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065234615 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.062709255 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065365943 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.066592528 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.06791022 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.062969209 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065449559 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.064893441 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.075930689 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.063293322 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.068358508 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067830693 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069556665 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06953252 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068694891 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071662568 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.065465182 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.075360497 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.0702494 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063319858 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073507816 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.072920501 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.069852636 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.072801328 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.06839172 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.068685344 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.070225706 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065225455 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.066388708 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.065313973 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.072953921 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.063628198 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.065966107 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067478513 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066293148 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.06762117 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.079263498 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.078564747 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074692608 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.063929053 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.063759533 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068323543 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.080478115 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06926056 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065099528 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067399554 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.063075257 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068314502 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06550157 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069679529 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065409797 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.072320095 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.066268955 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067692208 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072709199 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.063673455 seconds)
  done (took 8.346980668 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067677519 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.065807735 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.066747247 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06519163 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.065457103 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.065638788 seconds)
  done (took 1.94464807 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.088850631 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065570672 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.078955256 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.065879274 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.099840625 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.072423469 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.073153846 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074594544 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.078536887 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078118702 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.07283717 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.076028381 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.072307416 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.06721569 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.072148164 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.067054176 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.072473279 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069085565 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077140721 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067625165 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.079390836 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.06686051 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067226085 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.076438244 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.06743016 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.066216947 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064454199 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.0772707 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07693366 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077432654 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.066480446 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.066020239 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070274764 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.071590145 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.070625078 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070116295 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06351244 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.068864709 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064860882 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.066199681 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.073234322 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.065084885 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.06627499 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.069009466 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.072324745 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071701015 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.070663872 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069422679 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.072183189 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.071041664 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.070339172 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.066371292 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.067527311 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071088827 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072389775 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07395743 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070646777 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.072369628 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.066672836 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072298212 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.065378487 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.067900312 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074344524 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.068045009 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.071523086 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.070579182 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072389019 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.066930743 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066991501 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.065826005 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07066595 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.065500038 seconds)
  done (took 6.63202409 seconds)
done (took 26.645738779 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.009456132 seconds)
  done (took 2.50215292 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.570865772 seconds)
  done (took 2.101357778 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.741226186 seconds)
  done (took 8.264570486 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.304584204 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.341973977 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.714798177 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13110897 seconds)
  done (took 3.052225544 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.716521072 seconds)
  done (took 2.252637905 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237801869 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225283957 seconds)
  done (took 2.010694032 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.351403762 seconds)
  done (took 1.882330681 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.091031778 seconds)
  done (took 2.621217909 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.236041989 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160520388 seconds)
  done (took 1.93212965 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.458148532 seconds)
  done (took 1.989674971 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.311906371 seconds)
  done (took 5.846617261 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237520336 seconds)
  done (took 1.807330116 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235743292 seconds)
  done (took 1.769302516 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.731822709 seconds)
  done (took 3.262444251 seconds)
done (took 42.837709663 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081117549 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084367304 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083543623 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079660938 seconds)
  done (took 1.837000137 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.073073564 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.06842849 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.07190665 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.072208245 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.069850485 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.070618683 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.070910148 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.068103843 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069249914 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.067904195 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.06680096 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.067931905 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.070834784 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067794908 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.07069591 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.072777307 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.068024261 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.068069609 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07097025 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067759082 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.07092645 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.068323096 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.066205789 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.066965078 seconds)
  done (took 3.197962329 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076713681 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071057872 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.071591449 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.067811637 seconds)
  done (took 1.830317781 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.075009459 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.084549935 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.086382042 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.091849052 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.074577822 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.075019883 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.082792411 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.083500543 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.062036417 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.08658769 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.066098225 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.064130266 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.064168523 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.085271747 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.082623043 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.061324584 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062796949 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.075050551 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.07392516 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076543204 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.065051461 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.063480113 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.074749558 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.074438598 seconds)
  done (took 3.328167756 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078946954 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06341869 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078098331 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.0909666 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092365898 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.063338734 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.079585379 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090175709 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.136346938 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.061901675 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.067210362 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.062203364 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105150662 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.063405547 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079879756 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110042323 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113268765 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067547067 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096764375 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.063402632 seconds)
  done (took 3.21472822 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.0754326 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.06691908 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067547857 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.062823302 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074571552 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071134784 seconds)
  done (took 1.969176587 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.066897121 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.065398028 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.065020471 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.064052063 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.069642586 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.065103269 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.063451464 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.064897067 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065229882 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.064448742 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064163092 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.063320467 seconds)
  done (took 2.324577023 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.161397427 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067871275 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.066753497 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065908275 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070063706 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06378517 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079033707 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066734693 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.083437921 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.063943054 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.064330601 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.066855715 seconds)
  done (took 2.466325745 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101506851 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131573302 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096047345 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071117903 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17127654 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095037225 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.089965457 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.122457035 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094071383 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.067872929 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092431623 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136266488 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094789339 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.097982695 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082071754 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125845765 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108291664 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084734078 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111126727 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079301979 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.067590396 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130620652 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.067101586 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089776787 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098179964 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.094412925 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107024258 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129936577 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081184479 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.086366093 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079297581 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.071143224 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101839689 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.081026282 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.093939218 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090540091 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095027985 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082885351 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.083759568 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119849491 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158983664 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100567154 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099892393 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133738416 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075677501 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.105824829 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078276569 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096517402 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101067628 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090556529 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072730636 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088897744 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.103628981 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099044681 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.078933846 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078922882 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115150719 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.09467798 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092302238 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076444016 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10289475 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.083579576 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249296545 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118622617 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138429149 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102313953 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138967454 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124157463 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09628362 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.08923514 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.091759674 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075248766 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111091056 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098343716 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137753154 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109816958 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100072206 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.094697077 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08214632 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106423028 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112737006 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092191337 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094741185 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148137366 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113715186 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090934106 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092485249 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.139286867 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.06955708 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145981569 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087386857 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11762994 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094864515 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136388373 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088687406 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.080301408 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103160135 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101944502 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086725847 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099891482 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081459406 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111269454 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089724309 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09877151 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079275339 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087719037 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083984598 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.094008756 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07248445 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101375568 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112860007 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111488855 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.0720809 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108289801 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084842671 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.073760575 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090256063 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13605072 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080352926 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.071802226 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145364788 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.088867058 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.116446192 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259756445 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.085285565 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119674108 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138660122 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092926869 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091653698 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076123326 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15575873 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075720539 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118140065 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081358124 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102617206 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107224312 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1370233 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140776164 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096459939 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078023809 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091919731 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.106960655 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087006644 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085686422 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076909071 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.10922127 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126435292 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.100198732 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080152387 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.092136662 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.068645943 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114930639 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07607764 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084917882 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096754574 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.087554938 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.089402001 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144144239 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.084535692 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108794231 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097735314 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.066463127 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091736379 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159170963 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082980081 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.111144128 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11806452 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083739121 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067303584 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.096444271 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.073458769 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109193989 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.092749485 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107736929 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078148326 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107646926 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.068158695 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073632551 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134012076 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100940748 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088357714 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.130229028 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102684849 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.084763045 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.100306778 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.240143073 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096762066 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102245884 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.106535594 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107590503 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.074148643 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131162052 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092280056 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078214901 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087942713 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080082537 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.077815137 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100341003 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116245982 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089218143 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10150107 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103569153 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09157519 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.109628039 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089113636 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078389734 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132787339 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075784391 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.074486434 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087757391 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.106336716 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088111138 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.135018585 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.079284816 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138129137 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093059536 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081237231 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117164129 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068029379 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069476478 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.081680482 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092118938 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116967446 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078862939 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077998514 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120214996 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133665354 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098301949 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104409044 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068116062 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090534728 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136592943 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.113598166 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081389253 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111501613 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084608588 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131321745 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097466231 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120577204 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106167174 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110993704 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.092332769 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.080903876 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.073180038 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087278131 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111086694 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085402467 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081284973 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.066700462 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073301662 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092847633 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090893279 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11052126 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087278883 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287699549 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073226482 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10415533 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109121373 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108353703 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092339946 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096728387 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.092282169 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092197124 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091741506 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092039299 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.073812251 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127842383 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103091002 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078846826 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088831951 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096159436 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107892331 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109166671 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108226515 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09161861 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105094441 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120360955 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097071634 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079547856 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082138934 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.092474704 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.0824094 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079368911 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.102556401 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11103389 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096552491 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10697648 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.0927736 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.090951087 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108248823 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094926043 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088777647 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.119316089 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154424317 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.10291893 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104745038 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085701909 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108527773 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106153723 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114167709 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.112208893 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109662551 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070644763 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07506832 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.070075972 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107092689 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07931122 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119909546 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076629529 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108322667 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098224478 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080423386 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06635263 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102195369 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09280043 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.080711709 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120920793 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.109705058 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.072140521 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088686752 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105101278 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235597891 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123952916 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.101300468 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10252479 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07281532 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09233133 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074315908 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110579702 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101642924 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.077418852 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.076310023 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.069487271 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108044676 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0841392 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110510428 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089941103 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10143556 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120857213 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137460042 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085758332 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095761063 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11721872 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110841142 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.081232706 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114415391 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137164956 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.121865823 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.081548977 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.084302085 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106910744 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106479435 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102330889 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076530203 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079316763 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109873075 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115984095 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.06792132 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084860986 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070917105 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.084980297 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113994459 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097137377 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082787866 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119134196 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074728101 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108800704 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096691064 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122567505 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120580335 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144878 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096282006 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086020105 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076846643 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126174259 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.071281187 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118804495 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114466919 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088142911 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.068596777 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084196822 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.095276939 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.627159555 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108506949 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.074984461 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133652199 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.238600046 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114269626 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08374485 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.116826853 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09152179 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100930955 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09008953 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131084682 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08077185 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107793892 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.170551025 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.10939329 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.108975177 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073467237 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.08570989 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074330875 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.078990979 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.082257816 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087442361 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109747956 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086103022 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106861256 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.079993432 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.107842935 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092418809 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089362686 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.099308622 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08220877 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140734047 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088284085 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124181049 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107524876 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078548282 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074847294 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.087426654 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.102125845 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082824321 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095118117 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078876994 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.076955211 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155299768 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104065298 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084960677 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103271543 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.091647036 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.088477767 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092198448 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118528726 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111085815 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073289439 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.087950979 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10465424 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07947375 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.074883022 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097159334 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.070468593 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090572619 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100906706 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097836878 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091256605 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.104290432 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078914277 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087127025 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108596891 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083132767 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.073865499 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07363141 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.075930451 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.075134145 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.259044735 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108440531 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116471962 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111060156 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093393865 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097051931 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.079259846 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.219614135 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080857135 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09776799 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.10559478 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076247311 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.132285348 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089346056 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089737831 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097185879 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102086347 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155154989 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074962705 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110880722 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092467542 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108835827 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084248025 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10581556 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094434859 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092330625 seconds)
  done (took 50.395000986 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.092752739 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.147813583 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.158008982 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077908248 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.091447546 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.116267796 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206079973 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188611968 seconds)
  done (took 2.740086496 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074868204 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.077977976 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099157544 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081060826 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.062472088 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071002881 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.20005493 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078201156 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06176558 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09110352 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.072629156 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.063981847 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.414177483 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.063874745 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06427425 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.071556416 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.062548036 seconds)
  done (took 3.352420377 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.368467137 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.598364107 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.342311518 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.070724474 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.995032287 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08438801 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.202219256 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.132145711 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.076535125 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534017907 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.369613882 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.12779969 seconds)
  done (took 18.560954085 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079461906 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.075019577 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.079359251 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.077097082 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073077191 seconds)
  done (took 2.039828009 seconds)
done (took 98.804189441 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079156337 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.166056171 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.066531847 seconds)
  done (took 1.923266573 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.081957835 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.077427243 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.076960676 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.075362204 seconds)
  done (took 1.972295683 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.072311988 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.074227129 seconds)
  done (took 1.797821306 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.227903829 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.163673151 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091603656 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081779616 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078186854 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079319163 seconds)
  done (took 1.898961205 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070660495 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.070301276 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070584779 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.071152087 seconds)
  done (took 1.935152664 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.06637791 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.064333713 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.066238006 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.069715377 seconds)
  done (took 1.920828788 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08276736 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082657206 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.076457118 seconds)
  done (took 1.895403726 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.094290604 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095815817 seconds)
  done (took 1.844177981 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.078662471 seconds)
  done (took 1.733150036 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.087541861 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.09735844 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.118380147 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.100197401 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.116766232 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.097554319 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.075145083 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.07735351 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.072931009 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.071192185 seconds)
  done (took 2.569770817 seconds)
done (took 21.710045683 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077550722 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.371875306 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.358047906 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085335773 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669114288 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.354789605 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.994174704 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090000924 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.097894106 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066922293 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083495551 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.645600486 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.984501128 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.329348096 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.972975275 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326900219 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.64867606 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066115378 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065411387 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06661494 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.976779786 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066044506 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066431757 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06618098 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.683375217 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371881995 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067708189 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.321728666 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064394837 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069532766 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355009978 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068080608 seconds)
  done (took 16.160784999 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068957626 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119867149 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071401576 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082392392 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069463691 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067531174 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.069393435 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067044615 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.107522028 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06674594 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083601813 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065944623 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070992604 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068546688 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086908169 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067512081 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06871822 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067497418 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066894662 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070674358 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085216552 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066657519 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067906492 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067322076 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068165364 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080248324 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06859367 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067160194 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067254059 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069803459 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070662741 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068832897 seconds)
  done (took 4.026464732 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119792063 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126062038 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071944234 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102727818 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11503608 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066466052 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144162663 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087687202 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111262487 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06723073 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084334026 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066997716 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101939957 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069405499 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088050696 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067705186 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069392487 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067297516 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06738631 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068095056 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085833844 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067067921 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067594577 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06767371 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068071884 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082387517 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068668962 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067237596 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067362961 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069998522 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071748843 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068663916 seconds)
  done (took 4.289939479 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.068477805 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.070529538 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.078401129 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.080320133 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.065460557 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.067237586 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.068375964 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.065425353 seconds)
  done (took 2.241743595 seconds)
done (took 28.384043514 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077147892 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.065621837 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.069156483 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08547705 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071544033 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.069186645 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06282426 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.071703876 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.069390524 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069998812 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.070733198 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.064245713 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.067810502 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.062562146 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070099167 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06435564 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.071370184 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068960872 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.06970245 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.070300075 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.067091812 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07037786 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.072372209 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.06947781 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.069664408 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.069233129 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.073946448 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069886716 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.065195689 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067721022 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.066777371 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.076441158 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071297831 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.071680658 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.064710516 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.064583669 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068827388 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.06661968 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.071378762 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.074121857 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066331942 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073907081 seconds)
  done (took 4.562298289 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.083183055 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.086503091 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.080803069 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079724989 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097783327 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080186826 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.084714429 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.076341059 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.074993953 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.084644693 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.071551328 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.078579283 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.076336426 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.07034481 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.074641457 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.071968945 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.077412415 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.072244533 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075455084 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.075693291 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085764925 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.070237181 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077530586 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.076930957 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.072483133 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.077845195 seconds)
  done (took 3.721508331 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07120532 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082695388 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089685552 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.146543052 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111144413 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077709861 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078558067 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089450556 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.094771856 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065631725 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069309997 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.090775318 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08987575 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.071747687 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.105656038 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.081596458 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08130543 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06789835 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072483797 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094769423 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085614964 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082947523 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091942941 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081210825 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.064817078 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.067239087 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071322672 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.078866898 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072175328 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076464236 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.069524189 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.068642983 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.066034554 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.076413673 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069427136 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06453145 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.0887502 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076987767 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078050188 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.108045485 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074477953 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.066246241 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09276113 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126192876 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.064874913 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.068402515 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.068191441 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076848148 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066215313 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093160359 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079359538 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064472751 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.065566215 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066409024 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066343087 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080666141 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.067270011 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.066796229 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075879931 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07098191 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.087165435 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070123709 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084480251 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.064980971 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075365503 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065830485 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066164043 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063605817 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096086964 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071525293 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113296927 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.066050333 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.063731481 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076334406 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075129814 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.070850531 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064614514 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082583657 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075519073 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.068178228 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076058295 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.067720481 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.06819284 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.095288784 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.063593598 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.062692232 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.062005175 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.066236552 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.066290969 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.063764665 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.077085391 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.062547953 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.065948766 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.077030431 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.062739241 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.063636184 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.066442505 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.065399653 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.062677216 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075724354 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.068504268 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.065263451 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.074774562 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.063652255 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.065666175 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077265456 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.071132646 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063426507 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.066250129 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.06849332 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.066417739 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068802307 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.068045041 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.067159323 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.072246274 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072055095 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070651075 seconds)
  done (took 10.503930065 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160728059 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151660124 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.067255485 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144753884 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.073024071 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.07074585 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145346443 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.084393769 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066343753 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.066325907 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.064666866 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.094759595 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.091208257 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.103311691 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.068597381 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.065262417 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.089312897 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.097685193 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146974729 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143118035 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.089195991 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.072513943 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.067629308 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067175932 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.066880898 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07364419 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08342295 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.072871068 seconds)
  done (took 4.314098974 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.077054409 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.089269144 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.070128566 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.075565642 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.086480911 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066294835 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.067529552 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.067595558 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080070343 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.076196462 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066538209 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.071065632 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.069723228 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068721252 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.066355635 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.072590445 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.072705752 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.064884325 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069101389 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.070393657 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.075882526 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091192964 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.069700526 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.065363168 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.067494233 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065147652 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.076075308 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.079099244 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.065461714 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.079961588 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.063122868 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.070115339 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.079632042 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.066019024 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064964206 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065524366 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.065495076 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.065306019 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.065705072 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.064537603 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.064401427 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.070014526 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.064490761 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.074877885 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078891894 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.072853596 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.067632995 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.067981566 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.068255159 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.063221463 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.068302834 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.068043082 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067914137 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.072534281 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.068956278 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.068051013 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.066170619 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.094901676 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.071315433 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.065137538 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064698081 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.064466997 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.06748421 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.076514288 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.082679417 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.067940034 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.064550025 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06600191 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071336243 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.079017481 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.064825171 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070250772 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.063395168 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.065949588 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.068249599 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068067283 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.066397184 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.064157272 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.065425286 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.065570857 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.065818947 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.065458544 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.065431368 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067999145 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064196861 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064174777 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066036766 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.067666089 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.075253009 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.064934071 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.068997723 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.066624366 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.064060378 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.068084025 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.071037428 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.068161063 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.078599209 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.077724327 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.065766622 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064034737 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.078286916 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.067889573 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.064973797 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.07188944 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.069574322 seconds)
  done (took 9.050201451 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08924159 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.067465727 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082248733 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.088934045 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.075523725 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.071352364 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076224702 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066644382 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081923802 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.064953833 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.073933012 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.064841861 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077262177 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075588904 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06747249 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076071435 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.06816678 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082254995 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080128031 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.064307656 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074237315 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.077659288 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.078155315 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080148685 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078957031 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080287458 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.077669355 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.068625054 seconds)
  done (took 3.843868244 seconds)
done (took 37.664214409 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.754542132 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.005509005 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.744472653 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.96679493 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.035444708 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.751021602 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.848805748 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.735818824 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.916700919 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.788374717 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.050785792 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.212548545 seconds)
done (took 65.542765216 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.763393349 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.904013017 seconds)
    (2/2) benchmarking "String"...
    done (took 2.03810864 seconds)
  done (took 5.614428112 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.006194101 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.487384656 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.004835661 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.738701289 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.741163991 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.191361684 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.535492465 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.187231549 seconds)
  done (took 30.561942723 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.897271993 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.972358666 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.451496207 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.464252696 seconds)
  done (took 15.50350301 seconds)
done (took 63.216023974 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.789280629 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.737258995 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.736083868 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.761696177 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.75011642 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.7387851 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.742299227 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.739293551 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.750069425 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.736856768 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.73685486 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.741306777 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.737833629 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.760982817 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.214718492 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.789841848 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.754462719 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.742687407 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.751540867 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.799713096 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.746212685 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.738872747 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.213845723 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.893258306 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.352790334 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.875077683 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.080295823 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.128515548 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.742480082 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.737603545 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.932249609 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.93675067 seconds)
  done (took 202.561649321 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.742845026 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.730860914 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.8042168 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.755723207 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.232610312 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.916063271 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.843949229 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.277804428 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.744626762 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.767378789 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.900630978 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.744453171 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.925423721 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.743119811 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.780648574 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.767842018 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.936016053 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.955211654 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.782129099 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.894758962 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.769529307 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.717568665 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.680688966 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.901966756 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.76794451 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.799080547 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.764060526 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.752063266 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.928916374 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.909687771 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.761082981 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.768022931 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.940532627 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.610636513 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.757111892 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.770023489 seconds)
  done (took 168.52168448 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.941868395 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.743171146 seconds)
    (2/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.749296346 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.742402677 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.798664032 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.864233259 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.7431826 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.413336222 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.749601237 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.055489282 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.745709635 seconds)
    (11/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.746338112 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.745027439 seconds)
    (13/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.74330394 seconds)
    (14/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.743049919 seconds)
    (15/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.75673383 seconds)
    (16/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.831781415 seconds)
    (17/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.743135456 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.757859088 seconds)
    (19/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.746588587 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.770663721 seconds)
    (21/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.738570442 seconds)
    (22/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.743388281 seconds)
    (23/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.741213935 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.74515084 seconds)
    (25/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.743217757 seconds)
    (26/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.743689785 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.745380572 seconds)
    (28/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.744803695 seconds)
    (29/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.006637838 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.999755474 seconds)
    (31/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.743780937 seconds)
    (32/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.746834274 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.624356596 seconds)
    (34/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.758442188 seconds)
    (35/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.763861411 seconds)
    (36/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.748666629 seconds)
    (37/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.837637508 seconds)
    (38/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.796914513 seconds)
    (39/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.863223789 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.74504588 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.963399849 seconds)
    (42/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.821502541 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.742088162 seconds)
    (44/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.745564491 seconds)
    (45/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.810344718 seconds)
    (46/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.753907526 seconds)
    (47/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.742410019 seconds)
    (48/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.746774735 seconds)
    (49/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.749239513 seconds)
    (50/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.811308844 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.014793378 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.747421238 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.867331873 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.236450193 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.747227212 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.746466447 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.747290815 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.344845984 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.746719817 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.745896243 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.753119244 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.753355178 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.747333326 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.747248075 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.13379169 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.813361264 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.842552691 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.995012209 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.749926005 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.216565453 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.866520347 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.746886205 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.747237905 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.747254182 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.74880585 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.745244625 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.750542953 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.869336868 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.754582821 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.871634643 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.829804015 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.742436929 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.868786326 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.748942978 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.758459754 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.572768972 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.819353141 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.780362021 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.572148114 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.748362109 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.12141465 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.533386508 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.748105159 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.748950719 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.762017888 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.744837406 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.749022305 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.751686158 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.829598665 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.743412515 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.870805995 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.468232697 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.957645877 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.748615451 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.749099514 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.756557657 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.832830229 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.866767939 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.75020397 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.817858222 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.751624301 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.748188937 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.843517636 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.746618523 seconds)
  done (took 396.978731663 seconds)
done (took 771.742869054 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.335059251 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.299474874 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.403505559 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.322380948 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.295620765 seconds)
  done (took 13.335764752 seconds)
done (took 15.017238207 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.764128224 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.75375894 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.80821861 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.83129413 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.762716711 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.763136326 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.827605585 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.765842994 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.798032086 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.801160925 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.831697243 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.833192519 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.769549477 seconds)
  done (took 24.992223578 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.759690413 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.913074021 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.976386796 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.789771481 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.760128744 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.993783561 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.81378771 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.90475745 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.898652391 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.990117455 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.019248582 seconds)
  done (took 22.505038532 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.759028507 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.908735639 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.982669587 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.79486751 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.759630491 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.987693897 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.821337556 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.903157407 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.904930447 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.990921212 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.996014092 seconds)
  done (took 22.499922587 seconds)
done (took 71.683334157 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.754568469 seconds)
  done (took 3.436044091 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.782557879 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.918384586 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.750741744 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.751944767 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.753391663 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.75453452 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.751971658 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.753682764 seconds)
  done (took 15.900376524 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.751765219 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.751379068 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.755122954 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.755670115 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.755522928 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.755505388 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.754041896 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.7528925 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.752456471 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.752987484 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.753372015 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.754511633 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.754041474 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.753723334 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.752801738 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.755234393 seconds)
  done (took 29.745651534 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.756373158 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.755676284 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.753554354 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.753777387 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.756344815 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.754256182 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.757559081 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.756319518 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.755275425 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.75737666 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.756922481 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.754765172 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.754277432 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.75513571 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.757559717 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.75595804 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.755903058 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.75561521 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.757743852 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.755636749 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.754900853 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.756382788 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.755723843 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.756106896 seconds)
  done (took 43.826611214 seconds)
done (took 94.603463852 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.54246481 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.474145237 seconds)
  done (took 9.702879657 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.755731887 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.755531998 seconds)
  done (took 5.202070684 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.754806114 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.756531491 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.755421268 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.757199418 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.755868139 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.756901354 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.756305961 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.755270291 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.756028759 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.756871076 seconds)
  done (took 19.247126429 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.756770957 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.756735198 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.75618118 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.756436334 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.755610078 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.757562613 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.757210467 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.756752994 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.756173647 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.756371318 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.757194596 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.758493848 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.757617073 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.756929836 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.756768734 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.757337875 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.757438263 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.758677771 seconds)
  done (took 33.315181823 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.75721093 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.75592324 seconds)
  done (took 5.199385539 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.756180305 seconds)
    (2/7) benchmarking "second"...
    done (took 1.756960973 seconds)
    (3/7) benchmarking "month"...
    done (took 1.756747018 seconds)
    (4/7) benchmarking "year"...
    done (took 1.755484711 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.756005547 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.757623855 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.757074417 seconds)
  done (took 13.983535117 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.757728977 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.915307688 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.978739787 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.643080453 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.758498403 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.760332591 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.06847473 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.761626869 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.761416484 seconds)
  done (took 20.092807955 seconds)
done (took 108.429558625 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.641597123 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.754578687 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.020977456 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.816813824 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.783281479 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.051782727 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.798441016 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.032035122 seconds)
done (took 42.589709208 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.770806771 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.7558451 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.781389287 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.781497811 seconds)
  done (took 22.007676078 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.759310914 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.117238467 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.779667716 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.61800402 seconds)
  done (took 21.974673964 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.141930119 seconds)
    (2/2) benchmarking "read"...
    done (took 2.104424199 seconds)
  done (took 5.940856336 seconds)
done (took 58.385877026 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.762363888 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.760845249 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.760809415 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.761692643 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.760188939 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.761336923 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.760087871 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.762147273 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.759709296 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.760880571 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.761501134 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.760560368 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761248144 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.761179206 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761170515 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761288054 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.760243271 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760046859 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.762425109 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.760115886 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.761070771 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.761700043 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.760908333 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.76183773 seconds)
  done (took 43.955079623 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.760079773 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.761977949 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.762958148 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.761067995 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.762018748 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.761863098 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.761207695 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.759907798 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.762427503 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.761752715 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.762333065 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.761786745 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.761446128 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.761518555 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761284309 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.761784883 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.76158311 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.762219449 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762330381 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.762532861 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.763112343 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761435026 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.760783274 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.761302733 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.762567363 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.762960315 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.762597041 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.763078558 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.762146235 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.76245401 seconds)
  done (took 54.549279761 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.762884952 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.765418816 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.763770051 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.763201913 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.764290372 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.765354222 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.764545031 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.765840552 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.764146395 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.764797016 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.764314044 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.765304022 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.762691189 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.764295821 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.764132928 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.764278331 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.764096996 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.762074222 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.764406201 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.765071175 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.765075496 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.764791157 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.765642083 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.765505519 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.765153657 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.76420654 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.764950489 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.766414249 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.765879293 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.766259521 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.76607986 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.765927915 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.764379224 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.764682756 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.765534674 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.764806265 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.767921093 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.764845117 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.766821197 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.765192918 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.766417207 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.766167092 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.765196279 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.763927381 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.767366773 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.765389299 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.766391796 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.766663725 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.765702451 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.767619551 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.765373132 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.767486863 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.767319944 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.767251212 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.765809734 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.768478186 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.767793055 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.768357496 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.767974376 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.767144456 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.766811145 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.766313616 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.766416816 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.765471636 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.766205744 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.766334646 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.765420981 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.766647206 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.766994684 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.766275207 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.767933331 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.768894593 seconds)
  done (took 128.82357376 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.767711471 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.768039654 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.76732732 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.765322947 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.766864967 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.766280494 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.766112309 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.76975839 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767055333 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.767787468 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767338552 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.768553304 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767337402 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.766281792 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.767960315 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.767066285 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.768584329 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.767282843 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.768362189 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.768049149 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.76874268 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.767456226 seconds)
  done (took 40.580397748 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.768319451 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.769378724 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.768466633 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.770418942 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.770230351 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.769166223 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.768006994 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.769781991 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.769516115 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.769512899 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769265085 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769180999 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.767373072 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767911285 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.770448811 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.767131733 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.769803593 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.769627605 seconds)
  done (took 33.54090745 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.767620931 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.768054142 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.768839658 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.768613755 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.770379519 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.769683114 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.768964252 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.770520102 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.770387819 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.770298514 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.77093295 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770014627 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.771537972 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768188106 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771582963 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.770607128 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.769172994 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770168681 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.768133971 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.769410269 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.768954143 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.768878291 seconds)
  done (took 40.629964329 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.770641438 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.769912088 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.772029276 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.772379652 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.769565314 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.771893568 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.770074445 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.768892125 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.770983145 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.769245564 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.769030639 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.770139555 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.768962 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.770626773 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.768595736 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.772189888 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.770598652 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.770756766 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.770503544 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.77364892 seconds)
  done (took 37.109516192 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.771180444 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.772062415 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.771872737 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.771217364 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.770834169 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.772151927 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.771152843 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.770676732 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.771712302 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.772872176 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.771543852 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.770291734 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.772187612 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.771744739 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.771303367 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.774284991 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.772358806 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.772711901 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.772562487 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.770783185 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.772342945 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.772488926 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.772427408 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.771226512 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.772299739 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.772297132 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.772924369 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.774576081 seconds)
  done (took 51.315324401 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.77312167 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.774930576 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.773218675 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.77516644 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.774142784 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.774189509 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.772822936 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.772406747 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.773894247 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.773336228 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.773728063 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.771202059 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.774041454 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.772836841 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.776432536 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.773945449 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773351424 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.775243479 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.771875322 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772877506 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.775223747 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772692895 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.7751781 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.773252449 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773431025 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.772990539 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.773857487 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.77499796 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.774037607 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.775113123 seconds)
  done (took 54.915170291 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.793226769 seconds)
    (2/2) benchmarking "in"...
    done (took 1.796885779 seconds)
  done (took 5.290885142 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.773865939 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.775465734 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.774016922 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.775797365 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.775990782 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.774535264 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.774911307 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.776436138 seconds)
  done (took 15.904504678 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.775827729 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.776652915 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.776605144 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.778221907 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.778227283 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.780704941 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.777083111 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.776890754 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.778712211 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.776102176 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.780588024 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.778494343 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.784172771 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.778490043 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.776100943 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.776206707 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.77691583 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.777035995 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.776882026 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.774761549 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.778911662 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.777434352 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.776681402 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.775432402 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.776232821 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.776037496 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.786811137 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.77779513 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.778521153 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.776476568 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.783008841 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.775653674 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.778210689 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.778749151 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.778630673 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.776139438 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.779579291 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.778055624 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.777316618 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.775957306 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.779095821 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.777599042 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.778061516 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.78293938 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.775897317 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.776197008 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.778239661 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.777795548 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.781142599 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.778159827 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.787011578 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.777409012 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.777835126 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.777934853 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.780546145 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.779523011 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.778908992 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.780782674 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.782633442 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.784503717 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.781749773 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.798289385 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.788597874 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.779715527 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.77695904 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.7865648 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.802906556 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.778464882 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.778910544 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.778012043 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.784520679 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.778081139 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.777422643 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.779185785 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.790340241 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.787880321 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.78194638 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.779497898 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.77965234 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.780153356 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.778720487 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.778844766 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.778455231 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.779049064 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.789492198 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.806040289 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.782049935 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.780323253 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.779742119 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.778665586 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.784280027 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.781570798 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.779423294 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.77966101 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.780975388 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.781145377 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.780431978 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.780302817 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.778840268 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.78518947 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.778252505 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.778852154 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.78229825 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.788383248 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.779575853 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.780854335 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.782361294 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.780922872 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.786927275 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.781128093 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.782515416 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.779701351 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.782400416 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.784421753 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.781545128 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.784446845 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.790474443 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.787489864 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.783253588 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.782868569 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.7837975 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.783080023 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.79133993 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.807828265 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.78067259 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.786396353 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.785818127 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.796351549 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.784218247 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.781479057 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.783034258 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.781269219 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.781091009 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.781908323 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.780394199 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.782179488 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.781205545 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.782775498 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.782348041 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.782824164 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.785233523 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.784068168 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.784310915 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.782165305 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.783300477 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.784153151 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.785342736 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.786362143 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.781820012 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.784218533 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.78107268 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.785484344 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.78483693 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.783038494 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.782511808 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.783093391 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.78280633 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.784959694 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.783944435 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.78393585 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.78470994 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.784001828 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.788534205 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.784432738 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.78703667 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.784192056 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.785441312 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.785385443 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.785362322 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.785878981 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.785851419 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.786136998 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.788362534 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.783455119 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.783974529 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.785405449 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.784561809 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.784459111 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.787695718 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.795113253 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.787111393 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.792868716 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.784015576 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.79055026 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.783764779 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.782892939 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.783966915 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.786172475 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.786103322 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.78422734 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.785120498 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.787971326 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.80458396 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.795405318 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.786813246 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.785492278 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.791440529 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.786686785 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.790521079 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.785004841 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.787569594 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.787578032 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.786649733 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.784527524 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.785684759 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.786762006 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.785737815 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.786030453 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.788768895 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.78631685 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.786004435 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.78730641 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.783948296 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.788126382 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.784608168 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.784058697 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.787041717 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.785671867 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.792786522 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.788254373 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.786282367 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.786575151 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.789564142 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.786966565 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.787256996 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.787869025 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.790414101 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.786854632 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.787876827 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.795469613 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.788969044 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.787838454 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.787524162 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.785755131 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.788152314 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.784550538 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.790184219 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.794650318 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.788885089 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.787730859 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.78979645 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.786121783 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.788468564 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.788672897 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.788668498 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.788973538 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.788968342 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.788046027 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.787891981 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.792198592 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.787775744 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.786446938 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.789456939 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.788395813 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.789187789 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.787661183 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.787507294 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.790147069 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.797974578 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.789599026 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.788255661 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.790968265 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.789420307 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.78900768 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.790785786 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.787588655 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.80057085 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.79680448 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.789328655 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.78718221 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.789753008 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.790667175 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.790188949 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.790134766 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.796738979 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.787608636 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.790520062 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.794402043 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.78841667 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.789992289 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.793682013 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.789617333 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.792048032 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.790549974 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.789214552 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.790282104 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.788844733 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.790849507 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.78969423 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.790805935 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.794298097 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.791096415 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.790580017 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.789775 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.799250681 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.789448666 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.790900768 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.796261607 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.791523926 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.788460976 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.791494513 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.789581573 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.790266293 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.792296132 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.788481825 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.791582896 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.790422327 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.794278323 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.802205798 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.794509316 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.800267395 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.795825663 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.804195029 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.793463779 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.792482752 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.792443992 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.795079574 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.803222804 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.792601911 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.789821049 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.797818895 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.791142152 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.791956382 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.797523306 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.791434691 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.793415346 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.792537887 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.793281184 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.795653126 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.793536397 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.791719834 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.790865018 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.791131672 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.792135747 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.793567234 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.795473808 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.793553084 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.79496807 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.793384103 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.794959898 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.792797239 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.794882106 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.794659118 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.793366234 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.792867006 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.799361542 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.794175571 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.794021219 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.798596196 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.792033069 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.799129581 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.792701923 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.79443596 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.797271012 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.791516095 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.795748465 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.792301271 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.794406984 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.793314284 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.794434867 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.794879039 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.803485535 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.799665086 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.798167936 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.794501911 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.79184779 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.793927292 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.802991396 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.819251529 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.792718468 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.796185114 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.797514904 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.800403893 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.795965891 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.799530849 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.796317877 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.80421623 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.794554835 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.794108567 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.798776211 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.807762994 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.794103598 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.794528173 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.794980342 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.798629542 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.794203494 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.794244589 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.796745079 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.796253159 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.796156827 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.805518938 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.793423694 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.796757408 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.797033335 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.797525377 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.79857267 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.795847985 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.799671484 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.798015406 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.796557367 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.797210106 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.798400282 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.801841962 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.795107078 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.800851968 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.806818592 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.79799535 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.797771539 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.798344214 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.796455805 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.796878384 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.79570304 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.796232244 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.79716459 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.795890306 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.797889627 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.798611808 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.806929343 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.797695103 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.796048468 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.796113897 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.799183859 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.796575575 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.795769304 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.800222047 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.80415737 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.800419881 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.809396903 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.807808346 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.799021466 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.798854171 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.805447598 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.806600469 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.797755876 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.79689172 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.797599788 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.800516995 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.799879071 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.798221407 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.797257889 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.798885728 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.804408758 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.798823699 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.799078728 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.79806461 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.799959851 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.801762102 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.801283745 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.807867708 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.799267731 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.800315339 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.79631435 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.801107783 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.80004562 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.80144787 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.799362137 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.798921758 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.802366099 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.80210037 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.805445056 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.79760748 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.798609847 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.802086515 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.800506205 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.801883215 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.799797784 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.800529645 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.801167066 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.803052327 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.810118887 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.801309075 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.800866057 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.801793242 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.80430535 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.801955638 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.802255187 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.801662687 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.800561648 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.806927 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.800363539 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.798537339 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.802603416 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.802271847 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.804781448 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.80154428 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.805824013 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.800985549 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.801709191 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.802703567 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.804828484 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.811320095 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.807441494 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.804167627 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.810742855 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.807344058 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.802619139 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.800419618 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.802601687 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.802047755 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.80275931 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.805211368 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.802110585 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.803432988 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.800603181 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.804311485 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.801261134 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.802828016 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.799476138 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.801963191 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.805585502 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.812639115 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.810351125 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.802105967 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.80532125 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.803836413 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.80397015 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.814107218 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.803964255 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.804810701 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.801350662 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.804807424 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.802767455 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.811774507 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.812596746 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.808731223 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.804535189 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.808274219 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.820832341 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.804474347 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.8117132 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.837473678 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.806628297 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.801681341 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.805175232 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.805248719 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.806522742 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.806123008 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.802875786 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.810662169 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.805076748 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.802159358 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.81187001 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.802934384 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.802991922 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.804622864 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.804327631 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.811337106 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.805905135 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.812471634 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.806311012 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.804304707 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.804498552 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.806886797 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.803284695 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.804794334 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.804528207 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.805529385 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.803861946 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.804948299 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.812615374 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.805589854 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.807861886 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.817547397 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.815655127 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.804586605 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.804325104 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.806388162 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.810078798 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.807762669 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.804603452 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.809451143 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.814807203 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.809033824 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.814392194 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.807963342 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.804466112 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.807163637 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.805129291 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.806985923 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.816255601 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.817084956 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.807403258 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.80691405 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.813398103 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.804551002 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.814449669 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.811693835 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.806052289 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.808159205 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.8071935 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.806378055 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.805944041 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.803595876 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.809042531 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.816754347 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.806187904 seconds)
  done (took 1070.375530747 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.805873461 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.806235131 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.807401627 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.804933445 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.806675787 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.807976832 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.809079062 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.806624974 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.806946237 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.80677143 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.807490448 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.807824664 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.80616754 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.807061535 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.808186111 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.8063793 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.80821019 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.808334921 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.80894488 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.809549266 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.808412267 seconds)
  done (took 39.687781629 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.809476639 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.808926432 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.805831332 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.807151697 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.808451478 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.806952479 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.80851282 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806382509 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.807222689 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.809366499 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.808054354 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808464761 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.80954205 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.809744034 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.808223002 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.808680478 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.808356857 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.809130473 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.809875837 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.808073324 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.807039665 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.808839541 seconds)
  done (took 41.517540135 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.808269002 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.810097473 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.808527539 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.811328898 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.806911072 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.807601418 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.810519231 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.808104509 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.809565616 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.80933434 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.819456642 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.818834454 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.809177295 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.811332042 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.809042031 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.810950434 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.95751975 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.810376249 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.812524776 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.807570678 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.811154699 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.814945609 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.81229112 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.81248334 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.812435568 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.812461953 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.809740026 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.814485909 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.809393611 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.815568662 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.818711204 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.812503101 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.812794505 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.81612122 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.813893786 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.814555464 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.819115732 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.811120679 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.811554437 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.811945863 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.825110241 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.840672012 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.812762295 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.813080709 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.819505202 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.813042706 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.813756742 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.81593285 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.821209189 seconds)
  done (took 90.734748016 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.812365868 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.812404715 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.811077199 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.814620932 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.8167684 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.813254761 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.813892352 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.811172618 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.815306567 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.811829446 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.813014313 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.813468103 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.812087805 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.810035949 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.81459612 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.809609762 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.811045282 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.811612322 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.810393215 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.808313127 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.811913285 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.808469574 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.81012961 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.808784639 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.810160775 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.81151087 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.807273271 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.805904384 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.80474962 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.807874858 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.808134192 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.806098048 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.804939152 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.8055826 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.804884314 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.807668135 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.806525622 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.806552726 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.805564568 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.806950772 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.806930647 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.810976681 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.806981708 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.806339516 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.805935337 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.806123041 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.806440343 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.807372334 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.807719057 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.805088286 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.805925641 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.806855741 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.80719991 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.807052287 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.806098161 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.806020312 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.806382272 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.805851789 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.807526516 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.807295349 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.805886235 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.807048561 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.806352869 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.80803741 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.80668893 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.806210327 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.80564097 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.807823118 seconds)
  done (took 124.729274684 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.808535401 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.807307543 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.806944927 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.806236409 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.807157689 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.807554778 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.806206934 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.805429587 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.804184171 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.805320337 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.803784792 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.805945296 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.803032564 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.804758616 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.803930393 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.803254303 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.803598264 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.807636884 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.804448731 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804117485 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.803592546 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.804570079 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.804414787 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.803971213 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.803510802 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.802999898 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.802159851 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.804171022 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.804915594 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.802745506 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.804677055 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.804737325 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.804188322 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.804887386 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.804724761 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.804995569 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.804382529 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.803973456 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.804805086 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.80424837 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.804857052 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.804306196 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.804865428 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.803773116 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.803831285 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.805272072 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.804260283 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.80501868 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.805456782 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.806363109 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.806814952 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.80568607 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.805913877 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.806323024 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.805496547 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.80649061 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.804991721 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.804877645 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.804579706 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.803891175 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.804881543 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.806054699 seconds)
  done (took 113.642423735 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.803456624 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.804381061 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.80434119 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.804629328 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.805409612 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.804520502 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.804172211 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.803742718 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.803256581 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.808455935 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.804300196 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.804267315 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806547544 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804599962 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.805189333 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.810882967 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.803593912 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.804388749 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.804446666 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.804338604 seconds)
  done (took 37.831763224 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.805431664 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.805416305 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.804313363 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.805524957 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.804272054 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.805091775 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.804508488 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806731626 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806006572 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80587628 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.805592052 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.80516503 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.804827007 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.80481139 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.804828265 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.805168589 seconds)
  done (took 30.619736282 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.801173764 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.801005726 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.801358054 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.801920573 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.805003083 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.801037237 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.80084118 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.801730925 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.801562635 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.802061965 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.802404327 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.799324364 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.798577451 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.800376302 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.798199691 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.799155376 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.799316848 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.797858137 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.797787632 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.79853983 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.799190484 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.800518883 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.798201275 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.797302843 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.79700813 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.799521862 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.798025438 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.800756294 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.798295107 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.796111199 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.798860217 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.797305379 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.798656899 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.795609787 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.795728445 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.795323574 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.795044587 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.79471948 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.795159155 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.794978461 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.795884018 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.795345267 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.795967627 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.798803213 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.794226667 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.794931583 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.794240936 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.794308347 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.796601261 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.797426335 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.794475606 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.797217752 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.794318612 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.795218566 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.796110474 seconds)
  done (took 100.628856995 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795295847 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.794977315 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.795689469 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.794930626 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.796339231 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.796989647 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.794635044 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.7954169 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.795091082 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.795359183 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.798094538 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.79542421 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.796719981 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.794994326 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.795939295 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.796427776 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.793462899 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.795586738 seconds)
  done (took 34.048468869 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.794086797 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.794112301 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.794826709 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.792030246 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.793058249 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.794305565 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.793763896 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.796932369 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7935157 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.792819368 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793440627 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.791609705 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.793534947 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.793166441 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.793073246 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793496487 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.792321276 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.793785151 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.793309571 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.795849891 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.79496525 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.793714974 seconds)
  done (took 41.186031192 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.794007617 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.79226581 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.808007745 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.814197251 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.814145021 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.830367461 seconds)
  done (took 12.575032692 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793939453 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793180593 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.79456164 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79325615 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793388686 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793499778 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793390141 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792469363 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794810358 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794011921 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792511566 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794327389 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794342717 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793360291 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791880513 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793195218 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791771565 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793161628 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792885855 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793347052 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792047523 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79204679 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794121421 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794511287 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792452726 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793075053 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795033668 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793379079 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793447068 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791449822 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79390073 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793338054 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793025537 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795016233 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793230065 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791383972 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794543491 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793594331 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793992262 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79630978 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.79368535 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792686127 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794231231 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793459685 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795794606 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792801271 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792686985 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791586768 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792806505 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792765159 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79431704 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791628634 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792302406 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792207057 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791889024 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792012303 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793040643 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792234924 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792469389 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792390109 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791474685 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793623657 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792577135 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792245675 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791456702 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792304504 seconds)
  done (took 120.071846018 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795213812 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.791603494 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792358516 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792234405 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793122615 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791980177 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791366388 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792799565 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792676486 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792259803 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791542885 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795276465 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791203116 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792359474 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791413764 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792932613 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794231894 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791560959 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793500485 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790955938 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792172707 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792761398 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793178041 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792439481 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793157662 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791701618 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.7920598 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792677945 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793273301 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791870123 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79203905 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793116117 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792015266 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.794390105 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792227618 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792315666 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792415001 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793087718 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793724676 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79337688 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792068176 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792309528 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791767158 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792263041 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795873546 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792146636 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791122691 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791154015 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789083719 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791662258 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793950468 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793812427 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791652036 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79341198 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792769698 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792618526 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793869223 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791709526 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791147517 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793452292 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79238699 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792560532 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793283297 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79244725 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793662933 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793346831 seconds)
  done (took 120.032478565 seconds)
done (took 2485.991776504 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.879738693 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.983590908 seconds)
  done (took 15.584051942 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.967601951 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.920723235 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.804534219 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.829523869 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.802756014 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.834065831 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.807681448 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.801224398 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.807001806 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.80538504 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.806490656 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.99195203 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.862728868 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.801496789 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.805273479 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.900967126 seconds)
  done (took 51.28343966 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.810442307 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.810192201 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.819941543 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.810030584 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.8110601 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.827726663 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.841638056 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.814261423 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.870855299 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.822603526 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.932941973 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.819618494 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.811595061 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.873457908 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.818814258 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.825819445 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.905339333 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.889162204 seconds)
  done (took 34.846004015 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.890175579 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.8092993 seconds)
  done (took 10.436948568 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.841000882 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.824802777 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.822219227 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.824169979 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.820147544 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.830525666 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.833927806 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.830031909 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.81547144 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.817426391 seconds)
  done (took 69.99518577 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.814030556 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.8110203 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.812456287 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.808940572 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.806372568 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.807727346 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.807617658 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.812331726 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.501728396 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.84392414 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.819482266 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.819605138 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.806364421 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.808852235 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.806320124 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.834555558 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.92273435 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.804725236 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.805479899 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.815348673 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.809082013 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.858847306 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.827677052 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.811800257 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.841383104 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.497141715 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.818260862 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.815975639 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.917311257 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.806488054 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.807854893 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.019500415 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.815907461 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.272919685 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.090661348 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.814024388 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.818211435 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.816675419 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.807559677 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.923572266 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.812480708 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.81413073 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.806513126 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.061044375 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.899617197 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.857845899 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.137246891 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.810557463 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.811301457 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.84435228 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.813869926 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.810447642 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.827080853 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.338743399 seconds)
  done (took 129.639727165 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.807427075 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.154209854 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.974974708 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.809173449 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.090070232 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.013254994 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.80727445 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.853715429 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.811857553 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.038410058 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.057211875 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.914332878 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.812412231 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.808220219 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.803631338 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.802424897 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.961268621 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.878543861 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.80798381 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.809749426 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836132692 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.049423244 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.92440336 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.813453651 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.834708695 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.019387267 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.929857616 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.914191069 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.596418974 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.809309204 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.870430767 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.810530743 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.808881557 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.806134237 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.96306528 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.900628172 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.888898749 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.808453515 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.811376685 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.807629854 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.4664213 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.006709607 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.901960347 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.937577834 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.0606168 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.014519022 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.586469212 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.808092922 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.544567085 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.973195672 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.036253842 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.037917548 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.925813525 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.811746099 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.34064457 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.811168035 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.810241453 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.054025756 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.030615361 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.905896937 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.810270989 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.811163053 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.807331471 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.048136845 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.812169017 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.899455687 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.811062354 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.806583982 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.908241586 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.910112468 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.03638058 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.017665609 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.839526817 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.148211755 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.310434623 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.056268991 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.872034513 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.058504732 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.810962213 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.807718806 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.887883779 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.656410003 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.063579766 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.050110882 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.056357169 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.840920235 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.522582884 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.810786241 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.035275653 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.028135986 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.066614506 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.056882313 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.041860674 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.126785566 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.810768764 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.812205144 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.056641158 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.931689101 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.80961757 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.158017914 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.04169195 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.37124688 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.839375826 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.11762565 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.937917289 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.811535344 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.438240259 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.817809908 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.038736656 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.852310735 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.815336068 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.812279885 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.026449501 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.795918431 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.812897975 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.779500977 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.871890462 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.810479788 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.043279623 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.813120841 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079055059 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.812767552 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.042540081 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.380871126 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.840989257 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.040089142 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.058169771 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.814025726 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.05556311 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.054103084 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.924123445 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.082002608 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.692449735 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.812623797 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.099989909 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.814256641 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.816660992 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.982335444 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.813608737 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.954740561 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.814435284 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.106893795 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.830782706 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.044859177 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.813711932 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.064145072 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.840528765 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.865007982 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.815038826 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.931715684 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.817051787 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.643083942 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.972349203 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.817247054 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.813323036 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.611455608 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.815547034 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.967157046 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.040311063 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.830639876 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.886594715 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.47546001 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.815692762 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.900593673 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.833215737 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.201059069 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.818985553 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.063335876 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.814614893 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.81544003 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.815991985 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.051655589 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.045984619 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.815668541 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.816580266 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.720512124 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.814893298 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.815915219 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.995500083 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.294078032 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.810697552 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.015946295 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.81831026 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.941633831 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.81547286 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.88784329 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.155066769 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.815183279 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.815952703 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.816978324 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 7.254342833 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.817348541 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.078488719 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.840915885 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.346460028 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.951773999 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.089599505 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.125480757 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.055780078 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.853824839 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.818890487 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.065018556 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.818102099 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.877325377 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.818461956 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.839536708 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.04899421 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.816948291 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.027283647 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.08348647 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.790598329 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.863021695 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.821345655 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.818054269 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.817355693 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.965598015 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.899404282 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.819272461 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.822307693 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.931489363 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.932546912 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.025411882 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.817845954 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.031962656 seconds)
  done (took 891.601178312 seconds)
done (took 1205.108826476 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.820162744 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.821490893 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.818317953 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.817608283 seconds)
  done (took 29.022441502 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.82250455 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.820870948 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.821704807 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.822077871 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.821592043 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.821425141 seconds)
  done (took 12.677206503 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.936284542 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.820034254 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.819865364 seconds)
  done (took 21.323356699 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.896037184 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.223677257 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.95687107 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.25320405 seconds)
  done (took 10.079033708 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.822588629 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.821742242 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.821854879 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.822822798 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.822477053 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.822987517 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.822859933 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.822817649 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.823211228 seconds)
  done (took 18.15268683 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.60854556 seconds)
done (took 97.611632033 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.945410929 seconds)
    (2/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.929920426 seconds)
    (3/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.973871692 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.884842917 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.16085176 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.080858526 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.932844808 seconds)
    (8/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.257680742 seconds)
    (9/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.060015432 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.84120052 seconds)
    (11/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.896669802 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.822758872 seconds)
    (13/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.344433014 seconds)
    (14/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.98445683 seconds)
    (15/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.684828468 seconds)
    (16/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.903117595 seconds)
    (17/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.987826325 seconds)
    (18/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.945422554 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.819357742 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.954008356 seconds)
    (21/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.061812497 seconds)
    (22/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.90749588 seconds)
    (23/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.88626092 seconds)
    (24/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.845010827 seconds)
    (25/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.897683528 seconds)
    (26/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.511144791 seconds)
    (27/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.705138927 seconds)
    (28/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.880515076 seconds)
    (29/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.334004794 seconds)
    (30/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.067767597 seconds)
    (31/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.105171886 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.956212492 seconds)
    (33/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.833797797 seconds)
    (34/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.821682381 seconds)
    (35/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.401603676 seconds)
    (36/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.092987739 seconds)
    (37/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.146081083 seconds)
    (38/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.211893198 seconds)
    (39/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 1.951734345 seconds)
    (40/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.919002517 seconds)
    (41/309) benchmarking ("sort", BigInt, false)...
    done (took 6.821327952 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.927294793 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 1.956370483 seconds)
    (44/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.200287057 seconds)
    (45/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.571208238 seconds)
    (46/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.921518182 seconds)
    (47/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.844281618 seconds)
    (48/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.246995431 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.211211888 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 2.038255516 seconds)
    (51/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.905269222 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.085820261 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.116913705 seconds)
    (54/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.838930705 seconds)
    (55/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.028897336 seconds)
    (56/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.100565852 seconds)
    (57/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.843479632 seconds)
    (58/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.82276941 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 5.527067312 seconds)
    (60/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.968029635 seconds)
    (61/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.017546154 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.076142942 seconds)
    (63/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.839022905 seconds)
    (64/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.902530335 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.978993025 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.842520443 seconds)
    (67/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.139062156 seconds)
    (68/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.928144567 seconds)
    (69/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.989667532 seconds)
    (70/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.584158189 seconds)
    (71/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.643176259 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.162047738 seconds)
    (73/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.963194651 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.911499486 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.450348757 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.253242029 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.954010436 seconds)
    (78/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.080018886 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.958173067 seconds)
    (80/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.902698752 seconds)
    (81/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.037764683 seconds)
    (82/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.841984662 seconds)
    (83/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.025003399 seconds)
    (84/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.842223897 seconds)
    (85/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 1.97466271 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.952816493 seconds)
    (87/309) benchmarking ("sort", Float32, false)...
    done (took 5.530637531 seconds)
    (88/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.124482252 seconds)
    (89/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.465731558 seconds)
    (90/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.221845085 seconds)
    (91/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.379805391 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.935430879 seconds)
    (93/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.298328804 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.33611784 seconds)
    (95/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.070196212 seconds)
    (96/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.290930008 seconds)
    (97/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.130181726 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.14638447 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.824608684 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.76689439 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.829560581 seconds)
    (102/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.005705065 seconds)
    (103/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.454622321 seconds)
    (104/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.621386044 seconds)
    (105/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 1.954589371 seconds)
    (106/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.335449705 seconds)
    (107/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.845609973 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.840160141 seconds)
    (109/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.01296707 seconds)
    (110/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.830151457 seconds)
    (111/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.935692138 seconds)
    (112/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.862749949 seconds)
    (113/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.084381041 seconds)
    (114/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.910172854 seconds)
    (115/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.908167686 seconds)
    (116/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.011403333 seconds)
    (117/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.232595409 seconds)
    (118/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.042800787 seconds)
    (119/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.973467205 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.227552124 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.135494288 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.763680306 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.147198856 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.85276408 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.180931188 seconds)
    (126/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.839461392 seconds)
    (127/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.970635121 seconds)
    (128/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.609242624 seconds)
    (129/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.827036408 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.860464375 seconds)
    (131/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.21661821 seconds)
    (132/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.151060428 seconds)
    (133/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.01851982 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.585119485 seconds)
    (135/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.863895162 seconds)
    (136/309) benchmarking ("sort", Int8, false)...
    done (took 4.694215456 seconds)
    (137/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.906568413 seconds)
    (138/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.132132666 seconds)
    (139/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.835088024 seconds)
    (140/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.132886161 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.079170077 seconds)
    (142/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.906193419 seconds)
    (143/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.838687461 seconds)
    (144/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.829603834 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.890380159 seconds)
    (146/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.829963803 seconds)
    (147/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.010424934 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.074391892 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.954189274 seconds)
    (150/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.317306475 seconds)
    (151/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.094414395 seconds)
    (152/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.828715975 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.851214711 seconds)
    (154/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.906869537 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.728802515 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 1.963962502 seconds)
    (157/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.098774405 seconds)
    (158/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.951589678 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.828958998 seconds)
    (160/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 3.744433886 seconds)
    (161/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.672784911 seconds)
    (162/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.991526515 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.223926888 seconds)
    (164/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.829916141 seconds)
    (165/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 4.108133577 seconds)
    (166/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.843049182 seconds)
    (167/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.830356866 seconds)
    (168/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.943082035 seconds)
    (169/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.833483261 seconds)
    (170/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.202435455 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.502522494 seconds)
    (172/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.507458823 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.831154963 seconds)
    (174/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.892654249 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.831127096 seconds)
    (176/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.835066581 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.829790612 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.827972967 seconds)
    (179/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.200793796 seconds)
    (180/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.222767242 seconds)
    (181/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.165204188 seconds)
    (182/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.112857886 seconds)
    (183/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.933777747 seconds)
    (184/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.040803375 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.723377211 seconds)
    (186/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.934986189 seconds)
    (187/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.938439825 seconds)
    (188/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.153720374 seconds)
    (189/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.931483503 seconds)
    (190/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.72225615 seconds)
    (191/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.707742418 seconds)
    (192/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.82701197 seconds)
    (193/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.089878551 seconds)
    (194/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.042082944 seconds)
    (195/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.835725905 seconds)
    (196/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.225006223 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.060795467 seconds)
    (198/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.830524254 seconds)
    (199/309) benchmarking ("sort", Float64, false)...
    done (took 5.625049569 seconds)
    (200/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.226139642 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.894356722 seconds)
    (202/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.848913802 seconds)
    (203/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 1.962827831 seconds)
    (204/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.927595537 seconds)
    (205/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.916891048 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.821834233 seconds)
    (207/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.831526336 seconds)
    (208/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.525117628 seconds)
    (209/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.9335566 seconds)
    (210/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.443466652 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.709184354 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.879184613 seconds)
    (213/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.922668457 seconds)
    (214/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.931306976 seconds)
    (215/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.343482103 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.067648058 seconds)
    (217/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.834090856 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.9036695 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.149045716 seconds)
    (220/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.084226924 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.83946168 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.265682696 seconds)
    (223/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.019356 seconds)
    (224/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.86722446 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.495453081 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.157774415 seconds)
    (227/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.977328828 seconds)
    (228/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.858504168 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.834735677 seconds)
    (230/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.860486945 seconds)
    (231/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.835765588 seconds)
    (232/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.906151359 seconds)
    (233/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.895934537 seconds)
    (234/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.837579369 seconds)
    (235/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.310286017 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.565571269 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.837653637 seconds)
    (238/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.852250475 seconds)
    (239/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.859709977 seconds)
    (240/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.839834177 seconds)
    (241/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.908645726 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.849162475 seconds)
    (243/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.241796095 seconds)
    (244/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.085743838 seconds)
    (245/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.840222468 seconds)
    (246/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.838456161 seconds)
    (247/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 9.382153177 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.943670483 seconds)
    (249/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.987490026 seconds)
    (250/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.919135975 seconds)
    (251/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.322320037 seconds)
    (252/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.042720703 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.990801364 seconds)
    (254/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.114758402 seconds)
    (255/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.312003128 seconds)
    (256/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.845886948 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.584418896 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.051287848 seconds)
    (259/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.165032916 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.19604897 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.839549944 seconds)
    (262/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.930084249 seconds)
    (263/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.995508791 seconds)
    (264/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.184641407 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.932757046 seconds)
    (266/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.864427217 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.472002049 seconds)
    (268/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.250992283 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.854202882 seconds)
    (270/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.839132777 seconds)
    (271/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.758155173 seconds)
    (272/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.107376022 seconds)
    (273/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.007425991 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.125763012 seconds)
    (275/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.676884674 seconds)
    (276/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.025214818 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.173299583 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.836030617 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.149229047 seconds)
    (280/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.462130838 seconds)
    (281/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.06791548 seconds)
    (282/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.836797118 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.836308166 seconds)
    (284/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 8.401170024 seconds)
    (285/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.745627956 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.971445621 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.968424153 seconds)
    (288/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.167472826 seconds)
    (289/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.953185361 seconds)
    (290/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.671408225 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.720051209 seconds)
    (292/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.834446025 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.377965395 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.875096156 seconds)
    (295/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.148633681 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.169532148 seconds)
    (297/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.941389075 seconds)
    (298/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.770064487 seconds)
    (299/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.148788333 seconds)
    (300/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.844790516 seconds)
    (301/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.202449724 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.969908928 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.883483392 seconds)
    (304/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.57925006 seconds)
    (305/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.194596944 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.051573265 seconds)
    (307/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.8386287 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.805398324 seconds)
    (309/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.840905966 seconds)
  done (took 997.83077395 seconds)
done (took 999.659456965 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.06252506 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.861001645 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.842621312 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.865534302 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.956434814 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.887344815 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.856315419 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.848098833 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.896814854 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.89345172 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.842720392 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.8844422 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.844999406 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.844004854 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.843414387 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.860274446 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.140245428 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.864983364 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.861674774 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.856486394 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.862198294 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.842894659 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.894763292 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.885919576 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.85141811 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.849609187 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.848784421 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.864804893 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.957823261 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.850444392 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.849651474 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.859196601 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.142688184 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.862102835 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.843757137 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.866995377 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.857263348 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.857419334 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.849957642 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.878939948 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.28051703 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.84606666 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.84595669 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.844806891 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.846167446 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.852915662 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.845125147 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.854031367 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.861167645 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.861952896 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.275828767 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.862277082 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.849064423 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.847520581 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.860695435 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.84693432 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.851911041 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.864925281 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.867493219 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.863178867 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.134279019 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.870952892 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.85106908 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.865788136 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.856842042 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.310378468 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.846456051 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.853816091 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.282139469 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.855494655 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.3109867 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.857569487 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.850653983 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.863426278 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.880032752 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.145513517 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.865132899 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.84682503 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.857341664 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.846501441 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.859814728 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.863574988 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.853957975 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.847767016 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.866453556 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.893804103 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.863817205 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.849172189 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.862485074 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.870559132 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.8561718 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.860203402 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.852080889 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.846638909 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.861471614 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.852057797 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.852929724 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.850865079 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.854258134 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.862755532 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.2824047 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.867922817 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.845629142 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.8480603 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.84893536 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.864175485 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.281899282 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.850318151 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.872094232 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.898950757 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.85141771 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.135934378 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.872502185 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.869305244 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.861276516 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.852878956 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.84889057 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.137141307 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.298251618 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.867640749 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.848657451 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.84807036 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.867530654 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.851987684 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.851078245 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.146471957 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.874398627 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.8667167 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.975512332 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.864553633 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.882757119 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.849875047 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.854242428 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.897703934 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.867514819 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.884377957 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.853280923 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.866970416 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.869537089 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.848619255 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.862832095 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.863981567 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.850193032 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.859204499 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.850063924 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.899024188 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.866623651 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.867660476 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.873309347 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.975591937 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.851028142 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.136223456 seconds)
done (took 292.515246995 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.925425085 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.849882811 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.966054453 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.849058676 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.938738469 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.921136546 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.851217357 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.849053942 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.84906925 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.357219895 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.850190296 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.858613838 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.848519478 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.849432501 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.920835102 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.850152334 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.849155553 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.297948271 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.854350492 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.930215852 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.84846412 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.850278201 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.849884488 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.37062537 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.850615069 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.850743985 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.931091143 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.851685724 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.302826932 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.850787359 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.851569946 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.315560591 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.930843807 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.879580843 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.85995108 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.857588215 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.93993311 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.861125991 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.916562569 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.919607952 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.970972413 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.882671757 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.852215781 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.853317399 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.85774126 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.855152258 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.851510972 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.885359029 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.851217826 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.85759979 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.297985522 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.861272457 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.855775213 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.854554923 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.851971117 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.880695238 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.854073203 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.853512547 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.935236181 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.85352345 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.921699787 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.358715494 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.356410039 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.853298534 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.853046958 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.853477365 seconds)
  done (took 184.14340647 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.919644584 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.928216089 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.920576944 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.858895895 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.903379013 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.919599324 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.853965402 seconds)
  done (took 15.081099789 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.860223297 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.853044003 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.904129122 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.903321156 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.852954886 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.033677057 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.866151694 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.859753165 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.881353764 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.853819975 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.519160302 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.902718458 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.859905547 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.854411384 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.865940647 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.909709007 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.855486063 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.853261616 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.971683523 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.005614023 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.863604782 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.862608648 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.879618561 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.865276469 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.855137855 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.858337023 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.854976638 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.862590581 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.854771713 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.855003417 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.856647174 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.906056439 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.854761404 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.855087733 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.856416801 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.856561431 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.855225208 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.854452591 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.855118798 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.853782568 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.855159173 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.855978422 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.854956117 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.855305148 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.855906907 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.877782145 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.854919046 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.853667488 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.853805291 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.853952202 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.881727096 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.855077616 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.857263574 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.859678398 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.897581133 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.8631719 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.856890373 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.855633188 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.856708397 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.85649657 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.856369174 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.003280498 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.907570835 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.855294759 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.906403508 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.011629218 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.857452862 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.855440533 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.857530253 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.945916546 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.857373164 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.906178668 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.855462303 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.969835115 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.857627384 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.035940942 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.878592331 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.860706476 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.859945606 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.855921147 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.863626712 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.856766213 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.858394192 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.862779364 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.860435024 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.8560707 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.858832654 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.859996002 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.864337415 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.855684987 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.909117209 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.857596045 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.859474789 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.996942434 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.857323889 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.972775491 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.884795971 seconds)
  done (took 204.605390412 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.865078969 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.863889004 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.858191333 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.87255166 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.856535758 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.856219933 seconds)
  done (took 12.953547321 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.859684072 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.861322885 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.857942373 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.857742136 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.858664957 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.858907886 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.859059561 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.858376519 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.863816689 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.859270028 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.859165193 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.858847273 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.858618757 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.857862271 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.858307132 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.859346422 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.859378083 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.857489039 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.858453259 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.860184223 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.069360607 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.859217319 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.860402972 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.863292961 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.865828872 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.860511373 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.872826854 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.859789355 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.860421184 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.869208216 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.863722555 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.859049573 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.861680461 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.865454226 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.86471239 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.862838166 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.863855378 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.862445737 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.859899012 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.860300863 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.86281867 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.859448069 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.859360782 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.860155505 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.861435842 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.869097095 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.866002114 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.87421468 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.861822457 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.861848655 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.862128174 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.862671749 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.861317581 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.862123473 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.865314852 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.865658045 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.864652825 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.862285152 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.860614409 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.866740278 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.866277585 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.863163378 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.863740627 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.868050443 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.869230215 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.862423483 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.864239113 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.866090023 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.861332797 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.862778848 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.863111 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.863051 seconds)
  done (took 137.077053341 seconds)
done (took 555.649318377 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.987102822 seconds)
  done (took 8.772897473 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.890652721 seconds)
  done (took 8.771717381 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.350652401 seconds)
  done (took 10.141774674 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.870316911 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.888095429 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.863471813 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.86537892 seconds)
  done (took 29.285945014 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.202425296 seconds)
  done (took 8.990502934 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.873118947 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.864582717 seconds)
  done (took 15.598769273 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.981738288 seconds)
  done (took 8.770041112 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.23430518 seconds)
  done (took 9.034251042 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.883631019 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.876448334 seconds)
  done (took 15.569087146 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.86483631 seconds)
  done (took 8.651941196 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.210739132 seconds)
  done (took 10.087844557 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.880352687 seconds)
  done (took 8.709837049 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.89286268 seconds)
  done (took 8.680041119 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.036636662 seconds)
  done (took 9.823442803 seconds)
done (took 162.674823646 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.86588357 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.86122956 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.862654289 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.862509494 seconds)
  done (took 29.239560006 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.897680507 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.897204578 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.907248109 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.898049262 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.890029765 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.887750309 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.89859586 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.898433156 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.889546749 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.897130031 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.899010928 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.896850036 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.898076165 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.907565484 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.908307109 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.895241342 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.898644931 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.899893407 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.889224879 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.907646723 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.895929004 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.898114745 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.863539528 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.864046106 seconds)
  done (took 47.271123879 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.051783937 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.934546721 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.017961752 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.91649139 seconds)
  done (took 9.708842125 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.865180304 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.928224332 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.915521362 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.911416921 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.915650194 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.965770248 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.917311705 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.001011975 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.992404611 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.993132151 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.871906158 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.885302688 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.889718899 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.910525058 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.969715761 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.864631343 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.864890967 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.980731767 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.927119258 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.051422684 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.864945279 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.919822527 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.916660764 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.917750125 seconds)
  done (took 48.029688344 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.865852813 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.872360154 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.874392718 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.866651133 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.867530885 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.867282613 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.873447598 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.869322717 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.888318693 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.867096858 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.868069663 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.86737226 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.874314491 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.866234481 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.867332817 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.881046815 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.88093052 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.867406374 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.870127732 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.873463206 seconds)
  done (took 39.21900165 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.86482271 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.711948135 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.212127678 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.118284013 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.866612401 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.8686283 seconds)
  done (took 31.43169254 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.879498422 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.872517861 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.866876448 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.921363435 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.998903133 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.867315431 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.868120369 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.876376029 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.910519418 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.927283598 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.883867757 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.894864014 seconds)
  done (took 24.55953051 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.866124641 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.866803512 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.867090034 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.877985512 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.875846354 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.873580151 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.873680061 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.865339886 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.876200218 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.884651461 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.872265396 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.879154618 seconds)
  done (took 44.274770208 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.573447307 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936445155 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.86585163 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.741735741 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.323987293 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.422297267 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.756663352 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.639281091 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.331499449 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.792242931 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.069845601 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.86625912 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.949033556 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.866920715 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137866321 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.240034239 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060660659 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.112153474 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.541749518 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.898511354 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.073100435 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092712403 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.162021984 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.869355202 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872294124 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.991788446 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.30256239 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.681501441 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.902792192 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.184033238 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10578102 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.820799867 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924765028 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.875892304 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.883637362 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873353879 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875724867 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142770126 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.993256889 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003169726 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945264888 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.119908934 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875751759 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.29135758 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.575776267 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.18710751 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.982519924 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.871835381 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874184225 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87080608 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.798920286 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955006172 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.876178554 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877458079 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.573292002 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.873408725 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9474406 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.873746114 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074125729 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.679923582 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.56126861 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.869747124 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874840182 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.446505114 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.974431367 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.986775536 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.648411433 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252618951 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.289733493 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.970088979 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.873621999 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.875166877 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.018305645 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832922407 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.589413741 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913362451 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.010622552 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.886313882 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.513503744 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162935525 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.304178207 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.428888716 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.793193112 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152495978 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.661167487 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.849643681 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090803128 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.715961235 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.799743733 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094477722 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90508641 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878285562 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.136864433 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.596269308 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.983180049 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.886839476 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311678302 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891332405 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.879552785 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8757019 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.087764575 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.284131717 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898771531 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.999713861 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887148387 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.959078922 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802457946 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.884419694 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.877905113 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.778812295 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.879330946 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.808240485 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.915340874 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.541465784 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.908108789 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.814905738 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.879257575 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.983873173 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9138684 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.825737595 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144126784 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.179186819 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.563806077 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860527892 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.00292475 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.252660694 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.10105021 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.881359685 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.090575727 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.415071628 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.30840409 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.920248309 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.169990413 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.93163465 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.171920262 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30401121 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955269069 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.659456123 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.499753603 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.095653778 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888964991 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.876047273 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.880469065 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882879987 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.812780418 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.559193368 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.255246499 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.044210005 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.090961022 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.202983241 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.86081884 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.834540405 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181161658 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.014642117 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.868927036 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.530228753 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.275467581 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.688606878 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.899066145 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.022663984 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.05651559 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.834179481 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892418481 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955681162 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893741094 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.89507407 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.247884938 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.238417604 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.880248419 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.881525055 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.830075686 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888252807 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.880293524 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.413018352 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.842843128 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.879358875 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.891302001 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.752512182 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954063911 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.881025731 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.882290243 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.414909228 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.381061905 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.886048763 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.562423448 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.005049703 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.958858866 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.154128381 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.251329722 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.009631297 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.579515763 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.306122495 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.992645304 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.581517606 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.806819311 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.880820332 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.820908933 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882789623 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.881447091 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886070346 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.068940662 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.15673723 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18261061 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.343472444 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942751664 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085148276 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.652784257 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833018481 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.883725318 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885956515 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.883737765 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881657126 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.389992769 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.177739888 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.988423375 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9085269 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.886666674 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009954789 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.894049296 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.808917654 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.884183715 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.884401913 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.314001091 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.902578082 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.833771616 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.207112491 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.733329917 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006443057 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92568406 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.894392785 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.887012613 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.599356786 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.982547192 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809600045 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313082327 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91013032 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.65698272 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371216483 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.466034014 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17650553 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201532661 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.213583279 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.951768864 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.097438265 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.973027879 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.938195816 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.973353354 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819420675 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.806120374 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.539607581 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.217506464 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150435835 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887914733 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100247877 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.600649964 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.110880497 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913641808 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.57156525 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183449845 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.855847177 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899230163 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.205324479 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98336277 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967212698 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.887841205 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.835442028 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.226528647 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927037323 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.584501764 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899245753 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.23706242 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.316612717 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.094486095 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.266141373 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096750853 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.883438318 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238836896 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.083783531 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.916290212 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.891500394 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.875950134 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.098151019 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.462547616 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.733282449 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890716441 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.039651459 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.174844921 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.790762586 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.888272243 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.03290604 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136288089 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884424542 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.243566157 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25260887 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.987462578 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944029179 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112195337 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.571066322 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182446361 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.439984175 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.370214207 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88357933 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.811120291 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.585156632 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.0889404 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.887228855 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.851289923 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.100811893 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122681711 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.57059533 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.102323907 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.129588029 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.897735464 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.156549771 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960569927 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.9841197 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.204351167 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.320136958 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.135040464 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.113283175 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.426822953 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.101293606 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.353656776 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.056573415 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.88850777 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.0935894 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.105571671 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.102046245 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.272248154 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054822521 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.597840455 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.894022788 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.095433251 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185275537 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949303428 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.278722745 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.055463307 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.973101413 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895736154 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954509211 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.89554205 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8970533 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.288185475 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.417432155 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.903693364 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966950037 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.002204202 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.392376021 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.887763297 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.895659964 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160780494 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243485378 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.221713304 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.872232045 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.884247135 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895109767 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017207885 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.815243686 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896129192 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.160618504 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.892792636 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.299311901 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.035228543 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899527488 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.216636386 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.271380034 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.568994938 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.846519099 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895206825 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114347294 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201545305 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.068419511 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.997613952 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158436117 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.227151795 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.923239648 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.274422361 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125817436 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.891585792 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.763075701 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.895168754 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0124637 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.088243654 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.160651044 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.393571527 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.656263551 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.154758139 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.757183286 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.890742961 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.61566172 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158845986 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.15965452 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.940218442 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949913448 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89326106 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.331045292 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.599069478 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016782984 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.729141727 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.812968174 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.890690222 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.226485625 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.131254305 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.598096023 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.891527145 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.168315094 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192364597 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160595408 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.943467134 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.726894876 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098185836 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884761454 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.88816514 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.132704169 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105738663 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.121877762 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882269152 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.881254952 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.688920167 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802481468 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.87366834 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929846599 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.10248985 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893046189 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.388665026 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.572621951 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163047531 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924261405 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875772084 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.146322358 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.392708638 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.42028202 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871227862 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091992038 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.866833451 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162513768 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.872124772 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.298900551 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166097916 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.867948691 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.399353916 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.105431909 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.136019191 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79531688 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.867768592 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07933708 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.714652719 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.863663248 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.84572068 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304860358 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089241207 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.593296885 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.414877636 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.858578111 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.861884263 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.298635373 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885090924 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.303692254 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883511472 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87324984 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.370503056 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.56307177 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.138496079 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.094261488 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.390968006 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.489184112 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.852946017 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.849424849 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854277059 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.767547161 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.03332077 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.034402905 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136242048 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.879481341 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.293077552 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877989954 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.202853304 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007857489 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.053795791 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.926523061 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.410210051 seconds)
  done (took 1663.51995514 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.912412648 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.905752209 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.9573001 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.890461787 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.890937673 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.908274301 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.973473194 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.893826444 seconds)
  done (took 57.145551075 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.879295172 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.892962071 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.886343994 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.88495865 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.890758632 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.882283787 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.039049141 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.888473976 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.88190295 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.886196044 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.884723036 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.879167665 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.15681692 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.895024008 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.880081804 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.88263372 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.881464837 seconds)
  done (took 74.284190744 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.883134998 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.725829452 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.942502181 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.885887154 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.945251988 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.891097701 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.932758005 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.903653101 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.889674678 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.130588293 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.184532534 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.940309527 seconds)
  done (took 91.062203273 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.891774645 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.886649111 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.887416362 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.888948176 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.888567494 seconds)
  done (took 11.257430218 seconds)
done (took 2172.828282854 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.114893326 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.958278084 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.994093747 seconds)
  done (took 5.761626929 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.034352393 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.080714769 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.191458173 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.95387739 seconds)
  done (took 10.076586949 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.189387832 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.25356116 seconds)
  done (took 6.254348836 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.302124669 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.888144517 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.300435614 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.887127966 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.889280618 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.890666428 seconds)
  done (took 22.481011808 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.889257096 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.886615455 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.887664573 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.888770541 seconds)
  done (took 9.361682395 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.885492876 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.612828599 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.886301113 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.893915855 seconds)
  done (took 21.089027267 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.035895741 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.003527287 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.031609879 seconds)
  done (took 7.884021154 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.110744257 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.995521952 seconds)
  done (took 6.916643181 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.032811548 seconds)
  done (took 3.841260097 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.91816645 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.159993914 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.38142599 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.420511297 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.529750272 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.69677104 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.212789897 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.134444202 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.303367496 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.331875411 seconds)
  done (took 24.900665548 seconds)
done (took 133.981569236 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.257849793 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.910382572 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.096280609 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.262257149 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.115881868 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.094954564 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.094932919 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.253051998 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.93766706 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.918781405 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.250528363 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.118490263 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.036174276 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.916636599 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.034463919 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.91577083 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.119324942 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.270145566 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.936368311 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.181581204 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.080371841 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.904108631 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.097494026 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.914325194 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.118860565 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.044302566 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.444496911 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.912496476 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.08446363 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.45570942 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.045302367 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.319009557 seconds)
  done (took 168.953283423 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.88741408 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.882905726 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.883411219 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.88122779 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.453462726 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.878190989 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.881379823 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.881738799 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.320804596 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.306444674 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.880336506 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.436240079 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.88135479 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.882568848 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.883729191 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.88028082 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.475076614 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.883821718 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.87891454 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.880027238 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.882837862 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.2748595 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.878883208 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.282147268 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.456968238 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.87173276 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.868157015 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.863677683 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.862286254 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.862325148 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.86167028 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.859340713 seconds)
  done (took 209.856786006 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.86278259 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.859766382 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.858996102 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.856829233 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.858078407 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.854046821 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.850416492 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.853381827 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.559260629 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.53969334 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.848588078 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.848282412 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.851865904 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.855175567 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.846985558 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.847395729 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.844426325 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.846663125 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.8467167 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.847338491 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.848868344 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.712992685 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.845647869 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.759041925 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.846767974 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.846932196 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.844628946 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.837032122 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.836852281 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.838452389 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.836415371 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.83611997 seconds)
  done (took 220.116563748 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.079989987 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.83991044 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.840711456 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.749810561 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.841940698 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.839360984 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.816786088 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.093679602 seconds)
  done (took 18.868313369 seconds)
done (took 619.621299679 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.221083 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.054446081 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.020679176 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.866159536 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.122505709 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.905285907 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.859498956 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.921881084 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.684482141 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.93815613 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.520404546 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.879978355 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.611703457 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.882763322 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.981296984 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.912619877 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.432144031 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.525486273 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.998688176 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.930066227 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.03958992 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.780561088 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.930785042 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.718322595 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.524694462 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.82392873 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.896873627 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.431453334 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.863767143 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.012972915 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.562433527 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.162546343 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.865303254 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.851776231 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.903275888 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.884965162 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.084523753 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.861804801 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.98092331 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.566635643 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.933428282 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.58055129 seconds)
  done (took 101.295843278 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.844242011 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.838860905 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.838386041 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.837851249 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.848194858 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.838835065 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.838673681 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.83826244 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.83824739 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.8379006 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.839625561 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.847238832 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.838817941 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.847429147 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.837271309 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.840165808 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.839161376 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.848572822 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.841144246 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.838642576 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.839131738 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.838439309 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.835529258 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.839901624 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.839805009 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.839217756 seconds)
  done (took 49.625256084 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.833778035 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.00774515 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.079584733 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.852362371 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.834540413 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.838247064 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.852629755 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.83986134 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.836344223 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.836312017 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.939095831 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.841633625 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.853380019 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.079610278 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.849194256 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.833277832 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.834165569 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.834288816 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.014553461 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.849911451 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.85408121 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.839797193 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.854112379 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.849448249 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.836801228 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.836825506 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.83733368 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.336828333 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.846276657 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.940104667 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.894963577 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.855641052 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.287136437 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.087792279 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.890721149 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.842204848 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.834076163 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.944456704 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.841721376 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.835025785 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.852210372 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.841278003 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.07849108 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.365936459 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.848758778 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.836409914 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.345764635 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.95508528 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.877642349 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.846753586 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.085056926 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.85095872 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.839113339 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.836344264 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.871748851 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.844799182 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.836740261 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.207598759 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.853599679 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.857337432 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.840890699 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.838252743 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.020220061 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.845185733 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.008468296 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.848194063 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.843887545 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.836926094 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.083090709 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.851847292 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.387242213 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.850988995 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.83701819 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.94134247 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.015925011 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.37256576 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.851655697 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.022775091 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.304826843 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.862878362 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.847556772 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.324979274 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.866274405 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.844614763 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.839117034 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.839960363 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.838418591 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.881567826 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.85396693 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.299499778 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.380578277 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.221678152 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.865547941 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.84980872 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.840604863 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.208036061 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.849431713 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.838850006 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.07301286 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.392776069 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.85253738 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.845468306 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.362105617 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.851849165 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.856403181 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.848078519 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.092710742 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.856217501 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.883044197 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.83855433 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.845442316 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.842205605 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.857213662 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.848101478 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.839219924 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.350685765 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.959998221 seconds)
  done (took 229.030337057 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.841025943 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.836652278 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.837305282 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.836636601 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.837438213 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.83865632 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.837671979 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.837585989 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.838430211 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.836163471 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.837423664 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.840015902 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.840611913 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.842691057 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.883206971 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.841157625 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.439795578 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.839757461 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.839904468 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.837713874 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.480263709 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.84455843 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.839321171 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.839762911 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.839234997 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.839797544 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.843953299 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.889271563 seconds)
  done (took 166.605227741 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.838263083 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.956513817 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.856073869 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.864836293 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.841600899 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.838173933 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.938282267 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.853244329 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.841082623 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.833434402 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.835161737 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.892541411 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.84240068 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.93085747 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.863509145 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.940240346 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.938416569 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.841683901 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.833579381 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.834641911 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.86349612 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.842057742 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.894464633 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.955055355 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.853648661 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.946994083 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.855420891 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.835098772 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.833998666 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.947515591 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.852680821 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.895879114 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.863474889 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.853231032 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.953337149 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.950701583 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.936509789 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.936718402 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.839500083 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.835569358 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.834583753 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.837993094 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.948543082 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.852950884 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.837454478 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.951659658 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.855324288 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.836248366 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.836110037 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.835563767 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.851038245 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.854833009 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.901427895 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.964737951 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.871438655 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.858882316 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.935886001 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.971989961 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.839926498 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.936413565 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.845137123 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.949650791 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.856136652 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.838972744 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.839752399 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.843758709 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.866359167 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.940520178 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.940129344 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.84360238 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.936719506 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.870629939 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.84733674 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.838037928 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.837223847 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.94919147 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.955186718 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.870795949 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.871929205 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.869398296 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.848579188 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.837220092 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.841957757 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.856079289 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.845572978 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.951899001 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.955252394 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.844594066 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.839000496 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.837864654 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.838136966 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.862160178 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.960354468 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.874690212 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.946895369 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.900953248 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.910357082 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.852076171 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.850960894 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.843170919 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.901225367 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.853917581 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.852304935 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.170593037 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.899690412 seconds)
  done (took 199.326346083 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.218774537 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.883515327 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.897907116 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.1613984 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.229038121 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.796719508 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.885984026 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.890764289 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.920492914 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.113414003 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.960362487 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.906084091 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.870929813 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.861273042 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.885553398 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.921894206 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.893941423 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.222052848 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.105044128 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.385417608 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.875143214 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.171446808 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.221032379 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.464994156 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.932890775 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.284253613 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.480314598 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.052623923 seconds)
  done (took 62.26622472 seconds)
done (took 809.913415308 seconds)
SAVING RESULT...
DONE!
