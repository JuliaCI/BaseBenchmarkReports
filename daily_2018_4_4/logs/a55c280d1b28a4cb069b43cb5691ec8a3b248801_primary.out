cset: moving following pidspec: 25279
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.562748932 seconds)
loading group "string"... done (took 0.524421722 seconds)
loading group "linalg"... done (took 9.444500654 seconds)
loading group "parallel"... done (took 0.169839334 seconds)
loading group "find"... done (took 4.497353008 seconds)
loading group "tuple"... done (took 2.065916869 seconds)
loading group "dates"... done (took 1.378037164 seconds)
loading group "micro"... done (took 0.196373199 seconds)
loading group "io"... done (took 0.516759439 seconds)
loading group "scalar"... done (took 57.151004955 seconds)
loading group "sparse"... done (took 13.73870901 seconds)
loading group "broadcast"... done (took 1.726507066 seconds)
loading group "union"... done (took 10.588737944 seconds)
loading group "simd"... done (took 3.574665984 seconds)
loading group "random"... done (took 13.171298191 seconds)
loading group "problem"... done (took 2.240947014 seconds)
loading group "array"... done (took 24.35873907 seconds)
loading group "misc"... done (took 1.166140332 seconds)
loading group "sort"... done (took 3.706749068 seconds)
loading group "collection"... done (took 21.942850661 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.701105899 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.208046584 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.176004008 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.224508141 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.275615016 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166542261 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159588021 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.170873478 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.57304787 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.20871061 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.136422334 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.416889517 seconds)
done (took 6.190512297 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.260914066 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.241863055 seconds)
    (2/2) benchmarking "String"...
    done (took 0.19016042 seconds)
  done (took 1.150946567 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077217018 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157456997 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109040474 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.09583184 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094093208 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109192295 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094568066 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.11072812 seconds)
  done (took 1.496260601 seconds)
done (took 3.7131125 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.520951784 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.877163058 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.501663126 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.182417306 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.317557292 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.307921111 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.266321189 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.223951673 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.091328291 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.086849024 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176672344 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.451488372 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.387270005 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.000500054 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.068710854 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093027411 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.154412263 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.809808913 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.077860264 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109195639 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.531051157 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.213143978 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115101871 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106817013 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185131247 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133163064 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.141029145 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101541021 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.660912392 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131852692 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.215396781 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.08276541 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.137473227 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.164800922 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.212622256 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109204603 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.667919853 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.199040491 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098786458 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.10128088 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.709326021 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.116841903 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.205918028 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106289204 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068972885 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.16179382 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.102749803 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.09222152 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093735644 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.08580407 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.163639908 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.454396381 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105047273 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.191935545 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093547947 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.69320911 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096481768 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.279088803 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124687702 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.092607057 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.09019309 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.086566851 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.155259273 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095098336 seconds)
  done (took 20.236080406 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.166509355 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.186105821 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077622594 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.156699353 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.121047949 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097113431 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084935538 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078127665 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126710665 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176759148 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.143204218 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.171740374 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094247903 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090209051 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.168879225 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.23022203 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.124325091 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103225294 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.08831436 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.107263437 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12273533 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095740242 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108117347 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091360526 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170802816 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203145124 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108446492 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123094078 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.08834056 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094977816 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141665139 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143496654 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091717212 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08866293 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171362942 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122375345 seconds)
  done (took 5.301962877 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.243377786 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105908639 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.248829118 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.200415013 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.152807877 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.18276865 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.175401444 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.297620265 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.24007158 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161959302 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.207891719 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083172001 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128666569 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.096391218 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07916026 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080369085 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097923296 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.33273901 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.192504886 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.173216489 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.187767524 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09760698 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098902368 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.723486032 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103803011 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.0869492 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.11112073 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065727099 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.227624394 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096079347 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.075655187 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083730544 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.123838597 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115380541 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.208380572 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123356978 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120222786 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113574927 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.088105235 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.223877257 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.120246842 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08400535 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078401373 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.13484728 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11666582 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.129487733 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.093988777 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.127028667 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221489207 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.086981714 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.131328581 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.028657409 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196594563 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.158410376 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.084554547 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.290250811 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.127691864 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101505821 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.111063734 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.784154615 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.128171891 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082459822 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078597781 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.112956453 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07905572 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.811840705 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.128893872 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.520154024 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08201649 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.15774887 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097942525 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.120179714 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088346673 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100342506 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.110791923 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.08735012 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.096577808 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.087839238 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079131498 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.107951754 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114032077 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100328973 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081734874 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146932116 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.09826289 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.125868483 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109622164 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.105063622 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.087022539 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127992998 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081771031 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.089860608 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.186689395 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098301459 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.132803481 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114345193 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128645826 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.104882217 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.266070489 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083267766 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121546319 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101731367 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128108837 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.100520898 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08069041 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101598864 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079504382 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081322208 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159287465 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.087760318 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08146626 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.105572663 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.085834363 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.093018675 seconds)
  done (took 29.577075014 seconds)
done (took 55.835857166 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.42580454 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083149473 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083046233 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103382867 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081705544 seconds)
  done (took 1.579336967 seconds)
done (took 2.360511065 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.314767771 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.201337586 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086535333 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.191480491 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086858224 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.196415478 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.183894066 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.100491753 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.206042917 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084862279 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.191570582 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086755693 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10514041 seconds)
  done (took 2.836951597 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103871327 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105335128 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101220619 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119487284 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085680168 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100848544 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11869748 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108237573 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102632258 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113078048 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084968711 seconds)
  done (took 1.920153183 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100826347 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103411652 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.091211673 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117098903 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085534196 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098292253 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116304322 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105217883 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098750057 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112091384 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085954547 seconds)
  done (took 1.893879568 seconds)
done (took 7.42525504 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.224206452 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.030566814 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.190341707 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.245038124 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.351527743 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.297567037 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.613890101 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.199354962 seconds)
  done (took 16.065723724 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.198496927 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.110028823 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.095403418 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095087691 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.114444613 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.089509549 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09413435 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.111409446 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091748739 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.095890432 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.094896393 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.112806698 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090901834 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090251636 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.11113085 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.091014061 seconds)
  done (took 2.528076853 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.143444983 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.124014366 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.115539836 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098440111 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.113699362 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098209522 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101865501 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.116108499 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.093880382 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09463563 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.102179124 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.114413904 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098719454 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.093787206 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.11436172 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118308754 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.093496792 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.114350797 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.115385679 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.115623241 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.098229781 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097558177 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.11369009 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098041621 seconds)
  done (took 3.45259629 seconds)
done (took 22.831076193 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148317307 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101643434 seconds)
  done (took 1.033723858 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.164537567 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.182639507 seconds)
  done (took 1.135563439 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111499564 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090504305 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138097047 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.104217527 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.089843134 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.107990364 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116866063 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.107628541 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.090817106 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.09121607 seconds)
  done (took 1.842478582 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.093721314 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094395275 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.122596313 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.166624717 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.117573685 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.092596275 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094838886 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.112745491 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.095798405 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090131643 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.114346034 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.1099907 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.095704476 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127210106 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096326705 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.096324154 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.117586131 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094559007 seconds)
  done (took 2.726051582 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091200573 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.091911972 seconds)
  done (took 0.97740643 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092997033 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090394675 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092557549 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109205971 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090932353 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089837642 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.107994007 seconds)
  done (took 1.468578484 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.527363169 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.236654617 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.373205104 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073211342 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.124916682 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.451636232 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.105685796 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073304938 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092686631 seconds)
  done (took 2.888583475 seconds)
done (took 12.863556306 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092223441 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.241862295 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.63707005 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112503565 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089918282 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.160991927 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.319616034 seconds)
done (took 2.45602699 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.3503748 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.164543264 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085174324 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090465827 seconds)
  done (took 1.487781547 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080876428 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098852075 seconds)
  done (took 0.987552875 seconds)
done (took 3.282959091 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088852593 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.088153978 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.139068013 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.089166533 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.089609528 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.088721202 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.10891285 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.089513548 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.089788442 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.089831622 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.107872023 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.088437246 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088236834 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106014648 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088553303 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088804079 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.088500218 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106104603 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088334636 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088341256 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105158374 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088035788 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088899231 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088551495 seconds)
  done (took 3.112743301 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110473964 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091659499 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.110855609 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093922149 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093107504 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.110596441 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094133991 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09179053 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.111073723 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092560448 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093051032 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.094140093 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.109127082 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094895919 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090560836 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.112619047 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094434551 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090497304 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108810083 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094455531 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.093446664 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108426876 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.093768362 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09270243 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.110903223 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095569571 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.090740303 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.109426842 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095513327 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094787369 seconds)
  done (took 3.776538723 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097333768 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087377857 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088436569 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115364063 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.08687337 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090702935 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.10440966 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08978326 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09022625 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089170491 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109584416 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090118788 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.088790935 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.10782353 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091239581 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092791135 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.097377376 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.107453215 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.089504797 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09029612 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.111217376 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089592208 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089656851 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.088786402 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.107773351 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087140201 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090041788 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.107144864 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090358123 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090911758 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.09129391 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.109942266 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.090400991 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.09918209 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.110186329 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089154987 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095280842 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.104408224 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.090562998 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08639154 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.085539138 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.107063469 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090573065 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.095567562 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.107646572 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090575218 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090687739 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.090631375 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.108281042 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092745837 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.085706781 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.106011878 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091955942 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090700195 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.092679325 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.104368004 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090767354 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.085112741 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.108350688 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089823961 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.087104537 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.085764225 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.111923249 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090164396 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.104299099 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.114736339 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089633736 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.091001093 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.109026148 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095049628 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.092287943 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.117364357 seconds)
  done (took 7.73016555 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.113056426 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09791236 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109198365 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091538216 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090657216 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089261832 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113442315 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090413775 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091357049 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11420342 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090813102 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090695874 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107551955 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092167862 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090852294 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091225631 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113802116 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091403288 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.091768589 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108672129 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090931103 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094799178 seconds)
  done (took 2.965990107 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.240478743 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096856032 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141231406 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122990819 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108944972 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121318563 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095869047 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095812096 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113037574 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099430109 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100095965 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11246178 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109099819 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099893872 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11831247 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101345574 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113000048 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101983378 seconds)
  done (took 2.906181852 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103840002 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092857692 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.154897042 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093686922 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.091832279 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.11078658 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098818015 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.1118372 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.111735344 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092712708 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100168803 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111612788 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093747939 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093189968 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110383024 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.093217257 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092734043 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092279326 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118733743 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098765326 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097327378 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117473825 seconds)
  done (took 3.097646728 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109216463 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092873139 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.128858006 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096650947 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091418224 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.090860857 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.117661301 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092417977 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.098447309 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.112289695 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09379421 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092212143 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125553128 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092641969 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098069678 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110625485 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09479189 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093337507 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110348259 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091816881 seconds)
  done (took 2.850123565 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.195771399 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128358217 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109239786 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116420503 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12832441 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107889645 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13535414 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108333924 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108515449 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137700155 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112479991 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108245449 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135731598 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113017422 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12522336 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11712852 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116156497 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134056033 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107814582 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126258886 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121462999 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108541551 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134701021 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108467205 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107655802 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127532868 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109088493 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131928411 seconds)
  done (took 4.240680549 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09156059 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090897477 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090803705 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.109280099 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090709554 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090687844 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.089196475 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.109707103 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091237389 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090319716 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.109159534 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09110322 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090877438 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.091556543 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.108606602 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09187221 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090546281 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.108585676 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090368529 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090321802 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091587857 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108011005 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090729553 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09051719 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09008768 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.10929238 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091206673 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090587407 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110128761 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091111357 seconds)
  done (took 3.688125543 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.104652508 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103087232 seconds)
  done (took 1.031445646 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099056934 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106104717 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.089665407 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110689501 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099416696 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090849007 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119146787 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098938107 seconds)
  done (took 1.639405362 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.167973059 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.189797981 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097816753 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.122740326 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.170646954 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.182215329 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129387575 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.115675246 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.091195039 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084744227 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.184469207 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082986543 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.11224823 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089546721 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091812878 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118514634 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.093093783 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101371918 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.118680183 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.093940624 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096631781 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11626996 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095147603 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102113662 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.10592142 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095908672 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096034723 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.120970716 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090739796 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094065021 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.108964414 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092517843 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.094841546 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096337904 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.112405859 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.171064196 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120190525 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08956952 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092482419 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117792524 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126389884 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091741152 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.114561878 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092851906 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094674655 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.115308418 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.09813905 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.0927418 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.103365983 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088377988 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093287155 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106116087 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092510913 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093120137 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092042752 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118502549 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094496762 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088194299 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.10739495 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088398418 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089953443 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107549591 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094730091 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094666735 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112752414 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093475251 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091026871 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.110695731 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094998312 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.093908244 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.11009305 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109132985 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093275114 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.115773724 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098526354 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.094502256 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107815424 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098598168 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09138121 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.112382985 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.097759863 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120592058 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112866882 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089855337 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089073099 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.098384727 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.113617201 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095294766 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08493365 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119093217 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.094848495 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094768017 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.104024649 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.09117777 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08874244 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.114695879 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.085219752 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093703442 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091330223 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.11545901 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097971844 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090450215 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112878879 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098528722 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098962963 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110469597 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.156928547 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10988134 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088458771 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094017356 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116379376 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086616553 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091429284 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091261197 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110321718 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089477111 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.09634328 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111166575 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.09483403 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.097806922 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114461502 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095106116 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094960783 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.110800296 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090380587 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.097248946 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119305429 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095557207 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.09469631 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093688532 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.112555814 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093538008 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.096750043 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.108959978 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098681956 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089857165 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.111238951 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094705333 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.097738189 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.112000614 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089772085 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.092346291 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.111512048 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093387505 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.096447407 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.093035912 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.108997524 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085811578 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092945218 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.108307708 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094560969 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101450533 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.108164675 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.096324741 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089641809 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121048334 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.091453481 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.098053613 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.114577204 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100479676 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098639434 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084715303 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112272416 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097229401 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.09455427 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.110890985 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094674289 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.092176455 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.120260491 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.087978005 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.096465896 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.105880575 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.09120109 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.10009306 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.093589103 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.115454743 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.09009437 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.130204425 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.124641147 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098461661 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093345219 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111504064 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.097652406 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.09236336 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.116854479 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099537369 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098425062 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109910839 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.09250421 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097872452 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108807603 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095504331 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0914765 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093537548 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.105585129 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095062255 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085318752 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.116845366 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.09632626 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.097939189 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.117270526 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096165849 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091809112 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121723719 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090841633 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097021134 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085359745 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.117712888 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103725266 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.100445233 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118396243 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095996909 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091203547 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.115157139 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10393188 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096366975 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.113142891 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096291814 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087790337 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087817635 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.11863409 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097169846 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088697655 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.112691137 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099345037 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095058296 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.110863811 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087092637 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.107249558 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116428699 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091136743 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094035923 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.108539447 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092830913 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100525684 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.10576613 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091143388 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096290245 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.098503455 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.114817377 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093638181 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.096209411 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.12002953 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.09715835 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096083315 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111063795 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102098218 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09199839 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.112090088 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091654015 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.09767703 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.087426728 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.115304457 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.096104308 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090777031 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.109295542 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098229717 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099244321 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.119315519 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092690356 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.09826816 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.118906013 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100004298 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091867086 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.108184762 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.109968981 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08757334 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090363929 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.1071096 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095676905 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090144331 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.11781767 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.09346701 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093174265 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.116629402 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097041908 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091548858 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.117625283 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106019462 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087774129 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.106358004 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093252119 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093282408 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.108957588 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.092439603 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096532649 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094360638 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.118794857 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096580627 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089960368 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.113883354 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.099546533 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090827047 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.120532498 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100414034 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.09990199 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.108443862 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100341954 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091791689 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116888421 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.0882281 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095131197 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093572433 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114595615 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091467557 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.092517715 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.111320601 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087410081 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.09087741 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.119703539 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.093330737 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098713897 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.114424531 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092717812 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090646258 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10982841 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100741484 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093181786 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.099854817 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.115258136 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.088952213 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087607617 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.118661158 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095165187 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.099619061 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.110408704 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098150077 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100759162 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.09781449 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.115483457 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.102696186 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101877564 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.120191073 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10004805 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087140478 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.114088451 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099465109 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094387646 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.118146189 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098211494 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087971387 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115714099 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101228366 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095274767 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.112687761 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088520642 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094998718 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100589358 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.118032053 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098425396 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097215756 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115085673 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.09179595 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098517756 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.099345186 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.114726722 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101235115 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092975476 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.119072693 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092148683 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.099130277 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.116201734 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089086899 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.087871614 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.111834054 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101506413 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.088693315 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099118417 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.119450277 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091218937 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.091499467 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.119397579 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091430221 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09766321 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120753965 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093597731 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104447777 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.116576037 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093450014 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.099388961 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.119051374 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08917109 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093057149 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092780219 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123538678 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092777455 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.099822461 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114934846 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099989478 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097759218 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.120125708 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101339627 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.099846209 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.107930685 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101612752 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097156418 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.096682558 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.11260812 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093369147 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089588654 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.113285187 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101425594 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.091974631 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122427785 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101663526 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092825759 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111856644 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10078339 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093232547 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.120629843 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092730123 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096616577 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.088450841 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.117428927 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093776753 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.100867338 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.113095556 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089463505 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09960192 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.119792033 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100064006 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097429552 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.121424178 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.090727224 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088197051 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.09736742 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.112935599 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104951282 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097401659 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.113925929 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093630498 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097849647 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.11710287 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102180859 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088843983 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.110863703 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096329217 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09659231 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.111796218 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.091252048 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099241155 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093556748 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117903009 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.094379392 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.088712008 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.11573109 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102306312 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.093190777 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.111074312 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.092588762 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101841457 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.114709138 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.092429296 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.090090469 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120681195 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097940813 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102773064 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.111128468 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.097353234 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.093622169 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096744302 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.121817074 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.093579974 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093972784 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.114265367 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101817482 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100585462 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.109026698 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.09303445 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105277333 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120699762 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097699459 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096832568 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.113825852 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102860134 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102390279 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.09653266 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.111101256 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.090534505 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.093237021 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.110315559 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098135872 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100347731 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114095325 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.093040992 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099288338 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119208676 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.100294075 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097051829 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089086829 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122319695 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092249102 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097341227 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.110071028 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.090277504 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097240158 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120239565 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095315164 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.095587848 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.095468713 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.119225518 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.090291394 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092636004 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.119084078 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099767854 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101514567 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114725096 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.094633229 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.101071865 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124874829 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098174566 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095962036 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12250229 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102461841 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095608083 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095405979 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.120651613 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.10251456 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097473262 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.123201625 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094696022 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094510084 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.123446044 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102607954 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10423869 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115810531 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090144286 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099300711 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.112654019 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.09109952 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.098703159 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12359476 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103233773 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095170225 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091733359 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.125374298 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10015549 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09510573 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.113621656 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093915453 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.098763566 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114484608 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100175277 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092740765 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.123398233 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102320918 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101238382 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.124010186 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091333317 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100530971 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.118090829 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103715094 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097311705 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089736706 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.111426519 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098167586 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.101836447 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.121598031 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100856451 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099530845 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.098142281 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.118617767 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097613116 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.093047536 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.123134939 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102893923 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095558752 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.117146699 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095122007 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09539559 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.11761152 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101558929 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.101177537 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.116649468 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107098811 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.101256144 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.092489996 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.113784196 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096497025 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098206093 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.117559558 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100858129 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092103077 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.109552722 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101159011 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102732692 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115168792 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10392428 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103290349 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.093010177 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.118995271 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103171139 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100197128 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.120494441 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.098192824 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098602083 seconds)
  done (took 62.019902974 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144861244 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103436669 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118757483 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097447026 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114784251 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120113893 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098415166 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099363034 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119161253 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108314083 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097651338 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117705784 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114164346 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118917647 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135774119 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107079272 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117554244 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100534451 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097867701 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098379444 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133701069 seconds)
  done (took 3.242465875 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.115775401 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110932104 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130491473 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112819615 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104496336 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.130136659 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109748486 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129766829 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112510376 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106172025 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133586582 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109078653 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.126450075 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107353679 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107172157 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126906446 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112916351 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105628708 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130155351 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109679587 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105962401 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.130236832 seconds)
  done (took 3.443233725 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.127950314 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101926653 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096203753 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.11922927 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101398524 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097154071 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122393746 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098856529 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.10700302 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.094028094 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.111032981 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093947997 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096647728 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.119966675 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094125089 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097699567 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126617209 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101789363 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104172697 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.096448265 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.111491733 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099228068 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098122736 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109755127 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104751659 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103496105 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.097641074 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.12380391 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089980966 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100632539 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.120550239 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094180787 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089179373 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088093134 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.109494025 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.10125926 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100475677 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.119057512 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099643936 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089417215 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.097778859 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.125000412 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.091175454 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.098599389 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.119854506 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093680381 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101054376 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.117546928 seconds)
  done (took 5.88413961 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127486082 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.40416292 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.1039683 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135542005 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.136617265 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107409543 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.09974855 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.137234339 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099673174 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.122999954 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.1137214 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.111179103 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125718503 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106376077 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.103021864 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.12533911 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103993819 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100104366 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.12660643 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102400211 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.105608066 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.1249874 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111479909 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.130489128 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104792251 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101326643 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12098352 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105258621 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.111067813 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.126399216 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105815254 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106223648 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.132405333 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.100998043 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10172371 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.124479441 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.114342411 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.100209995 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.12468507 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100725509 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.101725044 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126053071 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103061312 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.112758482 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.124506518 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104783732 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102262714 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.120029598 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111451837 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.122437191 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.108817623 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.113532811 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.123857471 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103075366 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104459008 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.133229585 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103240049 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.099922901 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.125075432 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.111604054 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101169596 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.126516387 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.112434055 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103620496 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.129692529 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.112488388 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.123285968 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10502341 seconds)
  done (took 9.036699343 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132459788 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106521659 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134739175 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114357533 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105138567 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127751956 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106820539 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.10574265 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127429494 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111579041 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126303644 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.22606099 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.12624559 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111024471 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105093841 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.129240923 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106592415 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106711119 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.128765778 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105753957 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.125546492 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.114578544 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106866031 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134607741 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118715544 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102862076 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.129223089 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106971914 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135308023 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108029598 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117911591 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.127185816 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107511397 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114696506 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.142090983 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106804658 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100147291 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12983403 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107666369 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126967551 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105452152 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114600023 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.127939706 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105261422 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106957018 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127596805 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115302267 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.118146559 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.132562675 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111779508 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.127902813 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116328589 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107240607 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.127393983 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115724705 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.141937207 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115651529 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114012911 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126983476 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116022482 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115003066 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.143314567 seconds)
  done (took 8.331570026 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101017169 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099409687 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098998767 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120382833 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100658925 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099931634 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098479711 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.121364059 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100577802 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.0991517 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120217705 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100273822 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099599285 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099437671 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120432817 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099812282 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098950446 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119963274 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100540273 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100080349 seconds)
  done (took 2.993877397 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108703903 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.11747688 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123035975 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108534731 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.102026478 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128534006 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103320038 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101477327 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10096025 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12521981 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111511495 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108911798 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123460108 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108132358 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130225981 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108663402 seconds)
  done (took 2.705976338 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120545679 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116949087 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.211721268 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104564987 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124665087 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108883772 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102390036 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.127771022 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101608235 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107167404 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.128174039 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105727728 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103505768 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102865287 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.12527485 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105139073 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101186767 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128554484 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103725916 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.216597913 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105742742 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104320132 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.125926419 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105886496 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104363709 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129593448 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109006315 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102181118 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.125020234 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103622628 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10540791 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.130236272 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102434967 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107772805 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102950726 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.125801319 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102973638 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102145788 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.126834665 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10385619 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104053974 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124500552 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.105036493 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104866307 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.122065482 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104552995 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101037347 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.107550196 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.1268346 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.10638867 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101726088 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.129999888 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108272144 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.10948169 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.131567453 seconds)
  done (took 7.25872171 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114634729 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104754124 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.134718522 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101476398 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103173548 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103095389 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.126147517 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105627201 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102961647 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123328614 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104638933 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10431401 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125435305 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105707945 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105001863 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124669759 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101192136 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104793324 seconds)
  done (took 2.893899726 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108221024 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103293943 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105301424 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.124656256 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103268295 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101926497 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124175261 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100901809 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101525021 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10169196 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.124771402 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103249058 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10132618 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.124516519 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103983965 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102275905 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124141638 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101741897 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102307767 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100664171 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12350947 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10269127 seconds)
  done (took 3.29402583 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.114653659 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.213916385 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109073377 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.224078636 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099185003 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097924166 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.134087083 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100231959 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.137909166 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.099730974 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098262715 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.12052831 seconds)
  done (took 2.454124944 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130363505 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140156974 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125654478 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10546933 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112086596 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129929184 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10792919 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107030178 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137836309 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119432844 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129598285 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116024897 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114799169 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136459516 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112607783 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133245185 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10985484 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107123946 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123844582 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123380857 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107220998 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137963147 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107946656 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106758391 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129708936 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115583543 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136397301 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120303038 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106946761 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138373557 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112800957 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10650897 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138247951 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11805754 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126705655 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11829789 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107380402 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144701973 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112908904 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137964138 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105031209 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110662245 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137758723 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11282068 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115059722 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130237257 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113005359 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128902049 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109419932 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127709315 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134860481 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115517058 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134384895 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117210099 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115128211 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151154886 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120173028 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136777352 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112871812 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139746583 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116495268 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110971101 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137838252 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119052648 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133157534 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116537153 seconds)
  done (took 8.960415412 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142972234 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105074618 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13019353 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119878255 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115302039 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131936097 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107997986 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130004725 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109447995 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105525347 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172667457 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109682892 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115671691 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137834943 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108858888 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130183195 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109951894 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11607139 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127392477 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128449743 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107624843 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139910083 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116388413 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137313978 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120048575 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134041516 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10915033 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107926306 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129741211 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110108811 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113448504 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130848255 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117320796 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104115209 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136531558 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107466358 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108203233 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136773382 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108113241 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134126254 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117181824 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121225365 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129994702 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108774753 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140289001 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109467898 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108302731 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128968177 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10940741 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105348125 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140412277 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119884813 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140689371 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117823253 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108731867 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129070079 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109664455 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108599944 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131378992 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112938146 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116606597 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131156629 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129565508 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130892077 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109103538 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117342331 seconds)
  done (took 8.911585636 seconds)
done (took 169.277588488 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.175768698 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.219172533 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.196254597 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.155203044 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.119957992 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.130444742 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.12638011 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.199387628 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.094411718 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.117846973 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.095179333 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096929369 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.184782452 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.095763253 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.095004773 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.096160258 seconds)
  done (took 3.105514891 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.184264194 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.333979842 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108427285 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.122692304 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10249725 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099358434 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.12093531 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101220506 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098395209 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.130170651 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100380994 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094882692 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129373271 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09657127 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09919063 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120104123 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107294479 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098824333 seconds)
  done (took 3.168815893 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120082421 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144435792 seconds)
  done (took 1.184846942 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130309543 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.217572601 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.28406974 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170609167 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120768959 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140726098 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149671571 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133329683 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.19167095 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.135416889 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113052905 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096823261 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148556984 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105509164 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114313282 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121114573 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.129050993 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134895305 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114117073 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101572212 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144561847 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103876149 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.106227327 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.13606989 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180085701 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133930719 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104204984 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102912488 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123951695 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113924028 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106321994 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.140754199 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111094681 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.180489931 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103274056 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175953644 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.10688975 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.1230933 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114720733 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099656984 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.12772068 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.10395972 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.133523499 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099027444 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104041015 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.105251892 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.126764245 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102689966 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.128675189 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109575442 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.10799457 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.129380313 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153143463 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.129797629 seconds)
  done (took 7.946617832 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.878138143 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.140178058 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098726487 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.022689458 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146315352 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113079117 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.869597111 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.147178158 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252272752 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.869955086 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116035574 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107126619 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.260254178 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.25651697 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.28759848 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360144017 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.733315007 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113277822 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129189336 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164241452 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107475985 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144520316 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121033721 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.518985179 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100047711 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099059433 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.13124558 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108985905 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177885842 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101232065 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.10314899 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197682163 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.291589414 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209485746 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099489519 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121239764 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100024798 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.184092828 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273592095 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.223286509 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.171593239 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11960509 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099313926 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.106361073 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.141971674 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097049719 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178725009 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.188772153 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.167376946 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.126284637 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107979275 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110798123 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130674032 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.175197212 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098036473 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.357610064 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.359551626 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.122089556 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109763884 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111545009 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266402919 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124154367 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236623937 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127098798 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215437056 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122415418 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.840332913 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.162156344 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122238888 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105008239 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10598056 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129605893 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.106547495 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.190876392 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.479730028 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133595085 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105022225 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099240403 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.232584814 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.122827024 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100890964 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180319699 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101705483 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108746674 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136011906 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109022299 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.188859911 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.27028951 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.110240227 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107775301 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12885623 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114604801 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100604056 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.233403658 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226555203 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.175794925 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.230398392 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108855296 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.179653195 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185456289 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10502753 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.189937172 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107549214 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134962332 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108913954 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224871348 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.154481393 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10264814 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105915886 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.132401405 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.13530007 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126521209 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.110456914 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.187011493 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.558014369 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.162625663 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.118366864 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106793498 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110158818 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180711674 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106610113 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263276447 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132942006 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.162073015 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131358456 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.09727386 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108499886 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.178501525 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131215161 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109411551 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108076866 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132883915 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.255792211 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.24294679 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111059032 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.252066885 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.195365859 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107175537 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190870263 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109521938 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188048048 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111510563 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107123045 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125257348 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.831922241 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113640617 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.13145583 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108660648 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.204862409 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101445154 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10351689 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100048286 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121384367 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.816407926 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106786567 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.097316584 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.126096481 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.106837973 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108055722 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13194689 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.105721212 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180420384 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244583419 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10951933 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131718617 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100843772 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.179465009 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103102376 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100307553 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124574287 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102248585 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109138658 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129613604 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103310806 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.18985504 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.174102446 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.230674645 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.639644741 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101194171 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100867142 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.261887534 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102633275 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.328779079 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108547519 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.256033949 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162404617 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.119726912 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360312132 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.185340127 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.18568158 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10343725 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.188980172 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097565159 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.133057094 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.176932612 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101797134 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107794448 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.176729994 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.113092411 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.133640004 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.283966675 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101057383 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252394097 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.097693946 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.18856904 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100732342 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129319828 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327962624 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101308333 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137338989 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.155476399 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127713895 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102755674 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.675348969 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102382446 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111940206 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129848755 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234034267 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184456751 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110809075 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132375944 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111609003 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.178689552 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.205075246 seconds)
  done (took 47.700600406 seconds)
done (took 64.024686379 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.270695035 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177731267 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.281034982 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.179372649 seconds)
  done (took 1.926471646 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.276564361 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.161175521 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.256814822 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097876392 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.262789538 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.096845672 seconds)
  done (took 2.100488449 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.177423169 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.170340595 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147700046 seconds)
  done (took 1.448342131 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202263426 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.216954793 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.329790925 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.232346095 seconds)
  done (took 2.019805743 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.296119854 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118253892 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124375831 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.237115255 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.254518558 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.213772328 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.124966157 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.178890647 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.128812521 seconds)
  done (took 2.669444209 seconds)
done (took 11.116783935 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.166601211 seconds)
    (2/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.438481498 seconds)
    (3/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.312921821 seconds)
    (4/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.316576631 seconds)
    (5/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.39724386 seconds)
    (6/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.226080609 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.194850689 seconds)
    (8/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.409065765 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.114115906 seconds)
    (10/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.105928745 seconds)
    (11/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.29334631 seconds)
    (12/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.116470909 seconds)
    (13/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.377363303 seconds)
    (14/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.333687427 seconds)
    (15/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.188543141 seconds)
    (16/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.132930572 seconds)
    (17/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.099863293 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.153410129 seconds)
    (19/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.379441502 seconds)
    (20/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.168185629 seconds)
    (21/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.207373546 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.163856652 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.120346218 seconds)
    (24/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.087473473 seconds)
    (25/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.136304537 seconds)
    (26/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.207716823 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.121305915 seconds)
    (28/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.157646143 seconds)
    (29/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.223716884 seconds)
    (30/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.136029181 seconds)
    (31/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.141418292 seconds)
    (32/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.130778062 seconds)
    (33/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.176946987 seconds)
    (34/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112194831 seconds)
    (35/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.34767416 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.144497281 seconds)
    (37/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.191083985 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.119895566 seconds)
    (39/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.079311298 seconds)
    (40/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.160186282 seconds)
    (41/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.200152888 seconds)
    (42/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.221408831 seconds)
    (43/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.123818948 seconds)
    (44/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.250529597 seconds)
    (45/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.110508209 seconds)
    (46/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.149006389 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.102568425 seconds)
    (48/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.168727298 seconds)
    (49/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.196320722 seconds)
    (50/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.159425592 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.103479471 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.102916872 seconds)
    (53/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.152492405 seconds)
    (54/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.088150032 seconds)
    (55/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110073223 seconds)
    (56/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.382812351 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.101952243 seconds)
    (58/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.148673145 seconds)
    (59/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.107511996 seconds)
    (60/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.079434587 seconds)
    (61/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.078744693 seconds)
    (62/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.111778189 seconds)
    (63/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.112128844 seconds)
    (64/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.086953601 seconds)
    (65/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.084832381 seconds)
    (66/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.266975544 seconds)
    (67/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111805123 seconds)
    (68/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.103400918 seconds)
    (69/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.214568157 seconds)
    (70/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.135363716 seconds)
    (71/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.135094569 seconds)
    (72/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.110245159 seconds)
    (73/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.122583246 seconds)
    (74/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.110631126 seconds)
    (75/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.177094593 seconds)
    (76/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.106482397 seconds)
    (77/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.214290066 seconds)
    (78/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.1235447 seconds)
    (79/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.223195989 seconds)
    (80/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.088361594 seconds)
    (81/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.107958793 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.113520373 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.126713108 seconds)
    (84/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.086194562 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.109746005 seconds)
    (86/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.082305391 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.125936181 seconds)
    (88/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111952441 seconds)
    (89/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.108846229 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.128216179 seconds)
    (91/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.121476209 seconds)
    (92/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.134567903 seconds)
    (93/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.157800447 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.10455105 seconds)
    (95/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127120312 seconds)
    (96/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.10894013 seconds)
    (97/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.083123115 seconds)
    (98/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.080359645 seconds)
    (99/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.086558742 seconds)
    (100/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.150611808 seconds)
    (101/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.111108369 seconds)
    (102/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.079849145 seconds)
    (103/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.079851555 seconds)
    (104/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.15021442 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.126453409 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.103922855 seconds)
    (107/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109365416 seconds)
    (108/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.087599302 seconds)
    (109/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.169259511 seconds)
    (110/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.082021502 seconds)
    (111/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.1975183 seconds)
    (112/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.158286974 seconds)
    (113/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110027078 seconds)
    (114/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.206364155 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104183765 seconds)
    (116/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.08494468 seconds)
    (117/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.109705699 seconds)
    (118/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.130429152 seconds)
    (119/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117983715 seconds)
    (120/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.109607592 seconds)
    (121/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.217170715 seconds)
    (122/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.080266538 seconds)
    (123/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.112654618 seconds)
    (124/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.146622435 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.104235317 seconds)
    (126/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.122684578 seconds)
    (127/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.174414967 seconds)
    (128/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.104665607 seconds)
    (129/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.078881832 seconds)
    (130/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.086168041 seconds)
    (131/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.233701419 seconds)
    (132/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.099956695 seconds)
    (133/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.163794252 seconds)
    (134/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.103890111 seconds)
    (135/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.086074697 seconds)
    (136/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.085846949 seconds)
    (137/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.136516763 seconds)
    (138/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.08300758 seconds)
    (139/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.100607355 seconds)
    (140/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.07896788 seconds)
    (141/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.20472374 seconds)
    (142/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.086254078 seconds)
    (143/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.081723643 seconds)
    (144/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.126669371 seconds)
    (145/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11084288 seconds)
    (146/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.079999849 seconds)
    (147/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.08677668 seconds)
    (148/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.125826827 seconds)
    (149/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.082780408 seconds)
    (150/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.079806268 seconds)
    (151/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.079572751 seconds)
    (152/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.109315166 seconds)
    (153/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.15934327 seconds)
    (154/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.112823537 seconds)
    (155/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.079345639 seconds)
    (156/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.081461328 seconds)
    (157/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.160731225 seconds)
    (158/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.08264274 seconds)
    (159/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.144521295 seconds)
    (160/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.078455396 seconds)
    (161/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.106790895 seconds)
    (162/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.102034711 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.101055167 seconds)
    (164/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.128196233 seconds)
    (165/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.080535881 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.110155462 seconds)
    (167/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.079356046 seconds)
    (168/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.086339555 seconds)
    (169/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.107498578 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.125916731 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.104370685 seconds)
    (172/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.082249334 seconds)
    (173/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.107415737 seconds)
    (174/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.083800326 seconds)
    (175/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.08511791 seconds)
    (176/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.082145103 seconds)
    (177/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.126360646 seconds)
    (178/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.087285564 seconds)
    (179/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.079515273 seconds)
    (180/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.0939131 seconds)
    (181/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.085830585 seconds)
    (182/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.111426815 seconds)
    (183/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.086626844 seconds)
    (184/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.086921652 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123975946 seconds)
    (186/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.109820442 seconds)
    (187/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.081064323 seconds)
    (188/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.081445274 seconds)
    (189/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.082227737 seconds)
    (190/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.080464143 seconds)
    (191/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.133405827 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.10559219 seconds)
  done (took 27.420343897 seconds)
done (took 28.378657448 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.226387388 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130855609 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111658982 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.111292701 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.233682922 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118395597 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.153754661 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114315906 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.12089177 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.135809696 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102697468 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124355162 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.136781304 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.204755748 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.139636509 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.103902761 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102933917 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.147470651 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.128440595 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.128517481 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.234780108 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103884174 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.146289649 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.104216878 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.23386564 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104938604 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111478025 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.138234926 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127541631 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112407228 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.13741201 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.104057464 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.128832471 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.151390052 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103279705 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112244201 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101711135 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.110886452 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.114221146 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113160537 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.147921147 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.113596727 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111474058 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.127112597 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114447731 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112180073 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101548351 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.14114254 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.103218191 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.11227833 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130318613 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128243182 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110187575 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.125971966 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102410065 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103756897 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.146125395 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103580094 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124615204 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126813928 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105044428 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102778576 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112267543 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126845216 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112971648 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102779255 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.136656675 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116432279 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112012095 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128500866 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103190175 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111253954 seconds)
done (took 10.121474937 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108572819 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148758412 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.234247082 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.237522778 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131499722 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.146950675 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117238236 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126791218 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.141959518 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122878093 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.140207365 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.159942116 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.240061471 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.120332923 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119874966 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.140493933 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114469389 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111340071 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.240631691 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126800684 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.154288301 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119370924 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.154346635 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.120148972 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106849452 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.165513087 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.110577402 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115235931 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.131301436 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.117609423 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.126845667 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.130154078 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.110752521 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.12509197 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.148121314 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118181093 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.1200483 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.138677058 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.10810204 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107248795 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139862078 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.126158069 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10630835 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.143736576 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115403343 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.1220397 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.138612279 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120369482 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.109372701 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.138683818 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109218784 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131572487 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.144665247 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12543654 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.119410715 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.14461201 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119972044 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.11825544 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.134932207 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.120759782 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.107331098 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.131186439 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108779249 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.128405688 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.134796691 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119890203 seconds)
  done (took 9.806698732 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125447765 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136963986 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141863673 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.118123912 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112883392 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125464181 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101052486 seconds)
  done (took 1.866708212 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102833399 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.244269027 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.218125294 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.243847726 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.240473234 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.256399271 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127350218 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102689025 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.167691566 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114328774 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.246729414 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.274207847 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.113634711 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.118553214 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.248269935 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.128153273 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.222576024 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.130652174 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117301447 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.247210187 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121246881 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.159964301 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116696011 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.104225926 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.239234093 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.105145474 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.293470704 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.148152518 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113755616 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.117654614 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117828609 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.210801136 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.242768145 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118349072 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.136547803 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.218267677 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.241711995 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117320859 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.259396167 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.134541392 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.21616043 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.144766791 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.119553724 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.118032874 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.145381459 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.205741253 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.150616623 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.11942135 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.11538389 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.253123358 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.140325963 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.217231899 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.142441381 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11801889 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114250906 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.146847302 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12565648 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.119295511 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.253139881 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119662199 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.246253776 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.247496412 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.244265105 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.249591827 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12771842 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.246591042 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.207089574 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.14387867 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113737464 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119099928 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.24944096 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.143362811 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117500971 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.237895934 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121964615 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.251337749 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.247884453 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116306692 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.117293413 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.133645779 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.117890487 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103882761 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.240897611 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116564404 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.141839867 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123320646 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116693477 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.144457063 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.109588293 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.126691765 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.144223128 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115963509 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.123412224 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.142623813 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12051522 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.250981267 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113816255 seconds)
  done (took 17.11065454 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.105933226 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.10623933 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.110234711 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130921002 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105582473 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.106300551 seconds)
  done (took 1.696042935 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.141668835 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119449985 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.152924309 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119304509 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166507592 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.25163349 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.259897162 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112090951 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.165986608 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12953241 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.25505492 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.25701893 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.255461373 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123157198 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.260115792 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121894366 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.263481634 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116946596 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125690005 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.143771668 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.118821931 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.149375576 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115999521 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.245583116 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119850103 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.120002425 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.138381533 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128346069 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.125317625 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.140175524 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.122819147 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.137343045 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.137844706 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.112428763 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.260314296 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.1093931 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141310792 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122008551 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121474765 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.145354508 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.232167922 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.141578919 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125686694 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.120292601 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.140511025 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111725695 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121773944 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.139035283 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.262143657 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121801479 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122165046 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.147094322 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119870613 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121137996 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.139108084 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114046344 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.120336596 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.259116256 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.150144076 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.112487961 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11940331 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.147099209 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114032983 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.123729768 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.146148831 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123332766 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.111253298 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.145784224 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116146138 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.118948568 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.148252612 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120852642 seconds)
  done (took 11.839467401 seconds)
done (took 43.318428932 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.627820846 seconds)
  done (took 2.654640679 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.95961881 seconds)
  done (took 1.989169607 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.179538768 seconds)
  done (took 19.237098205 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.441034895 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.472856457 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.155723281 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148028551 seconds)
  done (took 3.244017147 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.837628769 seconds)
  done (took 1.887862662 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.301626404 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.267011858 seconds)
  done (took 1.6021853 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.723327694 seconds)
  done (took 1.768685569 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.533661422 seconds)
  done (took 2.565950299 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.28965923 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.24558658 seconds)
  done (took 1.582055206 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.653564122 seconds)
  done (took 1.698333741 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.580023471 seconds)
  done (took 20.629864853 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.26054457 seconds)
  done (took 1.315365599 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.282952606 seconds)
  done (took 1.339135036 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.616416784 seconds)
  done (took 4.670085478 seconds)
done (took 67.225706346 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.113937794 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116988754 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.117166586 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.139708521 seconds)
  done (took 1.530077121 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123835514 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118589539 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.147332814 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.117819222 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125263039 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.11864109 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.144629673 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.121693333 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11780758 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147133753 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119469503 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117815354 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146402958 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117942057 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114923786 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147365916 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.1221082 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118575352 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.146698242 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119703999 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118099317 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.145949507 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123193757 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121564362 seconds)
  done (took 4.116908518 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114399563 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109983026 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110575891 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.134154269 seconds)
  done (took 1.527815564 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.12709104 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129928439 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.15469757 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126765434 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130174447 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.154610229 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117476013 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114533467 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143456313 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127796877 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134543664 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.157310769 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130880356 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120237796 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.154811042 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112081976 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118810036 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155575063 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124933964 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126334274 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.144625629 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126030486 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.123531648 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.153649557 seconds)
  done (took 4.264911725 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.194458257 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.130942249 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.176163618 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16278224 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.178522415 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.115487225 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.145158672 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.151471045 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124934537 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.119621234 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.147182388 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.1633485 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.149808971 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.119832385 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118106264 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.14984206 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.13087813 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.122812777 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.191638692 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.125596206 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.15096698 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.131211125 seconds)
  done (took 4.257307196 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.121659932 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109825881 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.105098266 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.134409892 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121086198 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.111671079 seconds)
  done (took 1.768200653 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.107844728 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103842332 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104193433 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129611077 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107321129 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.10281945 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.102089832 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.129654148 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103801178 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102875126 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129511132 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102841758 seconds)
  done (took 2.391121549 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.335251151 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.108152877 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.135317326 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11062306 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.1134315 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.106245201 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.147034463 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.108597163 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.270353892 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.103339705 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.133047463 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.192468629 seconds)
  done (took 2.927508597 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204841226 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146978082 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25667038 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.686033502 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162965902 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190565866 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283261668 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190807146 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.207455706 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136880493 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215510766 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160956093 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183616245 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186387718 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168408228 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158426382 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194033916 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237882135 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141444761 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2382423 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156598469 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201993832 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217282023 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150408883 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137356691 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189665202 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118192945 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154547811 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168047894 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191726992 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20308195 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150270972 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167419881 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193937641 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261592898 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206567821 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270739948 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132774688 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.201251523 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.189180513 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261230086 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168946284 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222998155 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152961634 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127918793 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215074335 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179095704 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.184235212 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.159841633 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143834835 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21391712 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180504918 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.198153123 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135508921 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.324092506 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160373805 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144784459 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254956318 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216459193 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203011171 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206394743 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123321324 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203849658 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216964463 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240591266 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142920941 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.190852494 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125533122 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163543473 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.23341113 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211401236 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158734003 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.236722537 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160225357 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172197418 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197568662 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155266708 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233883061 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198674499 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120292775 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178628365 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134609593 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125774207 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.216447537 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120025073 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24405298 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131010478 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.341573117 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207714771 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156530641 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188412844 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159980333 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191064646 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147657785 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.13032576 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142623196 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.188496089 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159111576 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153629792 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155744162 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138731387 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.152870525 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154313326 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.148610762 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169846019 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.160748249 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167459311 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19754384 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.130559725 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205172204 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149078141 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.190428525 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169712741 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221824402 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129992447 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16027141 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246980688 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169896789 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136224884 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201982772 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225512244 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.150783727 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16293942 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165164983 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223823649 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142322924 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228832072 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137743718 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163283607 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.140202103 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200463302 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186244244 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161467802 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127090186 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.193614944 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221748071 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126597307 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137122743 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210078839 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132253821 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152261493 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136709857 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163100268 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.143297713 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14755544 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.166457968 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154457433 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19605142 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164879248 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187812772 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132633302 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201006906 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129564923 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.196366619 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148041151 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.146812985 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.174502239 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22622476 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129669017 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210585282 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.188373143 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182688816 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199293624 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128889433 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21207818 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127736392 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.147106604 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161399163 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196769002 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16413789 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.216494041 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205603661 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.166150765 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.191399765 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148040249 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198759029 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.214435515 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155776515 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.170606426 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171236006 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198837254 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.121110681 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121435695 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.156054658 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136005925 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157268084 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136655346 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211608968 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164950098 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206755586 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193855882 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138609484 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21905134 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124414895 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188943711 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.174373425 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16588562 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.189333051 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218971993 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178301242 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168689263 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192557033 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121882561 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125553309 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.159837954 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162444314 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136101718 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163215443 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139855393 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.219020004 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201106635 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148606413 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217707342 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192664321 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200709023 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.147976849 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.161876384 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197771711 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1676427 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.186315996 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156215006 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.161149373 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.219987526 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140287222 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219233857 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197134809 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179198049 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224796837 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.190286946 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131029165 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146742896 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19044394 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137277592 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191362553 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144241409 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156943491 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152791221 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.135215797 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169110426 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21785207 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142553767 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207154219 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.157906057 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20248075 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12549297 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169145055 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172829184 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176205142 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.10479047 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199112554 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195627542 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17762938 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154852976 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201240401 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12776694 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.346728059 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217648898 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178166974 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16374419 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138433814 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198217635 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160558691 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192664144 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185004033 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169619831 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207799915 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201483159 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141451641 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15907273 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149395515 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17906466 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.140301868 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.180801835 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.162205989 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.172289432 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187758619 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166087431 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169728177 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205668624 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.143639192 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.17877136 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13864095 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252750943 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196166126 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174055696 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.19162697 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.166093791 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214160726 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122264165 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125768875 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.161090376 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185240528 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158045102 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177721316 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.194090559 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211317002 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202009422 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16195985 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167882433 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.128765762 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165551638 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17730276 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212832946 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135186888 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138833638 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220705478 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.157050796 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131053841 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159993841 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318290516 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175840236 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175248357 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106674179 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.310746246 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129448291 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159378298 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160324003 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198134815 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.131621766 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.210895414 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1738409 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16796694 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162567798 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161463531 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178082068 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212981497 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194347068 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177607016 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.174934345 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161716685 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189643846 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174706196 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17348919 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.148515266 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189766454 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193833942 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.205239306 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130503592 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199013292 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168114228 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199817996 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204069075 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138517118 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20950859 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12761607 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193098815 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137423833 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124122859 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191293349 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.192677947 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1311236 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204970781 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16992962 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129882236 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156697221 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148419101 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194459134 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139069772 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.157895932 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186575744 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.158162732 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181826465 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243560655 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127795863 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196132169 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145877539 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158819112 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138359512 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171399517 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132483713 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.17498748 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211546269 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130126505 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20746139 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166599386 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193775129 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185255419 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145361409 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.262830012 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.15845382 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189880303 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180369075 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22587621 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150835677 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202344077 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169063856 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179595957 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165469578 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17775468 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.217342924 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192938115 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.166034583 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159862439 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143487352 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138249281 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.162901866 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152424043 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196865854 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141958209 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.164759217 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.166189685 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17283671 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.147642237 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140487251 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228855625 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180826666 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189831038 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215616992 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137822695 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205056713 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205322842 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129311477 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.192947324 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174483843 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172172093 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152264901 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133202855 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.167026121 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240685102 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126583744 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160241678 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203089063 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16839868 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201536981 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.134563764 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207251254 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139357638 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205226206 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126397492 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.182718495 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169286655 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162417989 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.12708876 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199837096 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162283589 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.192063823 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142210325 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.175068277 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221667838 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122551531 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162713464 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291435589 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190255207 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223988722 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137916905 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135589368 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176483093 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158876988 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.194617825 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170184404 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.158722243 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127937168 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.173658121 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.157570338 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.167985435 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168143276 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209350964 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162599688 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213718839 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134287374 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283172948 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14235023 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197978539 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.619572387 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128881129 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168130731 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135734472 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14190483 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211328069 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243629801 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.161578616 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.177073909 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133995401 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.156090902 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130220116 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162218012 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179983457 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166823692 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177448463 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.103508851 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169820432 seconds)
  done (took 86.437686881 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160670956 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150888031 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168146904 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221561905 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195260587 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.291856393 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.227939887 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.245194816 seconds)
  done (took 2.810076224 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.117575459 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158208203 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140594932 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143204011 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109280086 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.487599165 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.157999986 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.119823024 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.161214863 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.151861817 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.1351553 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.576743651 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.115107522 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.145828235 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120822694 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.134602348 seconds)
  done (took 4.118304974 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.831669685 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.545244367 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.183161568 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.279808029 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.265547327 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.205153471 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.787481531 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.203331069 seconds)
  done (took 12.453746981 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.164586528 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.157823856 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.451547295 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.308488452 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.183100069 seconds)
  done (took 2.426392762 seconds)
done (took 132.076064164 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.122999102 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123189733 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.12254189 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.153316289 seconds)
  done (took 1.669425776 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.196192491 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.091646719 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.09426788 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.120027561 seconds)
  done (took 1.659229921 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.471566411 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091783641 seconds)
  done (took 1.750465954 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.152940431 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13670769 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.173531334 seconds)
  done (took 1.636585116 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.136214708 seconds)
  done (took 1.300077317 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.126427687 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12777002 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.270646738 seconds)
  done (took 1.6889377 seconds)
done (took 10.874227149 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120129979 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.932529076 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.433756299 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133884822 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.712099019 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.427077871 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.424451938 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.177046531 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175539858 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.136799819 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132234329 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.689151115 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.433625357 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.881033434 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.390031787 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.902508067 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.694785321 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111360796 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.146293708 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111984593 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.402881615 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136923994 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112530492 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11115402 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.718418829 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.420430803 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109522307 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.919925603 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110588424 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113138871 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.427658441 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111327871 seconds)
  done (took 21.011536708 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113126 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.167008136 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146273946 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112103662 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113021344 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139388423 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122418355 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123511657 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.206558455 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110161497 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.160388058 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109964767 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.115135414 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.138496746 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136990461 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110313318 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.139186259 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113905661 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118698133 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111775344 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161666715 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109352527 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111008989 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140485707 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110694705 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131100598 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.139072168 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123221087 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.1093355 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.14237739 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115146834 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11097903 seconds)
  done (took 5.283281239 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.159417107 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177823291 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147541178 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148710361 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188553447 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112897812 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.225853082 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.150352388 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205771679 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111245273 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13295611 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.137505037 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152329039 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110102724 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.164459968 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111137511 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113808573 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.14156097 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11939533 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111734267 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.16154433 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110692791 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111641659 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140757369 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111200182 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133958407 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.139470565 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123723715 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10944899 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.144593384 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117453169 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111151547 seconds)
  done (took 5.612430951 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.125892426 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124587101 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132677192 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.163658314 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120407412 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122762858 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.154199884 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12052852 seconds)
  done (took 2.241862048 seconds)
done (took 35.317272192 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.139048164 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130780633 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.131075509 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.154992426 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.258591238 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.118538775 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.128153798 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.117370096 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.156253332 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132709492 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109728562 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.148086467 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.131826645 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121277392 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.258510352 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.125885681 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.264769482 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.258653747 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.119225426 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125290821 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.150513131 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.231886863 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.155067395 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.119381034 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.251199511 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.114929982 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.250649948 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.121890905 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.121757219 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111258099 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.260968252 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.154229532 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.120185442 seconds)
  done (took 6.45815441 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.240981554 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.151634638 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.120677668 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118888367 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.120225593 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.14891588 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.246721764 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.150164894 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.117987152 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117477781 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.149219989 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.225912761 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.156036284 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.116112516 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121257892 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.109922981 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.279921551 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.120907797 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.143591941 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.094644088 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.113726247 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117301663 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.289635113 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.145288323 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.119879697 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.11872377 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121366027 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.155161643 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.12196898 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120567907 seconds)
  done (took 5.659124832 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.125781041 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134021449 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.136145769 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.219239069 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.148787606 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.162458972 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140195142 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134026764 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.171166482 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.114154818 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128947168 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.180430606 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129273167 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.123299062 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.144037878 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130161801 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135586445 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.144199332 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121363943 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13124075 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.162653532 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130840833 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.136059697 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.150671916 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.111878116 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12094977 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.152936821 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.123928761 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121650706 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.127874749 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.1453829 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116330866 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.114473562 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.178208765 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114562132 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.156518816 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140264905 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126545344 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.156103783 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.146807321 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116321535 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.14479923 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140505835 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167771409 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.143077523 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127586394 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125343672 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.126669699 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.143545136 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132837594 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.184681275 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.115074117 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.135815085 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.111601931 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.142313717 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121860241 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.114595867 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.145940326 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128010395 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.116121574 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.168938526 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121917998 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.123851099 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.144470343 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125621263 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.112578104 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.111798454 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.147824635 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.139705476 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.119706698 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.180957562 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.113787944 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125087262 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.156473848 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125263593 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.124630103 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.142894771 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125205234 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124094469 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.147676253 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126642013 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.115977997 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.115289724 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.160477138 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.134935158 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.155923809 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.126761072 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.127110194 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.115707095 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.145901329 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131950182 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.113952532 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.149080515 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.127185345 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.113145531 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.146383352 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128906252 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124223404 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.140192633 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140517535 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.116691773 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.112205003 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.169678107 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.117883645 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119013975 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.153447408 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.1559712 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.112691409 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.155387846 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.127817089 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.112404124 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.152352 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.117107567 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.111622159 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.160025822 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130151065 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.121166124 seconds)
  done (took 17.034647134 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.359196711 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.346637123 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.187549134 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.434254873 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.128446308 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.277694779 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.343926975 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.347310331 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.11423465 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.179424596 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.178119406 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.314816168 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.113327947 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.174065144 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.348727977 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.409247273 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.176931449 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.151807649 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.181183627 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.128466755 seconds)
  done (took 6.09417951 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.134088578 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.148163307 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166938181 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.1430392 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.123440395 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.161192341 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.114531407 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136493442 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.156456428 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124140642 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115730817 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.161157947 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128346064 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.129935923 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159142602 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.147270389 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.120680123 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.148418552 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137639832 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119202793 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134175668 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140242577 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123449838 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.165586082 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132952386 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.123821306 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.142186148 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120116471 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.120639855 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.151989279 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.11956596 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132863335 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.149215524 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106353577 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125871596 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.128927768 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.150382443 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117248585 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.117893536 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.145718178 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130425544 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127493206 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122385532 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.129765991 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133915005 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.110805717 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.128101435 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.157354453 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107196937 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.133529861 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.157095773 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130268563 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.121785606 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.166344236 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121258869 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.130568881 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.15583436 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.129964313 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.119818032 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.141632999 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113853724 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.117643908 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.122248479 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.159334397 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126082834 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.132695448 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.160123494 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.114516558 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.117807879 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.146582662 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.117825487 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.12719314 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.163543373 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.123436411 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.119870466 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.156515411 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.124086514 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.095581405 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.125221614 seconds)
  done (took 11.756699383 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140628416 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.123632782 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131485419 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.17993879 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.127322483 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119141713 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.154678011 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134648373 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127303184 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.164301847 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130500205 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127258917 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166102425 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125528034 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124625154 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.161481234 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128560506 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.151445555 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.162671881 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142120101 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.157581677 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.120052355 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126514712 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.125213335 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.172781564 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127068492 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140922672 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.160619562 seconds)
  done (took 5.171386314 seconds)
done (took 53.352791998 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.337553266 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.533150133 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.309385522 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.309143544 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.359313101 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.314682118 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.307251943 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.309007678 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.824117907 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.277593838 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.309932917 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.306591671 seconds)
done (took 29.702683461 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.409299621 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.829494144 seconds)
    (2/2) benchmarking "String"...
    done (took 1.603442566 seconds)
  done (took 4.628796225 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.29630935 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.299607637 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.547684795 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.299572111 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.301217886 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.300494961 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.314523984 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.303665583 seconds)
  done (took 16.561908581 seconds)
done (took 27.096866424 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.351306045 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.489929969 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.548397495 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.28101628 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.303246004 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.301587644 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.303069004 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.329241952 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.303950534 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.279406015 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.721993954 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.568472972 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.319003816 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.677967073 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.279385875 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.308752324 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.330845504 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.531914181 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.303261573 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.327833773 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.278084833 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.279343801 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.342146663 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.301295916 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.310658342 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.308372128 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.319867755 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.302032051 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.490244089 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.307350864 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.332004531 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.303047373 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.327756474 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.31429281 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.309153769 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.316661576 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.494770583 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.310956983 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.284916959 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.328150798 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.495139844 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.316338762 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.307316575 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.306560375 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.281456743 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.347499512 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.28713525 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.440343411 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.323497778 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.306287527 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.384069036 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.675377679 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.312320848 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.317293384 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.307909169 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.532982807 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.322110421 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.373901511 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.329273109 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.316870336 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.309564179 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.304029035 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.305507996 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.30830392 seconds)
  done (took 150.132280578 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.305928207 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.307770478 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.308390454 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.312670965 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.308043397 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.309202129 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.304468034 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.305033333 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.309965491 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.335069077 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.304230466 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.310185477 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.307703843 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.262946326 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.31395146 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.327481852 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.309125882 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.308916339 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.334537836 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.304504482 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.327171788 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.305674428 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.310613056 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.310292825 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.353670034 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.392165977 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.317051621 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.337530254 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.31428933 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.30523829 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.31241295 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.313694579 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.956148599 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.158950128 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.318848765 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.330292062 seconds)
  done (took 84.056691124 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.305583922 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.305618164 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.304885057 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.34031802 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.306082931 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.915391284 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.921968819 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.289667773 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.442859581 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.791044395 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.311731563 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.306012463 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.559089298 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.306387935 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.400263154 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.320418709 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.310624676 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.321382081 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.335354832 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.311626187 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.308043514 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.920889381 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.32311529 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.32732351 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.491826447 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.325165385 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.342899792 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.700160189 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.307943262 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.343002209 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.64581208 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.360092935 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.309452266 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.659091635 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.40501029 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.421440733 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.309369859 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.341387543 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.309135766 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.594264481 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.309722991 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.30897498 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.309482189 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.310854154 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.959938339 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.309661172 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.918778641 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.312833244 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.288798225 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.309254128 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.310249491 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.258688758 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.004220524 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.310700441 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.309653839 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.310191233 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.310701947 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.310155054 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.345746859 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.243805623 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.409868985 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.309522407 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.313922383 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.344990932 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.311880365 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.55803297 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.314123432 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.086768285 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.370523593 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.412607642 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.924454535 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.316152095 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.407382845 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.430201552 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.311632629 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.312074266 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.312183205 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.312181336 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.42300253 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.311865059 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.012515428 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.492933201 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.329033381 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.800539498 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.413884554 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.312480447 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.687579915 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.315819745 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.311562653 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.041608942 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.407738354 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.311453934 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.311083155 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.312112457 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.012198809 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.926628171 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.596291246 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.317541659 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.881685615 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.316436579 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.191776965 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.901049586 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.965935829 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.312952432 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.424902979 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.495050885 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.332059169 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.313032495 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.806563147 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.316573186 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.371168008 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.318280506 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.313856219 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.716127453 seconds)
  done (took 386.795955152 seconds)
done (took 622.184337782 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.173228864 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.119354475 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.271515695 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.135724031 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.113690673 seconds)
  done (took 12.021247693 seconds)
done (took 13.231786773 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.513098337 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.514240641 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.379643732 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.516065717 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.348144215 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.532456545 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.49505353 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.331710954 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.427357625 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.400359382 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.427783787 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.369892381 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.347885154 seconds)
  done (took 19.813336871 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.61203344 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.324282063 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.379091717 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.586968676 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.358574253 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.603530276 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.645697318 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.32628454 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.482581381 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.336934094 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.337205358 seconds)
  done (took 19.204270507 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.606093993 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.325522998 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.381802508 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.597717711 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.361006828 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.607575779 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.657587164 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.326447399 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.494504292 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.339784474 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.336081957 seconds)
  done (took 19.243259638 seconds)
done (took 59.472681741 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.353622735 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.419900066 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.350523403 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.333529968 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.333032036 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.333566707 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.336473004 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.334841037 seconds)
  done (took 12.006894035 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.332268356 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.331557785 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.331233759 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.333266876 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.330562525 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.331873792 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.332814519 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.332659777 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.333399443 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.331225407 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.332696437 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.333032915 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.332913516 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.334639026 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.334426296 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.332554485 seconds)
  done (took 22.532054877 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.334657538 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.333625649 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.332495747 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.333306718 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.33380553 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.334112328 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.334399491 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.331569086 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.334152854 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.334054791 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.335081308 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.333578316 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.334240959 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.33271035 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.333991171 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.335191871 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.332973737 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.335173401 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.338633203 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.334212648 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.33353044 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.334553647 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.33435691 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.332811249 seconds)
  done (took 33.231159537 seconds)
done (took 68.983356707 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.331783142 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.325571696 seconds)
  done (took 5.86946508 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.392143324 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.393956404 seconds)
  done (took 3.999510851 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.333975231 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.332567131 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.335647237 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.334970829 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.334117394 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.334006977 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.33360144 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.334754689 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.334418566 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.335144305 seconds)
  done (took 14.556335905 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.33420889 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.335715342 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.334303272 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.333520867 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.335086474 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.335105062 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.336316397 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.336141597 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.335293844 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.334281904 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.334802251 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.336030344 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.336340488 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.33582775 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.336816627 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.336342185 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.336421442 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.335799664 seconds)
  done (took 25.252427345 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.350725311 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.355843196 seconds)
  done (took 3.921214015 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.464005539 seconds)
    (2/7) benchmarking "second"...
    done (took 1.377181988 seconds)
    (3/7) benchmarking "month"...
    done (took 1.441345967 seconds)
    (4/7) benchmarking "year"...
    done (took 1.433969486 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.376538584 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.357922333 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.380096957 seconds)
  done (took 11.046824462 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.323034307 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.614265755 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.794050422 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.475086012 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.314319961 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.335058777 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.300488773 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.335112822 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.336667366 seconds)
  done (took 15.044021408 seconds)
done (took 80.905904498 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.322594344 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.373888549 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.352878161 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.340707269 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.682379396 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.35927875 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.327090349 seconds)
done (took 16.977783147 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.30419125 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.306163985 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.319650609 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.335135411 seconds)
  done (took 10.481760694 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.324361478 seconds)
    (2/2) benchmarking "read"...
    done (took 1.648205377 seconds)
  done (took 5.189174791 seconds)
done (took 16.890949109 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.340970927 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.337158523 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.339533059 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.338932616 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.33923613 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.338006417 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.339392076 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.337984392 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.339237272 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.339540413 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.338682858 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.338993573 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.3389449 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.339000666 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.338091343 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.338874689 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.340294024 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.340110912 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.339876417 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.338950544 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.340901201 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.340502061 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.3388427 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.341153634 seconds)
  done (took 33.360237181 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.339497631 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.339903424 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.340135335 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.340348922 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.339290401 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.34005715 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.340000011 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.339592798 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.341201488 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.341077455 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.339515631 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.339792684 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.340981794 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.339460317 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.341351062 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.340357327 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.341024818 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.342274846 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.3388183 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.340365076 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.341869272 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.340572638 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.341335293 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.339674135 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.338720776 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.340779305 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.340668442 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.339530208 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.341552857 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.340544558 seconds)
  done (took 41.430228118 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.344472734 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.346803888 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.341451585 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.34092292 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.34278299 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.341230898 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.341429573 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.339831044 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.341019552 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.342258315 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.341452244 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.341804314 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.341251682 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.341820553 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.341134597 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.34284721 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.342580794 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.342795077 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.343005631 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.343033465 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.343987155 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.341987312 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.342710224 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.342190874 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.343415827 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.342826554 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.344066156 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.343561967 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.343504336 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.342412414 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.342676807 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.344383809 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.343293589 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.342715522 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.343346892 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.343000208 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.34816985 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.34925322 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.344856642 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.343634777 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.343660605 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.343440972 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.345407239 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.344727909 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.344088937 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.343931471 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.344281691 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.343890537 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.345087125 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.344217718 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.343288509 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.344739008 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.346110838 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.342843893 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.344184622 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.345374797 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.345769869 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.344444081 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.344205057 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.34543144 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.344620465 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.345157026 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.345496871 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.345709108 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.346360216 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.34451661 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.345168999 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.344624085 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.344763203 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.345458155 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.344365097 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.345814707 seconds)
  done (took 97.973598752 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.347307081 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.345258548 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.347090013 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.346015001 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.346619895 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.346688123 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.346569448 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.345972457 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346817788 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.346232854 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.347014721 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.347545136 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.347695281 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.347359646 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.347683422 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.34637248 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.348127269 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.345620278 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.346202936 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.346910894 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.347284501 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.348285086 seconds)
  done (took 30.854349254 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.346269173 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.348670671 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.347357319 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.347356746 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.350408959 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.347674635 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.347078962 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.349374764 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.348964982 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.346979725 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.347797696 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.347755899 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.347881282 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.347238208 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.347688426 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.348450286 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.347819466 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.348679475 seconds)
  done (took 25.489476153 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.349100012 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.349126315 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.34740341 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.348175419 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.350041627 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.348059055 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.349667272 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.349208425 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.34889882 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.349960145 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.349927232 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351726172 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.348767435 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.350227836 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.349916532 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.349096816 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.34889641 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.348629087 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.349147455 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.349652026 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.350261804 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.349383204 seconds)
  done (took 30.911354403 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.350925485 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.34991152 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.347825365 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.34916777 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.349456201 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.349316744 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.3496748 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.348837352 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.352751771 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.352216055 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.350399508 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.351326742 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.351883345 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.349990468 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.351011663 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.348992178 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.350743948 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.349244022 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.351842842 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.348817283 seconds)
  done (took 28.232287444 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.351809725 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.350589888 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.352123933 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.352306173 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.351624795 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.350990671 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.35238443 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.351865774 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.351604423 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.350214256 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.35271783 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.351209827 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.351794853 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.351619141 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.351214281 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.352084982 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.351091647 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.352586851 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.352196045 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.352863337 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.351517476 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.352505235 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.354684897 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.351560312 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.354582472 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.350990397 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.351588339 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.35288362 seconds)
  done (took 39.083817528 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.352930373 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.352553161 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.352132042 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.35192253 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.353441469 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.354959699 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.352305898 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.353156586 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.354078424 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.35410804 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.352520571 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.353800684 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.352908671 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.355173406 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.353625295 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.353966727 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.35516987 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.355136055 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.352334604 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.355464537 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.353777018 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.359795428 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.355012553 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.354125494 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.354472645 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.354542212 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.355258802 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.354237846 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.354766926 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.35429861 seconds)
  done (took 41.85012372 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.374167781 seconds)
    (2/2) benchmarking "in"...
    done (took 1.371454445 seconds)
  done (took 3.976102006 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.355719755 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.356843955 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.354760578 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.355363747 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.356280278 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.354530042 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.355003217 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.355129739 seconds)
  done (took 12.075356189 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.348635128 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.355979505 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.356069258 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.355383577 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.35571916 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.350389001 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.356864375 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.360408529 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.350210366 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.351011047 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.356962784 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.355499174 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.353424194 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.351418867 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.351472298 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.35348973 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.35878223 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.356352523 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.356897771 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.356133922 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.358494048 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.353450387 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.35570494 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.360224546 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.351355032 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.360381482 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.359648271 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.361613625 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.352050254 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.356592439 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.354965791 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.361347413 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.359024818 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.358636929 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.357481824 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.357521182 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.360790228 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.35883343 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.360015704 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.361991275 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.357818348 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.360164455 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.355193175 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.357180088 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.35864929 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.362851807 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.360807277 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.360148301 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.353430124 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.357376848 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.366999398 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.353266363 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.359692377 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.358144704 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.359023189 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.362569834 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.367433195 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.355271086 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.360853596 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.364086595 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.370697636 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.369845116 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.359188057 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.363241272 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.363925363 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.375991206 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.364558372 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.368119347 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.361448556 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.35993369 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.3619522 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.374037505 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.37430965 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.364208658 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.362496495 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.361953571 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.356840533 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.365667696 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.363331781 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.365658661 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.366701378 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.362323762 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.365399618 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.375285835 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.357366402 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.3652417 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.361337124 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.363545596 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.356284477 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.367243815 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.370727576 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.36203557 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.354865053 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.358419698 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.359068193 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.362858606 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.356342416 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.358886048 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.364203823 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.361131561 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.362689812 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.357997546 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.365530328 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.367005678 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.363455718 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.36647649 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.369498658 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.357830843 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.367583505 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.371453848 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.364138308 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.359835616 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.364243368 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.367274313 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.359694627 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.365350341 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.367854437 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.360519015 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.370916194 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.365301583 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.366568265 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.381040299 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.369736761 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.364503704 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.361109667 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.373861136 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.364229812 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.362545325 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.37109508 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.364000111 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.364626034 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.361328938 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.369915444 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.359246866 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.368664867 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.360922731 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.367710044 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.365876214 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.364504298 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.361894097 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.365593721 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.36306035 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.365087961 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.369530681 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.371903851 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.362846862 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.374041514 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.366507934 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.365633583 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.366529005 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.369896913 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.365048106 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.360970806 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.368099404 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.359321215 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.368386143 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.360672359 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.369875388 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.366268517 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.367495326 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.367164901 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.359355639 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.364325476 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.369247165 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.365055133 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.366478681 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.370213188 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.366838717 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.369574873 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.3608361 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.369626126 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.359221853 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.36516433 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.374736562 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.366534352 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.367542343 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.366096047 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.374478902 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.367737461 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.367418014 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.362596615 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.368768244 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.374226329 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.37069953 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.377690174 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.36853303 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.36911799 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.363081444 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.364635104 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.371367006 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.365473588 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.375701475 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.376437662 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.381587579 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.365875225 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.371944496 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.363154535 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.371524064 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.370312338 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.374394267 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.370064021 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.368765796 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.364347552 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.373030704 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.365729713 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.373076794 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.362701065 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.370204375 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.3712364 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.369163177 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.371271551 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.36538126 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.368800924 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.372785947 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.37040436 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.369721894 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.364929541 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.373156596 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.363767971 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.367117625 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.373707612 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.370630181 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.372004511 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.379388767 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.368214991 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.374655035 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.372569653 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.36621492 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.372746787 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.370159041 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.372507529 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.376414208 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.373439573 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.369175579 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.379342361 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.375219591 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.366377401 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.372945865 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.379209383 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.372288183 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.367482628 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.378137432 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.370728548 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.373574041 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.370529463 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.366727673 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.375832848 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.375218716 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.381704158 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.367848497 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.37527798 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.368032343 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.375656628 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.369038662 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.374364733 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.373773638 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.376423227 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.381041052 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.373984349 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.367482439 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.376704495 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.373168488 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.372483864 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.369020368 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.379864742 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.374819505 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.376141538 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.372437972 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.372669101 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.37585136 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.367888476 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.374882398 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.368457926 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.385630806 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.394514126 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.377404107 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.379920028 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.376478979 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.376633887 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.379491214 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.37142897 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.370673641 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.372093065 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.37073062 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.370948142 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.377827447 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.369716781 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.378748693 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.374364887 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.377959483 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.377814973 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.37456361 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.368383199 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.377519094 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.373732415 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.374765625 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.368311244 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.376264872 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.372097262 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.377130754 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.378629709 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.374408514 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.381180914 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.380508316 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.374843884 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.373413843 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.372413684 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.370048457 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.374368712 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.380089573 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.371687744 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.381807992 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.373434587 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.378998992 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.374587543 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.382389523 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.386832258 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.372894138 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.384044351 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.374905716 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.368585057 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.372349281 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.379670344 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.382458672 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.387520591 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.372722902 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.379450804 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.377058749 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.376278306 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.378302308 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.377295354 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.377386706 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.376841128 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.383645422 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.382913061 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.376264581 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.379712987 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.38699332 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.378090795 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.378453174 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.372186842 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.380975344 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.389216554 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.375337736 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.378044881 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.375764091 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.381606646 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.37903931 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.379505422 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.379651446 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.3773033 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.38454786 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.385734501 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.383241137 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.380253815 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.383874398 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.388868176 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.38319296 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.392852438 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.376021973 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.384913582 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.380370775 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.377403219 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.376086358 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.376937215 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.383568378 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.374262827 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.382881031 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.380301281 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.377434406 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.381783047 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.387100893 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.375475788 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.383636493 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.398196514 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.374251731 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.384488117 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.378896367 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.375144216 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.384485132 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.380172592 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.37296647 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.380038829 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.382813336 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.387692976 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.37431007 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.384230081 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.377025027 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.384265608 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.382206847 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.38158454 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.381328809 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.382693618 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.376341406 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.38546471 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.382407392 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.39114642 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.377458593 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.383642189 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.379372851 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.390933588 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.392246568 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.378828563 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.387386888 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.383552279 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.376931587 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.382687621 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.386330553 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.378379952 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.388044299 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.376835503 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.381979114 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.381559993 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.385565282 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.388287509 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.388151408 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.37870749 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.380037449 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.385495663 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.38369396 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.385828575 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.381794689 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.391193583 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.377238814 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.378773405 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.385329953 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.379523289 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.388215001 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.379099354 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.383146285 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.38319146 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.386191974 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.382759876 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.383415938 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.37742968 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.380857368 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.391672483 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.390969631 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.386619828 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.383117728 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.388161253 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.379825544 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.384390506 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.384677062 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.382116101 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.381077841 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.388132797 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.381827679 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.382839103 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.381595023 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.386544834 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.391908836 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.390993549 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.380558748 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.392988214 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.395327046 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.393680236 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.380338357 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.383482921 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.383333137 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.388879056 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.38771861 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.380811101 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.394379922 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.393591521 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.390492369 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.387833888 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.388627153 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.379833737 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.391389485 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.386216928 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.38350514 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.3933813 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.384607149 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.393581055 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.388084626 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.386983192 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.380195071 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.383132579 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.385244361 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.387289643 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.390842959 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.387140361 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.394495949 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.387459685 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.39310254 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.388923001 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.388700308 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.38824715 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.38151154 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.390769024 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.383288745 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.388997709 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.391411175 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.385004852 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.391850557 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.388171619 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.384004756 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.390044147 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.394643358 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.38825295 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.383347861 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.388431045 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.39536682 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.400099445 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.389468242 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.384112005 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.388987927 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.392436393 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.389317851 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.388548364 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.384956563 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.401583883 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.403433079 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.384708736 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.387456862 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.395624729 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.400262467 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.389797679 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.390356779 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.387755595 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.391709788 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.396506052 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.389835477 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.39528132 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.397324705 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.389208749 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.392355172 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.387989492 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.389991815 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.393356131 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.401584311 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.391492379 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.389442228 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.403305868 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.403941464 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.394790489 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.416664383 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.39994327 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.393400826 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.396134684 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.385821765 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.39356885 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.390617922 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.396926204 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.390757901 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.392533901 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.391645584 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.38532148 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.394740422 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.39967225 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.401165818 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.392034342 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.386974939 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.388698877 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.396510484 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.393808378 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.393661429 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.3922442 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.393079523 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.39292757 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.386652921 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.405978933 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.411898002 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.397386358 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.393254606 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.39385147 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.394808287 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.398765094 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.393911671 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.398835035 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.393544278 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.393142455 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.391180035 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.40083156 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.394435801 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.3889962 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.389661965 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.390122319 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.396402719 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.403694021 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.415216403 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.398013892 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.399508316 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.395898406 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.394474073 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.388617874 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.399042876 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.394799863 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.389539763 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.391451799 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.39876675 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.398081481 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.394772513 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.38992012 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.399934609 seconds)
  done (took 821.661030618 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.395456181 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.39605797 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.394376205 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.395687645 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.394495309 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.394649869 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.394738942 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.39535223 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.395412348 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.394949652 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.395138933 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.395944166 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.395488705 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.396589329 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.395985022 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.396175049 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.396807904 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.396002709 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.396215282 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.396584743 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.395693477 seconds)
  done (took 30.57315553 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.398307785 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.396318371 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.396565878 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.397132706 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.397396869 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.396914168 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.397832433 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.397564405 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.396013792 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.397509749 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.397186763 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.397570083 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.397302542 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.397420554 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.398386395 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.398736438 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.398341364 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.396400502 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.398202747 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.398315385 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.397770996 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.398591327 seconds)
  done (took 32.013143409 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.397313438 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.398781561 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.392141479 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.402499376 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.398841972 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.398265993 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.397581091 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.398628277 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.39814658 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.393614724 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.39416985 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.394021882 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.397830398 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.40373079 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.396539045 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.403249797 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.399025065 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.399519029 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.398478989 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.39910282 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.403634531 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.409612185 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.400903349 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.391873258 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.401099385 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.399254234 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.399012324 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.401839744 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.393939232 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.402582658 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.399680561 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.395265956 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.405622484 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.403143599 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.395531616 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.404798724 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.400062602 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.400835607 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.402161728 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.403334371 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.419479981 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.400012153 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.405706807 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.412270451 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.400095046 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.395879145 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.406124305 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.399188507 seconds)
  done (took 68.484007766 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.40120645 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.399300311 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.398860626 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.400625161 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.399118384 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.400044016 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.401267251 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.399567608 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.401141054 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.40107539 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.400916882 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.401930795 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.39873636 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.400529572 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.400295815 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.400594133 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.399982864 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.39895789 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.400959537 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.399833209 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.399186128 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.400463925 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.400053923 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.399482328 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.401756577 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.40251405 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.398111609 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.397632936 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.398152663 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.397319152 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.400120945 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.398593487 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.399394863 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.399084906 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.398618718 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.398693102 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.399483407 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.399165548 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.398584591 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.398751087 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.399084741 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.398888591 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.398890668 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.399614688 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.399985634 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.401439802 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.399302807 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.401417655 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.399757822 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.399635945 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.400625273 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.399648699 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.399696211 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.400315676 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.400859359 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.399836708 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.399805678 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.399132766 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.401854454 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.398905822 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.399898754 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.399276813 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.400341505 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.40006863 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.399495578 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.400866254 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.401165231 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.397965846 seconds)
  done (took 96.459920958 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.399221293 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.399405942 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.399666362 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.398492831 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.401391451 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.401358385 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.401190743 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.403440802 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.399884426 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.400007027 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.400219996 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.399994769 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.400617081 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.401425289 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.400589683 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.399804728 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.399610545 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.401253997 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.401331694 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.402676596 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.399728303 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.400224686 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.400663752 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.400773678 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.4009928 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.399841952 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.400616517 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.400871287 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.401197229 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.399022577 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.400440961 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.399953436 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.399312721 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.399643658 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.400891346 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.402543153 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.398678257 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.399971625 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.399424055 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.39990613 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.399949771 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.400764417 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.400983948 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.399924822 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.399689974 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.398027229 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.400383887 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.40049453 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.400472727 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.398616982 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.400513021 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.401225319 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.398462814 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.400215843 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.40105734 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.400620264 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.398257286 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.400351406 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.400371209 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.399562255 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.399650567 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.40136407 seconds)
  done (took 88.088322567 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.40054451 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.401402635 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.40021838 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.399926346 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.400686839 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.402611836 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.400367157 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.400930222 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.402054895 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.401785864 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.401748505 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.401560735 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.402746699 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.403861416 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.402579516 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.402483781 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.402784331 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.40305281 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.403008153 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.401896939 seconds)
  done (took 29.305327915 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.400390008 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.403308862 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.402794314 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.402602623 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.401785059 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.401451237 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.403809676 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.40245562 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.402567326 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.402018005 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.40301673 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.403534019 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.40253328 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.402061297 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.404014348 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.403577105 seconds)
  done (took 23.711592467 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.402497987 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.405052188 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.403145315 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.404398927 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.402489747 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.402494988 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.402570314 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.403499231 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.403453972 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.404343001 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.404915577 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.404534554 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.404204168 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.4044147 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.404622519 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.405798573 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.403549875 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.403152917 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.404032849 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.405689547 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.405271563 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.403704594 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.405813019 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.404518852 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.404709842 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.404799963 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.406209547 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.404563212 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.405716631 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.40712058 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.405089143 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.405570837 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.404270832 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.405284036 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.40564596 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.405010256 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.406287916 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.406679596 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.406968089 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.40625642 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.405797896 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.406989701 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.40626825 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.405887276 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.406696438 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.408049254 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.407468444 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.406835279 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.405188657 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.407105568 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.406862195 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.407586428 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.407480445 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.407893862 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.406338329 seconds)
  done (took 78.562041201 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.406730277 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.406743459 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.407145649 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.406693892 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.406919129 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.406586225 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.407152185 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.408547718 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.406754237 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.409022345 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.407646627 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.410499973 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.407749187 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.406739368 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.406407666 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.40773775 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.407947044 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.408476499 seconds)
  done (took 26.609543339 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.408223519 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.407574496 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.4095802 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.408875034 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.406251012 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.408778446 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.408148704 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.408819614 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.407476605 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.410315223 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.40940469 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.408552534 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.408974788 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.409566034 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.409084603 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.407095187 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.409050725 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.408680914 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.409175727 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.407847245 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.408564051 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.409702598 seconds)
  done (took 32.26334618 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.399523723 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.400989807 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.398837657 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.418656771 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.417688211 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.401630707 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.402499537 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.400724697 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.424223164 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.443613151 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.439050537 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.417996999 seconds)
  done (took 18.240122832 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409348467 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410525568 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.410077238 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409698657 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409346338 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409830799 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41002731 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410593387 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408678452 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.411181401 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409657194 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409419961 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408965478 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.411257629 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408632935 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409487106 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.411235788 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409071929 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409222621 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410165543 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40944055 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40835758 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41058511 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.411149986 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40866274 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408931371 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409153412 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408792602 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408387865 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410601177 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411255399 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.409789974 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408595038 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408828582 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41011537 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410723625 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409266814 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410414011 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410314883 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40996954 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.411578751 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406963177 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409245133 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.411014191 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41069558 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409542551 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.410320127 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410099487 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409371643 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410552639 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408019024 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410429614 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410297466 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409792287 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410005081 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410975825 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410337889 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410391893 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410955468 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.412229378 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410848011 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411184238 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409939248 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409411373 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409760762 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.411306117 seconds)
  done (took 94.331552142 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408453189 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.408668933 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410842564 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40963381 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41164631 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.411375425 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.41350151 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.410202987 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409655729 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410649157 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410550467 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.412089689 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.411012404 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410962929 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.412803575 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409674209 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410816801 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410225989 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.411307283 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412308631 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412312857 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411990521 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.411307189 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.412888308 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.412223506 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410678238 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.412639567 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.412819229 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410584025 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412104963 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410651026 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.41032059 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.411503754 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.412682922 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.413646723 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410896865 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419195072 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410168629 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410307463 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412489493 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.411135044 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.413082776 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.411817206 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409877223 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.412853757 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.411498481 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.410861287 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.411554144 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411304087 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410326218 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.412418623 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.411079339 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.411217375 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410567009 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411473567 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.411781911 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.410980202 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.411926123 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.412153398 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410927067 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410301473 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410906933 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.412809354 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.411379147 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.411406035 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.411265324 seconds)
  done (took 94.433263452 seconds)
done (took 1921.192757796 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.566632381 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.524161525 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.40445544 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.408976858 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.404129046 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.400787193 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.416630154 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.405396 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.403042424 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.404818013 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.404833928 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.597061202 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.435881316 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.403571937 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.404213213 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.500883552 seconds)
  done (took 28.361777132 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.432815995 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.413738897 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.526617825 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.408712322 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.433500735 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.604916149 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.469849953 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.4083118 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.584006504 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.427940677 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.400294496 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.430705228 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.410177296 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.398302817 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.429295075 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.60603444 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.684862831 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.402713744 seconds)
  done (took 30.751054192 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.876273755 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.426643229 seconds)
  done (took 5.580701771 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.428194526 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.408793113 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.411109287 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.407359083 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.400871915 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.401109884 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.407453601 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.404194929 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.430014444 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.544879965 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.416747551 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.422679148 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.428375311 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.40994736 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.417285779 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.457267145 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.565606087 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.417714856 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.415978234 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.417388111 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.409124966 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.503817102 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.452352351 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.419808581 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.539077235 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.419494903 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.415873239 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.417234355 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.527682646 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.418835907 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.409910649 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.411312564 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.412147188 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.375564769 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.953751121 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.419128054 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.43537642 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.419009702 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.417010592 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.543849175 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.412943005 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.416920472 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.408282385 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.954629816 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.526447932 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.534481476 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.424068079 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.416076251 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.413520563 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.477223563 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.41181986 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.413467914 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.471113225 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.260100451 seconds)
  done (took 89.754767458 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.463522834 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.404435599 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.587889785 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.426383783 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.415399606 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.412899396 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.407380656 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.710840662 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.430017775 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.404566029 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.74289881 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.041807212 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.411627901 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.467344121 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.443839173 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.452404542 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.404443351 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.425294605 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.403463681 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.402818839 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.983151697 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.409983151 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.406765869 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.497129992 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.446140287 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.954385524 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.404437894 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.418788873 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.406551598 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.401928062 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.016109855 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.416982755 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.455076929 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.407850221 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.700686478 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.818513657 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.767323964 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.410317919 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.437078031 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.409585018 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.433100229 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.939083812 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.791563126 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.410195006 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.403606642 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.948918682 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.407817715 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.41248831 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.414340042 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.673856415 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.402899342 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.404912585 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.403265589 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.407742665 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.402715173 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.454803531 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.448389765 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.948010588 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.403312513 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.403222419 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.407229026 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.406507621 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.412126007 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.404814427 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.406692116 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.782933657 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.654494397 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.410535824 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.786098148 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.993179393 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.407935282 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.081415054 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.406766286 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.421514661 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.450215971 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.40177016 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.401419589 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.939534583 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.404358238 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.404738203 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.756683702 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.406909494 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.716430899 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.420070774 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.404002395 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.987387409 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.407123472 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.452504013 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.409718593 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.406603558 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.407808984 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.40475772 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.696185303 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.462224617 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.403425748 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.403581914 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.44272456 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.403707711 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.418092243 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.411074407 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.056821489 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.412283303 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.403028969 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.424064769 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.401720161 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.406596316 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.402915227 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.403869216 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.682132333 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.403336674 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.419765224 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.403284767 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.405903126 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.416904051 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.49479952 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.40970711 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.709996065 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.403440565 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.402531327 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.408484359 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.411130495 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.416946701 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.402073792 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.42982363 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.403459336 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.706008947 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.421957596 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.417732646 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.404377886 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.402441615 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.402408615 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.42670882 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.455909412 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.407867658 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.175089753 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.408713284 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.418976487 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.402276155 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.414898754 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.402769417 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.425408562 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.403088464 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.703183089 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.690349598 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.653004827 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.402719615 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.402357222 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.204740079 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.40498681 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.588071429 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.422501034 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.402521031 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.685379385 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.624905045 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.404098397 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.402020094 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.406872698 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.681250148 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.40253969 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.738221268 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.003845927 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.406748634 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.407341525 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.177805026 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.216536944 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.408583509 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.409026203 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.708269695 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.424984658 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.403893609 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.404171847 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.40484626 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.40193398 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.40798107 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.409546882 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.402681763 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.403121594 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.695229982 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.598085626 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.418968615 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.401432383 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.92893187 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.42472866 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.403225012 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.412554028 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.403498796 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.402426323 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.453595165 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.404040368 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.453239591 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.405862685 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.404344933 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.953436781 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.404084493 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.404913159 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.599260558 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.122896677 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.405282424 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.404791069 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.401877358 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.466966718 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.958197649 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.438960278 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.703120551 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.415344808 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.44550569 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.402550341 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.421186335 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.959530362 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.406047628 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.404084607 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.14505939 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.409641 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.884081273 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.403898443 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.405278121 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.06888824 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.409874675 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.409816317 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.412341957 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.407132339 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.721951827 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.405923785 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.437471009 seconds)
  done (took 515.341307831 seconds)
done (took 671.067632361 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.403047198 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.405020885 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.408031811 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.40761865 seconds)
  done (took 10.903705362 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.424943122 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.410004434 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.418984872 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.410719511 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.419896377 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.411771946 seconds)
  done (took 9.775575396 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.405659632 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.404777822 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.409212303 seconds)
  done (took 8.500171882 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.607744031 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.431647479 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.752939896 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.415124545 seconds)
  done (took 9.487991205 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.420119744 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.420025958 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.420679929 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.419964604 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.420249713 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.420755458 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.421285722 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.420194115 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.420702471 seconds)
  done (took 14.063244177 seconds)
done (took 54.012534788 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.487853376 seconds)
    (2/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.391266962 seconds)
    (3/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.438556263 seconds)
    (4/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.610602536 seconds)
    (5/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.695036983 seconds)
    (6/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.398824091 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.481248025 seconds)
    (8/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.497221706 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.440616947 seconds)
    (10/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.517879183 seconds)
    (11/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.610375594 seconds)
    (12/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.410432043 seconds)
    (13/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.70034492 seconds)
    (14/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.649601733 seconds)
    (15/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.419080475 seconds)
    (16/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.679253561 seconds)
    (17/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.528449529 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.491188415 seconds)
    (19/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.916910931 seconds)
    (20/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.387869447 seconds)
    (21/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.412158879 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.533079437 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.567242842 seconds)
    (24/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.388651298 seconds)
    (25/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.450183293 seconds)
    (26/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.384187696 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.571315191 seconds)
    (28/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.497176266 seconds)
    (29/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.515619401 seconds)
    (30/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.57589231 seconds)
    (31/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.502214859 seconds)
    (32/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.515320089 seconds)
    (33/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.613610809 seconds)
    (34/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.483919203 seconds)
    (35/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.382975834 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.507794616 seconds)
    (37/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.749178935 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.652831451 seconds)
    (39/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.386576353 seconds)
    (40/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.50842546 seconds)
    (41/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.385220592 seconds)
    (42/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.478332077 seconds)
    (43/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.409492242 seconds)
    (44/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.699188027 seconds)
    (45/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.44599303 seconds)
    (46/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.615347268 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.566253699 seconds)
    (48/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.613488636 seconds)
    (49/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.633148135 seconds)
    (50/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.489106589 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.568790892 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.519329086 seconds)
    (53/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.497257971 seconds)
    (54/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.397324395 seconds)
    (55/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.44317878 seconds)
    (56/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.488621727 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.5278266 seconds)
    (58/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.503702875 seconds)
    (59/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.476470393 seconds)
    (60/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.38575762 seconds)
    (61/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.505686498 seconds)
    (62/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.386739132 seconds)
    (63/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.48996344 seconds)
    (64/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.39248009 seconds)
    (65/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.594549832 seconds)
    (66/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.590073772 seconds)
    (67/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.479261152 seconds)
    (68/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.386835367 seconds)
    (69/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.576427143 seconds)
    (70/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.38727473 seconds)
    (71/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.459110212 seconds)
    (72/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.438478112 seconds)
    (73/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.494080195 seconds)
    (74/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.776404285 seconds)
    (75/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.391794139 seconds)
    (76/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.544470005 seconds)
    (77/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.601831872 seconds)
    (78/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.496560202 seconds)
    (79/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.403558185 seconds)
    (80/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.531102092 seconds)
    (81/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.595340405 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.513945561 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.470188187 seconds)
    (84/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.655213388 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.658746465 seconds)
    (86/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.724773858 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.535563308 seconds)
    (88/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.445332169 seconds)
    (89/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.443538142 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.569126372 seconds)
    (91/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.411018411 seconds)
    (92/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.64087879 seconds)
    (93/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.51251329 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.515573694 seconds)
    (95/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.490401961 seconds)
    (96/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.388114263 seconds)
    (97/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.56301358 seconds)
    (98/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.389235256 seconds)
    (99/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.388753573 seconds)
    (100/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.668916569 seconds)
    (101/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.421432724 seconds)
    (102/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.394216591 seconds)
    (103/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.570340218 seconds)
    (104/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.399322826 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.526420605 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.56452921 seconds)
    (107/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.442590456 seconds)
    (108/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.388730761 seconds)
    (109/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.57212579 seconds)
    (110/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.496661562 seconds)
    (111/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.672025636 seconds)
    (112/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.689920512 seconds)
    (113/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.457535088 seconds)
    (114/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.389307308 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.506781913 seconds)
    (116/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.57199401 seconds)
    (117/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.452969182 seconds)
    (118/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.499479973 seconds)
    (119/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.460909928 seconds)
    (120/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.464975516 seconds)
    (121/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.637873295 seconds)
    (122/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.493178646 seconds)
    (123/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.568003862 seconds)
    (124/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.545266161 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.523056293 seconds)
    (126/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.507398042 seconds)
    (127/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.528735113 seconds)
    (128/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.450458006 seconds)
    (129/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.396390198 seconds)
    (130/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.6814834 seconds)
    (131/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.486364518 seconds)
    (132/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.594947821 seconds)
    (133/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.442266354 seconds)
    (134/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.414831834 seconds)
    (135/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.589817181 seconds)
    (136/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.731824874 seconds)
    (137/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.481720974 seconds)
    (138/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.560210779 seconds)
    (139/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.531603292 seconds)
    (140/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.39464559 seconds)
    (141/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.422537931 seconds)
    (142/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.578237341 seconds)
    (143/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.561255233 seconds)
    (144/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.444275184 seconds)
    (145/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.447895409 seconds)
    (146/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.390809243 seconds)
    (147/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.398731327 seconds)
    (148/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.551237837 seconds)
    (149/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.557151828 seconds)
    (150/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.487363768 seconds)
    (151/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.486495373 seconds)
    (152/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.453495067 seconds)
    (153/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.833294891 seconds)
    (154/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.496842394 seconds)
    (155/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.392009292 seconds)
    (156/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.519693337 seconds)
    (157/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.583477821 seconds)
    (158/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.708450845 seconds)
    (159/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.534995216 seconds)
    (160/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.394729097 seconds)
    (161/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.428294378 seconds)
    (162/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.500538535 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.483625486 seconds)
    (164/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.436649078 seconds)
    (165/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.44778215 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.452212867 seconds)
    (167/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.475510177 seconds)
    (168/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.781055903 seconds)
    (169/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.414704785 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.536495911 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.443166979 seconds)
    (172/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.658001269 seconds)
    (173/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.600965164 seconds)
    (174/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.51755002 seconds)
    (175/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.62349282 seconds)
    (176/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.607597126 seconds)
    (177/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.467991316 seconds)
    (178/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.783256591 seconds)
    (179/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.39811764 seconds)
    (180/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.742691477 seconds)
    (181/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.570247915 seconds)
    (182/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.699462725 seconds)
    (183/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.540345926 seconds)
    (184/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.929853335 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.613072883 seconds)
    (186/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.776049614 seconds)
    (187/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.450092465 seconds)
    (188/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.395148154 seconds)
    (189/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.528448386 seconds)
    (190/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.394236039 seconds)
    (191/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.464485389 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.656810351 seconds)
  done (took 341.460305428 seconds)
done (took 342.743521151 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.443468739 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.509088119 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.422882999 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.424507147 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.424136928 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.415731011 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.45977168 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.42442692 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.438770434 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.439033553 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.418172862 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.450386851 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.438894278 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.435611198 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.457675021 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.425042854 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.424401643 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.440587278 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.440201447 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.443083203 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.427962143 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.427343852 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.452187628 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.42558057 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.437812922 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.432670394 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.431252776 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.421125634 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.433623656 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.442145133 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.416515395 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.433891654 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.442638687 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.436613053 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.42889658 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.435192469 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.427688681 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.510914421 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.447518185 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.43839994 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.433905339 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.442523432 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.431352091 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.432440087 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.437758051 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.453591898 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.434700828 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.441762713 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.417218256 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.434764891 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.446134078 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.441084724 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.435732483 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.421121864 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.418080859 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.443392885 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.438985387 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.448953633 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.436196277 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.429766858 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.462571817 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.447429333 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.440472739 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.437404236 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.437707439 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.443981229 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.438777858 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.444919298 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.435508012 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.431591426 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.431866848 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.436146338 seconds)
done (took 112.828870105 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.552576441 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.424664686 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.584085964 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.436610443 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.59541173 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.55445298 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.434094991 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.437666055 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.437007836 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.230925133 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.437731411 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.43623445 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.42850077 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.435913449 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.55246346 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.437511753 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.437020439 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.129477337 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.438454204 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.570552092 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.430242015 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.437143345 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.43869553 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.232838296 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.426966515 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.423382589 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.572133274 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.437678416 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.130936212 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.422437849 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.426985537 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.131346885 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.571574662 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.457169038 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.447622431 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.446649116 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.597361895 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.440745533 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.555515213 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.555503591 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.588380259 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.478889127 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.41893838 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.426017342 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.434941199 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.43506828 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.435279051 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.463111695 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.413478966 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.42351593 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.119952402 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.435901918 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.435018442 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.423567246 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.416785027 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.438366163 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.419745122 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.418771841 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.550735314 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.419248143 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.531738445 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.208651799 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.208570347 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.417099156 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.402500995 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.41582524 seconds)
  done (took 114.651393079 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.476490434 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.482088044 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.514392714 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.410218621 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.458304793 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.51499166 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.412769814 seconds)
  done (took 11.54565241 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.414061971 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.415427848 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.454316085 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.454242164 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.41812744 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.581407977 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.415925137 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.419185192 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.416204569 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.458498278 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.416917325 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.417393412 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.426982259 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.404696825 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.457392186 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.420346761 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.527313051 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.410815964 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.417780713 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.564431983 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.416921908 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.425800734 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.459885921 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.421303317 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.418470951 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.415906327 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.192588454 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.417760604 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.418930221 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.417562533 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.417604956 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.474775266 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.418014204 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.409054822 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.417972954 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.523637199 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.417429385 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.417083725 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.418080077 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.411116901 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.419095914 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.418064131 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.418680988 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.417730357 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.420242538 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.433765813 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.418746577 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.419477175 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.419546522 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.418848694 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.460062537 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.419767788 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.420513802 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.419126922 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.464106609 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.428683061 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.419904796 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.420082792 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.418203003 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.418666392 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.567113916 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.458676087 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.421558681 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.459193552 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.419692857 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.420363444 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.420229858 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.419320939 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.503502569 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.41913861 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.459090097 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.419582831 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.595063145 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.435298832 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.421844588 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.415211278 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.414654651 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.422875051 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.407460958 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.419213045 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.420600076 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.414028467 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.419678358 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.420903768 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.421968029 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.57210413 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.519959593 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.418869853 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.428862633 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.42131537 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.421068784 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.462697581 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.421662896 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.420672218 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.463182336 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.532458415 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.464869634 seconds)
  done (took 145.580616045 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.42662241 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.42648512 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.41799507 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.439799327 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.415032159 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.413890522 seconds)
  done (took 9.823988202 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.416707188 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.424936156 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.421835123 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.422383195 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.423695722 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.423672039 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.423835103 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.41592112 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.425559432 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.423250124 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.423716724 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.423183122 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.423011661 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.423290753 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.424833954 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.423794178 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.423819048 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.423543769 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.424503158 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.42313538 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.413218525 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.423502293 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.423875384 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.418548905 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.426977381 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.4237838 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.43908384 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.423683164 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.423549115 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.421364331 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.426832445 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.425199986 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.418919204 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.419818572 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.427816364 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.418817945 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.425854245 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.424107228 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.423382059 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.426008579 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.425221385 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.426632426 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.418563731 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.418970599 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.410552834 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.412760239 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.419979665 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.434155945 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.419211239 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.41641448 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.414422133 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.413988179 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.413964924 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.415480738 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.409934911 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.410101913 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.414593617 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.409394382 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.409967872 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.401954502 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.413389736 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.410465676 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.402555014 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.411704192 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.406295735 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.406363384 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.400192598 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.409235935 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.406682454 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.407299929 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.406676337 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.403055076 seconds)
  done (took 104.420955981 seconds)
done (took 387.318413646 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.670440857 seconds)
  done (took 3.938124852 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.41570577 seconds)
  done (took 3.691793422 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.224481575 seconds)
  done (took 22.496926458 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.397502663 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.405213565 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.379493203 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.387657065 seconds)
  done (took 10.831344373 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.661022933 seconds)
  done (took 3.922471441 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.397752304 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.390024869 seconds)
  done (took 6.054593977 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.580257813 seconds)
  done (took 3.844610057 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.695050891 seconds)
  done (took 3.960238738 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.395501801 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.412507872 seconds)
  done (took 6.082503791 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.359575818 seconds)
  done (took 3.624284762 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.597697288 seconds)
  done (took 21.863246319 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.401221607 seconds)
  done (took 3.662988264 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.407570843 seconds)
  done (took 3.665299164 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.848464189 seconds)
  done (took 6.104923509 seconds)
done (took 105.012415799 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.371122077 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.370525758 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.370343035 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.369540511 seconds)
  done (took 10.738363356 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.448089553 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.448792514 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.457588418 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.442201104 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.44332708 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.451842575 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.411944865 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.41066552 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.439892795 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.436400828 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.452180184 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.443075404 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.450911141 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.411426441 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.435935214 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.454626597 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.441585686 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.459067095 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.411331692 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.442854166 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.386664142 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.443458338 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.437858726 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.386446998 seconds)
  done (took 35.703486744 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.87296024 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.449703774 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.533337315 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.42818406 seconds)
  done (took 7.539705229 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.49099634 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.490994628 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.509409851 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.544767648 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.59325834 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.505025994 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.412674634 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.410076123 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.394907024 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.491084393 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.569098617 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.489950485 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.70590788 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.387184177 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.706480733 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.388187286 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.387368323 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.492597624 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.540997012 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.571501033 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.389475226 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.49109038 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.495579643 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.490690809 seconds)
  done (took 37.206987052 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.395951591 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.404863697 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.389580578 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.404655306 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.390155622 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.38977937 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.390779153 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.396225958 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.389204162 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.388873323 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.388986762 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.402795109 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.390317311 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.388663776 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.396975907 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.392163482 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.391836695 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.398374625 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.398875228 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.391532931 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.38859264 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.3967749 seconds)
  done (took 31.924961004 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.374905674 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.37308259 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.726734753 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.630045385 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.374528706 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.379823623 seconds)
  done (took 14.117630959 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.446634794 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.588338837 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.385673897 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.719441126 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.808148737 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.387573624 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.382301795 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.618044424 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.913091967 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.907548926 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.439975545 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.452501151 seconds)
  done (took 20.309455068 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.376401704 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.379803307 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.382839716 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.395638531 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.433080125 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.385229751 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.389695737 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.375166334 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.440768441 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.44417435 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.392218419 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.437459496 seconds)
  done (took 22.093407997 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464476671 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384878143 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.395710274 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457582007 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38374192 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381337965 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.453845393 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.101269989 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.39024245 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659005461 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376285207 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462997735 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.622571555 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376666666 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.397529048 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.341414231 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604626626 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846730872 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38041984 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381963716 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412880248 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.372668899 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378062659 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.580117113 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.379703838 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373232854 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.637595373 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.375482564 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.648856334 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629414529 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.628310595 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381378179 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650153814 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016021714 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484327797 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.57363952 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391127519 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.379295876 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.343338009 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.393788798 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396217524 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379892869 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.62390747 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382194401 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375262473 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384181845 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101618134 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.387891641 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.373415513 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.376270983 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626649603 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45907462 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.380224818 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376387929 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395061049 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375536981 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.380616332 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502179798 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014651913 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374738054 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389099831 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.380020956 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.370591821 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397681338 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008138504 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.38518006 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.383530258 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38361864 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377665544 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377993232 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419190575 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376565586 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.397078085 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377486671 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135498303 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381547611 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380380052 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898614541 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379484186 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.398140092 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.603696404 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377878097 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377128217 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.377931541 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.3766481 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095562361 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390668058 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.34456429 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423134178 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.099692618 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.582821749 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404749607 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409112674 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.59972616 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.345470529 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379378968 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.379351557 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381217471 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399843058 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.099267472 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383235261 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.385880312 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62601641 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.591242535 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38403826 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.350984893 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850675173 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396367956 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.408612476 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381367369 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.585949367 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.987678202 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637390848 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382571896 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418479409 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.382506024 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162858849 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397793004 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.390078586 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.379794168 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653241943 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.186743413 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385181311 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454311036 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380548725 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.380379241 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379281578 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397497028 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381283349 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.55989934 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38707299 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.638667096 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.383839633 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379472909 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.383323546 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381511977 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.384068094 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.603448618 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39079598 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662634812 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38244526 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382292539 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383071787 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.601468585 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.381681299 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.390560596 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.721718701 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384120555 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38986541 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63944653 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416166346 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49391357 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414630989 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.386471414 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.634978859 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.388630974 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.38852092 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383322911 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400220665 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387822516 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.392116188 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379935362 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992201993 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36168349 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389475222 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.38517232 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.399696055 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458656276 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392166825 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58633622 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.386923292 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392211302 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.39622131 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.384283685 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624071663 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636963875 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.386306922 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.561287321 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.850845951 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.992055148 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400544773 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.383878477 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.383604672 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.384453025 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386497466 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383456174 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385065655 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.587260631 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648656873 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382163157 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.994642898 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388853233 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392826129 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.394638963 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63702451 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.397864463 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385661159 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.394038959 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394436889 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402177822 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.645161792 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607388758 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.403875589 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.3868545 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.948388505 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.394744055 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386845967 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386714449 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412725342 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395192822 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217439727 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.727465585 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389334327 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64126543 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39099127 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.409592086 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.386450671 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390866012 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398311451 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.407476492 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412917196 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.59136735 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393714882 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390602715 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026941661 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154873068 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940418932 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392879962 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.394519441 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393206978 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.109309803 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392931204 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389707545 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631340068 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.113485109 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392949773 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860574156 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.393498169 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.132072824 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64834034 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616450015 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394671036 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.399984844 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645316253 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602928057 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415603359 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395739677 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396060596 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.35744909 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942059027 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398169836 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570340798 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136168207 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404550689 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39238039 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.470763793 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.395359912 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780458722 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394554484 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392041678 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390559483 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396336095 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225751561 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.397274446 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391904802 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026311757 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394892975 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.867855526 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397036679 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.5950584 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.653176539 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.621064633 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.391721956 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.408805413 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.639433406 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.645265552 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397936879 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.3911637 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951067737 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.256350114 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.399809532 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392867197 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171848255 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397911938 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.678621514 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.404144212 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.397355404 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401317548 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391234645 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393428497 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.392614572 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398335419 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367892665 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864864465 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.393961821 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392174599 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410203838 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397600659 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.640324404 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.41100381 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.999468615 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62413706 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386350081 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447304941 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.399114701 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393364515 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.368737923 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393793625 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393371666 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388660374 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.61483682 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.406668943 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.365715246 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.479591794 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608402761 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392781837 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394177396 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614149999 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.399954732 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.39640144 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159704263 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433289318 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394516349 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401844575 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408130548 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438015569 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467809425 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596300258 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.654493501 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.655107876 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789367718 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399134649 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401109343 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.410717834 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476820886 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393619949 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.402830179 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.399733982 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998696491 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160405224 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.014657102 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657490019 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403233542 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407135843 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397087728 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.636388194 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39513124 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672503436 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396010343 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.407620671 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421075692 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395527974 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402575421 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629674587 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670915915 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395340924 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405435683 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400342134 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.396690494 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655592181 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.614558886 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87379062 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933774312 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402763698 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408865167 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.129717338 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678434096 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398455603 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397683968 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397312522 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.40495263 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.409787355 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.410215309 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397621011 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628001272 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.650043424 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052582891 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.654291174 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.424804004 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.323465086 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398483054 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.651871234 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.231849126 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.604441148 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018757207 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.113594561 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658075906 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474328524 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.603481214 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.404047222 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638133802 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.399317778 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404845046 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401586974 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399827078 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.400704301 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.65445446 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.014520147 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655573823 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.405826902 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.399073375 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434572098 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.603090896 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.627713523 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141918726 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626266371 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659303709 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409823171 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40067584 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.021370362 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659343361 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403569179 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.408096223 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613814553 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.404911324 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438007975 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.276258832 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.401595293 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930280105 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.615189643 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423429771 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402776318 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.115918348 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024775556 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.414497161 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880628374 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404403477 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415983284 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68349 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.409393161 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401928973 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68900868 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.408553473 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.404052956 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613933593 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.017240976 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152846672 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.407199541 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406373193 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.40590298 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404766238 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460866096 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403689123 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404297629 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.796738964 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408659955 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406816209 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419532294 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.404862027 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412103931 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.408876568 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404050459 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.413089691 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.385406509 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.389840946 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.406888141 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532649724 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946752245 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407952616 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.049356338 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.742701632 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.652847827 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.407399074 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.376980926 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.412057799 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406371065 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404887044 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406430236 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402231835 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935321439 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.412509698 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.667718714 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.413923355 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.617342533 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618009917 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.411183075 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612554275 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423889403 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43405487 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.373750756 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406956632 seconds)
  done (took 988.806665707 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.417115752 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.413631049 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.410801085 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.474549322 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.423298794 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.416799387 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.423019605 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.474182534 seconds)
  done (took 20.733422295 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.413131123 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.407852611 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.413406301 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.408769284 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.405574274 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.881212634 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.405614257 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.405750994 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.419918523 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.40538234 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.408124844 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.025699463 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.407929518 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.405866283 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.412974751 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.413668208 seconds)
  done (took 32.92081166 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.108182967 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.425359105 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.957189094 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.439448348 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.434985779 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.399978318 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.544006608 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.412570702 seconds)
  done (took 26.002788625 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.41359041 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.413094004 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.413441448 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.413316181 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.413892784 seconds)
  done (took 8.349268239 seconds)
done (took 1257.705197247 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.416340732 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.414448524 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.41501827 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.415190088 seconds)
  done (took 6.94209924 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.37646863 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.378386674 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.377093708 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.393901671 seconds)
  done (took 9.80807369 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.069565399 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.925691716 seconds)
  done (took 5.277538555 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.923892275 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.920340754 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.915008284 seconds)
  done (took 7.042511901 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.680186134 seconds)
  done (took 2.962724602 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.35195643 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.405937862 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.40535458 seconds)
  done (took 8.446544341 seconds)
done (took 41.761217741 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.406425138 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.162993203 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.557011773 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.405196295 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.562389768 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.557773032 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.652112725 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.400345193 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.412868946 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.410244656 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.406172508 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.56027961 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.639226119 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.164699497 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.639581266 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.164252156 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.561244932 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.415726239 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.402527986 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.415126821 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.65369677 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.406671374 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.404051638 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.415152365 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.566539217 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.547143324 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.401814976 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.16565011 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.4026491 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.426019806 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.56607098 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.410451877 seconds)
  done (took 83.54620638 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.4021975 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.412837345 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.41043105 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.402401561 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.404432254 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.425309766 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.403547736 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.403698324 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.403524258 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.42761919 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.404115509 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.418812468 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.419913032 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.403415715 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.41935376 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.403362765 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.417591648 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.402667716 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.403644511 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.420240678 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.407350217 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.403279755 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.414449821 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.404124583 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.403319455 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.41728484 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.40281131 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.404377823 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.404109443 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.404102176 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.418045122 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.403709567 seconds)
  done (took 78.382055243 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.405007233 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.409864073 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.410239504 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.419530815 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.413746031 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.413516139 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.407540084 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.409756416 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.414097547 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.415440583 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.422406164 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.414210651 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.408740687 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.421114881 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.40955276 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.42198894 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.408487562 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.410041229 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.40996932 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.414889759 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.412561847 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.407535069 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.433726516 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.420798669 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.40817672 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.411173645 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.406125204 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.413229028 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.410625786 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.411698269 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.414058824 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.410890099 seconds)
  done (took 78.507273399 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.647653638 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.421232831 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.423790306 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.415897623 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.426334246 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.421764145 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.416119954 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.65208652 seconds)
  done (took 15.113203569 seconds)
done (took 256.831030312 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.415799238 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.897268812 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.448422445 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.416433146 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.437993274 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.445426014 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.619773618 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.44352243 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.605748016 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.418694206 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.433951491 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.425156444 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.209507426 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.557548408 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.197305012 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.32776983 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.283933109 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.418127818 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.9669053 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.632963403 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.4436092 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.415591814 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.217321941 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.298452503 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.390879551 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.482568634 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.478808041 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.568906967 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.531904397 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.478148236 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.898231634 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.438599149 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.435271879 seconds)
  done (took 64.971384623 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.415097123 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.425989738 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.424790948 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.423927576 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.424844149 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.424766138 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.416649891 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.425503488 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.425195945 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.426757543 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.425054618 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.425637178 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.425804961 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.425626401 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.425198421 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.398356951 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.414524051 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.42673003 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.416102103 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.398567817 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.42568862 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.425675794 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.426106385 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.424471573 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.426162341 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.427294527 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.426830454 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.427130408 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.42679899 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.427017727 seconds)
  done (took 43.969763887 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.426065158 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.985889333 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.150059757 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.429843814 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.417952267 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.422351283 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.700541529 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.432927987 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.42132907 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.422433354 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.871181948 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.437468189 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.451368593 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.157227329 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.427106244 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.429426459 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.429308721 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.421109083 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.995459266 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.433572622 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.699551639 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.434956321 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.700712242 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.435167962 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.423450541 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.420901599 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.425904913 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.201511543 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.444479584 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.875297295 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.179109777 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.699440557 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.158937698 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.209648994 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.186108675 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.435458509 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.429465292 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.878612002 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.427508092 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.421103383 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.698950318 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.427151342 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.171465784 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.11766312 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.442979578 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.43057705 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.233506127 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.881128322 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.660580132 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.432959588 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.195840103 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.42985103 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.432445836 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.422981987 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.656590411 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.429545119 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.42250753 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.272041467 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.43037701 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.700140749 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.436366488 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.422220137 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.991898297 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.427892423 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.990917836 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.431044544 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.43099445 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.425741756 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.170322849 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.429397297 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.133432955 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.445036459 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.432481251 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.879643129 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.994046791 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.286389947 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.429497279 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.996862462 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.1907738 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.719124689 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.431280081 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.178953457 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.723031339 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.432805586 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.435744276 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.434940715 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.432814028 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.496352075 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.69782403 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.049782037 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.125630296 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.283939132 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.708050009 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.436938943 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.426118449 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.280492847 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.43751501 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.434435982 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.158434735 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.137878484 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.447077743 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.431818404 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.120108286 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.448043989 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.705165717 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.434893449 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.199285761 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.431718433 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.504124794 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.434060726 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.432969124 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.429616951 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.703890681 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.433138449 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.43458687 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.114113355 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.90935222 seconds)
  done (took 198.156679844 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.423474262 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.420727171 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.42556993 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.41948265 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.419816763 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.426716151 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.420020132 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.419201772 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.424200814 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.418633459 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.422298042 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.430248769 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.427577301 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.421300957 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.429787447 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.420190567 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.421702768 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.437260089 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.421931916 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.420444763 seconds)
  done (took 45.770741369 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.437778299 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.976956773 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.942661732 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.443267584 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.438568896 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.426960382 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.482740903 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.442281564 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.437716587 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.720786067 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.599661057 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.443804937 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.436477705 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.437800697 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.940899248 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.41310095 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.721721959 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.982248664 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.442266789 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.976554339 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.414921068 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.439407299 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.428298084 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.977137534 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.735428456 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.708401529 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.491212664 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.984084823 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.44332967 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.438320875 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.977708945 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.44378913 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.430266717 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.963293875 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.444121965 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.452505544 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.439170291 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.486019758 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.490534147 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.727045303 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.989904328 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.718880586 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.455165695 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.61746888 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.442059792 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.407761616 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.989005793 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.44482918 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.410440471 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.442503605 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.446166918 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.951985792 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.436664285 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.953485966 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.44536473 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.443855843 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.97993088 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.95992227 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.950103843 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.601781898 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.436221543 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.708060805 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.444904791 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.989540958 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.445346112 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.440940197 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.441442328 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.599486491 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.984293811 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.711380527 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.728381379 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.726982268 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.444609643 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.495614303 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.446055938 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.724779994 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.500967564 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.828753953 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.731748796 seconds)
  done (took 129.279089103 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.707452007 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.551086508 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.805662256 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.996839975 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.929036721 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.582613784 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.548294461 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.67897698 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.441387849 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.546189724 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.068519201 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.529741797 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.187287763 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.500818765 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.543745236 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.560903287 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.825744374 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.37104295 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.060808094 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.045947367 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.439842459 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.53254466 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.940635064 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.63238959 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.445689162 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.986677381 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.361095635 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.946414776 seconds)
  done (took 54.072963165 seconds)
done (took 537.509119162 seconds)
SAVING RESULT...
DONE!
