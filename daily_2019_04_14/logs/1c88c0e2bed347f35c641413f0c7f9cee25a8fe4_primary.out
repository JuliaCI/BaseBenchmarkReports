cset: moving following pidspec: 25840
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.333140388 seconds)
loading group "string"... done (took 0.598241244 seconds)
loading group "linalg"... done (took 7.298326705 seconds)
loading group "parallel"... done (took 0.17031316 seconds)
loading group "find"... done (took 1.152620437 seconds)
loading group "tuple"... done (took 2.047526801 seconds)
loading group "dates"... done (took 1.301265956 seconds)
loading group "micro"... done (took 0.241437696 seconds)
loading group "io"... done (took 0.982470997 seconds)
loading group "scalar"... done (took 40.353030121 seconds)
loading group "sparse"... done (took 13.08300549 seconds)
loading group "broadcast"... done (took 1.030335324 seconds)
loading group "union"... done (took 13.70800136 seconds)
loading group "simd"... done (took 4.496423914 seconds)
loading group "random"... done (took 9.088106085 seconds)
loading group "problem"... done (took 1.97525172 seconds)
loading group "array"... done (took 21.549264107 seconds)
loading group "misc"... done (took 1.956324656 seconds)
loading group "sort"... done (took 3.266938346 seconds)
loading group "collection"... done (took 18.281291781 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.546179554 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142892684 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118800531 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.141200546 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.186113817 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.133485162 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.146202405 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086203844 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.0340349 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.171746292 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143592686 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.488947068 seconds)
done (took 5.112762267 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.258869409 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087659953 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097663725 seconds)
  done (took 0.891872977 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068816722 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127564 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082100676 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069129791 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06856416 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082689814 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068807429 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068396613 seconds)
  done (took 1.282412274 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075014543 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070043214 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086778212 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071125379 seconds)
  done (took 1.017723939 seconds)
done (took 4.247822752 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.908849373 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.241017094 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190915382 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.46121011 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.152177822 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.194147613 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.667502337 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.327643306 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.212143764 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102537932 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106995091 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.385020886 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110330441 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.670682297 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079256401 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.109350355 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.16213719 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.4334183 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083431155 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085281088 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106932387 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.145138692 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.10498827 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081866657 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.173129156 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070997629 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.150657344 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.099095983 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069956972 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.245680777 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.192844557 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.689739943 seconds)
  done (took 10.561984031 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101052394 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.118664736 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070429031 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140935622 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.11833933 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071993021 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071871082 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085850558 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09477244 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.160283176 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.117200565 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107788964 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082804462 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071765856 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.103084616 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213158892 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108519744 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086703823 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087948373 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077136346 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123242305 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083722493 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095461511 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079071364 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.15370063 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195427468 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111881173 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112005054 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070586219 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08191884 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132572094 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142751436 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067753229 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08309782 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.141870303 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.11154534 seconds)
  done (took 4.603012016 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.066362894 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.161548085 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092821094 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.153038328 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086865054 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110730616 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.084429882 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101906368 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25264159 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08656267 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.138936509 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.484734529 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132718899 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104276115 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070626481 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070058167 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.086524835 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.546047754 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.111784982 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.138933229 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084342983 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096014855 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.090306496 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.096455972 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086864591 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.07153704 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072478163 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.126675866 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.315898376 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.134794501 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089661645 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.23168662 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.110758875 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069573224 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121668394 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.181950689 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109081164 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124891574 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070485736 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068605067 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175210676 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.095105675 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067559334 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.085626947 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.09275297 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121812339 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.108471031 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.086654889 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.0709918 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.186475645 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.070222732 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.103551967 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.922643683 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.164942924 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.08464025 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069408396 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.295832135 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.104906201 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070602194 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066786768 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.291273354 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.15798689 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070352987 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.08752368 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069192308 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070558293 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.387292124 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071191805 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.670836291 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073378964 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079655243 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088013779 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070295775 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093368626 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076548171 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10477292 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070179437 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.070824138 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.086851974 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06895418 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08759388 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.09000529 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.208884076 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.087983068 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070366165 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066956372 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.106853505 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113797936 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.074218303 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068607635 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120914267 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072870338 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.086930678 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066741818 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.12456079 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069509748 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106194681 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.088161803 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.117823045 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.0858945 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.15152094 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074139381 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.115210234 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075696448 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11833109 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.098952787 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071345125 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.15876543 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067735344 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084795206 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.070125388 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068206619 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.088137379 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071420786 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.102167198 seconds)
  done (took 21.390036588 seconds)
done (took 38.335686804 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.300044229 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.096136109 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.096037455 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079064818 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.096483653 seconds)
  done (took 1.469925552 seconds)
done (took 2.241555333 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121251006 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117587362 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064571743 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113110883 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064720591 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117749458 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114659762 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082930798 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116294906 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067952664 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113663496 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066107269 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065191769 seconds)
  done (took 2.026260086 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086187439 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088580609 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088815475 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085150066 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082365782 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08624886 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082912446 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109319117 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083786278 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091577811 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068130618 seconds)
  done (took 1.721033339 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085650053 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087484815 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088646773 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084477154 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082019528 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085087749 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08296298 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106593138 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084076218 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093268275 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06701146 seconds)
  done (took 1.715204203 seconds)
done (took 6.22357976 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081954565 seconds)
  done (took 0.844691699 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.702242868 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.634138461 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08410484 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.135009114 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.222961908 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.155098927 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.444927307 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.114469262 seconds)
  done (took 10.439976579 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.104604106 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.087655467 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072650407 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086769597 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072613829 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.087173977 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071068276 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069396138 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088147316 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069847787 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08746649 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072673675 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088006 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070145281 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07369713 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085441791 seconds)
  done (took 2.120395217 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095375433 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093730774 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091311056 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077173869 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091195506 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073755635 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093492673 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075561727 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088167973 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074167256 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.093001613 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076190022 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088321523 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067579651 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.092315281 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077439879 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087987588 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076157622 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092159156 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078182893 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092461746 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067222533 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088272469 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076275551 seconds)
  done (took 2.882557159 seconds)
done (took 17.054645846 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.134630393 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078144937 seconds)
  done (took 0.983808955 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084270103 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100334744 seconds)
  done (took 0.961138836 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085886502 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082473273 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090425382 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094589053 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082807546 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067166508 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103961281 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068306931 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.08264161 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068516816 seconds)
  done (took 1.604061935 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070041442 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095434881 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071965418 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098245024 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076171708 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081367261 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074791017 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085060969 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079578053 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080334258 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073393269 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100730708 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073462766 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100742136 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074580961 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084698393 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087664133 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068727553 seconds)
  done (took 2.251723871 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069534458 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069833265 seconds)
  done (took 0.918019121 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070473003 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065287132 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083217616 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068473928 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080026582 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064327109 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080115318 seconds)
  done (took 1.291253684 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.401580333 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11035071 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.259057323 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072959262 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105519499 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.262224537 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084614573 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073100568 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089968719 seconds)
  done (took 2.276766141 seconds)
done (took 11.063212802 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080638128 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087539231 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111013076 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.41801863 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106548105 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067538423 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.143244808 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.210233557 seconds)
done (took 2.001677972 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.126283488 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.620111121 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.401479995 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212157653 seconds)
  done (took 2.016200851 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.381912197 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094738132 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076782542 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070050317 seconds)
  done (took 1.409020811 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069164605 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070567034 seconds)
  done (took 0.925958731 seconds)
done (took 5.261319576 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069892917 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067951778 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.081047152 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067530257 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.065916952 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.080612432 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06741346 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068196049 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.087310395 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.068273457 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.084536521 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069959902 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081676619 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065036565 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067496238 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.0815865 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064720731 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06544737 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083804312 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065217489 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065170058 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083091424 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065634498 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065272815 seconds)
  done (took 2.571334069 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087021191 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.085181165 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073814631 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089980097 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073094067 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089650176 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07528198 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068751523 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089279836 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070554786 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087055555 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072458401 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085715198 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072285467 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085840946 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073392598 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091274914 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068828597 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070409771 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087334346 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073108405 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083909205 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07282093 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090315684 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073053563 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088994241 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.072227559 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.085388046 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075798707 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.090138496 seconds)
  done (took 3.19304106 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074820084 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06733018 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.084359634 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074153561 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066999739 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.086057878 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067590348 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083999036 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068469147 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067072559 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.085282413 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067021078 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067428337 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084626451 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068697999 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086937513 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083989746 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067713856 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.082681185 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068201491 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069026048 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080926675 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065739436 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081556262 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065084816 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065127726 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081410241 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065031922 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066445546 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.082085591 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068827742 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06835238 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081577783 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071686166 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085406165 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065147623 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06929133 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080878632 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065642588 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065495487 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080524983 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06547821 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065014195 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.087178879 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06530698 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083862036 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066081962 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066843481 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082735515 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068799511 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081296995 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06559354 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067551212 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.0826221 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069488577 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065350135 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.082059149 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06595448 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082591742 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065635937 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064916274 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081316575 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068191331 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066392841 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096189027 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072311582 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080863954 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066894801 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066956216 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083593517 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06667265 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079343753 seconds)
  done (took 6.09214371 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118805652 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094256151 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085054411 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067790048 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081123252 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067032103 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070923936 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083845653 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069888123 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089153153 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067801207 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068586793 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084712649 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078125162 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082636436 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068124036 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087612098 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064194786 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066128772 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085164587 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066157466 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085246054 seconds)
  done (took 2.52866691 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.185232541 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08896025 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109967102 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091858972 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086546513 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075299747 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08760708 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071513856 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072267659 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087077289 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070595953 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088002057 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070135258 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086599869 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070120196 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086294506 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072554804 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086330908 seconds)
  done (took 2.378648117 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079137426 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067621262 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10676052 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06846589 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084756858 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07021583 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089346557 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076521785 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085598145 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068231148 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091958879 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070974244 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085969408 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068924728 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070769261 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083492127 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070318577 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083620596 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076958656 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089007096 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073418428 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092718506 seconds)
  done (took 2.550304443 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083073763 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069623195 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102184979 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08697048 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063964939 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066515059 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090090905 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067961592 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090680739 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06989035 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068472235 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082143679 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072515021 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084045599 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072853815 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083855351 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070636609 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067748605 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086326494 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064192969 seconds)
  done (took 2.339251332 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089932728 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086488514 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070453998 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093341484 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070389641 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085477338 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077745725 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.084971839 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069392587 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109075714 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069883331 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085140645 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077256657 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090404313 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069580504 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092897858 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076767831 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092227841 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069420201 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085327891 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110238055 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.178253935 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093910566 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069433633 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085368286 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068948155 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069521676 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089375128 seconds)
  done (took 3.21299507 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069387731 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067807864 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082768678 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066337335 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065625878 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082466999 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066092675 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06552289 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084283442 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065845288 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068061929 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.08402385 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068373676 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083515134 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068202854 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068112672 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083757609 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065456005 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066230565 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081608963 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068089384 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068004498 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083668911 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066784992 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081760682 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067767211 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065845369 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08146664 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068118778 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065891087 seconds)
  done (took 2.972100384 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079846579 seconds)
    (2/2) benchmarking "in"...
    done (took 0.093521238 seconds)
  done (took 0.979048195 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067492273 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084088091 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084397007 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072749295 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090805912 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070656101 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094188098 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073481635 seconds)
  done (took 1.441240591 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084901041 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080725727 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088222624 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079718095 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095170302 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084820646 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155720895 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086681993 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075687861 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082924853 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081722592 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068593529 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091079126 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06845008 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090528073 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074681806 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066567406 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090248839 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071186777 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.084002266 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071054207 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09271307 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070780767 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064687141 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085565637 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077256527 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095310775 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069716158 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087715268 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076168183 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089408765 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062390469 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068088157 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.084919946 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066953564 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094092414 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082754689 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087172688 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076814912 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069803453 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09461253 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063709162 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089312132 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075332633 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09442943 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068456113 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085632399 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063782787 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066591159 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086515983 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064153135 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068676795 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079913022 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075853991 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087716124 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079164366 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086721334 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069927881 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070682148 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08776251 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074602485 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086436209 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07083211 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068696681 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094682949 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073733566 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093256799 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064496371 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062920068 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083118219 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077960093 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107261716 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074619314 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085376848 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069251714 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082293242 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071165774 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069597674 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08972911 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075008212 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084626014 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074662922 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092325197 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068359402 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071006683 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091747327 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067060083 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086335436 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066099154 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100509748 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.0677047 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082855858 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066122493 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079052888 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088245334 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069446371 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082555871 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074918963 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063625753 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085603172 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069740407 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084974725 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078371369 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090032565 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073997237 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093023894 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075526143 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068224186 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088104565 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065509905 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085849189 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066700293 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075400891 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079254429 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071204757 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085686312 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068589916 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093503648 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066449947 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069055407 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092149518 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074359202 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083613672 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064981529 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071076571 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084941037 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071632086 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092482856 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068380795 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064125686 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080281681 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072621384 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084974958 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072587278 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089651143 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071671235 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063145965 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082912299 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07365119 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093899184 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069032435 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08523183 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073310213 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069039955 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083871922 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074691112 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086997752 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067855927 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073206738 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085235161 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064661801 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088677052 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070823637 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06745744 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08865875 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071845462 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086995417 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069407219 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083875278 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073618123 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069477088 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083760034 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069025202 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083677267 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078342883 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069990506 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.081204301 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066625816 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091975074 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066505978 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067609103 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084096563 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07061133 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086101457 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067204765 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068028562 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086669324 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078983486 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089344829 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069332077 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090917591 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07938085 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08518512 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071098217 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068981534 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086678595 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070107402 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093156896 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073900503 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089280546 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07151691 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065113997 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090657022 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075104213 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083876805 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067251051 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066887313 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088613015 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073798646 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08875021 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.0694248 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083212819 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069142053 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071854838 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087693701 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068633791 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084535753 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073923116 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084524771 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075046329 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069350734 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094784391 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071352809 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080691516 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072069683 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083387354 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074927378 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063668261 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.0827314 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067720457 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086479318 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067737159 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071335243 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079262942 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075378309 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092928239 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069064173 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067660312 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085594332 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076180775 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086523215 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071972104 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07157652 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091304138 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078761175 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084736982 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071255148 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096410687 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.069235558 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063290775 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090261694 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067361327 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084596785 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068299292 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066753341 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088385766 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077258913 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092242979 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063072074 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08810208 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.068488903 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066933906 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.082177884 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072699506 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087213788 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068733756 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074583806 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086100446 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069315474 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088856925 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069185895 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068732075 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086994583 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071798702 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085696142 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07057841 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084431563 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070661842 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067688746 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082900031 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070114263 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085349843 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068286258 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074358448 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084700245 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068648224 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086728997 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068930966 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069281713 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085469961 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068423966 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087638294 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068410409 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068434088 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08765461 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064259425 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091916884 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068471282 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076214464 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085764302 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065682402 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090930759 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070465696 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.089873077 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069453599 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070262398 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086735242 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068900298 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.08767066 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075165146 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066244292 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096185546 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076198179 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085791338 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071456869 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085896648 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070324143 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067538306 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.08571433 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069601105 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.0849979 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068489501 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073195553 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087521745 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069142005 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087017099 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069466409 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068487 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086150399 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063716938 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084483388 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068821966 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068103996 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094779937 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068830931 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08464574 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06799397 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069236444 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08532461 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.0655486 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092667189 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077371625 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086513329 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075436948 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084718863 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069730396 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07810851 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080049787 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067272453 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08362465 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066056924 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075260785 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085814733 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077433746 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086026687 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068077455 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066051676 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086055047 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067688636 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079893602 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065941047 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071476509 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084652023 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067735258 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085880198 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071536382 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069281005 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094763756 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068034848 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086111819 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.0683216 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065188743 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084462144 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068000439 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088169494 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069722161 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066213289 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082914745 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069037287 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086223427 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070343305 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06903462 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086319305 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076052709 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086023566 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071958542 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071679196 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.08394407 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071904196 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086068837 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068459612 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067711175 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089018595 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071780332 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086759532 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07711039 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085668049 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068971161 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068989575 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084293109 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069121998 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085923967 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069014973 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067063566 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086522748 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076534981 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08327453 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071467498 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067443444 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08595266 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075041117 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086763965 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071623595 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092250089 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069762021 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070153244 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093293052 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07169454 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087861797 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070282383 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086472755 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074205342 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067848822 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092019317 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068580188 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086116618 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.07026245 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066778536 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084899978 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068744464 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084314294 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074281705 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069112952 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085214452 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068245356 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083769375 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069203079 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071491032 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093081203 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070607423 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08859911 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06495938 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065371924 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087293498 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066260851 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086230393 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072040536 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073387623 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088135446 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069071626 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084969247 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077841933 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090780834 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072418575 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065872789 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088918947 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069839671 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088559546 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069738534 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06815142 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088526251 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071978582 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086847693 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068226596 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07557358 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089338165 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068945575 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087215835 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069617081 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068172651 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.08180722 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069370994 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087653747 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073394127 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088017088 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068881224 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078527235 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083252734 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069255686 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089637426 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069805652 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072703696 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.08164694 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069953896 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086452869 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0704479 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064139196 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085123037 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067406908 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087785007 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067817759 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063661166 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096330809 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077659218 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088645955 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068234339 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085065092 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064302052 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063933706 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085005009 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069749695 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087434493 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078255041 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067788713 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084308929 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064733204 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085921512 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071262958 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07127699 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083673827 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064138183 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06641629 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089368173 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073737558 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084507198 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069354527 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089062708 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070973394 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06627443 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089344675 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06615016 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.088795779 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081060875 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.086369603 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069378017 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074409998 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093780615 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069753525 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081051828 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06996578 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088352263 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069932605 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070626854 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087825636 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082957597 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08939029 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067903409 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06697233 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088478658 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068188331 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093563589 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069960111 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086622904 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07332528 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070025949 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094749115 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071267942 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093590893 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071647434 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088876062 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068454538 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067856518 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.083804613 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06751716 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.087394817 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069389546 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09047227 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076635922 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067473003 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097703172 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076417127 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089629597 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067656933 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087714638 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069711204 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.066342218 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.089761865 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.069641761 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06849093 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.087297527 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06808999 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.08651006 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073354774 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068918911 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08663082 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068838577 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081321614 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070126111 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070771426 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087159499 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066328843 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086010469 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069646574 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072235426 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089228553 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066678373 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087206233 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070298722 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068915403 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081370749 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074533316 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085305564 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070674266 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067951911 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086144316 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069316651 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089331819 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074434926 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087982344 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070815767 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077040403 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089217524 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066881745 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.083052543 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074302715 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067244736 seconds)
  done (took 47.059108406 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108969855 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08395767 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063761905 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081613304 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076005671 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083470744 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0641298 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064852831 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082792525 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067613787 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081148295 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063923056 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090849862 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087741209 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094017967 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069002186 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082307342 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065198978 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081256475 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06553742 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091325299 seconds)
  done (took 2.500539687 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07754553 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.092045609 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075833195 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097839437 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072183013 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093504552 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077372867 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09344813 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098298748 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071070057 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.09890872 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074429408 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089482057 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072351285 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089082299 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075352234 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.099399034 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072932044 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.093001042 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077009068 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092587405 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076441969 seconds)
  done (took 2.708056243 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069586639 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06822705 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086502788 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063986302 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067115325 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081231105 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071434824 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083942252 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072093905 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.0745952 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084533901 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067495938 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086576007 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063521319 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068400876 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084027748 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.13288552 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071710361 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067364243 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087741956 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063702237 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087277782 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063808415 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063623425 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.085355182 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072555927 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087015545 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066696112 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067363872 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085015617 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067987179 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084160283 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068851998 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068248286 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085075899 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067510907 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067238887 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085615647 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063791635 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083652572 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06882849 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063591536 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08683527 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06993727 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065619292 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.083720192 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069704714 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085927421 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063767647 seconds)
  done (took 4.549782023 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.089090831 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130484556 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088821697 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091233146 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.103338521 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094586761 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071847399 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111741947 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065481619 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085578853 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084412967 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.104808471 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088103804 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072830906 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.089942628 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067903238 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06829448 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085418168 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072208315 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085356674 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072099274 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.092449312 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100534117 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082069899 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091500011 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06721899 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086079971 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072239421 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.101042141 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072430429 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091792542 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073898667 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.10143716 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070381718 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.0859038 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070694372 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.10233628 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067901095 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08798634 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.0657787 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088202354 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073253643 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.092311851 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08489162 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086662666 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073423966 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086504256 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06613567 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.099335955 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.07040263 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.094067968 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.10117394 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07243038 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06803027 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090585651 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.102607177 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068912584 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084552923 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072618141 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099895246 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06877959 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072609786 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.103669764 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.089391962 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07678363 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.103875963 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.075197809 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092367977 seconds)
  done (took 6.744686049 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079674611 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094752294 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084695609 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104804337 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095235492 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077757287 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095064025 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076895113 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094330686 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081165685 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095082652 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116292127 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.07202279 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097351381 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07715504 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095564608 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076859329 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096561214 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077118629 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096408534 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.09491133 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085925342 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095590337 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102834882 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106709306 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.090920516 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07693157 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.095778528 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084701844 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.095202278 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106391326 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076977078 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.09505707 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103669697 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.088989328 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09482362 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069910861 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095104719 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077512338 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094666397 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072740604 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104399059 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076498783 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.09111839 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076581259 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.095160782 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103795391 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.088226238 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099248459 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099714549 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.078068451 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104292226 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076791541 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096496771 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103452675 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.110539017 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103717211 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103156473 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076591457 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.104261534 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103082633 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.111282189 seconds)
  done (took 6.556884349 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091654215 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098442702 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.10069617 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065938141 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067553133 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093699604 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06870619 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.087201826 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078546875 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09780156 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081301448 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092075622 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076965908 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101590138 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092498565 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077123294 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093159051 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074643804 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098140473 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074621202 seconds)
  done (took 2.574644784 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078153071 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105482291 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069187006 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073637264 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090823212 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073821169 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089328286 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071290013 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087229065 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071803976 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096405266 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079350487 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086957053 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074989554 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096497827 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073388279 seconds)
  done (took 2.184322897 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082047079 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.099980192 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08495743 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090218537 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068629719 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08609308 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070643727 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.066119508 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085445724 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084814606 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089705747 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070967604 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.088175221 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066404133 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064554367 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089883299 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064671295 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084781786 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068406801 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.100512346 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079686934 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085406777 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069431857 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068869845 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.087818736 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073420411 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087498513 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065897502 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085517283 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069202482 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086875435 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07562721 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083713681 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066774176 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066113453 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08367887 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068445417 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086809239 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071381866 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066969677 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.086031808 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068370564 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08613893 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070188046 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083073487 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068860221 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064613074 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093215827 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066206997 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087283829 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068139588 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088305663 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069658421 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077622079 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.0912638 seconds)
  done (took 5.17484631 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082764788 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070547946 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082604156 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067146721 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090955335 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070081966 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071365222 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090316851 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069799721 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085384094 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070333975 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089377522 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070626847 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071585851 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088531768 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071570036 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083104839 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070342984 seconds)
  done (took 2.267564614 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075155016 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067828755 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095008247 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068129064 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087858067 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070435928 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063842613 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085833325 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067177318 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086367945 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068145516 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070293663 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085497376 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070756091 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086419707 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06822257 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070689888 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085024445 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068439391 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08241509 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070893791 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06629622 seconds)
  done (took 2.532587965 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075758845 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.097747369 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.16839264 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.111897063 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.086739705 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.1034349 seconds)
  done (took 1.517364176 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095043694 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103425332 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07124986 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111302343 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07864525 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091914163 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072780584 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091461419 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081841515 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104245632 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072313612 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102083325 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100124461 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081169069 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097650668 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077737085 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092492277 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072793117 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090387182 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109758691 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073995646 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099922987 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073350583 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091204238 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073028071 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100259422 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080479385 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106411468 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091276766 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081345956 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096345395 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072641636 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099485209 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104280312 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073860691 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099413915 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073189571 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10945519 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077608295 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10102549 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073838692 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099079933 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099767301 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077719283 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100726457 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073378814 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097436792 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072038069 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092973735 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117307126 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078904308 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100294141 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097318262 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081514514 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100101178 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118032954 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085650542 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099782925 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097289057 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085827996 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099774391 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077434826 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101850987 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10493857 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078283819 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100350437 seconds)
  done (took 6.863981413 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089669389 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109418042 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072968276 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105813603 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100011778 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072724446 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091103853 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072730217 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091435903 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072264894 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133120592 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072615291 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100678603 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10029238 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073369975 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091832285 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07358648 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100489702 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072301051 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117661814 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09092982 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081346506 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100322609 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099488108 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085421764 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09750453 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072326253 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092015434 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072458194 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092521537 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078333623 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09289699 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099192359 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072787493 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100352213 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073112375 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091586829 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07786582 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091706857 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07779452 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100041818 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108411263 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073101304 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091865196 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085802192 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09270037 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071644568 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091457195 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071566856 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091788021 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085329719 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106336723 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105306904 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100255789 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073135381 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092175647 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073282284 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092525294 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073531204 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097735094 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080457029 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092356605 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116236862 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072680759 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092097361 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081383221 seconds)
  done (took 6.746698864 seconds)
done (took 131.026688015 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.220621511 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186432782 seconds)
  done (took 1.281389863 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072531607 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09941537 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.102733754 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132955675 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087683019 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10382726 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120081553 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080437465 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068449864 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.090557702 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071527661 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091288293 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135848398 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068657943 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.089332376 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072475408 seconds)
  done (took 2.370259756 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106685913 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.205198542 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.113446466 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069272146 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103186499 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.082248699 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089287847 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080691742 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098496357 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069868483 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.081548934 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.100346398 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068532412 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.099832579 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078237032 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.102391033 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06876539 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101365923 seconds)
  done (took 2.604661633 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10811288 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146840221 seconds)
  done (took 1.137880737 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.205387396 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.12373744 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201836459 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.424154 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.206264886 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.278382871 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.175068033 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.171977579 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.156921885 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.170381609 seconds)
  done (took 2.994224413 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103864076 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.176240553 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318626788 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.143571944 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.089779969 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.120642183 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.143473208 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.094140455 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.105236171 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.103886415 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084338724 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.102772973 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101792858 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.100502632 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.079081842 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.101876059 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125659292 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.078704743 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079476223 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100704559 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.122421702 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071175068 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078560654 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.098781975 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081179098 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.102397372 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069150461 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.090625808 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.08003864 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.098471242 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.082951569 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.118664198 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.101424632 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.134896364 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.085664529 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.13532379 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102306517 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076434501 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.099171875 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077243113 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.102272617 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.08108362 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.107872702 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080946952 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.090046545 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080961758 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.08947566 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070525446 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.102965627 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.080789819 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.103386833 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.083288789 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.133474512 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.101649472 seconds)
  done (took 6.453347039 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.755626033 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.114173008 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098388369 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.808553091 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090342838 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106571254 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.710835308 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118586615 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209481528 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.760256742 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.090120317 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099299428 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.180256758 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.234409544 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.881232067 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.28124901 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.631844369 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105770957 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109907171 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.132795884 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138615152 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.175684899 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.150539945 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.436908139 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076176375 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092880202 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138422109 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075576587 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161054729 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085396464 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094966672 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155045127 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.225418989 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.155245033 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096979756 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07087788 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09313321 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.14817567 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.218878429 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.189639805 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.158538997 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068879181 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092095452 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140273371 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130775578 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069323362 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138918424 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172555912 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.148056123 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074439843 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096385626 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.142142143 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139394907 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.142287254 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.102023019 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.261385279 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.282187911 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090989518 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100041221 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105783081 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236648771 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084174076 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.199415009 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140341716 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.166897589 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092005794 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.731502744 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.147030646 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092565405 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075492842 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119111739 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095289412 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.140051661 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144783382 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.369330245 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.142515431 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074113616 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091739675 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.210162357 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103653511 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072230288 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141944393 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.096226435 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10233887 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.164325056 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143229831 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.146444531 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.207790375 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.141914646 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.160063043 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075506818 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125350598 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.075945924 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211536526 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.170720303 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.140298443 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.20605992 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140090416 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.142171852 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.147218159 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097678187 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.149796959 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120452167 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081416743 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138206069 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.189393796 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.122641203 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083080265 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095360397 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.139357516 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.126445342 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086328113 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.160524422 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.148893172 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.454013373 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.145776094 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.08960723 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087623728 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13886419 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.14050166 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097924399 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.233750977 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102494063 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.16794809 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100172789 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.091178914 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120391858 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.141928114 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07855298 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123395866 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.158621011 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079233738 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.21450186 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.190492652 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07867746 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.214661935 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.162174638 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076594201 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.148283576 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119869512 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145576189 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098695307 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138950876 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075861075 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.766211868 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142853479 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121140023 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073752814 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177869225 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092050951 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08350808 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.104448286 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069212677 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.747373906 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085541204 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101729706 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082541137 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096764891 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121229551 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136452866 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07324281 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160046061 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.179261832 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097905869 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119246107 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084295809 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.139429827 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.097553108 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.083319601 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.106116991 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104357195 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123097238 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075267561 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.1037317 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147347436 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.141726226 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.192073222 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.541795654 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071378274 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10527509 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.198543049 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072530521 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.262069654 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1387383 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.198546851 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141660695 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081563153 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.286170831 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.143957759 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.178546132 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.085638049 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.171666864 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070180016 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137691684 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.141522992 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092398193 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076787562 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.141090554 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.165924517 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.143142611 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.918728763 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093791884 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.204422972 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069306288 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.148204537 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098256162 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097736791 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.240449582 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092792173 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146555549 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142778968 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073571513 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.105282825 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.672690753 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.105793386 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138437845 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095776088 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.172075568 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.142477108 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.156077292 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.138470297 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076891557 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.139986661 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.184994022 seconds)
  done (took 40.410680502 seconds)
done (took 58.137470085 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.267554811 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.184790524 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.241788474 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145133752 seconds)
  done (took 1.824655714 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.149745935 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.109271195 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.123923736 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.089723617 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.107618575 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090010182 seconds)
  done (took 1.577636752 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.41956405 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.282232168 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239663492 seconds)
  done (took 1.850332629 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.267258683 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.221596559 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.457609432 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.306584166 seconds)
  done (took 2.296546587 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.180025599 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118975411 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071220589 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.110972724 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.164911736 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.261239357 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.133693474 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.193693129 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083865541 seconds)
  done (took 2.275952135 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.20462466 seconds)
done (took 10.940521435 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.298565458 seconds)
    (2/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.100242277 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.201765921 seconds)
    (4/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.200299326 seconds)
    (5/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.168303643 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.084961654 seconds)
    (7/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.258070412 seconds)
    (8/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138819151 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.103267551 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.080532367 seconds)
    (11/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.311121094 seconds)
    (12/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.110005423 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.135649645 seconds)
    (14/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.24318173 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.112178011 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.134798107 seconds)
    (17/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.092112339 seconds)
    (18/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.093439467 seconds)
    (19/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.271492259 seconds)
    (20/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.264188963 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.122009744 seconds)
    (22/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.080675871 seconds)
    (23/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.064182041 seconds)
    (24/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.168351371 seconds)
    (25/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072218138 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.118406279 seconds)
    (27/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07400275 seconds)
    (28/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096519738 seconds)
    (29/309) benchmarking ("sort", BigInt, false)...
    done (took 0.214518618 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07561715 seconds)
    (31/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.183243683 seconds)
    (32/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.077000343 seconds)
    (33/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.101583912 seconds)
    (34/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.076037505 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.098303796 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.140262087 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.18850474 seconds)
    (38/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.236366421 seconds)
    (39/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.15961191 seconds)
    (40/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.105950175 seconds)
    (41/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.081998541 seconds)
    (42/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.095664312 seconds)
    (43/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.124520269 seconds)
    (44/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.260474562 seconds)
    (45/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076195006 seconds)
    (46/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.09778197 seconds)
    (47/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.19611 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.098859002 seconds)
    (49/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.182884496 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.205209426 seconds)
    (51/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.203382445 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.104260839 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.09231321 seconds)
    (54/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.28191161 seconds)
    (55/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.259785814 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077280404 seconds)
    (57/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.057179373 seconds)
    (58/309) benchmarking ("sort", Float32, false)...
    done (took 0.155014302 seconds)
    (59/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.097175878 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.120271108 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.056091375 seconds)
    (62/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.262556001 seconds)
    (63/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.240783237 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.093795923 seconds)
    (65/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.08978755 seconds)
    (66/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.054617204 seconds)
    (67/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073413315 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.094181988 seconds)
    (69/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.241037411 seconds)
    (70/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.080052082 seconds)
    (71/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.056902026 seconds)
    (72/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.118780686 seconds)
    (73/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.246143549 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.172620095 seconds)
    (75/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.12707072 seconds)
    (76/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123614176 seconds)
    (77/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071191416 seconds)
    (78/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073862462 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 0.094882632 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068080957 seconds)
    (81/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.258288924 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072575011 seconds)
    (83/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.106127424 seconds)
    (84/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.2368918 seconds)
    (85/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073966449 seconds)
    (86/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068963696 seconds)
    (87/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.10264049 seconds)
    (88/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.216835424 seconds)
    (89/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.124438652 seconds)
    (90/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.05414308 seconds)
    (91/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.091692261 seconds)
    (92/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054878352 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.180669946 seconds)
    (94/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.052825715 seconds)
    (95/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.104095594 seconds)
    (96/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.135645165 seconds)
    (97/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.260148259 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.113195657 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093741205 seconds)
    (100/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.258994745 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.140421932 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.099607788 seconds)
    (103/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.097885312 seconds)
    (104/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.166444251 seconds)
    (105/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.055742208 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.080538298 seconds)
    (107/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.162294421 seconds)
    (108/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069218699 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.09856372 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.146055523 seconds)
    (111/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103923191 seconds)
    (112/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.100812919 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.125392822 seconds)
    (114/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068837407 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.158713884 seconds)
    (116/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079121662 seconds)
    (117/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.091550642 seconds)
    (118/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053635779 seconds)
    (119/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070685937 seconds)
    (120/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.100314138 seconds)
    (121/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095129412 seconds)
    (122/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.070561114 seconds)
    (123/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.123780577 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.265154465 seconds)
    (125/309) benchmarking ("sort", Float64, false)...
    done (took 0.127399142 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.150553197 seconds)
    (127/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.101377239 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.161201895 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077624932 seconds)
    (130/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.159751348 seconds)
    (131/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062989544 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075199447 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.092312264 seconds)
    (134/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.071758429 seconds)
    (135/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.09781946 seconds)
    (136/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169076489 seconds)
    (137/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.101330996 seconds)
    (138/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.240619613 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073998579 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075731875 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.097880058 seconds)
    (142/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064630399 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.166551601 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.071835222 seconds)
    (145/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.104378049 seconds)
    (146/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.081488339 seconds)
    (147/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.057068459 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.092406079 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.079136846 seconds)
    (150/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.091692294 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069956877 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.071813936 seconds)
    (153/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079267961 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.097312898 seconds)
    (155/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.171371356 seconds)
    (156/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070989311 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.097918573 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.118356909 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067025152 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.111992885 seconds)
    (161/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.100359375 seconds)
    (162/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.101026784 seconds)
    (163/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075739141 seconds)
    (164/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.088901319 seconds)
    (165/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065848789 seconds)
    (166/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076741548 seconds)
    (167/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.07548511 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073144737 seconds)
    (169/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.076231447 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088338745 seconds)
    (171/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054180431 seconds)
    (172/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079701355 seconds)
    (173/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.143192587 seconds)
    (174/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064722187 seconds)
    (175/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.104093622 seconds)
    (176/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068210459 seconds)
    (177/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.253628687 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06844077 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.122488546 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091705209 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096205873 seconds)
    (182/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.079047136 seconds)
    (183/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074929566 seconds)
    (184/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.131857197 seconds)
    (185/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.470017019 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.095822957 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.196030378 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077351111 seconds)
    (189/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.098717256 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.0994156 seconds)
    (191/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.07849899 seconds)
    (192/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.054088679 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093919356 seconds)
    (194/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.121612033 seconds)
    (195/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068709414 seconds)
    (196/309) benchmarking ("sort", Int8, false)...
    done (took 0.166040769 seconds)
    (197/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.077468495 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074246833 seconds)
    (199/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056020791 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.120005586 seconds)
    (201/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054891448 seconds)
    (202/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053702849 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.090072826 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093397545 seconds)
    (205/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.237117424 seconds)
    (206/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05635574 seconds)
    (207/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.084958584 seconds)
    (208/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.114858959 seconds)
    (209/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061985448 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.089808801 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067836104 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.163430889 seconds)
    (213/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.101070094 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.098850257 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075383418 seconds)
    (216/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053848347 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.146816738 seconds)
    (218/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070164071 seconds)
    (219/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053452538 seconds)
    (220/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.07622256 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054170136 seconds)
    (222/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068328365 seconds)
    (223/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.091586238 seconds)
    (224/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.0912586 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.113748572 seconds)
    (226/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070231759 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095103892 seconds)
    (228/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067300283 seconds)
    (229/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075593853 seconds)
    (230/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.090559222 seconds)
    (231/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062740186 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066833051 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.145762892 seconds)
    (234/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.054856811 seconds)
    (235/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.075507286 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140898346 seconds)
    (237/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.093359903 seconds)
    (238/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053747662 seconds)
    (239/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.109277196 seconds)
    (240/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113627105 seconds)
    (241/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075586001 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.110440941 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.202266606 seconds)
    (244/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053623803 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067752541 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054117206 seconds)
    (247/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.194150144 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088574284 seconds)
    (249/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070965734 seconds)
    (250/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05410685 seconds)
    (251/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063739508 seconds)
    (252/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.076781592 seconds)
    (253/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.07034265 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073623242 seconds)
    (255/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.097931554 seconds)
    (256/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.078227342 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.088665277 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067015345 seconds)
    (259/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.053933499 seconds)
    (260/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.074329901 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077255085 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.158115115 seconds)
    (263/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136538963 seconds)
    (264/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.075784746 seconds)
    (265/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054633955 seconds)
    (266/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067442025 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.155949062 seconds)
    (268/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072553838 seconds)
    (269/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.097367882 seconds)
    (270/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084768984 seconds)
    (271/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.089458148 seconds)
    (272/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074373055 seconds)
    (273/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.250945935 seconds)
    (274/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05365448 seconds)
    (275/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071957199 seconds)
    (276/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.076752546 seconds)
    (277/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069880879 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053440392 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.126787579 seconds)
    (280/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068384109 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.097343909 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093395164 seconds)
    (283/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.08975268 seconds)
    (284/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.054640469 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.099587095 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.089238301 seconds)
    (287/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.054474727 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066619784 seconds)
    (289/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.085772801 seconds)
    (290/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054219698 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.170049097 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076821178 seconds)
    (293/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.053734252 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.097490597 seconds)
    (295/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054178773 seconds)
    (296/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063041 seconds)
    (297/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104219676 seconds)
    (298/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063893968 seconds)
    (299/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082913432 seconds)
    (300/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105856192 seconds)
    (301/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.054617782 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.088592404 seconds)
    (303/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173292987 seconds)
    (304/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.089974257 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067862508 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073419367 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.115919131 seconds)
    (308/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.070036402 seconds)
    (309/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.098051936 seconds)
  done (took 35.529944413 seconds)
done (took 36.450612424 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085415935 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.119329122 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078976487 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.121658617 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085420101 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.104935195 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077275657 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.10556394 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085199676 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.109398628 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082872862 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056306306 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099097081 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078298679 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.09936635 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093254826 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102085504 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073996575 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.097558076 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067255916 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075186025 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089550938 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069767743 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05624917 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101822422 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074839135 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.095606667 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077201589 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066581863 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.08959527 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071496119 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.096141343 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066634134 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080993584 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095377887 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075621086 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.099026291 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078062318 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06945082 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089197993 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076050238 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067029043 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.095506438 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075128263 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.094956469 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073155128 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076089961 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103137524 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093378648 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092679377 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076507603 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100508162 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079185285 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074673886 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.094186571 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076203857 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.094593579 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094274854 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.099046113 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069909337 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074885176 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.098806993 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07321177 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.097764514 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075527403 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077089516 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.100649881 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073614565 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09862702 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073635154 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06766533 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097636504 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071204736 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.089282852 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077878186 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078831559 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088551445 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074524635 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074676031 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.096612168 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067901254 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091428661 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069293984 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073990317 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091649707 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056840547 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071370308 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095344343 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067337205 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07561468 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.0955868 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074146497 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.091086592 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078767064 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067469194 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095398284 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067717007 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067341146 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091755302 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072521414 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.088994733 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069423416 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076969629 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.091248598 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074060325 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.10388832 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068087714 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074157426 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088817357 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067786131 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083224469 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099943479 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068221703 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091568166 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067559707 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074895874 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089622727 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067409229 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066619592 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089868997 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074041872 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.089272375 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06979036 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07486 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103371457 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067518965 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071098109 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091935519 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068369342 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.095634476 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068107427 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067953336 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.091728555 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065313333 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070226511 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089922536 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075661538 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069633262 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097525473 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069950785 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098263771 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073172025 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07417354 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095568287 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066855897 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060801342 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092017883 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070161746 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070266349 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089414132 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069431153 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.088052918 seconds)
done (took 13.462058644 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069987739 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.174569428 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.128593801 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097379868 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.11172512 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068214183 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.101283586 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10567351 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092456536 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.128027721 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090075116 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109577828 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115077107 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.089251965 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067983801 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071819016 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.091736904 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.090120214 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.125588675 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.111088812 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.118471508 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.090127938 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.122183399 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092514021 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113909305 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105566114 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090730033 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072566248 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.09366682 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.094323364 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109484165 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071372171 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068782158 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124691891 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.118754752 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087801012 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089398666 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087130025 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089954097 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06809146 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115550042 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.102071107 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105786657 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.106461363 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074765038 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071237511 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.09106088 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.088623807 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.115394249 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.08322186 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112241651 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135327231 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071630913 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.107408675 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067766126 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.112170408 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106809275 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071332594 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068374919 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092411959 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067523368 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072079754 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.113151921 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.116116018 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071881194 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.10651651 seconds)
  done (took 7.362591544 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088369112 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.121239403 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086764649 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108751583 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068210174 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068297766 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090824556 seconds)
  done (took 1.607700036 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070835939 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092483844 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113728214 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090657773 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.109895473 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088597096 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101499738 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069614605 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109519378 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070119646 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089091424 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129525265 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070422695 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098983294 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092801123 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091232351 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092189246 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091411156 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072660712 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114220268 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071782073 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.112505364 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070400743 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.0687972 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.105395672 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069509063 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138791637 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074263978 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092435794 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072526573 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067816813 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.140146337 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105743845 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079016122 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068868215 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105655382 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084021096 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08960224 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085324099 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097023423 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083388809 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069842562 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093314692 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067401111 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073419018 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.101957318 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070591169 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092173062 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072169637 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088809526 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092751581 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083541682 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092095082 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073747917 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070492906 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097823145 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079913837 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.093306583 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089899454 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071245449 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.10895082 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084977746 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.106339303 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08534311 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094508702 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083184498 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106169293 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071939952 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07107872 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095405548 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085495348 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089234273 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070633552 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07964433 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093168475 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091711049 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.115188057 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070662132 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101762872 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069603992 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070384116 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092289496 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092399312 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09597131 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069325959 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07331167 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094475317 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066996798 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068071103 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.094906828 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068058565 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.09228557 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.07233678 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070690386 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093584692 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085748038 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069189212 seconds)
  done (took 9.442333868 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072370892 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072000295 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093826285 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070017447 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070457055 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092376722 seconds)
  done (took 1.463753864 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.102698403 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.095875632 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083570641 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097825079 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107964556 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.106379426 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084912095 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107630323 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087244647 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.104100264 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084334496 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107737228 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089834582 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.098388927 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084170766 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097641119 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085039838 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101376212 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080740327 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098721725 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090780396 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098109978 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076010558 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.108289823 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073775807 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075217669 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102390874 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.08276528 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104647633 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083951841 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097495352 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073438549 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.0961502 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084268658 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.106773789 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075187629 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097693327 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074282891 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101879882 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072972845 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.107642072 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076204838 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080178563 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097918041 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107648668 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074028598 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073727294 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101256385 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084062217 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096484556 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073914311 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097059779 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073182265 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096385707 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073857625 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107083761 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.0742063 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.107588557 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075621001 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07400312 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.094913887 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073580888 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.10754434 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07328527 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105697846 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074573566 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096444182 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075849968 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098315203 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075515061 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073745963 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094748155 seconds)
  done (took 7.470254815 seconds)
done (took 28.315118572 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.652886513 seconds)
  done (took 1.63888345 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.799817256 seconds)
  done (took 1.789275698 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.086395558 seconds)
  done (took 15.082996659 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.618097235 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.766090865 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.808673724 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136445221 seconds)
  done (took 3.316592238 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.8827682 seconds)
  done (took 1.899238244 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.241335816 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.249518325 seconds)
  done (took 1.48511168 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.746470246 seconds)
  done (took 1.744187583 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.317043402 seconds)
  done (took 2.313522684 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.330933618 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182304658 seconds)
  done (took 1.516636498 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.530389964 seconds)
  done (took 1.532023659 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.693837595 seconds)
  done (took 7.702271532 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.234603176 seconds)
  done (took 1.252890958 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.272124281 seconds)
  done (took 1.276826859 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.144487097 seconds)
  done (took 4.151642604 seconds)
done (took 47.699421586 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081287937 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084078852 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105823847 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080929074 seconds)
  done (took 1.35405805 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081765794 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075891284 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102020595 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075424268 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102791608 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075324226 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100806922 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079844731 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074757764 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099639555 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075621123 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097503592 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077769219 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100733085 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073658914 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078334474 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100889877 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075581083 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101822441 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075422275 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073092673 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099757213 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078038431 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.097123972 seconds)
  done (took 3.08760458 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081213544 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076210409 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099384524 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074368823 seconds)
  done (took 1.340678289 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081782861 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.118844949 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091186877 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.103381958 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094216401 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.11232923 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072243181 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072947214 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09785946 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07988477 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093393914 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099991483 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113108095 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079318829 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.1044815 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068273724 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071370818 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112902196 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080158384 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102655869 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07351064 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.08157828 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.093129023 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092616866 seconds)
  done (took 3.207002354 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.08142073 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106748955 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.103578599 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091423934 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.116815587 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06766955 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101663397 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092988749 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.149779804 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067793481 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096460546 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068597734 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.09849426 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068153232 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079310234 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.133938535 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113911988 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.094544108 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099623112 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.091920178 seconds)
  done (took 2.943671652 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078288524 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074034821 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090564453 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070550016 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07823785 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09780983 seconds)
  done (took 1.505501589 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072141735 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070503364 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092264774 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068163904 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074181174 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092585685 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067777573 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06886464 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091808411 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068804385 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068177586 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090844392 seconds)
  done (took 1.941795784 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.439399229 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070589177 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.09479203 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067857965 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073037561 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09223019 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081833482 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069777552 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116431405 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06898508 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.093142853 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070704447 seconds)
  done (took 2.361121764 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267748432 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079173365 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.325716377 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169810914 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141119158 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156530107 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10593152 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142698989 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198482524 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138841322 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2012652 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226012994 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135496119 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16895 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116960847 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.134049139 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187620635 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222740858 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107329894 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22481698 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207591866 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158490657 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18185413 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130134642 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136774038 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152776038 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074273836 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107345092 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233323787 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162468073 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201609218 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140163087 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100431525 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232712722 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226007734 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195752883 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163313635 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086981035 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.158325466 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165591898 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256150579 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115455071 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194569195 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134860098 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107276777 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172777984 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147022203 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.147743734 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137648194 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116530851 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175476169 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241343087 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.16702425 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114336124 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138926323 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143168848 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145911867 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104837872 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268297131 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19547891 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161108063 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097644341 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09986736 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211393307 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160037088 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14229848 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.154880923 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120636122 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169645721 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210804585 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148511591 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174937268 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180767856 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091494962 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14732545 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195277856 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158742917 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229351703 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155998807 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074727527 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15378407 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131739502 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108179602 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145753168 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101989212 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209584916 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125853966 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.140163629 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139658686 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137141566 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112730354 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221570085 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205624756 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131308808 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.068659303 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131987589 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.150969957 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177496984 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116298508 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136597078 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148935607 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082448396 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192751143 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077695715 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155164603 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.105496658 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153182051 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163942778 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078337042 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156367423 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128210475 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.129026769 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165432151 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220226083 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092996692 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110136571 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226550639 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156522097 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133491117 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177746364 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.215460223 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103164442 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130225739 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206552355 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243017279 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091765205 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224234586 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1360254 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086796288 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114634533 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156660938 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141408969 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150880651 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11054596 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.154696909 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201023586 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.10220807 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12346843 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167317161 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084528269 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108809248 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14200361 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128519506 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098092212 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.127917517 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13526216 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170819016 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180653348 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110095874 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180212045 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101438152 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22559591 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117265889 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.133199134 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107225707 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097935426 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.165735194 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21778581 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082470196 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227374044 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.155420001 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133322835 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148770591 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085448671 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196407407 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081119312 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073275404 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200819414 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140029167 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139622039 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.185380647 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131974017 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.15606062 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.153219881 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162383115 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187923734 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16388793 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134864705 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090499258 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14236077 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15498622 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101251752 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121495196 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.085757345 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132617103 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124126116 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086310165 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199021129 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15712474 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100537911 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141221043 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124717599 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205181452 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079388026 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160284589 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.148127121 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122212346 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.211301041 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187667448 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165080131 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127850348 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201163475 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073849744 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076516146 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.117842316 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15758821 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111463462 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086082247 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170109352 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181411846 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160089357 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16729912 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13936792 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151036581 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21399553 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073853619 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.144367586 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179664644 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153789725 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.156213802 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115711509 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102715085 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201811608 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11189747 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272668288 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145250318 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153777245 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182824922 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.131163557 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082222975 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133561827 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193412985 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134613423 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183134728 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127630131 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115994064 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113607712 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.108477616 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1319041 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156670772 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15006509 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190288805 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144378131 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161177502 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084348 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145719634 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175893013 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151406822 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067261965 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14857244 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220026215 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123073411 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147718281 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186318377 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107284127 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.127938435 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234960015 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200871996 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086613842 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137581299 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150388078 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183182238 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14890547 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170968084 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139481491 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165589036 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139247859 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087609152 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116093524 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125933672 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109339297 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.123543782 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.139532517 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.144811167 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.122324236 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161048517 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140220895 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139188212 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147862961 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.125201235 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.094375931 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125664793 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234547659 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151466771 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232836923 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.10406477 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.20687494 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225396036 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078312636 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106883533 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.083385431 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170452083 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112061454 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162453374 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124708429 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132561067 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155665188 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174070381 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124429698 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071073977 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139267166 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163614156 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139495765 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126619705 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133992575 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219463061 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.106689729 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106742529 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154585986 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107488666 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130848222 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234966804 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063528601 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124400209 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07854792 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108140427 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158404238 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214115576 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08506483 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.154500415 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146804145 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150001808 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158845727 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129382993 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12802235 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142102736 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182754418 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157912381 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.117997287 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141948243 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158705655 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214478604 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135370465 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.099094167 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231964382 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210994592 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196997275 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117927967 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144009429 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143975869 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138814518 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169889116 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11230914 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226410427 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085816049 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193042865 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134312425 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095618808 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185143059 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099448423 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117003235 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196748688 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173438042 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085503068 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108064454 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14843498 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152384781 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135341212 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07809446 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193269659 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075731 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166535354 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228210152 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083682906 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134450731 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124644194 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110198881 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111005862 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130591496 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114856399 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.124827457 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226864538 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.118530335 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208858383 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172838178 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142504375 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194553089 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10257196 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664326008 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.107416182 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18759977 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149008631 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260383864 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100834283 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147909516 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139551392 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152751497 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200044557 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133353894 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179240089 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18908645 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.151271276 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081999691 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13253322 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140019108 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.118643233 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135146138 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144470627 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146259824 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.104866534 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.150400634 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182255012 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.084551108 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124221711 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217118477 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147806893 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175528542 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170352253 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112476431 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148695946 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170278479 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108164743 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.152415217 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213807405 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136337069 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102082407 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.109376652 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13375156 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23123521 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076425677 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221173567 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153503501 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138961613 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143008504 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.149805309 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163493676 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136926742 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155308806 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123843695 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.141424262 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14489358 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11177255 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079881883 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135423805 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141862865 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.127064135 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131282097 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.122053107 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20917531 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073804461 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124234432 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131751414 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176952804 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239183983 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.116622398 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085941261 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147919114 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141967516 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.144117074 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154838702 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.109670069 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084966523 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.110415652 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.116633461 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.135678062 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145404045 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131228067 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139893494 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225896005 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087209475 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252095826 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123392022 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109485204 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.097497565 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081295755 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125102735 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12630309 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13744189 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100507699 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232341763 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.125267333 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.092905075 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120538723 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.100876676 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086772921 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159812788 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138350364 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152172965 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126875671 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064682892 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138035447 seconds)
  done (took 71.806545809 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.137460832 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.104815045 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.118061869 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.173033435 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.146377456 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237583432 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.181452076 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.222541262 seconds)
  done (took 2.426432817 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073301978 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.117242932 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103250032 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116880114 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090996479 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069768794 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.293510781 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111331454 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068364336 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.115106082 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.120211916 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092924074 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.468050058 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067689684 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095306096 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.085542074 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068904983 seconds)
  done (took 3.247216093 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.429535386 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.630969682 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.451269124 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074856367 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.864339991 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.107859995 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.336165949 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.1625426 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.091153442 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.431271675 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.727250017 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.151827641 seconds)
  done (took 17.557933116 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078862956 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070114097 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110699113 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084783897 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.100097978 seconds)
  done (took 1.544561846 seconds)
done (took 115.325858654 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083017374 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.348830567 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054751123 seconds)
  done (took 1.537240774 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086435863 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085531376 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110798486 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084955204 seconds)
  done (took 1.478664379 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077754945 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077901998 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111125446 seconds)
  done (took 1.373927054 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.279276271 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166541532 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090905836 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086844007 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080819136 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105772317 seconds)
  done (took 1.383602009 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076443933 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076996632 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099702849 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078811979 seconds)
  done (took 1.434409097 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080576937 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054870231 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056698409 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083020396 seconds)
  done (took 1.38316635 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092553584 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.106967098 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083214268 seconds)
  done (took 1.387908402 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110382466 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.113882848 seconds)
  done (took 1.333562906 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085618335 seconds)
  done (took 1.189248947 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094817598 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141034037 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.156859014 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137889636 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.166558027 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.139172139 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088311025 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115904995 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105367176 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089526443 seconds)
  done (took 2.345190036 seconds)
done (took 16.562509545 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081663661 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.388897293 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361829268 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11816835 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668371927 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358338216 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.019475473 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.1202695 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122297191 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09564696 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08553005 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67611599 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.986005077 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.350456602 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.973749595 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325143221 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677100339 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068959351 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094408681 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069597186 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.981141813 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095102269 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069510825 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070511503 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676478273 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372216647 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09534886 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32554611 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069396917 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096968468 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356548673 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096094021 seconds)
  done (took 16.044942994 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072744685 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144887093 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075265448 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085712247 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098164761 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070861853 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099364633 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070837654 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153497681 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069309663 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113136286 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069765671 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099462098 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070921033 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088777728 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095433495 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070331418 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069713697 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095349439 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06985275 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114023658 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069954319 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06991682 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094981657 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070414838 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107663171 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06976259 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069650332 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095685117 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071753179 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098756182 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070944168 seconds)
  done (took 3.896198799 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117806271 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153630381 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075696097 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130237039 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114997343 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097528068 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.172738999 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094420723 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156437139 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070219074 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111895856 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069474034 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128943506 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070115894 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115602766 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070736376 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070760514 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095801414 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070190668 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09582697 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088283801 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095054474 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070495719 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070298946 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095834942 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083174911 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095780562 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070229279 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070346984 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098467107 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073729139 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09563315 seconds)
  done (took 4.207824251 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075966918 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076840389 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110585444 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085514221 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09793739 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074262342 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074620067 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.09809882 seconds)
  done (took 1.80671664 seconds)
done (took 27.065013 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082337976 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072017899 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.101068111 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083097012 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10121551 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080513164 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06909131 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.102894165 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078187371 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074856 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.104048613 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069684263 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099536286 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069250262 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077223154 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.095391166 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080986152 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.099629727 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080420366 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080830636 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.098112286 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078738368 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101620131 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080791075 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.107629974 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081246175 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084896511 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101586511 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071792112 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098233918 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078653774 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.111506386 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.06954764 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080986513 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.096487427 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069895224 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069690184 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095724037 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080791264 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.101335931 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072152581 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101756942 seconds)
  done (took 4.742851014 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091110046 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090279118 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.112848245 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.07204636 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098382145 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065333545 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.117758724 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.072963777 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.095309397 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089673035 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05728866 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.087943744 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.073196511 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.063284335 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.095581673 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059044834 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061047925 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.084278348 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062194159 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060961468 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086709286 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055980647 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.061997821 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065010195 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.084213019 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064383667 seconds)
  done (took 3.147630153 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078416754 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08668227 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116454722 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131258051 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.134608594 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080297181 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.107307146 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089997046 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.116195544 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069201602 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07321072 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.125364682 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090806075 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.10276059 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06976309 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.116446541 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084043812 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071550036 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102167447 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092512022 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.11245181 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080620994 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.123051729 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083753702 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069522959 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098530903 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073108932 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109776968 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074982902 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077732229 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100732909 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073772302 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.098159791 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080720473 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073607108 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.097883916 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092222372 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105659373 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081187784 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070041145 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100344919 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070964202 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.115993333 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.114613082 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.096632135 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076328059 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077298984 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105283839 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069545638 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113952096 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078317669 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069115034 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.099557497 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068572156 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095123828 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081822291 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071905523 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.097709485 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078080993 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.098151682 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.081779285 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073042235 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111626361 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069060949 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103847624 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068327081 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070284592 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094943831 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092941525 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070291238 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.138670163 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070590406 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.097731777 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078487794 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103449248 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075566092 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069343891 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111519884 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079367363 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099546404 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077879549 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072772019 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.098528332 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091128096 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098707744 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070621013 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070590508 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101735759 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072368334 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.097235713 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082272569 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069886941 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.099359027 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085759877 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094965176 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070640639 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075895126 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.100731255 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069198108 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108169072 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.0751122 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070629061 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.105671242 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069622355 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.09925556 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079524267 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073440872 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.094969513 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074341255 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101792141 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069919266 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070440721 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.09937943 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07149037 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078763131 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.101780975 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074409258 seconds)
  done (took 11.506829039 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.194983711 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.186585376 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072110986 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.179907055 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.087237485 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.107277759 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.180607437 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097085418 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097336483 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070615239 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070291075 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.131015256 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.12589695 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106803214 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.107542832 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06999489 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115045507 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.105718381 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.182740062 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.177671863 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.117218559 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076837524 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07184263 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.09868417 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071654719 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.106297353 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085913686 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.104937104 seconds)
  done (took 4.3358544 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085259007 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.138001452 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075294779 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093885573 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120267776 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070178764 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102685437 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070969947 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109282369 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080811452 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.096852083 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074666743 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076364191 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105340518 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070650364 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106829226 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080320966 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071002229 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.099649618 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074575221 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.109535327 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082761383 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.100164457 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06904676 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075759633 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.096459188 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067234461 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.113938515 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068931275 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.120703586 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067484606 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076055543 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.115294846 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069977632 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097114772 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07274125 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072379723 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100761436 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071264374 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068258751 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.095128845 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060208462 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068813027 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.108797917 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.077006822 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.088824614 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075753612 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.102272384 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07519399 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068006896 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099991196 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072635695 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073260386 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.110267835 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074851051 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.10244113 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07414349 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067777623 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105750219 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07304298 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065985396 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.096120029 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075103706 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.096183683 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077419711 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07400762 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095898224 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072913488 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075507116 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103455336 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.07325527 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.099717324 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068294687 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071797088 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.101912189 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073578031 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07329197 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.095043359 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069188716 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.097106672 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.057644562 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069181665 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056021287 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100281413 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068368658 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.095179943 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073305145 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076038778 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.110465173 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071869914 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.102873769 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070641137 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068347573 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099452333 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065859413 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.099661807 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087991772 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.113146264 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069477221 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068278156 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.114164875 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074286057 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.096239031 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058358111 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076439677 seconds)
  done (took 10.028814553 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.100477669 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094836219 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09843272 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086415176 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.12637299 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.09507186 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104850426 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076458492 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071447334 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.114276355 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070312424 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105550502 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070464681 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078625558 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.126336351 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078043478 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.098583792 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078535974 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074094749 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.137687903 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085466681 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.111682257 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.083141879 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097555412 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074165336 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081306076 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.124796916 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.08235366 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108386082 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.087903644 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.08287442 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.124649092 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.088603407 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100676647 seconds)
  done (took 4.369773223 seconds)
done (took 39.242667445 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.202613274 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.403914391 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.187994856 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.064811311 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.205034086 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.204479567 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.205497908 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.193004869 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.2858176 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.195041764 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.441988438 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.844881409 seconds)
done (took 58.573579725 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.288451401 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.331178278 seconds)
    (2/2) benchmarking "String"...
    done (took 1.461765531 seconds)
  done (took 3.940260519 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.55137481 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.203815465 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.481081489 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.194055114 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.209232491 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.632954961 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.781991116 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.008056768 seconds)
  done (took 27.647420468 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.19559755 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.547211759 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.505356697 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.50241948 seconds)
  done (took 17.886939284 seconds)
done (took 59.450946582 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.225966361 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.213077202 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.193563549 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.176571333 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.310269937 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.2212876 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.190389518 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.259632789 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.1938564 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.178028891 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.219950089 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.190984614 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.19023415 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.34262095 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.19947036 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.191283393 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.272534299 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.836447233 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.571676164 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.207750305 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.209743041 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.250593993 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.197265621 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.192490397 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.239664282 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.190678357 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.193641307 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.1977828 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.405569292 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.193418675 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.286015347 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.560252333 seconds)
  done (took 189.639881359 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.195923792 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.220790808 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.299681369 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.247143463 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.649223706 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.392017283 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.330659292 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.737225079 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.210473195 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.200639817 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.527853911 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.192713343 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.583418077 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.158787661 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.204041171 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.274317575 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.514424051 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.55704725 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.206404553 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.467409737 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.213486177 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.539751639 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.473938639 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.463618232 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.210807663 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.23186028 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.215624709 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.206723779 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.382209046 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.452663188 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.227931575 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.205792512 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.760711659 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.055865428 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.210579966 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.214251606 seconds)
  done (took 150.374739007 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.476772878 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.196369603 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.197725699 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.197522725 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.226972927 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.197761345 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.727225693 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.727803366 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.727103424 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.192410488 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.579515703 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.254377867 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.40191331 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.194549338 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288763415 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.20749549 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.199018252 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.211300611 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.220963304 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.194618575 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.19699434 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.728645771 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.21041892 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.194702099 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203950062 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.197923647 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228412941 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.591595798 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.664778113 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.195982751 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228272218 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.515197134 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.23863729 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.195560301 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.498150887 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.109302364 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304259017 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.197567537 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228508705 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.198031207 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.465860884 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.195491707 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.19875439 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.200539209 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.203346901 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.735624464 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.195384239 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.731089856 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.198574187 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.084289118 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.195692351 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199598332 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.847162985 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.592799318 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.19623891 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.19932045 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.201251581 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.199974195 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199179148 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.229533126 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.843356083 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.297732577 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.199769823 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.203749621 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229043349 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.199221675 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.615206959 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199050889 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.165102305 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.258534714 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.416029277 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.733636434 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200013452 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.293256266 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315006763 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.196464751 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.199842604 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.200124138 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.200159388 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.304995889 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.197904104 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.598323992 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.203245189 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.202080105 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.261657031 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.294289487 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.197135018 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.510674581 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.201275216 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.202068206 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.906104267 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.290252137 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.198892494 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.202128895 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.20033363 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.201506764 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.604025324 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.731453641 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.383374793 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.203156736 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.95084467 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.204445611 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.614342619 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.713436164 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.738756212 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.200319843 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308637824 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.203619841 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.203087157 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.202095473 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.232325984 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.202311374 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.260995003 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.203676412 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.598450463 seconds)
  done (took 346.583224493 seconds)
done (took 689.211630352 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.881204247 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.855971617 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.963489079 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.855826753 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.833524961 seconds)
  done (took 10.533355947 seconds)
done (took 11.676876174 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.381527645 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.375878717 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.256286651 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.377890778 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.227683538 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.398017723 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.357651681 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.218385352 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.302108205 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.273098709 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.298739575 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.247224505 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.229402697 seconds)
  done (took 18.08718932 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.496944563 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.509695666 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264308856 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.509409578 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240183426 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.498137738 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.385931643 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.395984418 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.392067493 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.215700087 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218826672 seconds)
  done (took 16.274026773 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.501562288 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.491257417 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268552551 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.499583783 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.242435451 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.510538474 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.386090437 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.396663339 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.386545123 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.216726731 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217078704 seconds)
  done (took 16.262516759 seconds)
done (took 51.768710367 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.212027338 seconds)
  done (took 2.356302762 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.244779808 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.407033811 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.22613064 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.217253597 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.212951315 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.216720322 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.217023275 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.213766473 seconds)
  done (took 11.101650659 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.213640981 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.210405553 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.21237754 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.2110139 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.214194198 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.209237203 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.209478618 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.210936082 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.212974731 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.211205238 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.214216786 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.21346365 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.21410695 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.211597466 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.213139086 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.211622884 seconds)
  done (took 20.540372264 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.213530203 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.210475748 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.211551403 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.21180163 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.212267448 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.212015068 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.213062017 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.211443608 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.211806342 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.212802868 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.213131055 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.213548575 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.213396167 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.214329587 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.212607418 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.213873636 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.211777815 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.212764205 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.217078457 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.21319396 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.21243636 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.212965503 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.212918569 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.21455872 seconds)
  done (took 30.260078686 seconds)
done (took 65.403373974 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.234023768 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.816983781 seconds)
  done (took 9.198909315 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.215188876 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.214731049 seconds)
  done (took 3.580047925 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.214813068 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.216143089 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.215919118 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.214774696 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.216200197 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.216275251 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.21568272 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.215137102 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.215347548 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.216314964 seconds)
  done (took 13.306141021 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.217444483 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.217678071 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.214028901 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.217977614 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.217854388 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.215289932 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.216058288 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.216665485 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.21640569 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.214180849 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.215596233 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.215081242 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.217153006 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.213903605 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.217924419 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.214229011 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.213852264 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.214511419 seconds)
  done (took 23.034503991 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.216767536 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.216300608 seconds)
  done (took 3.582279994 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.215434277 seconds)
    (2/7) benchmarking "second"...
    done (took 1.21552629 seconds)
    (3/7) benchmarking "month"...
    done (took 1.214573175 seconds)
    (4/7) benchmarking "year"...
    done (took 1.214469216 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.213884468 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.216690053 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.214893153 seconds)
  done (took 9.655186022 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.217261901 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.398434247 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.473279675 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.782804912 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.218220169 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.222493334 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.074804897 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.220897416 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.222754267 seconds)
  done (took 13.981216506 seconds)
done (took 77.485589212 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.214698638 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.205335753 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.0548309 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.213754218 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.220719556 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.50908449 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.234927633 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.330900951 seconds)
done (took 37.135848742 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.223343037 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.909832501 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.949401737 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.207936933 seconds)
  done (took 11.218941712 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.207388388 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.094708177 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.203512581 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.200958831 seconds)
  done (took 17.859042973 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.811978816 seconds)
    (2/2) benchmarking "read"...
    done (took 1.53895672 seconds)
  done (took 4.50268029 seconds)
done (took 40.954882434 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219034364 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.218182566 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.215758143 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.219019318 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.217743709 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.216222671 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.221029173 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.218508009 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.220195159 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.220678828 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.218368074 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218968556 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217352055 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217466983 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219890732 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.217085463 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.218293095 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218504081 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.218981515 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217172648 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.2174578 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220119001 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.218072534 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.217619728 seconds)
  done (took 30.393763631 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.221137136 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.218622863 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.220600988 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.220559725 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.218128628 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.221225138 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.220119668 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.217181761 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.219952747 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.220552993 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217010183 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.218375347 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.220488208 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.217815939 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223177461 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.217929832 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.221100464 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21824137 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220606941 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.218604181 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.221937915 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218236758 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.219039957 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221817484 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.220851507 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218032201 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.221517891 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.219615771 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222100335 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.21755769 seconds)
  done (took 37.746195074 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.225462785 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.22956086 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.223105679 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.221988375 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.222233427 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.223121981 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.221879821 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.223264246 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.221601092 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.222155613 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.222935015 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.222616217 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.222536163 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.221889252 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.222331613 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.222029905 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.221727611 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.22220526 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.222609171 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.221435101 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.223079641 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.224576357 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.223361222 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.224552621 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.222943549 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.221298401 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.222880366 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.223551485 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.221939919 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.222293953 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.223783519 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.222838445 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.222562379 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.222771863 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.224067519 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.22406597 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.228748496 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.232552726 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.223898654 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.223396399 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.223715609 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.224175366 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.224993739 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.222272497 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.224702362 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.224091616 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.224089931 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.224150722 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.22484265 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.223457101 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.224497821 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.223572947 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.223649923 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.22438977 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.224827297 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.224643196 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.225124376 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.224034784 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.225155068 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.224753865 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.224573351 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.224479144 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.225954875 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.223608582 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.225294638 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.225552521 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.226587037 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.225076756 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.225490507 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.225549526 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.224881495 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.224947885 seconds)
  done (took 89.278106124 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.225823887 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.224552014 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.22250559 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.222843974 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221943092 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.223983068 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.223181383 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22482346 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223975345 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.224212739 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225759296 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.224393654 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221641561 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.226494136 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22499338 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.223131978 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.225881496 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223026894 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.226750068 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.227776661 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22560353 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.223415361 seconds)
  done (took 28.096665336 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226680088 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.226642957 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.224830057 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.225941736 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.220893647 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.226614554 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.226964907 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.226294726 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226605042 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225240592 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224352219 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226979374 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.223959312 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223668961 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224510508 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.224985025 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22625322 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.22347329 seconds)
  done (took 23.214157166 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.224961336 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.223676419 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.228594858 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.226023092 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.224872975 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.22852067 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225215035 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.227498929 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.226790218 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.225171901 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.226872988 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228954728 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.228038967 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224519362 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228071058 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.225941692 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.227072048 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22342378 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227711337 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226050522 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.224933381 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22666523 seconds)
  done (took 28.139855354 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227843944 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.226465576 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.225342524 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.226832152 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.226323721 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.226703531 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.228361609 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.223955681 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.228725326 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.229466745 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226510219 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.227931745 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.226292493 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.228275515 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.227155736 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225229512 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.228473398 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.226993954 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228790586 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.223664254 seconds)
  done (took 25.701303522 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.230543951 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.228836039 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.228724372 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2276498 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.228586231 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.229486927 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.227941165 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.229653297 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.227768401 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.227657469 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.2285214 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.229019141 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.228425865 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.227122022 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.228160507 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.228041829 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.229173983 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.226886664 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.228122782 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.228827238 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.229848989 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.228201863 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.229140251 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.228110612 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.230889909 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.229385939 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.228739384 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.230217294 seconds)
  done (took 35.566973218 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232033847 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232829573 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.228738719 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.228104928 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.229141473 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.225886991 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.226773491 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.225977713 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.231595663 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.229163776 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.229330972 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.229276012 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.231311535 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.231089134 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.229808096 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.231898974 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231461859 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.229600982 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22939299 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229097781 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.230924423 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230545045 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.233370539 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.228212016 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228698239 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.231111098 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227690654 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.229953878 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229119993 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.228716028 seconds)
  done (took 38.056372983 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.251781008 seconds)
    (2/2) benchmarking "in"...
    done (took 1.252096502 seconds)
  done (took 3.669349548 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.230294181 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232096574 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.232011999 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.230733557 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.230181775 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233397141 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.232321435 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229477157 seconds)
  done (took 11.015487303 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.232149588 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.231212516 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.233335532 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.230264822 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.232652619 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.233437472 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242520972 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.247277915 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.234304652 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.235572499 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.239073377 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.243146967 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.238158517 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.233377238 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.235042374 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.235398575 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.233601088 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.232255118 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.232068173 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.232902027 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.233567308 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.23557488 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236052377 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.231309491 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.235314569 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.24813834 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.241642239 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.232459751 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.234960162 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.23996787 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.234100727 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.231521334 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.234067045 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.23403177 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.234631826 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.233825018 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.247585371 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.251534183 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.244132705 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.234961423 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.236177861 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.233441897 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.235670913 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.236693368 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239689527 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.233511032 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.235420932 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.235066852 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.235248001 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.238032634 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.242897601 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234779037 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.234383568 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243021133 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.236153435 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245080695 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.250181015 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.237558306 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.246056882 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.24792476 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.250533456 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.242997906 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.237863024 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.23554235 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243432548 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.262015981 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.244046702 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.249110875 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.233471698 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.237498872 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.245224309 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250778983 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.247596965 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.237792347 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.237191264 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.238504031 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238500949 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239515739 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246710161 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.256989505 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.238991515 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.237254678 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.245504543 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.261871116 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.235299382 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.237920029 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.237673363 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.237748348 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.235579834 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251668 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.253519077 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.239918412 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.236985699 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.237997338 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.241565711 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.238485292 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.23664211 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238557594 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.234478094 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.238241137 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.236236132 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.241256933 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.247439842 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.238488913 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.238100075 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.246957733 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.23921944 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.237461176 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.24974588 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.236986978 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23966805 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.238902468 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.246487914 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.23683741 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.242544378 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.249251692 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.238194461 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.241657237 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.237782125 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.239284305 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245709342 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.26862605 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.23998448 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.237787365 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.242370041 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.251191622 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237909475 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.242327936 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.239610886 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.237964943 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.238409122 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.243405846 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.240558549 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.240268789 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239815001 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241359541 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.237171184 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.239834591 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.238983092 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.241415126 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.241944086 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.241062407 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.240754464 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.244116835 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.238832624 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.242155549 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.249493668 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.240821147 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.244573227 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.241946581 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.238534144 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244012385 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.242816891 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.241763379 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.241638506 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242817199 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.239675487 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.242926701 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.242980128 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.241171286 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.243886495 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.241032173 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245060708 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.243156 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.246264587 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.23958823 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.237193319 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.241211131 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.24028775 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.242003161 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.24164294 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.241237635 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.243621836 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.24941846 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.241759973 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.241971155 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.24715214 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240462513 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.242871674 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239677317 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.244308273 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.253085753 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.240297573 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.25047337 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.24334584 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.243964741 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.24082709 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.241371625 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.242456153 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243547839 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.245953289 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.253337295 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.257162248 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255041406 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.244882101 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.248066813 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.242853878 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.247929937 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.248685008 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.244365255 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.24544977 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.243516494 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.243167372 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.242480722 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.247896111 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.248458118 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.24523342 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.247786859 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.245932886 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.244351454 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.245980775 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.244017731 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.245437234 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.241700325 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.244001594 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.241952615 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.241527154 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.241248929 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.240686288 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.242666712 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.245632333 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.242800499 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.256442229 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.242042947 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246024525 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24547597 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.246962112 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.243308111 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.243887359 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.246162219 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.244966632 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251540935 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.261674045 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.245246143 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251318138 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.259812893 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.243143734 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.248123995 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.244317471 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.242075761 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.246993432 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.254471081 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.2448785 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.244656613 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.246706385 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.244160686 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246254503 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.254111366 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.242972954 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.243497505 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.247592831 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.250211757 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.242230201 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.248058454 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.246392152 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.248011345 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24691268 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246777006 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.247258362 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249519579 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.246200301 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.247132464 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.247142122 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.249610573 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.254816493 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.254443335 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.248430514 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.247799742 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.248573448 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.251059202 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.246322385 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.248325788 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.246122621 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.260658679 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.256649381 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25540248 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.251919823 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.246227455 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255060613 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.24814095 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.253255536 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246101496 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.248176126 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.248877815 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.247783787 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.245790876 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.248484402 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.24886218 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.248211786 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.249763106 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.25406713 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.249041785 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.24752888 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.248628386 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.248333771 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.248783923 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.24736843 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.248334967 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.250586115 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249760194 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.248685284 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.249837429 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256782033 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265793268 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.250253789 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.248518453 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.249553006 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.249216978 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.248717194 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.24888826 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.251488084 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.258470264 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.252727077 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.258926862 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.249829414 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261690974 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.250032229 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.253172842 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.258424881 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.249455893 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.247322332 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.250080015 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.248799833 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259647769 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.265275038 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.248584766 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.253355313 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248133892 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.248817758 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.249990327 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.249659965 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249919933 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.249000968 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262485137 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.267170379 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.255016256 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25224164 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.248256408 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.251398191 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.251889994 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.250047518 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257800469 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.251944823 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.253353473 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.251942983 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.252099262 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.253457484 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.250687216 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.250547468 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.24843579 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.251313747 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.26030947 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.268060646 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.255338338 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.251186267 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.26416054 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.250900199 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260952318 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.26655298 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.25210247 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.252090595 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.252239663 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.254021303 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.24952553 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.252921727 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.249308757 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.252376645 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.256377936 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.248857129 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.254329547 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.252162135 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.251276439 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.252271377 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25766932 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.277056827 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.253301052 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.2561151 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.249444057 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.253345404 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.257084183 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.252097331 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.249946059 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.254357656 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262532548 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261126085 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.253063852 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.250370066 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253102764 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250779625 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.253481078 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.254046924 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.251298489 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.25173758 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.255614152 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.250632564 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259677587 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.254827129 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.252301981 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255353103 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.251848442 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.267138277 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.254046315 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.255349564 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252793015 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.254110003 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.254507045 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.252159867 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.253595788 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256791927 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.252780364 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.252417985 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259205478 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.261301199 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.256108913 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.253694538 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.252600908 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.254906377 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.253876704 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252280837 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.254713317 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253006525 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.255071861 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.252876478 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.255746864 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.251823418 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.252478779 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.254446068 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255628641 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258085036 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.262942722 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254905919 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.251587535 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.252380371 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256958808 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.24956114 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.256225641 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.267546737 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259585185 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.265664571 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.265699374 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.260875942 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.256881431 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260612818 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.266129119 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.252816832 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.255054152 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.255033226 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.255897994 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.253995763 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.257758868 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254327282 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.264403771 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.255535559 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.256409877 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.266629877 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.273976631 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253463137 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.257322559 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.261745162 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.256398382 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.253125239 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.254903336 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.253831301 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267516695 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.276354223 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.25445241 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258721814 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.257316458 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.258626112 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.260652666 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257739209 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.256394859 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.255915569 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.256524691 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.256107473 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.25902333 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.256581213 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.257573492 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.254725793 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.25841823 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.265314873 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.255750803 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.261934993 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.257188354 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.25591785 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256412696 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256300032 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.25458633 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.253755732 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.257550675 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.253679869 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.258270332 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.258783834 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.256297385 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.257007496 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.25881698 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256886948 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25952709 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.269393344 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.26480929 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.256436677 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.256430592 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.260314695 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.261040886 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256052762 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.259621132 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.258091809 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.260985963 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.259994164 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257474938 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.257128431 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.260961716 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279789167 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.277447436 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.259129678 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.260160195 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26558382 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.25988358 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.255565165 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.258299739 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.262608641 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.261186647 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.265932169 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.25876467 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.265807105 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274967796 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.258014875 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.261162528 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.26193635 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.267172366 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.260999092 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.261359101 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.259838192 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.262602567 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.279606446 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.262853197 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.269766952 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.293716578 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.278639106 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.2625327 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.258472579 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26024322 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.260411304 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.263930017 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.26129243 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.262545834 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26351256 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.259619048 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.261255187 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267720118 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.262502561 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.262264797 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.262552973 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.260133538 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.265221541 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.261501451 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.261335977 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.261317004 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.261970957 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.260528539 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.261025459 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.262889184 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.275384739 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.272708631 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.262435983 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.261451002 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.261044334 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.265829078 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.265601568 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271391601 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.27109844 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.262605019 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.26164938 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.264263823 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.261580146 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.260984306 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.260756616 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.26318898 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.262579836 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.259850321 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.27463754 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271828685 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.267060325 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.26251019 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.260219055 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.261657849 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263374392 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.262649365 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.262419269 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.264589672 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.262326761 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269384791 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.262479224 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.264934184 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.266296423 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.272521443 seconds)
  done (took 746.61800006 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.263078275 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.259920401 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.258197143 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.259542921 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258914638 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260527366 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259165035 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.259216357 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.259813386 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.260513439 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.260366441 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259068145 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.261499202 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.261589954 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260755327 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.259619806 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260850487 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.260604851 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.261376995 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258837434 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.260736096 seconds)
  done (took 27.661686994 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.26336866 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.262040608 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.261540971 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.263075324 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.259583434 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.262538508 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.261141975 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263441833 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.262113769 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259734441 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.262172393 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262277876 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.259843469 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.260461731 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260529244 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260700201 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.261859156 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.26060888 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.264164364 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.260195125 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.263251272 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.259794926 seconds)
  done (took 28.952256668 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.263438959 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.263224784 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.261130525 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.260761913 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.263489839 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.261560983 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.26330345 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.26697143 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.263026966 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.264756606 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.261768941 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.264756573 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.270072846 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.268089272 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.265157546 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.264313522 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.408317393 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.263996316 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.265153358 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.264745584 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.262536758 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.272554319 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.26221855 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.261305301 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.263567009 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.263672993 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.264930708 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.263711458 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.264103271 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.26430732 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.267316424 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.264854798 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.262889337 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.264121867 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.262557515 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.265032293 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.267972181 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.263404781 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.263188739 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.265186998 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.274180372 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.289586559 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.264424219 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.275290941 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.263400434 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.26311101 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.269368044 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.273974395 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.262737865 seconds)
  done (took 63.354388122 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.264423349 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.26640635 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.263134643 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.265587192 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.265557006 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.26454572 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.266265649 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.265354356 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.262141446 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.263770392 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.265982465 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.265047629 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.261588217 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.266494589 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.265061952 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.26180605 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.262198322 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.26373132 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.26487884 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.263756262 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.264664631 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.26493279 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.265331222 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.262817087 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.264991493 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.26355644 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.262005516 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.264724486 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.265305938 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.263964487 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.266964427 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.265746886 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.265243318 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.265828254 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.264232597 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.26742641 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.268402749 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.26480147 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.267470111 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.264650126 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.267815293 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.268301934 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.26865016 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.26581202 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.267191906 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.265820424 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.265459687 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.265201342 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.264651491 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.267334197 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.266063799 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.265350722 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.267872398 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.265217345 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.265320062 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.268155303 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.265149573 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.262947831 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.267495113 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.266139724 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.265075835 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.267658925 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.26392199 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.26693303 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.26644715 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.264268852 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.264315912 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.269418936 seconds)
  done (took 87.248712474 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26660824 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.266473424 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266768088 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268297823 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.267261139 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.268666718 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.266785911 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.267785908 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.266818001 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.266148193 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.268082235 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.268773614 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.266533045 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.267741782 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.269388626 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.266078404 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.26754812 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.266340513 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.266883952 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266331961 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.267542009 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.268026875 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.268150949 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.267586316 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.267823246 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.268091741 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.266786954 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.268136447 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.268310493 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.270213889 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.268348058 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.267356435 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.268819571 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.266277299 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.26872699 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.268900781 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.267694831 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267845789 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.267917373 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.268357215 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.268235663 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.267976303 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.267294694 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.268237977 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.269836943 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.26767985 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.268316668 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.268853206 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.268936515 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.268353926 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.268089345 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.269952824 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268911933 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.268523535 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.268320278 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.269363988 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.268900675 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.269006377 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.268732621 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.269268858 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.268971044 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.270908495 seconds)
  done (took 79.825094627 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270464639 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.269602149 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.267669696 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.267128529 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.269996837 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.266320547 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.270045263 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.272450404 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.269772559 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.269516229 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269744949 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.267622037 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267855532 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270388882 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.267274577 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268064268 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268414626 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.267871588 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.270637521 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.267120766 seconds)
  done (took 26.583879664 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.26782887 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.270492178 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.268505476 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.268964289 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.27046493 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.26817422 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.271052942 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271013401 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269190683 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27166408 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.271150305 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.271748035 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268048757 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.268527229 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.271303992 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.268709876 seconds)
  done (took 21.523524686 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.268681247 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.271547047 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.26995098 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.270137524 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.269041508 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.268808075 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.271800044 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.268879442 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.26904297 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.271874993 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.27272847 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.272044452 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.272392862 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.27088276 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.269310465 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.27257779 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.2700054 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.269505848 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.272648104 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.272198863 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.270886457 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.269402333 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.273457793 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.271155581 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.270029215 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.270713882 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.269674687 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.270798074 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.271479942 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.272778865 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.269335248 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.271198065 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.269804138 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.271085778 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.273054639 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.269707226 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.274310037 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.273334528 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.273719317 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.273751589 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.273104386 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.271224316 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.274132861 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.273626516 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.271119152 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.274035114 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.271077989 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.272686714 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.270787249 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.271694544 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.2727162 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.273199625 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.274757242 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.2748946 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.273158299 seconds)
  done (took 71.142999363 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.273819344 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.274713425 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.271402925 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.273844497 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.273878485 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.271512038 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.273888228 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.272200199 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.272735568 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.275100707 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.272146344 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.274967078 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.272385401 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.27453072 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.273959448 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.27574922 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.272470402 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.273468856 seconds)
  done (took 24.132580133 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.272963625 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.273731224 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.275219173 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.272289803 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.273491605 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.276348905 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.274012058 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.276253789 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274766929 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.273492343 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273613373 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.275347823 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27671522 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.274949058 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.274102943 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273684207 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.276408118 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276331216 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.27463891 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.274295174 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.27772007 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275813126 seconds)
  done (took 29.255484452 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.274283264 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.274969717 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.291988723 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.321795891 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.308241779 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.275154051 seconds)
  done (took 8.958449553 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27492032 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276798197 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273968548 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277685265 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276457382 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27480428 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274803008 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27489736 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276457014 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274720913 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274617371 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277105004 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278152225 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274397226 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277141805 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278191924 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275210374 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275182323 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276433661 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277713247 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27517419 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279364397 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27676285 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275617504 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27574823 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276157407 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277964446 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274974794 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276631808 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278684708 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277951001 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275388444 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278733982 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278372579 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279660128 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277415907 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275369331 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278451176 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278350005 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276607579 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279353583 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279458673 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279094597 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276165959 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278180745 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275986537 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276288576 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276435684 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276813672 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279188018 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279551616 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276755594 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279000333 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279507465 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279030754 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280673072 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277902811 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277594992 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279471089 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277336169 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277447468 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279875984 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277376614 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278044091 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280116907 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277844367 seconds)
  done (took 85.511394931 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277891339 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278088977 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277863713 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279475603 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278581655 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277748392 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276990302 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277714038 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27715735 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278670973 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280161115 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27798489 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278794676 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277703727 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27775817 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2780963 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278857883 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278476685 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278193869 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282340412 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279818064 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277555299 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279653077 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278543797 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278060363 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281355956 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279096461 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278846652 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279651251 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278392343 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279122922 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278585148 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27939849 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279410853 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278651581 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279320023 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279396654 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279462633 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279682184 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282443598 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279163614 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281373 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279779473 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280353831 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280567848 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279548111 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279253956 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279889725 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280570701 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28040925 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280727486 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279392648 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280738101 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282118657 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281992269 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280360668 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280081664 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280765842 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280391571 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282764016 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280372862 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281041227 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283638794 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281517398 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280787495 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280644956 seconds)
  done (took 85.670757571 seconds)
done (took 1738.468327023 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.342953993 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.320261767 seconds)
  done (took 13.880446735 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.44253831 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.400104128 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.28083091 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.330632521 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.281758631 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.276508484 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.289478357 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.281313578 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.281606671 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.281831597 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.281756532 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.470979415 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.282238638 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.281865572 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.281222534 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.373745655 seconds)
  done (took 42.342210828 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.309128497 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.289258367 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.397124939 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.303385174 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.309061147 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.47099021 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.34010228 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.287034279 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.453479559 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.326159981 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.828897184 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.309771889 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.287369655 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.381029939 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.302853143 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.469967979 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.530040376 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.833460039 seconds)
  done (took 29.647793233 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.73194202 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.296862491 seconds)
  done (took 9.248685961 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.307320996 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.326345423 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.325178434 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.27947984 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.282965928 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.288944443 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.354352654 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.357150556 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.310617163 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.285036613 seconds)
  done (took 64.341870898 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.304716242 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.286926069 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.287350798 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.284475103 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.279083215 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.278785564 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.28483072 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.281167018 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.911987502 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.417150806 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.300940442 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.294333383 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.287320771 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.287382951 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.284638401 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.322038748 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.416194869 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.284661446 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.284313678 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.293864822 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.287406153 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.414421588 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.328383152 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.284946598 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.41188407 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.933795561 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.294749459 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.294014284 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.406361254 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.285431473 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.286303596 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.28773521 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.288706983 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.848221995 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.774784084 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.295074366 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.311953927 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.29594776 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.285565584 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.465549635 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.28701374 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.295186568 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.281973226 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.749372788 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.443758433 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.397349255 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.548827026 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.288047518 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.289582744 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.351437755 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.288216065 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.288599485 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.317014337 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.038893238 seconds)
  done (took 108.839834485 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.289319805 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.77077508 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.451197315 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.304145554 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.073302716 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.924132587 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.282257306 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.566734222 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.286259799 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.283045068 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.612293635 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.783254728 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.280871435 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.289316463 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.42615552 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.369212736 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.283121319 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.059392936 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.283003274 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.282545256 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.697433277 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300140374 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.295621103 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.313996083 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.321544803 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.744760628 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.75061462 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.732218331 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.286818518 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.281858486 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.745372412 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.291895131 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.365634793 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.283961438 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.556336355 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.636857213 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.617480583 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.286868691 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.301017041 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.288616245 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.283884592 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.740650925 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.624678283 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.282575271 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.289313603 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.745587018 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.282504185 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.292663761 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.28352561 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.483994237 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.275225834 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.283595499 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.746297778 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.283204192 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.637052302 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.327462774 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.329168054 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.773746028 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.283563103 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.377597376 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.288972628 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.283418553 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.291933249 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.284949314 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.283811023 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.630680249 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.68802393 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.285394923 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.630652985 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.741075833 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.284389728 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.805539639 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.136585137 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.308669962 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.34836461 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.284799015 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.859201172 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.773083703 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.340053881 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.285294789 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.616415113 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.288445391 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.606174293 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.30052743 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.287087617 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.707358748 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.311059695 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.31970695 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.286196822 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.285993343 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.91024539 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.287397869 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.571009344 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.303227876 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.285343962 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.286399661 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.325399915 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.286487886 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.286203591 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.292820977 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.80924944 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.290517742 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.589038699 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.307349724 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.285688493 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.286775789 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.287729291 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.285169152 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.50360278 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.733195048 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.290717487 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.286265877 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.286737719 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.292870152 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.589500487 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.291758577 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.59273774 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.286974886 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.285683241 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.304597511 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.016830815 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.304458877 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.28704535 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.287508869 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.14046596 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.497686316 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.305328295 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.287271616 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.288088227 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.301928696 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.67174324 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.287888562 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.325165933 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.291083722 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.992671827 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.299953695 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.31083321 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.938325126 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.296811218 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.289191957 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.290211588 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.289503076 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.59463763 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.565408069 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.591412288 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.295184273 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.288543174 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.967755851 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.334203097 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.421945472 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.305753323 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.295712352 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.489634041 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.578449462 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.288960101 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.858658998 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.290158606 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.502054067 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.289245526 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.625823153 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.774532627 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.29059852 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.294225215 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.98730245 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.965666099 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.904171797 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.290965805 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.621973044 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.304832477 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.740956799 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.289717198 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.290655472 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.732334317 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.29241262 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.298790892 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.291227192 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.290981708 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.358652152 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.466872476 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.059537943 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.296630299 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.749336594 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.303441308 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.290324784 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.290792521 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.292682227 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.64202611 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.353028447 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.29192997 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.302026635 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.291076695 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.298409292 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.763656599 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.19006793 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.292049706 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.445282287 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.91990274 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.292162757 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.292458005 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.889282044 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.580113815 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.800433628 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.320457242 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.600812833 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.290949282 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.331604169 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.016280986 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.307785855 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.762298883 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.292261158 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.292678986 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.878715961 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.29145688 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.360347108 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.291736196 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.290798207 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.814720307 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.292528021 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.297509063 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.685278408 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.292949062 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.538578532 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.292202704 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.293723681 seconds)
  done (took 1101.255673704 seconds)
done (took 1370.774619888 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.291813973 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.295538288 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.285543858 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.297297024 seconds)
  done (took 26.405203813 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.302503432 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.298977321 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.299681267 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.298952832 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.302427484 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.298932054 seconds)
  done (took 9.038599975 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.416398925 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.303648083 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.297030586 seconds)
  done (took 19.253168394 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.517925058 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.561861657 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.674413598 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.472631704 seconds)
  done (took 10.465633478 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.302591225 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.301553436 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.3022697 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.303844864 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.304962308 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.306506564 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.303904896 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.304477091 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.305699745 seconds)
  done (took 12.971280006 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.252106296 seconds)
done (took 84.620354651 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.280942997 seconds)
    (2/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.461662068 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.297238189 seconds)
    (4/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.298674381 seconds)
    (5/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.33877476 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.597014297 seconds)
    (7/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.327356023 seconds)
    (8/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.304809251 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.337818659 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.323697907 seconds)
    (11/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.492869708 seconds)
    (12/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.719615607 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.20933832 seconds)
    (14/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.849720483 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.94447329 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.165950216 seconds)
    (17/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.302125521 seconds)
    (18/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.405891474 seconds)
    (19/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.147429782 seconds)
    (20/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.908139304 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.901625087 seconds)
    (22/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.323439396 seconds)
    (23/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.556175093 seconds)
    (24/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.776678916 seconds)
    (25/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.37566875 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.707131716 seconds)
    (27/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.394192367 seconds)
    (28/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.324113578 seconds)
    (29/309) benchmarking ("sort", BigInt, false)...
    done (took 6.297066623 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.070688866 seconds)
    (31/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.524891839 seconds)
    (32/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.402268848 seconds)
    (33/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.323276323 seconds)
    (34/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.062669319 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.399945909 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.804427104 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.303266918 seconds)
    (38/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.879681935 seconds)
    (39/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.484842534 seconds)
    (40/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.338407097 seconds)
    (41/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.425820031 seconds)
    (42/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.611192192 seconds)
    (43/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.486355343 seconds)
    (44/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.672595223 seconds)
    (45/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.324943101 seconds)
    (46/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.317903361 seconds)
    (47/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.77172424 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.162937679 seconds)
    (49/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.677219439 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.297981822 seconds)
    (51/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.21356744 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.770934451 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.707764582 seconds)
    (54/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.299187014 seconds)
    (55/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.284644841 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.42948764 seconds)
    (57/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.295572513 seconds)
    (58/309) benchmarking ("sort", Float32, false)...
    done (took 5.30644004 seconds)
    (59/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.327105318 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.560430518 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.284049104 seconds)
    (62/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.150155211 seconds)
    (63/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.864119596 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.293750959 seconds)
    (65/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.284603329 seconds)
    (66/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.187416367 seconds)
    (67/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.363897336 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.356675208 seconds)
    (69/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.610386024 seconds)
    (70/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.299971339 seconds)
    (71/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.844275689 seconds)
    (72/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.29865458 seconds)
    (73/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.605324904 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.29934141 seconds)
    (75/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.151801626 seconds)
    (76/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.548436774 seconds)
    (77/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.3000624 seconds)
    (78/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.358319958 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 5.492664292 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.898139345 seconds)
    (81/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.064968557 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.799829688 seconds)
    (83/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.426515476 seconds)
    (84/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.611285653 seconds)
    (85/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.326026313 seconds)
    (86/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.345206869 seconds)
    (87/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.393692126 seconds)
    (88/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.081912998 seconds)
    (89/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.923697849 seconds)
    (90/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.973880319 seconds)
    (91/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.431449831 seconds)
    (92/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.188698248 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.324537745 seconds)
    (94/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.605581223 seconds)
    (95/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.026029083 seconds)
    (96/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.61626486 seconds)
    (97/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.78568354 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.808582093 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.982591069 seconds)
    (100/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.845851363 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.436581188 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.300327205 seconds)
    (103/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.405093682 seconds)
    (104/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.915682199 seconds)
    (105/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.896359996 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.703486564 seconds)
    (107/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.302458078 seconds)
    (108/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.884455124 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.523772355 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.300515533 seconds)
    (111/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.760739815 seconds)
    (112/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.125163681 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.350788084 seconds)
    (114/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.756654761 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.301743971 seconds)
    (116/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.312159646 seconds)
    (117/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.366494215 seconds)
    (118/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.67724891 seconds)
    (119/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.288192601 seconds)
    (120/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.387670982 seconds)
    (121/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.38450978 seconds)
    (122/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.364451843 seconds)
    (123/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.944873742 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.730432479 seconds)
    (125/309) benchmarking ("sort", Float64, false)...
    done (took 5.618098647 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.336954017 seconds)
    (127/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.308906719 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 1.81630619 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.326646027 seconds)
    (130/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.288594253 seconds)
    (131/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.792793832 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.602208988 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.318389858 seconds)
    (134/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.145612343 seconds)
    (135/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.344859511 seconds)
    (136/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.378392199 seconds)
    (137/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.322438248 seconds)
    (138/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.46669364 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.086875299 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.559347321 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.432119995 seconds)
    (142/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.636035548 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.410378412 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.302473028 seconds)
    (145/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.349190422 seconds)
    (146/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.31437506 seconds)
    (147/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.847392972 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.072528515 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.329564892 seconds)
    (150/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.302653214 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.236476378 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.302596751 seconds)
    (153/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.165333252 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.746204409 seconds)
    (155/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.307192971 seconds)
    (156/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.314446163 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.332051868 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.377030855 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.950866408 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.691006965 seconds)
    (161/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.702388085 seconds)
    (162/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.329071112 seconds)
    (163/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.330766899 seconds)
    (164/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.719255527 seconds)
    (165/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.320253728 seconds)
    (166/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.457205806 seconds)
    (167/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.892386151 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.517165852 seconds)
    (169/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.419047367 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.665106462 seconds)
    (171/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.168332215 seconds)
    (172/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.318889938 seconds)
    (173/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.307045691 seconds)
    (174/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.627127039 seconds)
    (175/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.571801984 seconds)
    (176/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.148101958 seconds)
    (177/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.157728637 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.231096641 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.466966913 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.304226504 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.332407272 seconds)
    (182/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.427510984 seconds)
    (183/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.412106655 seconds)
    (184/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.664572237 seconds)
    (185/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.615336449 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.80923499 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.304473229 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.347738571 seconds)
    (189/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.304558489 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.362377103 seconds)
    (191/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.500209467 seconds)
    (192/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.897442099 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.169813676 seconds)
    (194/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.521836778 seconds)
    (195/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.340981138 seconds)
    (196/309) benchmarking ("sort", Int8, false)...
    done (took 4.354449217 seconds)
    (197/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.305847159 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.150000456 seconds)
    (199/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.327655566 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.35985521 seconds)
    (201/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.29066547 seconds)
    (202/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.654930747 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.36459232 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.351841459 seconds)
    (205/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.686535389 seconds)
    (206/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.300692782 seconds)
    (207/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.666537029 seconds)
    (208/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.152572881 seconds)
    (209/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.669184943 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.994033271 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.715326419 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.344538883 seconds)
    (213/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.937592059 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.85630266 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.51917196 seconds)
    (216/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.737073985 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.384118131 seconds)
    (218/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.424429392 seconds)
    (219/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.149820585 seconds)
    (220/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.908640689 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.721066865 seconds)
    (222/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.336658128 seconds)
    (223/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.37201136 seconds)
    (224/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.324588551 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.446805098 seconds)
    (226/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.430144204 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.331573285 seconds)
    (228/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.390075077 seconds)
    (229/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.333857862 seconds)
    (230/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.391584957 seconds)
    (231/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.762850036 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.36786188 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.304534223 seconds)
    (234/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.297117207 seconds)
    (235/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.710893596 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.324273428 seconds)
    (237/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.929938758 seconds)
    (238/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.789626244 seconds)
    (239/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.609383755 seconds)
    (240/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.324362867 seconds)
    (241/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.318208499 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.698770316 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.324662587 seconds)
    (244/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.464712881 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.075076184 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.317311083 seconds)
    (247/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.310867995 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.520094766 seconds)
    (249/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.390746803 seconds)
    (250/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.505612671 seconds)
    (251/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.08583456 seconds)
    (252/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.382335125 seconds)
    (253/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.454436125 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.336691343 seconds)
    (255/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.334968735 seconds)
    (256/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.368729393 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.197334364 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.063667726 seconds)
    (259/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.466243009 seconds)
    (260/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.172139189 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.698034353 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.409755386 seconds)
    (263/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.310220384 seconds)
    (264/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.593947147 seconds)
    (265/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.930495944 seconds)
    (266/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.081813503 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.405918845 seconds)
    (268/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.325183935 seconds)
    (269/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.319642934 seconds)
    (270/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.75470486 seconds)
    (271/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.310304583 seconds)
    (272/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.338281698 seconds)
    (273/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.697534517 seconds)
    (274/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.645684138 seconds)
    (275/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.396547251 seconds)
    (276/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.605742745 seconds)
    (277/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.447380022 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.705899554 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.385640924 seconds)
    (280/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.569716725 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.408704601 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.705638854 seconds)
    (283/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.319654377 seconds)
    (284/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.551017283 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.305674905 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.394777568 seconds)
    (287/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.504078188 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.447213585 seconds)
    (289/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.669785488 seconds)
    (290/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.996387087 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.31350637 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.506505345 seconds)
    (293/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.631920685 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.357711886 seconds)
    (295/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.932300752 seconds)
    (296/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.717206161 seconds)
    (297/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.033644332 seconds)
    (298/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.129336108 seconds)
    (299/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.701672057 seconds)
    (300/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.385343941 seconds)
    (301/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.945221912 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.295368322 seconds)
    (303/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.314047096 seconds)
    (304/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.396958683 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.668598662 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.350034634 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.834178467 seconds)
    (308/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.310648668 seconds)
    (309/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.340256974 seconds)
  done (took 918.737988123 seconds)
done (took 919.97751921 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.342828199 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.336942914 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.320831166 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.342278543 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.433257218 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.35412286 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.331426761 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.323212668 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.36865926 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.371125092 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.320142848 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.354909818 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.322330575 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.321239646 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.321166542 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.335700173 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.340296532 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.32305971 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.338779788 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.330434544 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.339077854 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.322468726 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.37193846 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.357112244 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.326452912 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.324630526 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.326409315 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.34202428 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.433867828 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.325941684 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.32567629 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.334807985 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.340482173 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.322523213 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.317618479 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.343145301 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.333197784 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.332725549 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.32697417 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.355072735 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.7493092 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.323871895 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.324526669 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.324093207 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.324748252 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.327565423 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.324871546 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.329755192 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.336729931 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.33733958 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.739851497 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.338299894 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.325995311 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.324040568 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.335675035 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.32332088 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.327826035 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.340027595 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.343243176 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.340696208 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.334324135 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.32728142 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.326137539 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.341215612 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.332162709 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.78087676 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.319702069 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.329056211 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.752944249 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.329668329 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.784394162 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.333228929 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.326881909 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.338392263 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.355751851 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.347283152 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.319737558 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.324469908 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.333429077 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.32384834 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.335626059 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.338679988 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.329955422 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.325577956 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.340799165 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.358342354 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.336022283 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.327062191 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.334927712 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.345107938 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.333636327 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.336580907 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.329117917 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.322208035 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.336212468 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.329410581 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.329297608 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.328053457 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.33133518 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.337206264 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.754416846 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.342393559 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.323237187 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.32426161 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.326117321 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.340644183 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.804381287 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.331343085 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.350153571 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.374087268 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.329095019 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.341063574 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.329797113 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.343119555 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.337090222 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.330171876 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.322907343 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.342744281 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.755120459 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.343081816 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.328263481 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.325146439 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.343915208 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.329909641 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.325737846 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.353898438 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.329954422 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.341136919 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.447944339 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.33918696 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.359334173 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.326999673 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.330961256 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.362472446 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.344599636 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.359881624 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.330925808 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.344152204 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.343084326 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.325642732 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.340045044 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.33846598 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.330025106 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.335594459 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.32369269 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.358668097 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.340655945 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.341852213 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.350236556 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.449996581 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.326268678 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.342204004 seconds)
done (took 224.099060396 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.388825103 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.32755761 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.428766528 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.327623702 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.426477154 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.4271791 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.325623443 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.325493951 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.325552253 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.705095674 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.325264495 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.324162048 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.326637857 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.325484068 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.408074642 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.327215896 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.324839909 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.667581135 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.328123902 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.401051386 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.32344387 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.326633834 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.32882342 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.707426191 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.321729099 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.324974036 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.396245877 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.327950827 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.672383891 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.326412559 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.327145918 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.672184209 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.416763304 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.344675204 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.337524267 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.335789609 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.428638614 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.345515465 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.409128973 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.409242431 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.431908359 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.366598868 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.329535342 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.329076048 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.330170547 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.330630266 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.327445736 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.355669153 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.321500607 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.335995459 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.669018459 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.330072696 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.336480486 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.328561646 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.327297917 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.358652298 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.328173037 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.330022235 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.419098757 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.330989295 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.39023129 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.709450025 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.707294579 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.330680508 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.322841194 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.329748511 seconds)
  done (took 148.119981136 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.396778853 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.402482368 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.443217715 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.33014787 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.380201015 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.445313694 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.330276288 seconds)
  done (took 10.991877897 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.336220593 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.331326839 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.378719248 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.38039157 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.330348515 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.47818576 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.332120105 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.341732569 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.328432572 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.38411929 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.333387281 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.332620065 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.338888266 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.328829605 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.378797712 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.341743877 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.44542613 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.333037407 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.331755994 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.485291968 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.330495846 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.338502292 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.383188511 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.342830707 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.333518583 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.337736426 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.897776207 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.332645399 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.330642597 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.332884554 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.331192056 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.370669305 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.333164841 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.325885749 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.330038992 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.446958253 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.331786461 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.330847566 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.33256116 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.329757887 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.332586648 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.333041396 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.333823751 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.331157381 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.333815483 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.355347259 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.333351385 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.334111311 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.333503866 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.334173468 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.382812085 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.33385498 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.331876295 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.332889719 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.389915129 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.340153172 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.334488871 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.331762422 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.334266831 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.33270499 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.486873682 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.381028472 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.333754089 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.381050612 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.334505612 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.3352983 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.334284804 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.334699908 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.3882348 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.333961021 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.381869193 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.332746126 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.488570133 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.356530879 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.335119379 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.336253307 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.33640083 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.333964647 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.326219254 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.339362675 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.332702113 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.334706371 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.339561366 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.332594035 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.332733315 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.435597224 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.442603831 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.332187549 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.346803676 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.340648695 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.332745608 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.38726805 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.335771462 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.332814906 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.38641212 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.448761989 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.388628636 seconds)
  done (took 153.154751248 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.338973086 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.343049052 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.336095346 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.351271929 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.336598634 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.336167482 seconds)
  done (took 9.311052415 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.336733652 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.33752121 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.336361457 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.336384752 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.334893027 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.337866694 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.335888729 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.337906657 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.33921968 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.336603668 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.336923887 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.3387802 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.338109479 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.337531576 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.337434769 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.337699865 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.336104939 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.334758339 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.33708177 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.336059642 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.440540873 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.33655807 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.336052289 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.338527102 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.342497813 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.338466087 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.344871838 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.337893975 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.337755918 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.343552116 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.340551444 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.338890559 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.338844261 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.34380836 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.341239506 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.339978305 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.343131352 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.33978037 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.335862951 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.339217454 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.339382386 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.338032544 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.338663332 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.339228091 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.33928363 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.34273224 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.342656277 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.345287536 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.337988306 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.339731578 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.340296305 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.339660576 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.33946916 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.340221831 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.344225569 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.342597004 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.344599141 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.339652002 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.337798758 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.339773041 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.341104493 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.342710773 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.340853123 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.3437844 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.337748221 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.340696015 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.341866896 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.34286813 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.338889357 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.340280746 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.341699707 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.338659709 seconds)
  done (took 98.81086999 seconds)
done (took 421.648773732 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.744194439 seconds)
  done (took 8.017073603 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.767152394 seconds)
  done (took 8.042686738 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.317946446 seconds)
  done (took 21.605010037 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.434921098 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.341489751 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.35639301 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.342899744 seconds)
  done (took 26.751862654 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.339979191 seconds)
  done (took 7.616006239 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.347140927 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.337719308 seconds)
  done (took 13.963600823 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.560979959 seconds)
  done (took 7.837125369 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.888744195 seconds)
  done (took 8.174475342 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.362522615 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.342743891 seconds)
  done (took 14.251875322 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.323860421 seconds)
  done (took 7.601149222 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.823056001 seconds)
  done (took 9.09995725 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.343555861 seconds)
  done (took 7.621973955 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.341038919 seconds)
  done (took 7.617675787 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.269811023 seconds)
  done (took 9.545582009 seconds)
done (took 159.019141276 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.339024851 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.33942645 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.337444563 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.336832833 seconds)
  done (took 26.628038415 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.381272104 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.378893479 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.381664217 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.390296935 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.383504507 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.37703637 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.371815178 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.371919529 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.390681805 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.381224819 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.382423221 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.382822154 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.378194607 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.372819284 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.381499596 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.379714515 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.390941648 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.381044669 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.371058109 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.3824483 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.347425457 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.389993901 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.382643019 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.347925074 seconds)
  done (took 34.356421825 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.543496565 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.418063301 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.501174529 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.417976262 seconds)
  done (took 7.158071772 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.401810017 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.400967018 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.413122641 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.455488598 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.478598921 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.410295238 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.374914288 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.368316481 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.354883541 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.400820106 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.475249665 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.415686643 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.489496575 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.348257936 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.534148242 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.34938167 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.346421482 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.399441893 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.450730482 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.467796898 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.348081982 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.397801421 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.406793376 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.416368827 seconds)
  done (took 35.182549524 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.346861188 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.354701974 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.35404758 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.347781841 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.347794763 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.347581319 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.352399674 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.348698537 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.369469052 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.348484278 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.345635714 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.347050557 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.346787659 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.348989124 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.3473765 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.36022824 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.360992542 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.349715207 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.350402861 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.352754098 seconds)
  done (took 28.308045876 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.341074023 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.193581184 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.690817164 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.595468725 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.340987066 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.34226401 seconds)
  done (took 27.785559889 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.422491039 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.545286398 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.348065272 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.721251178 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.81070292 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.350097894 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.348530535 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.586096941 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.899869527 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.911366337 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.410481662 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.417531829 seconds)
  done (took 20.052777797 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.355501594 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.345345583 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.347144933 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.36160942 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.405455436 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.353214716 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.355902659 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.344080401 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.410415792 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.409089719 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.354910105 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.406430626 seconds)
  done (took 37.7309473 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432040443 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.395106853 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.407926173 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.181804829 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.726214159 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.557695516 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.236263899 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.794663547 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.351737811 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61834713 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346054935 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437833994 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.59976148 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354597193 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.348433219 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.39542075 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57560024 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845168847 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3498478 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.403875327 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37372581 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.345995958 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.511467474 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.377073264 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.557403361 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.479113031 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.608512233 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.345274334 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637669098 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.359071658 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3580915 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.34717256 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621853415 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035534105 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442340015 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358401447 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.051372243 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.060713979 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.339063462 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.414725132 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364792081 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.353748086 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358658951 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3461107 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.281596767 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.353652724 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.794543635 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.357144627 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.058997962 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.347961911 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360460817 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44218636 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.352788825 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.167602997 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.411882523 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349416413 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.346719417 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354560166 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922940953 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.958153756 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.360167564 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.283135972 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.726742708 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.397655768 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977448164 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.450068854 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.35000051 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.350557306 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.280155523 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.394752023 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366977734 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483770679 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.366494336 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.007880053 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106804914 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.367181427 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.279838947 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914863726 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.347842553 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.285929716 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.575947118 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34773175 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.284037046 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.304144108 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.280720948 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094722721 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358553326 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.820768247 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356564683 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.790252909 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.36162735 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364987311 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370635787 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.573693356 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.234251187 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347622299 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.351438678 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467716602 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369517567 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.78608765 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286848939 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.352795407 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603409093 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.561056634 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.354208478 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.3955018 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028968451 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356280248 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.367544347 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.348404483 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.379126373 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.933943152 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.361254044 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.940014369 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369348075 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.349561008 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13391895 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365816744 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.451362246 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.362283797 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60292679 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.173054133 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354103488 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430682411 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35089687 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.348216549 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.493890007 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.866778978 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.348955655 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.352270155 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352749003 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.362863332 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.349057349 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297819668 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.359117679 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356378309 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.353033633 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.576174168 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361138939 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627729841 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285369164 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495822576 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.407122136 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.57501498 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.571951971 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.349748295 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607738242 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350422154 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.353161917 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.37957941 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369085996 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448670257 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372140343 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.353783708 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.608696781 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.35451392 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.355501182 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.512837073 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.357180377 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356984238 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.35727806 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.220987189 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940932541 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328654329 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.356038849 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.245849496 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.365710714 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416343808 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.357499294 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.362916519 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.235256982 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.317966616 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.360876414 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.36382424 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.577097425 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.363932585 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.494549625 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433731872 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.557260909 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.946750018 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366000075 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.287320407 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.063991722 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.046001938 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354697055 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.287700838 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.352978871 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363196617 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.364622278 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.010000633 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.945536808 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355219317 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.424778595 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.361833645 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366337404 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.35992551 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353909587 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.212409796 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.958830274 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.359161138 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.368943955 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499826426 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.367448118 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.288642344 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.359053689 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.359198559 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.354801194 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.354005055 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387177604 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.421117623 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.839965204 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613634203 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.043711021 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.369339503 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.610898211 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.390047863 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.365788107 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361488134 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370868972 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.368005305 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379218523 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.366573326 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.475923183 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.031284385 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923836034 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082544441 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896599911 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366067027 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.36628918 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.357029331 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.803756626 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295149043 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.914916927 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.550744361 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.805017632 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305453194 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564742444 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.58185161 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.140786862 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.366789485 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.585561254 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366352695 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.36108406 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36881014 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567989491 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390094041 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.361407874 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.286983291 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.645810266 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592914259 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364604898 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438361946 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.805707375 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36163205 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.363581696 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.358632798 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.775294636 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.540387861 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.069320549 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.531164809 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.365655346 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.365943131 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.837283928 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.362290793 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.582989551 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991489883 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.358514282 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.582977924 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298036216 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.36812515 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.369736894 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.359192157 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.708301976 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.361442039 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.611051108 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.368441344 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292815858 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.367199961 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904555906 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.272334416 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.365936338 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358189697 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151576089 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379006046 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.653225568 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.364060148 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.201330472 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362488853 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.295407865 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292617038 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.053193224 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.361738078 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335041658 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879650783 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.745296409 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.381869521 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386638521 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211319163 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.613118262 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.372490422 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.952455967 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.586857367 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.292684535 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386559829 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.45976637 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367297143 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.349219707 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.360157508 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.595935879 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.226412636 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.584070856 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.459256855 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.274879237 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.360723685 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578863482 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.359365232 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.37755485 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.62086374 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.071357009 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.37839009 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077461199 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387483826 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.366025865 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.279858664 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.741634367 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372459997 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440702891 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.372863425 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.373562617 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.372012906 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54275667 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364504393 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382844637 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.378018519 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455993029 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.995118658 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.208793511 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.365865386 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972857746 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106712418 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.963879525 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379898259 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.359366125 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362298049 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297631235 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508757546 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.58720049 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638142783 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493819369 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.919742273 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390056049 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3629421 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375229793 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579668601 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639389763 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.257504018 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368947334 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.380997733 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.364072377 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.374960102 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.575875711 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887716398 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959283642 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480177902 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.363646348 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.807529086 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641361517 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364397012 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362566001 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.96299005 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.385780941 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.785987257 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.374872224 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37001321 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516231323 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.373071617 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063028575 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.379556568 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.519966916 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.139710945 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.465766076 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.623368807 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.890379961 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.37355826 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971404212 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.087141242 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627990654 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43123654 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.375329978 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.47499803 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513392123 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.37192096 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.369655114 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364909972 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.214092814 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.072660028 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.375803913 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964673232 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628607666 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.364412201 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.371143011 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394272838 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.374904868 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.591957835 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.126442934 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.593863054 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376246444 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.366982177 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.185844343 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.967280458 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380544618 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299665016 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.369365063 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613701499 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.604159156 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387289848 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.81984313 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.079769736 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939729711 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.343661119 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38870077 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367720019 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.089507366 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96429228 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.248084464 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894094726 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.930031009 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.368729888 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6423969 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.372361726 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.375676429 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646932145 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.372095305 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.367080053 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.384862803 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.967875586 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177965525 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.375958371 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.474338885 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.30813714 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.713769966 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.044013159 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30858511 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369540231 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.559398678 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.370012672 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500881704 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.38194094 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.379388844 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381049725 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.105160872 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66542056 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.377247065 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.353930895 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.360429767 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.376904736 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377877717 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606709062 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37451457 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.039942505 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.717778335 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.622329585 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.382857274 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.358258345 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.373751695 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369052634 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.358177485 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.56866537 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.025260722 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942149245 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.375775408 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.383334192 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.374268035 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.58693817 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580981839 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.372301604 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.384317428 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368473817 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390465421 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.273200105 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.872545205 seconds)
  done (took 1611.199776732 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.404486226 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.407076115 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.399509648 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.416609036 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.421563191 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.400211448 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.477982103 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.540149758 seconds)
  done (took 52.776305522 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.380036204 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.625023476 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.400819217 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.37803306 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.381476984 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.367825183 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.823719339 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.381624972 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.377714577 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.38139154 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.371953474 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.381895008 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.01509356 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.37938793 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.378344665 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.369049031 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.378320177 seconds)
  done (took 66.089811263 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.371231353 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.560950473 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.481180122 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.371579789 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.576423028 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.375379432 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.473053591 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.371829469 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.38459741 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.497480925 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.043433206 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.381046532 seconds)
  done (took 80.196568374 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.378347568 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.376197216 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.381034994 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.376970788 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.37880771 seconds)
  done (took 8.200567669 seconds)
done (took 2036.94302464 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.631382063 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.10154177 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.059224739 seconds)
  done (took 5.470103595 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.514989346 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.563261536 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.720039401 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.727397057 seconds)
  done (took 7.832367033 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.644940377 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.762849905 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.561064753 seconds)
  done (took 6.274119251 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.843991375 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.375074939 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.49267993 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.366531786 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.371755385 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.372157366 seconds)
  done (took 20.417746155 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.37294547 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.375686569 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.373147951 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.37601478 seconds)
  done (took 6.80590317 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.354658488 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.126159991 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.359480933 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.374016657 seconds)
  done (took 18.522046943 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.121399939 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.132369082 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.116809122 seconds)
  done (took 7.678183245 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.381051242 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.211355005 seconds)
  done (took 9.899869872 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.674756131 seconds)
  done (took 2.982526449 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.509648869 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.643514474 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.440164342 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.358812422 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.454992004 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.373299099 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.115026458 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.643570973 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.34968318 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.639758447 seconds)
  done (took 28.836730419 seconds)
done (took 128.373023833 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.303615045 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.388538758 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.571167365 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.276767085 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.5959091 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.570810353 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.740070211 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.239980772 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.781520603 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.772263357 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.278619044 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.598200101 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.695990757 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.388615804 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.694593029 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.391949817 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.597542345 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.355801413 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.963595615 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.164221 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.744359629 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.916193914 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.104499111 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.940985021 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.596345643 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.527625824 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.495658274 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.394319952 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.137927935 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.517523489 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.530240095 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.339862101 seconds)
  done (took 192.924448797 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.369663934 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.369800654 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.372268573 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.372498137 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.370884142 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.373134536 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.37429959 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.370693779 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.38506943 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.384774871 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.370125647 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.386020688 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.372977166 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.386366384 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.373111685 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.382146941 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.371437319 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.370735474 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.372021315 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.371224375 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.397670378 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.371496241 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.371861113 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.386687981 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.371471325 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.377072704 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.371855098 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.371151156 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.371877049 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.375968668 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.380196334 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.372130151 seconds)
  done (took 205.329595025 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.371277775 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.372039301 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.373039549 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.384272539 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.373134942 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.372449019 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.375062151 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.387141322 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.383831467 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.380470643 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.372470459 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.372719949 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.375325279 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.383032639 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.37554108 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.37374055 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.372713503 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.387465346 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.374000265 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.373414569 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.374629851 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.381657761 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.373115345 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.373179652 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.38729311 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.387900764 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.373796247 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.376927721 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.374131641 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.376206441 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.391924474 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.373193553 seconds)
  done (took 205.389540726 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.571751136 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.381889414 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.38363296 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.317807035 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.382995907 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.382055748 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.382734437 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.57392626 seconds)
  done (took 14.690341146 seconds)
done (took 619.642542368 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.724716381 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.439999196 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.582727276 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.403835231 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.183888267 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.404421029 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.403705944 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.574709991 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.318305852 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.581144911 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.657330806 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.398408563 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.798319585 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.401333313 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.658298573 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.499517329 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.257904746 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.367621359 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.725671999 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.967888784 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.662216191 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.867791335 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.5755928 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.314529981 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.854678366 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.872392817 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.104286081 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.282790727 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.407112568 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.73005154 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.072317277 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.359133532 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.463184223 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.444549978 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.49863906 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.480977386 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.344215774 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.442684105 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.586462856 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.628681934 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.963660981 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.12989397 seconds)
  done (took 93.749986861 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.37199995 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.374342451 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.372094509 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.375010343 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.373979384 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.374762988 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.372481302 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.373530445 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.372828674 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.371858364 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.372842832 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.37383109 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.37390526 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.374131474 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.374029408 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.37153801 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.374848018 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.375352609 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.373349698 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.374469589 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.372638218 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.372018848 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.373729714 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.375253932 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.373723622 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.373449337 seconds)
  done (took 37.028680546 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.386421274 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.631038864 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.809076645 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.390163404 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.385244224 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.389360954 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.465620245 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.387556226 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.388833791 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.388439998 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.540302245 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.391127996 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.422440761 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.817849546 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.388147536 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.386801984 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.386662108 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.38512122 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.638100055 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.395520929 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.468754543 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.387723938 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.467374325 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.397312985 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.389207873 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.38775006 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.3909808 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.885097606 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.38912362 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.540267176 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.195405388 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.466799867 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.838709729 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.819893484 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.197802879 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.392428792 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.388345504 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.544379988 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.388847053 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.387380019 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.465969808 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.38887763 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.82022834 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.022154798 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.404857495 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.387570203 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.908014813 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.545139638 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.64954301 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.396018564 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.846240359 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.39198775 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.389964987 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.390697398 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.643082228 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.395009083 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.387977263 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.927055491 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.410207289 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.468571578 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.390294489 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.388953538 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.647389058 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.388719887 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.634767876 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.389902128 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.398475713 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.389633983 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.824227542 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.391085328 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.041754428 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.405727219 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.389746712 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.541551059 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.636915461 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.939675504 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.391895732 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.652147803 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.852367173 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.467108549 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.393431099 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.875587318 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.471511065 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.393039643 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.393473862 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.393253421 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.390324288 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.435373552 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.467269501 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.967021138 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.037599102 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.943748403 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.472646084 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.402496862 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.391779193 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.927766495 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.392265294 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.39093187 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.818740001 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.045471564 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.407397885 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.398936178 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.029266931 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.409917396 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.471129007 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.39692962 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.830579024 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.392983988 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.436419677 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.39269764 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.398577539 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.395090605 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.470944313 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.395033667 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.392323336 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.018726553 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.567360708 seconds)
  done (took 182.229323352 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.384319693 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.400786193 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.402599816 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.384532533 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.394280347 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.391339911 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.386009663 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.386511863 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.391105481 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.384945016 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.384845786 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.384481316 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.38712031 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.387833595 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.395495493 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.392783728 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.996634039 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.387743015 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.385911359 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.385634095 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.198903446 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.38660501 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.386269531 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.385782633 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.386020621 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.387528076 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.387597073 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.389723642 seconds)
  done (took 153.628230603 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.394289211 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.975574268 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.394689232 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.529312277 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.416557703 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.392836563 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.52666346 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.452317016 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.396432346 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.392629347 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.392672222 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.705298753 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.395340794 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.924596677 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.591561151 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.529629162 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.92389823 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.396264393 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.393330527 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.392957243 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.531338691 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.402678965 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.70874413 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.001456126 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.398188427 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.979013238 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.38367969 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.394791798 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.39331144 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.980590387 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.394434612 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.708428396 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.472165376 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.455760755 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.981021166 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.9267588 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.927716104 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.546119768 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.39520646 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.396370776 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.395472371 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.383196732 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.011676356 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.401375209 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.39604839 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.005657781 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.41685304 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.396647682 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.404084565 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.392960308 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.455416224 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.455576255 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.729435865 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.019042299 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.478603745 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.417144405 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.530233051 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.789051983 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.397650426 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.926644771 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.382822126 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.013763467 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.403741911 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.385002106 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.396592639 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.401906668 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.551187519 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.53149566 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.929543242 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.398000857 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.928251832 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.551093795 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.395187129 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.395622293 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.398462111 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.014579829 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.933521911 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.551061621 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.534842173 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.596939766 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.387488976 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.394526971 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.386088082 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.476241976 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.397584458 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.018767713 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.934683345 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.399720156 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.400200214 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.400022516 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.399972345 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.580815758 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.01852027 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.480690669 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.924918382 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.744640638 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.728872807 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.403952874 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.459093563 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.397613162 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.731513775 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.403778449 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.457991696 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.856621482 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.73304505 seconds)
  done (took 166.838678989 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.648098416 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.643674249 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.492872046 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.513033578 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.959650047 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.974363511 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.638926989 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.523954401 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.509487596 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.642261695 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.632806371 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.496357101 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.5896445 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.472280132 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.125084561 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.469186946 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.491418365 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.520910372 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.511858953 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.48394824 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.05715358 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.68820535 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.57306342 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.61120608 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.495689657 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.210184308 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.953185098 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.907766996 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.569532462 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.739891422 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.931136463 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.544516513 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.407226384 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.077592431 seconds)
  done (took 67.438094544 seconds)
done (took 702.226889682 seconds)
SAVING RESULT...
DONE!
