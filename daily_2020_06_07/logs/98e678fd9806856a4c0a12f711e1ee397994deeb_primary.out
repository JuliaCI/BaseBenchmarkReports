cset: moving following pidspec: 16666
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.32496181 seconds)
loading group "string"... done (took 0.593602798 seconds)
loading group "linalg"... done (took 8.202841371 seconds)
loading group "parallel"... done (took 0.182345799 seconds)
loading group "find"... done (took 1.24518488 seconds)
loading group "tuple"... done (took 1.975590454 seconds)
loading group "dates"... done (took 1.324178967 seconds)
loading group "micro"... done (took 0.274362587 seconds)
loading group "io"... done (took 0.930904665 seconds)
loading group "scalar"... done (took 40.115027525 seconds)
loading group "sparse"... done (took 11.915276449 seconds)
loading group "broadcast"... done (took 0.972268287 seconds)
loading group "union"... done (took 14.294149539 seconds)
loading group "simd"... done (took 4.788591187 seconds)
loading group "random"... done (took 9.299845075 seconds)
loading group "problem"... done (took 1.600159719 seconds)
loading group "array"... done (took 21.352497481 seconds)
loading group "misc"... done (took 1.744570828 seconds)
loading group "sort"... done (took 3.358114674 seconds)
loading group "collection"... done (took 19.299559367 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.544850976 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130005835 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140643547 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123909364 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.154338909 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119868765 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125004509 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084686578 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.843742726 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.151470643 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11643136 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.438286661 seconds)
done (took 5.365510461 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175311881 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088448011 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079741412 seconds)
  done (took 1.224226588 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066301903 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127929975 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067184855 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068445169 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06953898 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068609397 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069012291 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068545498 seconds)
  done (took 1.597568958 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073668418 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.0694243 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067019563 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068900713 seconds)
  done (took 1.338318869 seconds)
done (took 5.468466386 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.807800548 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.214967251 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190893535 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.415420308 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136658234 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.181372602 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.650679782 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.332897106 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.205277361 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095511177 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11255834 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.365788866 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.128670475 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.650561649 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.080261533 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096918268 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.144817123 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.435988413 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072642763 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086075963 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093932561 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132164664 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.092258126 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077998976 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150867134 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071325177 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144456896 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.088755365 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069502919 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.221048205 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175815737 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.674047058 seconds)
  done (took 10.494028319 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10298899 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.101855401 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071150689 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.128597744 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.10218964 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072882743 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078600838 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070520048 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093370159 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.133805507 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.094993691 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111838464 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068827602 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072201075 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086101781 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202224666 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08354454 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084126975 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071148531 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081621534 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.11149958 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081588626 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082415268 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082917169 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.136911104 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.173341367 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100564573 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100842759 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070335666 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.085131041 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.120642822 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131480482 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069193211 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068752969 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128323518 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095920616 seconds)
  done (took 4.648805192 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.106485129 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.153439452 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091467642 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140409552 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065842296 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112322095 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066454266 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083746229 seconds)
    (8/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.11925806 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.238642755 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.382226445 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.628459216 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.12413521 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11760534 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105508714 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071799062 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069806189 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065285755 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068062131 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.252302904 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.098011856 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111958259 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083408777 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071288918 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.06911614 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065404576 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074817602 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06427974 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069238762 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088307322 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076383475 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.333492231 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125540922 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068996162 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.843483037 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.167856852 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068812054 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106058976 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161584052 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098004954 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14379227 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068198726 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064419982 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.297151909 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06615291 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06872394 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073387577 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069615092 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087266907 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110428298 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12099022 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066609477 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067096951 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.168767376 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067985085 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084120742 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.261482405 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153624028 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06923859 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.304585521 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097845217 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074613263 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06777633 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.20155371 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.118782447 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069051611 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068552527 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069540586 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069380834 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.372767159 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068780313 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.091620587 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071428078 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079964454 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073080534 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071931797 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080029936 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081150634 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.094474281 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068360898 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075033844 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068169656 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066685379 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068081616 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095251662 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.394992346 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067681858 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072908552 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065538261 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094028473 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098782424 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067552143 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066441831 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103228966 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070951871 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066764224 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069100825 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.119326409 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070946443 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113094315 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.06859943 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.167886335 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.079277716 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099453904 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075303775 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10487092 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080987235 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073871528 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.469640955 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.068242913 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.075237553 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068368952 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070198856 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069621677 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081406547 seconds)
  done (took 22.044832867 seconds)
done (took 39.351622165 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.246285703 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085937094 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086171677 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.086822308 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086837912 seconds)
  done (took 1.738884997 seconds)
done (took 2.866923145 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.127080259 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102455247 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066822405 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100861826 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067314922 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104546401 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106713251 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.085992518 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103245 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067023526 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100422484 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066668363 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067037693 seconds)
  done (took 2.315960233 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082950642 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084268776 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071955362 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084422816 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064313333 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083860647 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085632508 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090850184 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083689735 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074043988 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065422719 seconds)
  done (took 1.997263523 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08235895 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08455792 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069521319 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082533823 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062886271 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08182301 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081888711 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085777212 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081919262 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073589199 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063616766 seconds)
  done (took 1.97386391 seconds)
done (took 7.408731728 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076655583 seconds)
  done (took 1.188847227 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.533997283 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.625577506 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079093611 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.10083295 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192851807 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.109510549 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.239209803 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08368089 seconds)
  done (took 8.245426467 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.09673061 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073134204 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.083812508 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071760739 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072112227 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071351128 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072234911 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072933791 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073088112 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072409067 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072051152 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071685879 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07154465 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071987618 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071934797 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072390772 seconds)
  done (took 2.382787766 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098569535 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098991604 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076290195 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077696732 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07512432 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074981699 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077129231 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076736435 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073697634 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075352913 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078367066 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07651801 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075633665 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066325197 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076430048 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078822862 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074095709 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076914479 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07785956 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078537441 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07810798 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066617957 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075796179 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076763178 seconds)
  done (took 3.083599843 seconds)
done (took 16.023506667 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116564229 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079420293 seconds)
  done (took 1.315930529 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079125023 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080025599 seconds)
  done (took 1.287750211 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.078159219 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063368759 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087378039 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076851149 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065599172 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065342095 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085249284 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065668594 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065352399 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.0659048 seconds)
  done (took 1.847431218 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065612931 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.074361675 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072123127 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081632804 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072818515 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.0661632 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071708829 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068003176 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077158017 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065782615 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070803938 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08641522 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069008077 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085742177 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.069179016 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068627518 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072758838 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06957362 seconds)
  done (took 2.437401389 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063591424 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064407547 seconds)
  done (took 1.260611845 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067393292 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064147165 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067381601 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06810839 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065662059 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064388949 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065715875 seconds)
  done (took 1.591260045 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.409193439 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.12519523 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.339047921 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073044161 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08330205 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.264028218 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066541041 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071768882 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072227228 seconds)
  done (took 2.676505164 seconds)
done (took 13.554219881 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081084105 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086828485 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100337165 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.413490401 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093088708 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068996536 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114632802 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.181277236 seconds)
done (took 2.283104183 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212577211 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.076899654 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.489158916 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.209459713 seconds)
  done (took 2.909805225 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.46130136 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081422565 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077147444 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067236649 seconds)
  done (took 1.831798683 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068134631 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071894047 seconds)
  done (took 1.2783248 seconds)
done (took 7.372932687 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065599644 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.091992429 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066404041 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066439697 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.066359193 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066640678 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.066794765 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066944685 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066367556 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067168018 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.066506432 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067251438 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066520682 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067834216 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067263356 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066537749 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067125398 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067237645 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066823103 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066857999 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066919765 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067308093 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066898622 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066578552 seconds)
  done (took 2.800237384 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083091725 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067511594 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.069558451 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068969681 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06961867 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068943906 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068833463 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067483966 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069565182 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06723892 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069594341 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06990789 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068038284 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071851272 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069538501 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070826482 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069018811 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067784561 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06726118 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070059328 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070670016 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069679284 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071669037 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069276506 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069421747 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069463055 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067213911 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068225015 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070577546 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070917672 seconds)
  done (took 3.239382861 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065679683 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061817359 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062645767 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070819805 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061783733 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063134514 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061878515 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06205413 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062682878 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061999001 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062719435 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062966758 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062814613 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06389881 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063799075 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067833379 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081190194 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063409191 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06296548 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063623609 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066602913 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063135784 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06243008 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061939117 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064232932 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061330798 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062374725 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.061493904 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062640944 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061458985 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06560954 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065997623 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061624003 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066614307 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.0656681 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061776903 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065711936 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061360741 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062176783 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06141249 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061403755 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061956968 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061993938 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071920795 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063217478 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064164678 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063085655 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064265113 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063800467 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065337989 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062917416 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063008725 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065427544 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065065815 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06859887 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062610916 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063632039 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063231877 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064186556 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063449461 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062953715 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062299429 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066243681 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063932572 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080744981 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072383538 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063156514 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064486145 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063714833 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066792676 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064689777 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078649767 seconds)
  done (took 5.797371532 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087013399 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088767781 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067008116 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066357481 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062387325 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06203982 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070483219 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062492678 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06892184 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083459444 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064045138 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068705655 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06906259 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06815908 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064271943 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068808875 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072814818 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064592581 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063920353 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0680679 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064010364 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072157147 seconds)
  done (took 2.693132549 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15088693 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068440384 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105985965 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073117976 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070799252 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073336178 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068555502 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068652495 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068373575 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068712575 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069100967 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068863026 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071991525 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070890278 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070761895 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07011366 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070390385 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070546297 seconds)
  done (took 2.535032206 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079247156 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067771977 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087239333 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069111027 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06932091 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069077317 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072234088 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074511436 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069456484 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069311767 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074704991 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068915087 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069266905 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06950701 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068392331 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067564085 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067752324 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068836212 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074446127 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073704369 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073414155 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074193627 seconds)
  done (took 2.734651432 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079274886 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076518085 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083748945 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068964132 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062314894 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062505193 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069625418 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068779918 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.07017005 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068064551 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068997177 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064133643 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071270523 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068697258 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071557057 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068883031 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06826912 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068655501 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068162365 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064457382 seconds)
  done (took 2.551433679 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083850255 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064988277 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065458913 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071962409 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065444284 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.064917156 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071558739 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065412979 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065182644 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086254184 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065666374 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065841716 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071766997 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069779501 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065597328 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07169814 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07397556 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071546843 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065295783 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06556181 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087147159 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065260478 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072229816 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065710258 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06617256 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065573894 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065783409 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070330954 seconds)
  done (took 3.109040606 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065553967 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064940796 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065218908 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065202601 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065004169 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065136903 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065574483 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066202274 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065485007 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065584423 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065162754 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065017281 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065051674 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065044954 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065000609 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065143337 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06503079 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065765764 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06573255 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065430685 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064976781 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06502391 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065152455 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06504176 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06562388 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06570471 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06747776 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066309033 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066427647 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066387359 seconds)
  done (took 3.127572115 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076018542 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07394098 seconds)
  done (took 1.313754947 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063882477 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079204288 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061915964 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074774025 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072821551 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067331475 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073570876 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073386426 seconds)
  done (took 1.724614533 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085923702 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075979432 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066202851 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07706283 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075862764 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086842988 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129231412 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066438956 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076849307 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067238956 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082773152 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066404814 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074795349 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069412263 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075051661 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077862243 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.061929318 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.068990792 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065898527 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062988611 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066449538 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079424446 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075899272 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064354906 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071813517 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094529249 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082763085 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065396499 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072835365 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07825217 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076592961 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06275432 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065503282 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065874033 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064544341 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077039921 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085454707 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073057603 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078808081 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066478037 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074992071 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064473131 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074577617 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076723026 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081811337 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065565052 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065913 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063838403 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066609673 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072245893 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063278422 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07014548 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063260126 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077825006 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073251809 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081163452 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064578872 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071491311 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072636189 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072882722 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077147052 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071996921 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075432229 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065568717 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081417695 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075139633 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077817294 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063150337 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06231857 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063556347 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079841884 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094437849 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074609702 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064160056 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06627413 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062310587 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072122208 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064671402 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073721616 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076863813 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065233751 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069752499 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078271096 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070080696 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071930103 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072403853 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064486025 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069244143 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066484043 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085937194 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06426119 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063528587 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066663423 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081200953 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.075048227 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064974795 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066403419 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076847484 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062346707 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065324443 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066040845 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070980257 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07952954 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070007582 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070205938 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078191577 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074650002 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071211419 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072137226 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062562004 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065940231 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066765061 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076163751 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062086436 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071381426 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069191221 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064691949 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076817327 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062905314 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06249209 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075013298 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073794015 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06114456 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.059881172 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069641951 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062338105 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064798408 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075965938 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061312723 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06088037 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061181654 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070393763 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06251214 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070445509 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066288089 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069551503 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.185531844 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064168309 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070342209 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078270568 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070016385 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072115908 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.077252392 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072904961 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06513481 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.079355206 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072564933 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068433649 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075412832 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070855862 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063995697 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068575125 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072729161 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064698264 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073093251 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068946531 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073026539 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067309193 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064917245 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072629398 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066663956 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068393514 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070597618 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064817004 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.08179696 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072493361 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063802171 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06363221 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074214988 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067234799 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065832989 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06827115 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072795598 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066714814 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064669577 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065454586 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072508605 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074286891 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068969519 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067106543 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076205779 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083448102 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065718242 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073408691 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065758627 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0669473 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066883549 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080310628 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074092583 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068342268 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07073383 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061693366 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073203193 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076021927 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066808578 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062466283 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066751431 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067776091 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07565748 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067793865 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06477605 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062687784 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069666574 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066503797 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071271242 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063752054 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067576396 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070642708 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063633919 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071917254 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066649845 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080337809 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073067865 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062143318 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066143118 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062663443 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074927304 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062128184 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065310234 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066556013 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064836072 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063330179 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070351808 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062453226 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07869148 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078871481 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070873849 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067762541 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065361784 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077904793 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071342566 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073933801 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072767679 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07601469 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081352096 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067867005 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072263999 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081200403 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065692069 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062961944 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075184977 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067191249 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064922988 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064863138 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063580002 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071323686 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07103141 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074247807 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061075781 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070706559 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062619931 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066639567 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061830664 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071987851 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070036474 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066672758 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074548694 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063777757 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063050856 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070470922 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.062305859 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.063251166 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.063619676 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069599765 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06282954 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068511663 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065480363 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.06850474 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064680243 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060362653 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068169664 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062549688 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068310213 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072096934 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062136079 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068360066 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069946224 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.189778781 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071930509 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068495186 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067695962 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072004502 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070795739 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069833225 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071287277 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062791706 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075891496 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064607041 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077211368 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069549891 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.060988476 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07010043 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070406471 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.068858398 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064588361 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065066727 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069479568 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063652678 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071456678 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076820736 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067040201 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080334324 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07569969 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070381248 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070932285 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069337171 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069495459 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067099518 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068507273 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065376343 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069779094 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064158785 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072425665 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07134992 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068792487 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07047276 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064683831 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070041713 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064855169 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061426175 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067028205 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067359573 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06447196 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076976478 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064390877 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067176644 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063631873 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064949561 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063532001 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061831264 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.071027332 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071789573 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064451915 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074356275 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06684669 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070384522 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079649831 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061464232 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063062866 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062260797 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06572449 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076646907 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064273022 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077701269 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069854125 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066665024 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061641481 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064689523 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062669009 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062248627 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062170133 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072437266 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06615964 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063208998 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064098889 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07092951 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064750815 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076538682 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063225771 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068091351 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064072398 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061785833 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066437608 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066461748 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070957153 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064522706 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065266019 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062235578 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063899285 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.0680847 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069798874 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.0634723 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069628341 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076041878 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063522669 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071263271 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067091246 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061732307 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071284617 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063346492 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063668963 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066262473 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071432902 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071150915 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064789999 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077884823 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.064025271 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072106185 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063795202 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062144678 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063245299 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063388916 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063853151 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066351055 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064569428 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076733299 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062136319 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070394013 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068864684 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066994583 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073153847 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064250013 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068904263 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068370183 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064451348 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06875124 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076210674 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.066108899 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069904575 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.063368678 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068500706 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071726854 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064685412 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074025364 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068144764 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062929421 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068597484 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064379509 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062408008 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06245694 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062131512 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072630046 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.196142878 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068032924 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067117675 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063293953 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069444311 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068920964 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079767447 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073910678 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073949855 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064621232 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06340958 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066507064 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06762132 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072395184 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072919341 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076579916 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072966807 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069570644 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064976967 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080684041 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076371008 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073570345 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066958668 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072838759 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066097469 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073233369 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070433288 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071118435 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067850515 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074518431 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072034013 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06853048 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077057724 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074153833 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067230634 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071972562 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071560552 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.071069451 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063752665 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066565056 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.073415663 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075508593 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.073460924 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065880088 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082245954 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067236355 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071315061 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068935518 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065288872 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074612871 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063470871 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070541214 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066011339 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0660636 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063046203 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067168388 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065712808 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073057295 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068569613 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064115124 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082137194 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081137633 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072565599 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065108897 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065679659 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064054755 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064029255 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068293077 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066664272 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071929347 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.08085468 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068427882 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068358945 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063792957 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065838821 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073280577 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074204865 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063326674 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063935803 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068460174 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071910304 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077468605 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065091754 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065876199 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073858739 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.07283617 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063915204 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0684944 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062835571 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073669036 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083407136 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066668232 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071704747 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075835967 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07857293 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066256802 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063552884 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066117673 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072097349 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071557851 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066469143 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066777711 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085370817 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07177677 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066190581 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.063529982 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071028533 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.0667826 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077654293 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066662534 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066930908 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074594964 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.075239985 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073751151 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07660167 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077307304 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072414239 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072271206 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064946045 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070967883 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064582245 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067933685 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066648804 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06593803 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069658132 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072144306 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068046853 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082318157 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079618381 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067712878 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062098744 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067398267 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067514893 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063389169 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06638735 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063578544 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063687003 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063972874 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063868009 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070901561 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073927011 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069478878 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065121944 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064716944 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.194283218 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.075715916 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073650404 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073724716 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064690037 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067370887 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067225734 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.075764817 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069443355 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068066801 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.07254137 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072808545 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07263258 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064679228 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078505148 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065333404 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089927722 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068494711 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065519484 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067044667 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073623768 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070342063 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067538447 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072636651 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072910853 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067391597 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063564105 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063985537 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075669335 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064145999 seconds)
  done (took 43.126265877 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100514675 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063068393 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063923985 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064023298 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074165393 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065450733 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063909313 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065213692 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065020048 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067582361 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064450381 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064234077 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072256515 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079948283 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074942918 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069106465 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064225922 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065387188 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064134072 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065495402 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072043908 seconds)
  done (took 2.719495167 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070373512 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077799096 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074864677 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079669077 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071383789 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067065643 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074997493 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068221653 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077201422 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073626881 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077468328 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069601568 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074861132 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074795109 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074961703 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069534113 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078111192 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0735371 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069348664 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077360866 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069646621 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077366173 seconds)
  done (took 2.879565011 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064326784 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063286017 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070068849 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061649926 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063070239 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061691072 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067186726 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063258156 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068043815 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067511965 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066660413 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065589558 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070151274 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062462284 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069019837 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063433463 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109603229 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06672887 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065007599 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065726144 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063484266 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072286778 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063941936 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064383477 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067281671 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067990439 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065462067 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063718138 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064938248 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067407201 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065096017 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063143309 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072013337 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.07103564 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067342034 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067472401 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065372516 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065205493 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063473899 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063510955 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071023682 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064028679 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06794541 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.07216646 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.0640381 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063456908 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072308416 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064916096 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063217648 seconds)
  done (took 4.542497218 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075291797 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111093368 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068479649 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091218066 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076434245 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069878198 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.067920937 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09229463 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064209807 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066023735 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079946467 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07888435 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065773668 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067217767 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069884851 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066174142 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067298472 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064803625 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069250736 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065127225 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068955354 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070084204 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076497956 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077397187 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066710233 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064738222 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065056323 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067586092 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076814288 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069414572 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067314201 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06803616 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.077653226 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070722731 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065040834 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.064931247 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077911468 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065578237 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065325087 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063588416 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065021682 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067286144 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070048716 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.078496248 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065714518 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070719899 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065723532 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064174235 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078839779 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067262761 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071606873 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.08061272 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068452167 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067736053 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068808516 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079864631 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067717215 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065535751 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067587068 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079107989 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065423762 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068334187 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080410738 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06653464 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071226557 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080236136 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072737033 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068402021 seconds)
  done (took 6.243399442 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073211108 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094479069 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081997591 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081745968 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075705822 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075907142 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076187723 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075594401 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075804773 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07983798 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075713279 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117782284 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071225922 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07788655 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07572096 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075857845 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075153374 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075883678 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074619961 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073415887 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07350682 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079680855 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073423262 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079686959 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076666839 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06912119 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073035408 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073627888 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079753496 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073928515 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076273457 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073671938 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073522848 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07988006 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076685551 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073801897 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063354695 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073185476 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073407217 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073277417 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069040929 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079589473 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073509391 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.06905463 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073686788 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073391172 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.0797315 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076445387 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075306394 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07728173 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073242207 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07970919 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072830893 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073834937 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080292745 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.083275279 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080375793 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082053684 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075571572 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081728854 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082050422 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084882777 seconds)
  done (took 6.055402622 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078278042 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070927953 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081672735 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061902484 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063511904 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074525488 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063905559 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063667757 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072591124 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075693949 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074611314 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074656717 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077788884 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074744744 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074748374 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077233439 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074482969 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074202013 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071493719 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072898503 seconds)
  done (took 2.739875479 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076413388 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081867485 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068070636 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072202613 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067485166 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072887328 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068761513 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06938433 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070052342 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069543897 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075801945 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075922064 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06998902 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074450684 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075761492 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074427962 seconds)
  done (took 2.434936046 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084624313 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070596193 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.07966855 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065259313 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069105633 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064201199 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064986454 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063747656 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064582156 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078814437 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065096302 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076647866 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065262707 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064545785 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065050643 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07129076 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064781352 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065274507 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064966602 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079142294 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072464336 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06661508 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069156593 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065562605 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071359281 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072919349 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067122245 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069430873 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065320959 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066071821 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.07130845 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072533696 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065018979 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066271278 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064086134 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064936697 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06547238 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065720708 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071161997 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06539523 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.081903163 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.071314505 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06533462 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066207859 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06456736 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066601861 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064501733 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071778606 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06598486 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.071179991 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065833778 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067774585 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065852073 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073052254 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068287321 seconds)
  done (took 5.050384144 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078822349 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068300752 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06185162 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062374424 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068958823 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069739465 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069623769 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069606009 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070328877 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063846606 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070537619 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068971361 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070578768 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069483645 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07027638 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069836325 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063914124 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069937379 seconds)
  done (took 2.524571359 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073669898 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067313414 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071842678 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067349739 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068143546 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06834719 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064637744 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063675688 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064227614 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069356102 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06926994 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068616805 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063953456 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068808575 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068866955 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069462029 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068640444 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064578537 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069388027 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064541695 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068816717 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064414677 seconds)
  done (took 2.766640327 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096824272 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084001432 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.141227116 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082334646 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089838229 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074376162 seconds)
  done (took 1.849877632 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093036173 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098814359 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068060878 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067728759 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073204697 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071148702 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071327066 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073979279 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077355148 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076401641 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072827244 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077666212 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077534761 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079914494 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075237029 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075366431 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075981733 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072906184 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069507353 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083066143 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072905598 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077642214 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073578705 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07292114 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072796362 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079675522 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077644116 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078401052 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073363079 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077588277 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075204786 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072751955 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077811526 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078037498 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069427899 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077527243 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072958776 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082588265 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075618089 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079974998 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069449562 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075705913 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077150169 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075336334 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075386657 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07173513 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076259503 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070870432 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070890769 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08624927 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074627935 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0766901 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073224812 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075677666 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075256554 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081737222 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07594712 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077188876 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07327152 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075963271 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077656538 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073261358 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078462767 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07813291 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075014701 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078846743 seconds)
  done (took 6.303902499 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104970253 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068572664 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072107176 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075746885 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077295413 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071508385 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071287925 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071572716 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071354889 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06817993 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105838924 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071536313 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07808845 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077752179 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071758954 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071536821 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071346109 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077634943 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068304164 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082426982 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071244011 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077406218 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077459102 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077713272 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075949956 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073350957 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071751945 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072715719 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073001237 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072846259 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077185231 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073169363 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079509491 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069670356 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079941041 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073301181 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072868903 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077483634 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073292979 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075187071 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079642364 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082729285 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072899857 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073355392 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077919862 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07304189 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072705142 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069703663 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072768999 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06951749 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077698721 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077554684 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077485128 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079024931 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07167689 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070658125 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071556165 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071364361 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071116468 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073887184 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077595792 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073774095 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084065205 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072812594 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072864168 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07952101 seconds)
  done (took 6.273988333 seconds)
done (took 128.277653025 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209524488 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184960671 seconds)
  done (took 1.665518414 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07468219 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.10502647 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083157886 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135360695 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071162026 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.107358315 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104730422 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.084286089 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071419651 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.072278431 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073398888 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.076306383 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.140056508 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071772009 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071757036 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074177423 seconds)
  done (took 2.706215346 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105078307 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.166706207 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109613488 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069365715 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104707679 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077390341 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06917054 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082376206 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076170853 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071646364 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080153531 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077959286 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.073379689 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.080592575 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07784564 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077359757 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071564831 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077343344 seconds)
  done (took 2.840234584 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102840416 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094889328 seconds)
  done (took 1.488495045 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.172936339 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133769133 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202357093 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.347920528 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.151974269 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.429014064 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.138980526 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.139075182 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113832498 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135463043 seconds)
  done (took 3.252652345 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103882851 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.200135322 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298070254 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.12016957 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076060552 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.111727786 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122908071 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.08230351 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081286218 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081556822 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081192287 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078501723 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101054969 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077251074 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076266503 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078614174 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104537255 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076604284 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078575391 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079085168 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105822122 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070319392 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077280897 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074994643 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079002407 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078915533 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071723959 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.07014571 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076999141 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077856251 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.082187576 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.112489172 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.08034035 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107466574 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074452727 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107942284 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079121819 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074962069 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076072576 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074780092 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077792804 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077770794 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078795993 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078247472 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071363726 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079106779 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071262685 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070998307 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082186558 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.07154556 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080884946 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079510326 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106548792 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071477102 seconds)
  done (took 6.175556648 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109745794 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.108583923 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071650223 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114163188 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104670225 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072702055 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10925827 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102461837 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111595023 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074652281 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071920004 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07382652 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083193582 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08577928 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116440712 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108516002 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073581754 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071233954 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108684277 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10864398 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070876905 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10255875 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098637158 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107630057 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070024884 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071504574 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071218088 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073429744 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077727003 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07843996 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070475687 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079922443 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084279074 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07792006 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068907367 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069729621 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06985837 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07895206 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079393095 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078825552 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076859812 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069364796 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069670081 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070774274 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070468093 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069122896 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078346108 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078795733 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078088773 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069553144 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071655249 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071527764 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073071436 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079865426 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077873287 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081626605 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079258746 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069652701 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069639626 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073414118 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079558249 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078737242 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078365067 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070085043 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078870764 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069770741 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07995134 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082814438 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073052245 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071026788 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069761936 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069822644 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071024925 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077411159 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076872367 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070695432 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069644688 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069580167 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079133029 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077236126 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069458669 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076583838 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068895874 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069332244 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070351628 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070664518 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076967357 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079002108 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070831269 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070077143 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072151578 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071458746 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.071012636 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078917219 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080885511 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079836972 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078815889 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070486317 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077899262 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077198467 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070354741 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078844635 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071308544 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072242052 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07198084 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079306135 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07658039 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078033937 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068678851 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068366158 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075053028 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077903464 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.0683305 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074633983 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077344575 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.0757889 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067803591 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078330975 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06845109 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076995591 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068574331 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.210712011 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071051841 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079270766 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070948063 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070295416 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07055283 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079191888 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072034574 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070199716 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071161764 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070806385 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078683214 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081737667 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071886788 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077978227 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077738627 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07208291 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078478345 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069849882 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078889941 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070223141 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071113629 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069126935 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080723275 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070752775 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06966865 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070779108 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079320079 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070461621 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079579866 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076968741 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069704545 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081408307 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079975424 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076984059 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080249431 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071832647 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070208622 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069791684 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070447226 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07695619 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078568417 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071193442 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069937572 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07711789 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07974441 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069061911 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078873311 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077408892 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078233155 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070296524 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071719208 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083170799 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081560255 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078509423 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.08068079 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081198782 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072745917 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079712714 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080445108 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072336217 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086349366 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072892342 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084447171 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081652572 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079179948 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080801125 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082184053 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082483127 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082659077 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084713019 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070122249 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070423175 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078584458 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069707908 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070618204 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078442031 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073145257 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07292694 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.086108317 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070135128 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079724044 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069686855 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080802594 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069629671 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073232685 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084957394 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072347005 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07275305 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081024707 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071922399 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079163256 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079840926 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077252205 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072111007 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070767106 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078588448 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078210287 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069692864 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069654006 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072005531 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077482228 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076738784 seconds)
  done (took 18.705500998 seconds)
done (took 38.140685458 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211253155 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.156364251 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.187931518 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116659269 seconds)
  done (took 2.067531631 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107894749 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099194568 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.088052248 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065716062 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.093807849 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066209662 seconds)
  done (took 1.848339011 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.298499042 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.203461607 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181408198 seconds)
  done (took 2.00590436 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209883254 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190045816 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.461366422 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.285007181 seconds)
  done (took 2.565471016 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141386063 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08244764 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065031848 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082961765 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.124298013 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.149958983 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.093297228 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.117984418 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075932659 seconds)
  done (took 2.311888581 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149227333 seconds)
done (took 12.29290669 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.201122086 seconds)
    (2/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.10230698 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.129800358 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.145613676 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072907634 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069396987 seconds)
    (7/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077134838 seconds)
    (8/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.12040623 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.122322027 seconds)
    (10/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.245932394 seconds)
    (11/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.181937431 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076935292 seconds)
    (13/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.207693048 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.100856308 seconds)
    (15/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.117690946 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.326371741 seconds)
    (17/309) benchmarking ("sort", BigInt, false)...
    done (took 0.199471682 seconds)
    (18/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.088782987 seconds)
    (19/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.240295738 seconds)
    (20/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.178081718 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.101023972 seconds)
    (22/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.080503156 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075486012 seconds)
    (24/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.191736465 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.100421214 seconds)
    (26/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.173380308 seconds)
    (27/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.169100761 seconds)
    (28/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071394786 seconds)
    (29/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072843701 seconds)
    (30/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075339696 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.130998229 seconds)
    (32/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.171189275 seconds)
    (33/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.078582555 seconds)
    (34/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075905031 seconds)
    (35/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.070206833 seconds)
    (36/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.218102362 seconds)
    (37/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073625004 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066292976 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.105052557 seconds)
    (40/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.186136324 seconds)
    (41/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075712883 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074324317 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065378495 seconds)
    (44/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.195092558 seconds)
    (45/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.065860915 seconds)
    (46/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.19515213 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065926713 seconds)
    (48/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066143752 seconds)
    (49/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074173675 seconds)
    (50/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.091367352 seconds)
    (51/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.177489074 seconds)
    (52/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119630753 seconds)
    (53/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077011694 seconds)
    (54/309) benchmarking ("sort", Bool, false)...
    done (took 0.144424271 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.099687797 seconds)
    (56/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068142763 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 0.066972879 seconds)
    (58/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07261101 seconds)
    (59/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.138566774 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074462762 seconds)
    (61/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074391874 seconds)
    (62/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.242209817 seconds)
    (63/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075724256 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.102591613 seconds)
    (65/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067092912 seconds)
    (66/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.12451437 seconds)
    (67/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065969724 seconds)
    (68/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074851367 seconds)
    (69/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073395347 seconds)
    (70/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.069354367 seconds)
    (71/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.178555339 seconds)
    (72/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073995263 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.204031276 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.113344625 seconds)
    (75/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092192151 seconds)
    (76/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064319832 seconds)
    (77/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.065789665 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072108049 seconds)
    (79/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.179058309 seconds)
    (80/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078498698 seconds)
    (81/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.067470659 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144117751 seconds)
    (83/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.179581929 seconds)
    (84/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074038814 seconds)
    (85/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07269923 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065086814 seconds)
    (87/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.168680533 seconds)
    (88/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065784669 seconds)
    (89/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.0759274 seconds)
    (90/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.167389062 seconds)
    (91/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.064903605 seconds)
    (92/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.17501291 seconds)
    (93/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.360589442 seconds)
    (94/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075821567 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092740134 seconds)
    (96/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077482394 seconds)
    (97/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.082255665 seconds)
    (98/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067516747 seconds)
    (99/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068196563 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.132791802 seconds)
    (101/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.087711417 seconds)
    (102/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081046003 seconds)
    (103/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.158319868 seconds)
    (104/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067709919 seconds)
    (105/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.174487498 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066556279 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092350065 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.11445658 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090132943 seconds)
    (110/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.195282118 seconds)
    (111/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.228472063 seconds)
    (112/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.196625205 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134318457 seconds)
    (114/309) benchmarking ("sort", Float32, false)...
    done (took 0.133795552 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067318436 seconds)
    (116/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.126822418 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073886307 seconds)
    (118/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.171430977 seconds)
    (119/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073215969 seconds)
    (120/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.197200681 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066588384 seconds)
    (122/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.218715904 seconds)
    (123/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074233107 seconds)
    (124/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171182893 seconds)
    (125/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.0673138 seconds)
    (126/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.196128474 seconds)
    (127/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.078584664 seconds)
    (128/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074986547 seconds)
    (129/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.136266232 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066556313 seconds)
    (131/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073274683 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092178267 seconds)
    (133/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074621117 seconds)
    (134/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.171644635 seconds)
    (135/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075259752 seconds)
    (136/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075529493 seconds)
    (137/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075087944 seconds)
    (138/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066952805 seconds)
    (139/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065954854 seconds)
    (140/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067573469 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073756224 seconds)
    (142/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.144422091 seconds)
    (143/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075956713 seconds)
    (144/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.165052286 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088338304 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.138864503 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074622928 seconds)
    (148/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067347857 seconds)
    (149/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.087713221 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07400132 seconds)
    (151/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068965191 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088625465 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067140008 seconds)
    (154/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082911676 seconds)
    (155/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066430518 seconds)
    (156/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090779301 seconds)
    (157/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.091225713 seconds)
    (158/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074328376 seconds)
    (159/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074248663 seconds)
    (160/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.178002751 seconds)
    (161/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074930402 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066097671 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.111530481 seconds)
    (164/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065525375 seconds)
    (165/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065958548 seconds)
    (166/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.137528527 seconds)
    (167/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066225097 seconds)
    (168/309) benchmarking ("sort", Float64, false)...
    done (took 0.130688468 seconds)
    (169/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07633097 seconds)
    (170/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.193064244 seconds)
    (171/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065466037 seconds)
    (172/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067289 seconds)
    (173/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068048362 seconds)
    (174/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.06940045 seconds)
    (175/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078210167 seconds)
    (176/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067559932 seconds)
    (177/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066654502 seconds)
    (178/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078715392 seconds)
    (179/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066585017 seconds)
    (180/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.230269738 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127084073 seconds)
    (182/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.131379268 seconds)
    (183/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093691554 seconds)
    (184/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066426034 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142544177 seconds)
    (186/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.068055424 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067064097 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090728519 seconds)
    (189/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.13949304 seconds)
    (190/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.134662526 seconds)
    (191/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.117546539 seconds)
    (192/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073510283 seconds)
    (193/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.06674896 seconds)
    (194/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078287626 seconds)
    (195/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072746454 seconds)
    (196/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067651738 seconds)
    (197/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.066118787 seconds)
    (198/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.090808691 seconds)
    (199/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.06689076 seconds)
    (200/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.064564359 seconds)
    (201/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068232578 seconds)
    (202/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064960807 seconds)
    (203/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065045597 seconds)
    (204/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076034098 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.130584265 seconds)
    (206/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086323321 seconds)
    (207/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074340672 seconds)
    (208/309) benchmarking ("sort", Int8, false)...
    done (took 0.143131453 seconds)
    (209/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.065425143 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.087835359 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.299940628 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.07830685 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068355729 seconds)
    (214/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.069051553 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.09184449 seconds)
    (216/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.085765138 seconds)
    (217/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.083802164 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.070527678 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.126537533 seconds)
    (220/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.072290967 seconds)
    (221/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.070034145 seconds)
    (222/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.075693823 seconds)
    (223/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.069917763 seconds)
    (224/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095877847 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.13412464 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092517897 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077053734 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07577088 seconds)
    (229/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.06709579 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13748979 seconds)
    (231/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.180812818 seconds)
    (232/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.219776554 seconds)
    (233/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066823829 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066661794 seconds)
    (235/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.078955287 seconds)
    (236/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074931611 seconds)
    (237/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067323439 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.121606346 seconds)
    (239/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.180755529 seconds)
    (240/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068456634 seconds)
    (241/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070553399 seconds)
    (242/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066569177 seconds)
    (243/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.068595944 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089248423 seconds)
    (245/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067051666 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090883048 seconds)
    (247/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.172254548 seconds)
    (248/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067831947 seconds)
    (249/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.0688747 seconds)
    (250/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067110396 seconds)
    (251/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067003652 seconds)
    (252/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065435497 seconds)
    (253/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07112372 seconds)
    (254/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.078291781 seconds)
    (255/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067560129 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174866552 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066854511 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.113444287 seconds)
    (259/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067772229 seconds)
    (260/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065977931 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124515132 seconds)
    (262/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.067309556 seconds)
    (263/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.07835869 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067326174 seconds)
    (265/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.069490936 seconds)
    (266/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.069378147 seconds)
    (267/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068550181 seconds)
    (268/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075544314 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088614503 seconds)
    (270/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076240101 seconds)
    (271/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067659783 seconds)
    (272/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06770849 seconds)
    (273/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.071765136 seconds)
    (274/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074159755 seconds)
    (275/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.06726345 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077304229 seconds)
    (277/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066915076 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07337356 seconds)
    (279/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.170512652 seconds)
    (280/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.067103066 seconds)
    (281/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066782066 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143713297 seconds)
    (283/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070540639 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119986578 seconds)
    (285/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070640613 seconds)
    (286/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.067675497 seconds)
    (287/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076123173 seconds)
    (288/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.07832455 seconds)
    (289/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069836286 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.12677155 seconds)
    (291/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070393874 seconds)
    (292/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066244274 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075014525 seconds)
    (294/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065506425 seconds)
    (295/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066376016 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.132850142 seconds)
    (297/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068152631 seconds)
    (298/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066395062 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086084226 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073002648 seconds)
    (301/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.066951919 seconds)
    (302/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072765955 seconds)
    (303/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.066892284 seconds)
    (304/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.065955464 seconds)
    (305/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066387621 seconds)
    (306/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069358145 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093430322 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065917928 seconds)
    (309/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066032252 seconds)
  done (took 33.015119981 seconds)
done (took 34.352231007 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088145283 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100940482 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075477014 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095990786 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083258797 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.097467327 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075400513 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080724122 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082873341 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081554532 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080779847 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.07336016 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076827206 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076558097 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074659202 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098001597 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081203862 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074946265 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07554392 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066491975 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075030739 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067380731 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066633892 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07297459 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078731887 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074433128 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076741748 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076154295 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066842144 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067353705 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072012615 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075803696 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066969276 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078927393 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07617268 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075717239 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077111946 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079442716 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066792408 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067782657 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078367606 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069306189 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077357575 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075456335 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073954388 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074800642 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077118431 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081749878 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101855288 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074446655 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.079689657 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080209617 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.081086749 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074906828 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074346298 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077194959 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075207454 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101210508 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077901817 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072576195 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076716456 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077143995 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073727488 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074933781 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075151702 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077813901 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07932665 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073451305 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07709776 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074101622 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066835287 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075132358 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071506513 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066935264 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077744421 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079585422 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066749695 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073598607 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076972005 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076238828 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.069488131 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071268208 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067911429 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07356399 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071368055 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.073275768 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071646668 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076263718 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.0677109 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075663066 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074185084 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07434009 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066665172 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07984219 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06707971 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074166754 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067488461 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069313244 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068325765 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074011427 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068557026 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073586939 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077564751 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067701366 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073332445 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082380456 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06855975 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07473645 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066082926 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066572878 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077996331 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076692908 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066669941 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070877969 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065781131 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071537329 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06607372 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067046116 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06823636 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068484635 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072670696 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06808387 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073119469 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073764818 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080477765 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067754148 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07272217 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073213895 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068041726 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074912054 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067677905 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067722197 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067099686 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081321414 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073042963 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068371696 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073054211 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073126229 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07571891 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066820276 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076305775 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073634498 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071783108 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073563729 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067324564 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.078960621 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072930158 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072749982 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066849208 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067095742 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066382605 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067027387 seconds)
done (took 12.776400599 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070676472 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.119163305 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.094255516 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094231101 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.083502504 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068278279 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074572308 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.092032818 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069005494 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096751293 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089040989 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.089202011 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111575043 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068433749 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069405487 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070477789 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070667998 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082142507 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.096406196 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08943686 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107942194 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067572133 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.086998669 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.087407633 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.084388937 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.088679152 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068520022 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068643073 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071215055 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091700152 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.094015978 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07099863 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068675318 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.091122146 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.086527784 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082627499 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068324996 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.076821764 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068103923 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06816843 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070875998 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.091137842 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079127866 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.077438832 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070402607 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.077500109 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071019007 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087043868 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089247982 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.076468896 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.082507819 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.091230108 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071206336 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083461014 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066891588 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084205353 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076831227 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068047834 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068537396 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.073519628 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070076862 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072129887 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081872125 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.079810272 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075672295 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.085454169 seconds)
  done (took 6.712767923 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085144153 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096785254 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087016585 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087352096 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069200027 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070082945 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.070188877 seconds)
  done (took 2.002847087 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.07077596 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088382754 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.09104007 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093133714 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085023572 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.094936585 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077996734 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070314311 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.099443402 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069222768 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.0901948 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100230256 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071384349 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079498886 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093125738 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06789774 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092512764 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067796005 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068464882 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.092280257 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072439691 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095305676 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079617712 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068324037 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080423102 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068319438 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10010763 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076078443 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071389339 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071267526 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071061933 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.097749692 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082446166 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.084495003 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071670555 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085643609 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084193576 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073269634 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081214673 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.08020531 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084265404 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071067286 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069343569 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.071621199 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073240153 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.082155496 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06888404 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071189502 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070735849 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089900045 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.069154759 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08266846 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073913944 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076607212 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075861307 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074998264 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078436955 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.07129992 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089680887 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071008314 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088108678 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086688091 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08336674 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08721298 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069964182 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082635996 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083730894 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.07101326 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07211088 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071633687 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087393899 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.073880352 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071813268 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.082267876 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069837149 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.095457898 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094849241 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069439573 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084013881 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070883121 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071093526 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.08185546 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094429019 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076013395 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070961622 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074551208 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072033435 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072603801 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068297566 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073363605 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070557013 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074759367 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070678358 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073106422 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072439932 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086372585 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.0685313 seconds)
  done (took 9.064051246 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070480862 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070080379 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072259328 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071105809 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070766801 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070955339 seconds)
  done (took 1.886686738 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093269319 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06881766 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081410843 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070639169 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106624977 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086948172 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086689815 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080753558 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082878335 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080369812 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083912704 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08710562 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088243531 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071120626 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083849508 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069825921 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084126786 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07293631 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080339589 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07202456 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081446114 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071188454 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071818408 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.091124331 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074941278 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07239814 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080304842 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082513158 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082222525 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081539106 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073240646 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075733628 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.079614815 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080776484 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.0874973 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.079532597 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071017769 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077748509 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.074051958 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074681605 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089301934 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073408766 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073384205 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077662414 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.084164917 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.079337312 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077365873 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080108491 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086615613 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07742956 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077457346 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071011 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072278041 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075016831 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07642879 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078000223 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074817179 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.084380282 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070825274 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.077309046 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068486607 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.0717578 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077710184 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071789656 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075885668 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07489643 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076616702 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070657584 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070882117 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.06878828 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07599687 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071100384 seconds)
  done (took 7.057634405 seconds)
done (took 28.178595255 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.520187603 seconds)
  done (took 1.938480216 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.625467208 seconds)
  done (took 2.074875477 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.560648315 seconds)
  done (took 8.002753856 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.403903576 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.474859164 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.753286372 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134784121 seconds)
  done (took 3.244765137 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.706566138 seconds)
  done (took 2.160633881 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237849634 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22685865 seconds)
  done (took 1.928040763 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.348706353 seconds)
  done (took 1.789061615 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.055075407 seconds)
  done (took 2.498257499 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.239440074 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161658984 seconds)
  done (took 1.848126325 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.445490792 seconds)
  done (took 1.889751463 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.228027391 seconds)
  done (took 5.674556185 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.21998811 seconds)
  done (took 1.704977575 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235545359 seconds)
  done (took 1.682269368 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.751086855 seconds)
  done (took 3.201597736 seconds)
done (took 41.096446931 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083725973 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085986789 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086003486 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081801581 seconds)
  done (took 1.769633277 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075797133 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071718311 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075809369 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071049051 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07460619 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070958623 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072602285 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073732697 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070734924 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071415568 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071448532 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071267799 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073793791 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072663711 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07007722 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074460443 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074774659 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071257523 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073922991 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071332263 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069102325 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073775753 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074083286 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070211755 seconds)
  done (took 3.191298583 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079337938 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073979214 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076434183 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073517838 seconds)
  done (took 1.761502488 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077734485 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.089722317 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087437282 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078056412 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.089496199 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084387917 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068007084 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06776124 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.068856628 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077361935 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066517315 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094196238 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087008522 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077574775 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079815498 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064237991 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066219408 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08622078 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078489743 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078323079 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069115749 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077500833 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066784055 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08802189 seconds)
  done (took 3.323225371 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.08704511 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.067012817 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.086358927 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09278081 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093340822 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06676744 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.085079539 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093983175 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.141640627 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066768554 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072292149 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066816075 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104957327 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066659561 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.086018336 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109970162 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113045223 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070411844 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099229028 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06973808 seconds)
  done (took 3.204041253 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083939237 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069783028 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071088122 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066694682 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077031242 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073663683 seconds)
  done (took 1.910917514 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069382984 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068892354 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068817662 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06741752 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072615024 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06800418 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066593995 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068940823 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068842291 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067936505 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067636698 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067422191 seconds)
  done (took 2.287118858 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.195846776 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070545007 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071338513 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066667425 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072850864 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067527363 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082738018 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070142494 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.094148432 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067457781 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067542758 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069546208 seconds)
  done (took 2.461512884 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191347427 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074084953 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221761613 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144125319 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102424834 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109318267 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110959985 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107782187 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.133151043 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097331009 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153551057 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159262925 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104089019 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129048259 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087322516 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119936259 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143876764 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155363791 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099816857 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154733616 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134782418 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121886317 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14159183 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09692028 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101329841 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116000712 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071839965 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077054786 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158145771 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122884921 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13534461 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104751816 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089670662 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16437014 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161229446 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13124252 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140764509 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081697776 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117345239 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128406751 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193309482 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086119332 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14819941 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101585307 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076743681 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12202794 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108184595 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.113567987 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.098753465 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085661147 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272981755 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172690669 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.128943771 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084397624 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117280365 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105347988 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.109934221 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114982344 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169666305 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152501044 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121701446 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069670434 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107511546 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143761614 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126811435 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104626673 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.118507993 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090580037 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124534802 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151418878 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124572161 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133009472 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.112174968 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084677513 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114602935 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130622257 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120562824 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161460461 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117680504 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071423496 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115218548 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095070641 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078346913 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142069761 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073683484 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165197985 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095709274 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.120480251 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125154792 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104484417 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104698211 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153198945 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138281868 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104871577 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.087313116 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10209868 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.115493613 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136755637 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083745599 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103274169 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108681881 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076516119 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124934181 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072359647 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11406255 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092064008 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11192589 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118095716 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075988957 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.262306012 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100210769 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101185974 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124325478 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150760279 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085307175 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078956752 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157680593 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116859116 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101732134 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135998601 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149838733 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118582607 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094897828 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138214968 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164327229 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088168408 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152707082 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099051206 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081205917 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.102922323 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118305651 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106474241 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.118449779 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079109732 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115296021 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154306845 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072824538 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093413209 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126422373 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079195798 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078215972 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101391967 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099961972 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093518252 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097676338 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101151995 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129934186 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11761277 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101384415 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117786902 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096211123 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155957114 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085297938 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099223447 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100580592 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071373724 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.126616134 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147529929 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077283165 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150797137 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.115242685 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110472188 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113101279 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081115783 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128589947 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076733176 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070481625 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131595949 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107348482 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1024648 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.290355895 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110971226 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.118651732 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.11627246 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125464692 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123830567 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.124574239 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103536277 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087556843 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110786508 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123777711 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.070783701 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089633345 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080612468 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100072391 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091522774 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081377349 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133375523 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116672776 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107168855 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110389314 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093845648 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14189801 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076359011 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118891274 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116882994 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092161106 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.145830044 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143666526 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125548041 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097628953 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129391019 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071969309 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07313014 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086285857 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117609592 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081563479 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081762048 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108826708 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141463186 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119558268 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128619332 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117588594 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111411502 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149254416 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071037274 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116560504 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136061705 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11536054 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.100787331 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087897148 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.094845637 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135065893 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099856563 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167986972 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10835901 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116387454 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145981017 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097559933 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07636921 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09960609 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273223484 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099404556 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1373909 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096034299 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084814162 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104630613 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077172715 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097255759 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12341362 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114308806 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129452032 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.107448344 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123632054 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075755977 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108409242 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118549131 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117479786 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081930717 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112199711 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157622707 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094779672 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112013733 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142626452 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077041853 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134647124 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162499404 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135423334 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082173877 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101046937 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116718416 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120249307 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112971406 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130899229 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100571191 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130436075 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106809975 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.082645095 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084127209 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092256412 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099611986 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108654117 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10077738 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110068842 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092637664 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122718633 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098834931 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106916372 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11255003 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097494678 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092798015 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092973593 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164146704 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113161154 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156671388 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096285059 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.13381896 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148630644 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072621096 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076170402 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077535323 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127447143 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228069771 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125751658 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109635349 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111948353 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118608326 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131361676 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093670204 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070048766 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105625089 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126710997 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117820621 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093395074 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100002273 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1504069 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114566436 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077410509 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1084494 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111760281 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100651526 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164350497 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079800034 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105967163 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074908539 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077577354 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120801705 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14294177 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084386344 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101377288 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114432453 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106283961 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120122542 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095242537 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107082234 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125369524 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138794453 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120154425 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087282339 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106297799 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121840468 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144515247 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100001222 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097027391 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163927105 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143682414 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.152485088 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086077819 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109537797 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109485375 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105965093 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1280805 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082120888 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151273082 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078908257 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12526242 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096561989 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086126089 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120160392 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.106936717 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084262096 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281763864 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113750513 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081001148 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078999347 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107536877 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113969797 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099009116 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07308844 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132800745 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072973284 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128443622 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16082036 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078482764 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102228295 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093659737 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081011698 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100554619 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09933888 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086379763 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100339678 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163736543 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088664467 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143089073 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130651466 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109335073 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130620268 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100732849 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640284871 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078198366 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144290483 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110469855 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166496854 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095308328 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112969946 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106398115 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115211829 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134515506 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098239849 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175291573 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123267258 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.112866068 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076655519 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097793008 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099243371 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085899492 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102568582 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10865659 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108591358 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091665551 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11268111 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116068334 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080901898 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093295009 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146137018 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11084504 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132754753 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129284746 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081561101 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11168878 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125178582 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0765203 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.261573446 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143412746 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102887216 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098448937 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08107433 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.097945242 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163804286 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072228406 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149275501 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115505027 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106463765 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112498433 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.106487932 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124814081 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099685067 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117637167 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09158177 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.105015917 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109507734 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116726952 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077248427 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101242333 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106699035 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.095163055 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094662927 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096596923 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14292489 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070620876 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09461099 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110066651 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135795986 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160377959 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.102635158 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081678264 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113919808 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113503927 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110068974 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115702187 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079556133 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079280961 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079204514 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.097979489 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120275783 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109266537 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114034061 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104507804 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15136755 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081905494 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224775041 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09274265 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101469473 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.086867063 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07832928 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093209762 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093199214 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099720121 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107025322 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16255225 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091254367 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.08595396 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088393874 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072365323 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080008702 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117661281 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251443273 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115150621 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105097117 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.0843571 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10491435 seconds)
  done (took 56.76687867 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.104062698 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.077727916 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09767433 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144802312 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121413579 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199253321 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150585082 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188702343 seconds)
  done (took 2.648006672 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068558183 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094245512 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104746204 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083131679 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067204037 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068531288 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.224536597 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081898167 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067369237 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091140081 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077493247 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068778728 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.453782947 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066875887 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068514529 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.077396452 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067866196 seconds)
  done (took 3.384679549 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.383385572 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.605465331 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.357537335 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075605124 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.845657327 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092595035 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.139178639 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.141188515 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081827034 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.518698481 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.364926531 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.134017447 seconds)
  done (took 18.305864887 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083350065 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077183765 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094842056 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.094734871 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081782316 seconds)
  done (took 2.078504712 seconds)
done (took 104.56594389 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083197169 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.44761209 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070189744 seconds)
  done (took 2.110426712 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092698413 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090422981 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.092779629 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.090553405 seconds)
  done (took 1.940245934 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075824136 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078422961 seconds)
  done (took 1.721638214 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.237606704 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.181658998 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.103165413 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084166605 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082034438 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082497957 seconds)
  done (took 1.8219901 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07459959 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073669976 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076639467 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079900586 seconds)
  done (took 1.872115486 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.069275747 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.06925921 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.073006758 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075121984 seconds)
  done (took 1.856680287 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086081611 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085739556 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081147762 seconds)
  done (took 1.822826652 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103054727 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.09546189 seconds)
  done (took 1.767003166 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082600528 seconds)
  done (took 1.651927151 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091406742 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101622718 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.134080135 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115886812 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139931914 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.119648589 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085862669 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.09013352 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080356711 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086984594 seconds)
  done (took 2.614749532 seconds)
done (took 21.348898971 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079365438 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.373187347 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361773777 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092102274 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671021243 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.362521856 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.987599154 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09459276 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144038375 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070203657 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087906408 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650422018 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.978378688 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.328090397 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.962566243 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.329316983 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.655807701 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06970296 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06953014 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071658304 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.97504635 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069231208 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070085824 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069980646 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652596513 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.377628372 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072121413 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.328993311 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070326166 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075152781 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360506209 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071901083 seconds)
  done (took 16.181469955 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072099666 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123120145 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073640432 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086950277 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072016544 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071028909 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073817339 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071700914 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125848042 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072400846 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089630749 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069579214 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077151065 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074314792 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094707603 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073186528 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075954424 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074026099 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074115034 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075219392 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094239388 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073539659 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074874165 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.077287123 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074901362 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087926922 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075675698 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073812075 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073934277 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078926687 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.079620917 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076611295 seconds)
  done (took 4.143358002 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118710112 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128166255 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075124615 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113101446 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11824553 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075544922 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.153167983 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099236914 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131944473 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072854548 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091831357 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072983335 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.109438219 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074779564 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.096332197 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074074963 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.077469904 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074287724 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074147381 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075014028 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094966856 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073580105 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074810436 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074601569 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07581121 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.090114547 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075644442 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074078086 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073971161 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078812325 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.080126316 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076136532 seconds)
  done (took 4.433020866 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071457205 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074314822 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084741136 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085753204 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071479241 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073743094 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074883386 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071412853 seconds)
  done (took 2.193792513 seconds)
done (took 28.52484114 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080512712 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06939137 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074530012 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.0914377 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.078316574 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083090553 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068458656 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078333635 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075330388 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075644682 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077177623 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070679323 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073935046 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068876135 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076402516 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070529407 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08520573 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074376555 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082931595 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082732101 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073117365 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077049686 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07916177 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084992425 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.085294075 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084772915 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081054433 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076489554 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071846486 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074243954 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.074981738 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084333252 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.085601128 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084780861 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071160161 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071318762 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075388311 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.073102782 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.086322794 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080785385 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073590364 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080823826 seconds)
  done (took 4.824723531 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086187072 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090537147 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083678427 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080888759 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091216074 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083400569 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087725074 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07883202 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078836258 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087282249 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075141488 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.082533003 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080174618 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073501695 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079145686 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075932729 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080410195 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074828186 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078348596 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.07887794 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088542443 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.074252242 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088888788 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.081073656 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078250937 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.08264323 seconds)
  done (took 3.719200017 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074987839 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087142169 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.094073228 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145006984 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112482426 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081485321 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084957395 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09593022 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.101263129 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.072090826 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076419483 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.097319257 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097416161 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078861419 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072290787 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088373738 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.0882808 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073737877 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.079543838 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101639784 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.093508988 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089676173 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099048132 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.089004841 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071295447 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075031519 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076688275 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.091875516 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074219534 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.083727166 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075050277 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07629091 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072917444 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082624928 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074190701 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070961104 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.097262494 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083566439 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084580181 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072109693 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.08185667 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072622409 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097903658 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133184879 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070774023 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076762987 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075669553 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08328789 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071156583 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09973544 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082926536 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069137239 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070401719 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068311641 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068896791 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071699264 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070860385 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072291998 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081058527 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078990039 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093455826 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074249475 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086831614 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068459678 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079407204 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068380433 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070415433 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069719287 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.100381565 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073069995 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117406896 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.07240181 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069967787 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.08256686 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081792758 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077812629 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071227105 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.0896173 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.083127112 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075760302 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080097556 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07544454 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075780805 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102354199 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072125637 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071633517 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070069916 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075885282 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075161204 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072052597 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084179503 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069903289 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074890484 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.090649614 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071051945 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071178621 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072677076 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071876804 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069343555 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080099471 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073483072 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070315876 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079537014 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06964745 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072605356 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08241686 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075873268 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067866791 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07120436 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07254543 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070190697 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070459506 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072887193 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071533417 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075630355 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075747378 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074905717 seconds)
  done (took 11.011036454 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166084596 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.160962139 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074972068 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.15345387 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080641822 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083211399 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.153841558 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09682674 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070228248 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073394414 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.0722138 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114423176 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110510714 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.124108696 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084174086 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073025552 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095268091 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119898381 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.160327759 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153210505 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095491286 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081099454 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075365114 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073818776 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073780779 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082192741 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.093630258 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082342196 seconds)
  done (took 4.510696247 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079942302 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104912857 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073437083 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092561777 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089067248 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.0697906 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071644558 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071520844 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086257934 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078839923 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070118185 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074693102 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073526468 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073202302 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070665062 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076974184 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077058907 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069241874 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073660544 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075421664 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079853103 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094824933 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074085392 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070114511 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072278789 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069437606 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.078079808 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.082545422 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.07276078 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.10605269 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067510823 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074845986 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084351516 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070395996 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06972333 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070179802 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069779105 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070289639 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07106274 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068204561 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068371542 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073164144 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068792069 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077609815 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082732429 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071960583 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071672026 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072954343 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072737989 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067340227 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07251236 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072340603 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072691149 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076964957 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074452043 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072674197 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070749471 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096848173 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075700177 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069327977 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068758915 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068712702 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072318619 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.079725807 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085546333 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072509853 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068415659 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06977716 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082935843 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082781379 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068954272 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074303423 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067502658 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072061648 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07232862 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073017866 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07098506 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068660559 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.073430849 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072567596 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.073048818 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071975488 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.07151765 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07532627 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070144581 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071061801 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072418581 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073957962 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081137896 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071333462 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075917344 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.07366276 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070978413 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07517937 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.076361804 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072843638 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080329754 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080669706 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070538204 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068398823 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083671948 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072663735 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069195036 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075069094 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074562912 seconds)
  done (took 9.485988343 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09236306 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07027198 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086847661 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093169018 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079980337 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075279929 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079744742 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069720174 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085385781 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074242577 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077332521 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068303999 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080492427 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079427823 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07010079 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080499569 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072616802 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087766211 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084081827 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06827874 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078649863 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082048319 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08140093 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083865988 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083505675 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085080891 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081868455 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079088713 seconds)
  done (took 3.868080991 seconds)
done (took 38.99944005 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.675033838 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.836256958 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.655550448 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.864663138 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.955546446 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.675129043 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.744815972 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.649185419 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.91135464 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.696667171 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.969485983 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.132005489 seconds)
done (took 64.494730608 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.67424478 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.806049104 seconds)
    (2/2) benchmarking "String"...
    done (took 1.900236695 seconds)
  done (took 5.295207283 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.845141262 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.315765736 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.907900204 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.64862047 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.655443851 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.100292843 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.428250279 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.154707258 seconds)
  done (took 29.801410651 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.843315391 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.876481251 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.353950845 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.388745319 seconds)
  done (took 15.100184621 seconds)
done (took 61.398636624 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.699639512 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.705897302 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.690558902 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.652840925 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.747512506 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.675327706 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.824780539 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.695585736 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.658672447 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.664301976 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.656736132 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.072665275 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.671210807 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.860228171 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.658809118 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.657432906 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.66559284 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.149125615 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.811304076 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.672293043 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.679026229 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.710676591 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.657667993 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.796189155 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.711829738 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.65488679 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.083253085 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.669793951 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.264534471 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.65733384 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.690958013 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.053538919 seconds)
  done (took 200.109466104 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.652523888 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.760502202 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.830873238 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.690529998 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.137249738 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.850974013 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.751387777 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.162803772 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.660573154 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.664747818 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.910934116 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.657664733 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.938416494 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.605898341 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.690960787 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.697374027 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.892583108 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.949163912 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.698083664 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.827365675 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.657908152 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.811454299 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.757687061 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.902926958 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.699764074 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.687877032 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.66163349 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.665851933 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.840600613 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.860565589 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.665353074 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.664482584 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.857985235 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.524104794 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.66411913 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.687703274 seconds)
  done (took 166.237048374 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.839032295 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.656940734 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.65600461 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.655551786 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.661557388 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.655921249 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.777851273 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.782158315 seconds)
    (8/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.659791489 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.321252757 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.974726503 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.713745518 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.655564272 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.435651969 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.659774947 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.721023511 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.668704211 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.659843619 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.656720953 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.671012662 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.682558634 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.66079301 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.656400586 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.777780309 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.672957956 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.656528075 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.664626947 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.656186133 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.661561681 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.043032846 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.656284914 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.715729152 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.663039356 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.661890328 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.897418466 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.657154208 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.658631642 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.4866162 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.190629388 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.742916894 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.660820119 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.663866938 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.657153591 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.874811255 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.657153721 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.65624564 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.657033265 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.656898345 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.657739194 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.773944565 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.661318001 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.780443482 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.661941938 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.148119827 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.661030888 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.659199496 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.034631983 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.5301347 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.66163689 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.661068247 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.658359109 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.658566068 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.67085777 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.087753344 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.736001784 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.660567236 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.659566309 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.664326048 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.658829237 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.89257885 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.658061947 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.238827697 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.675465883 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.777755156 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.779792184 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.662748801 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.723186656 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.750469629 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.658924126 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.658685784 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.659222922 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.658841726 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.739319549 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.659041443 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.789216511 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.669107463 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.660433957 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.715872296 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.72881615 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.660030414 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.480489283 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.663503647 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.659621687 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.928273306 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.724479401 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.659447534 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.661306897 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.7573797 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.781152126 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.387764922 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.663673798 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.659626758 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.921412316 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.756633826 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.660650197 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.786324561 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.665215284 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.740915658 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.666650358 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.661463626 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.695378804 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.661299821 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.673293072 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.663922269 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.032925845 seconds)
  done (took 387.581218568 seconds)
done (took 757.415408256 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.255566997 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.226197487 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.330841414 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.248435665 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.216366372 seconds)
  done (took 12.878043838 seconds)
done (took 14.477651056 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.741966751 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.744499436 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.679683238 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.741297259 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.677221863 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.740645693 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.725794787 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.68544666 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.710406125 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.685598953 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.712079103 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.684236153 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.669789647 seconds)
  done (took 23.799801462 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.88893509 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.88992765 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.727512473 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.895321368 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.703243235 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.889928331 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.814935122 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.807953622 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.803043061 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.67372176 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.671085884 seconds)
  done (took 21.368785553 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.89137952 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.910229035 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.733944744 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.895056169 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.706726704 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.89389573 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.822704927 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.815357667 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.806182689 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.673803959 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.671720621 seconds)
  done (took 21.423115334 seconds)
done (took 68.19166555 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.665588421 seconds)
  done (took 3.268264883 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.683009511 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.841230376 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.667445749 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.665321716 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.66555091 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.666422972 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.665830501 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.667485671 seconds)
  done (took 15.126385553 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.665223132 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.665728346 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.664515113 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.665434503 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.665885828 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.664742305 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.666398421 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.665522549 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.666257247 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.66542727 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.666553846 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.666241615 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.666697038 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.667152193 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.667083002 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.667661586 seconds)
  done (took 28.260254068 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.669036864 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.667950883 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.668509053 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.666951006 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.66668769 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.665764197 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.666455874 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.666556494 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.665542404 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.666334054 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.666471852 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.666899768 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.666338256 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.666925245 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.666878559 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.666148469 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.667320671 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.66684765 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.671444509 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.667151266 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.666499447 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.666733718 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.666939509 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.667603276 seconds)
  done (took 41.618759671 seconds)
done (took 89.875394478 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.423917889 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.273758267 seconds)
  done (took 9.30235069 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.67133124 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.667279951 seconds)
  done (took 5.014134107 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.666818008 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.66778055 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.6669323 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.667757696 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.667172803 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.66734055 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.667863948 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.666972752 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.667479492 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.668056808 seconds)
  done (took 18.27926278 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.667327663 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.667531179 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.667592029 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.667373537 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.668535704 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.668060546 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.669032201 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.668252862 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.667552593 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.667386791 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.668178752 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.66841459 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.668636274 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.668183068 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.668010136 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.667592594 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.667483163 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.66938236 seconds)
  done (took 31.630325255 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.668211927 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.669380024 seconds)
  done (took 4.943045769 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.669214096 seconds)
    (2/7) benchmarking "second"...
    done (took 1.668874884 seconds)
    (3/7) benchmarking "month"...
    done (took 1.668711868 seconds)
    (4/7) benchmarking "year"...
    done (took 1.66838323 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.668344963 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.668246792 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.668878408 seconds)
  done (took 13.286549894 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.668993573 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.815854903 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.877256739 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.321426311 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.669667855 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.672207284 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.574747977 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.671757114 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.673048413 seconds)
  done (took 18.551020221 seconds)
done (took 102.610922139 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.571984069 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.670080553 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.932847633 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.765775139 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.689254305 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.96270243 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.700691788 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.939273073 seconds)
done (took 41.839253589 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.745665126 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.341404022 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.353531297 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.701679732 seconds)
  done (took 15.004819061 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.669064205 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.973837424 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.693313133 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.483004887 seconds)
  done (took 21.430702882 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.029584468 seconds)
    (2/2) benchmarking "read"...
    done (took 2.01531038 seconds)
  done (took 5.655849803 seconds)
done (took 50.445547677 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.670623486 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.669684267 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.669823929 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.67051337 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.669599955 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.670205985 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.670459047 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.669732688 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.66962532 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.670431075 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.669221181 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.670286104 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.670270239 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.670110878 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.670378981 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.670438062 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.670624358 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.670307476 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.671192704 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.670106801 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.671517079 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.670591337 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.671282902 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.671319932 seconds)
  done (took 41.69668074 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.67106648 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.671484474 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.67202268 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.67078551 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.671970599 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.671783457 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.67218982 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.67214437 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.671846888 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.671842937 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.672175937 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.672702005 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.671536189 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.672616478 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.6723136 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.672466671 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.67157142 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.671908903 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.671830871 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.672266985 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.672189578 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.672125238 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.672290645 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.672831918 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.671833738 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.672124536 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.672420272 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.673559493 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.672491317 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.672773467 seconds)
  done (took 51.77270808 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.672627263 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.673513437 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.672059513 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.67352446 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.67285697 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.673116355 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.673652144 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.673206223 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.673254363 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.672449926 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.673218464 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.673327586 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.673363453 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.672894782 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.67354278 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.673192405 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.67316446 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.673805007 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.673302769 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.673214918 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.676252832 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.673287534 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.674299069 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.673694393 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.673406754 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.67463312 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.673748791 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.673538154 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.67446063 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.673653398 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.674746045 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.6735095 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.674489103 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.674545295 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.674371196 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.674198476 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.673836472 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.674540688 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.674509587 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.673955911 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.675038425 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.67459329 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.675884286 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.674438528 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.674663469 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.673720612 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.675276517 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.675497945 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.675468867 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.674212356 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.675179258 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.675098198 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.675062723 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.67473957 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.675038996 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.67456012 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.675421635 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.676115471 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.6750063 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.675014122 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.675977319 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.675117397 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.675771714 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.675885788 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.675854515 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.675963678 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.676145661 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.675885488 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.675528051 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.676845202 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.676388167 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.675967333 seconds)
  done (took 122.170556664 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.675904619 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.676039012 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.676237737 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.676395448 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.67593442 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.676239393 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.676226771 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.676410396 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.676160192 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.676463366 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.67592951 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.676789795 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.676862191 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.676755185 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.676230449 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.676924287 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.676385756 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.677467132 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.677551131 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.677171231 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.677027561 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.677206502 seconds)
  done (took 38.498630534 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.677615181 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.677394573 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.677228886 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.677923373 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.677602694 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.678051378 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.678391491 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.678003208 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.677642163 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.677843803 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.67747976 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.677737679 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.677732796 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.678228672 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.678182442 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.677777301 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.677943675 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.67750597 seconds)
  done (took 31.815788001 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.677715001 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.678885168 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.677733459 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.6779252 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.677505978 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.678855524 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.677704735 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.678284604 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.679108775 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.678115145 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.677992269 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.678180137 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.678722638 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.678127122 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.678025989 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.678397736 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.678633733 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.679032374 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.678881784 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.678713152 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.67905499 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.67941773 seconds)
  done (took 38.541216479 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.678714784 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.678679999 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.679107537 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.679434315 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.67922148 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.67912921 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.679361452 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.679288194 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.678597545 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.678959199 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.679749229 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.679333743 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.679707536 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.681220637 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.679271646 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.68004518 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.679435557 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.67991408 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.680402205 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.680270755 seconds)
  done (took 35.206377175 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.682353793 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.683430212 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.682486092 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.682374603 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.682754829 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.68194314 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.682536145 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.682490505 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.682926231 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.6829136 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.684054747 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.683887341 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.683523555 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.68377733 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.682589604 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.683626178 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.684728124 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.682897627 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.683444931 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.683327322 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.68366268 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.683707505 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.683664874 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.683766763 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.683133447 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.683707653 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.683780967 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.683949696 seconds)
  done (took 48.749458232 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.681272061 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.681025705 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.681250955 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.682297168 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.681956921 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.68123466 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.682123619 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.681791611 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.681739422 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.682232625 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.681432855 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.681803137 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.681877018 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.68163168 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.681800606 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.682654403 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.681567881 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.682829275 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.682253454 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.682484865 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.682399784 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.682001574 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.682226228 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.682519744 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.681651386 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.683046241 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.683014014 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.682785496 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.682759573 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.682943176 seconds)
  done (took 52.082622103 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.703484757 seconds)
    (2/2) benchmarking "in"...
    done (took 1.703986381 seconds)
  done (took 5.027634345 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.682648672 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.684066286 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.683410219 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.68303289 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.683704543 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.683200681 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.683829624 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.684628074 seconds)
  done (took 15.088799652 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.684845948 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.683398533 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.68420988 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.683728294 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.683971045 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.684563201 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.69118421 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.684978702 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.686791535 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.685638459 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.692737775 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.692415543 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.687864539 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.685531629 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.68566598 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.687268463 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.684812391 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.684223489 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.683915966 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.683709216 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.6842426 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.687531691 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.687525745 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.684289036 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.686783718 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.695233661 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.689889899 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.68495928 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.686223788 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.689201369 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.686319105 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.684162071 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.685629349 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.685169961 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.684288877 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.686036355 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.694555544 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.687424351 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.692010379 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.686008669 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.685338969 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.685697511 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.688353164 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.68812196 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.688601544 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.687401221 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.686180925 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.685705817 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.686902663 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.690202873 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.694479911 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.686632292 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.685447956 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.691431275 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.689442123 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.693939269 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.686157537 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.689619295 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.697061477 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.696886303 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.698158673 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.696255813 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.689390988 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.687289129 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.696242019 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.711970206 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.694475577 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.686496523 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.686072908 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.685518193 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.694117057 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.699152104 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.697761792 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.686833251 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.687277325 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.68688415 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.688725827 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.686996837 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.69512029 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.692239252 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.687053351 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.687241474 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.697813213 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.712342933 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.688803079 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.686863707 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.687965916 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.687546316 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.68945152 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.700180903 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.688591033 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.688456871 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.688834403 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.689759219 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.690643859 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.687891529 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.688492376 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.690848312 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.688105451 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.68876156 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.688542863 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.69204919 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.699298212 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.688129286 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.689217042 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.695495584 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.68977248 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.690272435 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.695952437 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.689293925 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.688913491 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.689806272 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.69700063 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.68902568 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.693300242 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.698913995 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.6900747 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.691683404 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.69056339 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.689210601 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.699466903 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.717318074 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.689238857 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.688949984 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.694852548 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.701586465 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.689463766 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.693407601 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.689629438 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.688735708 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.690014144 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.69284401 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.689432824 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.691902124 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.689808424 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.692014614 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.690441793 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.689816425 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.689639433 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.692231019 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.692037783 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.691910525 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.693050025 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.69409931 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.690575346 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.693346332 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.697273688 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.69074055 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.693471398 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.695332548 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.690971893 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.690252552 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.693790109 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.691540001 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.692653373 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.691468556 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.692976429 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.691458703 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.691305286 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.692454663 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.691159076 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.692862424 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.697581807 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.692389322 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.696864574 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.693200376 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.691185102 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.692321079 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.69209254 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.693393762 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.692374542 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.691898203 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.696046405 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.700602104 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.6921528 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.692314756 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.69514668 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.691783127 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.692463671 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.691944605 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.696400005 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.702219963 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.691843618 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.699395706 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.692033064 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.692189198 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.692435074 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.694641897 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.693875547 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.692296157 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.696210083 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.700718949 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.705511238 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.703139558 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.694068372 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.696995968 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.694904634 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.696866369 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.697825274 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.692903265 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.692963827 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.693188169 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.694369526 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.694202908 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.696053892 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.693147281 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.694414663 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.693495205 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.693608957 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.693293797 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.693097381 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.69546731 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.696256123 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.694156969 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.693600876 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.694417457 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.695763436 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.694038999 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.693958804 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.695155135 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.693755166 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.694849871 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.701764593 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.694157737 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.696943597 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.697212066 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.696176863 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.694512185 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.694689922 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.697704172 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.69553981 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.702740345 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.696063536 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.698447435 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.702634485 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.696179576 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.694894792 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.699055138 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.69479867 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.69506728 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.698067532 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.702577276 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.694652469 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.694666871 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.695268442 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.695921755 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.694984176 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.702199263 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.695255817 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.695734021 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.695511516 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.697429621 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.694894446 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.697511807 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.698041535 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.697723447 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.699231379 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.695076707 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.695470591 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.69843546 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.696205781 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.696039854 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.695940196 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.700162931 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.703773484 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.701617979 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.697336524 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.698978804 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.698065031 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.70072334 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.698999911 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.69667366 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.697434935 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.70879492 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.704460102 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.703938528 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.699928241 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.696163573 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.703147505 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.699143703 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.702534527 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.699180245 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.699403026 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.69812107 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.698352837 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.69870131 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.700302697 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.697599147 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.700042867 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.700644903 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.701818761 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.698820146 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.699516316 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.697734356 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.698977007 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.698088399 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.699009802 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.698117363 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.700995106 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.701741409 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.699151923 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.699298556 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.705078025 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.700274504 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.701297839 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.698424037 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.699017714 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.698748409 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.700318028 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.699301987 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.701714517 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.706907552 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.701977925 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.710124882 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.700472231 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.7084589 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.699490016 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.702332298 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.706243842 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.698039271 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.698133432 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.699734005 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.699062955 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.70738884 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.699706147 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.700988298 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.703772368 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.699446083 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.698843014 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.698642384 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.699691085 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.699475408 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.699071611 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.707702316 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.701444522 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.706808129 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.704203548 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.700041312 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.699819217 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.700394534 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.701368777 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.704991269 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.70020649 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.701800851 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.701675192 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.700656787 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.699806072 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.699650882 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.700182361 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.699841987 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.700487334 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.70743839 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.702433213 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.7049724 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.700334686 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.708534189 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.70240196 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.707995263 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.701354086 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.702101293 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.701253245 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.700268011 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.702737286 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.701231412 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.703931553 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.700712703 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.70295037 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.705133935 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.702320043 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.70402008 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.703502047 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.701441099 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.702248437 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.711684025 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.725596099 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.704077445 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.705613085 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.701873597 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.704393549 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.706415075 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.70245109 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.702200649 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.705683527 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.714381543 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.709725577 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.703537247 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.702319074 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.703549686 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.701973789 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.70213966 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.702167901 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.701905866 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.70213318 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.70476118 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.702279674 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.706609672 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.70259717 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.704518554 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.705527832 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.704648507 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.713943661 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.70269012 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.704834577 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.702870186 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.702601998 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.704649354 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.705087438 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.702728865 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.705978551 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.703314485 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.706510417 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.71165636 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.711402903 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.707806043 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.70456519 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.704182776 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.704641018 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.704456412 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.703018858 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.703471529 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.702874099 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.70625753 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.703449833 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.705306952 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.703482079 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.703314683 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.704677798 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.703744985 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.707302681 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.713342956 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.705736625 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.703222679 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.704053302 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.703884725 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.703794182 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.705552407 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.711837751 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.70761674 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.716916142 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.713930659 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.709173224 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.705888275 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.708580065 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.714688358 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.704902133 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.706813392 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.70527049 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.706995001 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.705687952 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.709496256 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.705899511 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.711870277 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.706915319 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.706872982 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.714290434 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.70860161 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.70595483 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.708506461 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.711208007 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.707136855 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.705611525 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.706641532 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.706679165 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.713537011 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.709737146 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.706869586 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.708941302 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.705332949 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.707910445 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.710165013 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.70610348 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.709117848 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.706297082 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.707912112 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.706833311 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.70520476 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.705617467 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.707706324 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.707365564 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.710071495 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.715081411 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.705782538 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.709969688 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.708494126 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.70795691 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.706804433 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.706664538 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.706107075 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.706308012 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.707952482 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.706538523 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.708608682 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.710671277 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.707554079 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.708510412 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.711307621 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.708364516 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.712609918 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.72106461 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.717366851 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.709362103 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.712716545 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.710475335 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.711806033 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.707258771 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.707207209 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.708272367 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.709606362 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.706794768 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.707637926 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.707542105 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.711630546 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.724543441 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.708524051 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.70956987 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.709406715 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.712927619 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.708658289 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.708217036 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.708562586 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.712124808 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.712627665 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.717230824 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.708637657 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.717140488 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.710465391 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.711092477 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.713250392 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.7132068 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.718193435 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.713178301 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.708194232 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.708634915 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.715000535 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.726663713 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.708773629 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.719022738 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.739647282 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.711219714 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.711131198 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.709120013 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.710341665 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.709188557 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.712654198 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.709777734 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.708929574 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.708913524 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.71002828 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.711250106 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.717330408 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.712617487 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.708889819 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.709461869 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.710933239 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.711374272 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.709656695 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.710271027 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.710198796 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.710618037 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.7092881 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.71033254 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.711753887 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.72330792 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.720891349 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.709982469 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.710688003 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.710815918 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.714671154 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.714420314 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.721723264 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.71858853 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.710008553 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.711315918 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.714050627 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.711743127 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.710380781 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.713043012 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.713345342 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.711676233 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.711236541 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.722772407 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.719829509 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.717569028 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.712279587 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.711442532 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.71204137 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.7144002 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.711946868 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.712203684 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.715044868 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.714005187 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.716496948 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.711258824 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.712283225 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.715785181 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.718967653 seconds)
  done (took 1015.106821754 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.711787094 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.713572836 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.711340149 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.712343725 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.711256766 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.712375433 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.712181052 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.712344582 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.712025507 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.711991449 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.712511756 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.71264456 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.712132576 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.712646698 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.711769084 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.711547897 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.712516237 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.712570238 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.712306259 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.711693367 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.712657352 seconds)
  done (took 37.605053003 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.713054633 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.712826944 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.712566778 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.716305184 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.713293402 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.712465296 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.71298307 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.712674491 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.713521246 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.713050318 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.713245135 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.714003343 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.7140561 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.714391822 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.713827067 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.713989148 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.714652845 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.713628564 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.714345926 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.713810226 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.713313164 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.714222557 seconds)
  done (took 39.350028815 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.713923223 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.716362178 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.716915702 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.716277455 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.715193462 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.714602417 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.714636724 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.714060117 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.715063935 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.714883012 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.713542128 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.71465809 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.721588798 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.721641364 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.715841491 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.714194526 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.86015334 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.71523896 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.71585278 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.715257686 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.714077491 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.721436331 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.714137431 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.714705418 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.714493944 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.715681384 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.715400349 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.71484319 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.715404911 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.717108958 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.720196903 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.7150858 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.716617049 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.718452939 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.716181698 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.717836605 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.72024703 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.716141618 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.715366122 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.715783118 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.726413211 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.739556628 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.715713403 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.722573903 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.715818685 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.715591975 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.720268827 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.724827943 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.716434382 seconds)
  done (took 85.937940986 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.715966914 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.71620809 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.716330299 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.716537129 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.716701069 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.716375397 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.716637242 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.716894614 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.716416301 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.716397671 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.717619136 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.718842094 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.718224655 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.717199753 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.716685183 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.717364983 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.715444555 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.717136271 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.716578701 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.717189204 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.716332334 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.716752601 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.714921337 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.715389693 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.71517435 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.715140528 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.715194312 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.715574798 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.71573429 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.714671483 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.7153042 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.714979421 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.715984623 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.715486949 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.716109514 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.715330753 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.715091385 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.715877145 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.716296227 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.715585269 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.715477845 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.715282957 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.716315301 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.716412182 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.716465667 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.716362071 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.715658614 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.71567581 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.71616112 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.716387063 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.716676987 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.715894941 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.715218667 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.715318214 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.716420309 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.715551904 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.71649665 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.714193456 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.714155198 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.714133624 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.714972485 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.716780611 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.712023237 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.711325963 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.711663648 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.712335214 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.711793392 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.712583925 seconds)
  done (took 118.32004961 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.71068922 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.710256082 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.711474348 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.711235386 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.711419942 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.709635 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.710323005 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.710426461 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.710458832 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.709814606 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.710335347 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.709380662 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.710156077 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.709496764 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.709164801 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.710290029 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.710622018 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.709870647 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.709867649 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.709887971 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.710642298 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.710229828 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.710737206 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.710486296 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.710263281 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.710380312 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.71057313 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.709926861 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.711236359 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.710015451 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.710367078 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.710734433 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.710733116 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.71113429 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.710978384 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.711079728 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.709925747 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.711532307 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.711762811 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.711061551 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.712259178 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.710320549 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.711069853 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.710894665 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.711201013 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.712695501 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.711445376 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.711037067 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.711414776 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.711215983 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.711185295 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.712444733 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.711468735 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.711033223 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.712260746 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.711226474 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.712020367 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.713243183 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.712827694 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.71114975 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.712056074 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.711656259 seconds)
  done (took 107.722720606 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.711981238 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.711204386 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.711925379 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.711373415 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.710976845 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.71178151 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.712867915 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.711333513 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.711043042 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.71157243 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.711366716 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.712392423 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.712046604 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.711341461 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.7118121 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.712176054 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.711714793 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.712454746 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.709995149 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.711104331 seconds)
  done (took 35.880738792 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.711056945 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.710698813 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.711160292 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.710805566 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.711492952 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.71059574 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.711498629 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.711479797 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.71225352 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.711894538 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.711670053 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.711339386 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.71209119 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.71185096 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.714746416 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.709704025 seconds)
  done (took 29.031721925 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.710810024 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.710657302 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.710831335 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.708719294 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.706210635 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.705576321 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.706209489 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.705555099 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.706982949 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.706245699 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.704644868 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.704683245 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.705262976 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.705593878 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.705427243 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.704848469 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.704513681 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.705023688 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.704541695 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.70530647 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.705841365 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.70437179 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.704088616 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.704665253 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.704856796 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.705675961 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.705691129 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.70521284 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.703420376 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.704424254 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.704304641 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.70510178 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.705370921 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.704052008 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.704790666 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.704521209 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.704175883 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.704314983 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.705538847 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.704342235 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.70460769 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.705015082 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.705101788 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.704525448 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.705360024 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.704281164 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.704853359 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.705410235 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.703997431 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.704594539 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.704845201 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.70530837 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.704838867 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.704260155 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.703979598 seconds)
  done (took 95.441814745 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.705216466 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.70391619 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.705848382 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.704456118 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.704292267 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.704853572 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.704894609 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.703900155 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.705087875 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.704562433 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.705581948 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.705156991 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.706224622 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.704700618 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.705804467 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.705114004 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.705348009 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.706953507 seconds)
  done (took 32.332941871 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.705466567 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.705661936 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.705353235 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.705220947 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.706305166 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.705384975 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.703922595 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.708024484 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.704582435 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.704369857 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.705237611 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.70310072 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.70399007 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.7031438 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.704249899 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.703388352 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.702931991 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.7022463 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.7017858 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.701897085 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.702708298 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.702318632 seconds)
  done (took 39.133076752 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.702397955 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.702122724 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.717084956 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.724005723 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.72407621 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.735408922 seconds)
  done (took 11.943668977 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701249528 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702390376 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.701624738 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702968715 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701416203 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.70118661 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700797963 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700592508 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.70084147 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70164937 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700118215 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700685533 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699809473 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700811921 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700104378 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701777982 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697591124 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697039117 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697502047 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697973762 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698190794 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699716821 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697750974 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698229964 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697973791 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698933611 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.69787434 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698766222 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698786049 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.697804593 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698700154 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699269966 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699028652 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699453342 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698249133 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698183861 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698293383 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698605772 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698042116 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698992859 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.697673087 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.69826586 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697906438 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697963176 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.697915129 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698690592 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696896401 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697689051 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.69852494 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698802547 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698943477 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698190521 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697676922 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697595905 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698538863 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.69802836 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698991261 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698415905 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698351013 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697883216 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698516744 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.69737645 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699012753 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698084923 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697249405 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697776895 seconds)
  done (took 113.768468425 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.69704212 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.697879478 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697338625 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697205489 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698541039 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697928492 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698278372 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699473746 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697254001 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697542839 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698296065 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699106809 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697897108 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.6997876 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698562346 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697048918 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.69805202 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697971175 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697474189 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698681751 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697745622 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697088994 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697560558 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697779569 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.69808536 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697772753 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697886065 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.697938961 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.697721442 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697230999 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698226541 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697869958 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698460001 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.696588061 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697320285 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.69699765 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697162739 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696875882 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697841368 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698033962 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698349291 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697619015 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697914342 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697316305 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697019889 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.69716509 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697569591 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697383848 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699407627 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.697280584 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.696995225 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697735621 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697726833 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697819359 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.697614975 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696552676 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696514128 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697779682 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.69751199 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696888639 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698496975 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.697229467 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696921454 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697059884 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.696927202 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697407019 seconds)
  done (took 113.683296912 seconds)
done (took 2357.519618134 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.724923779 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.702681402 seconds)
  done (took 15.060097115 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.860732519 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.813386023 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.69722547 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.741434813 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.698147253 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.719100483 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.698313188 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.697298683 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.696800374 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.696363402 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.69820216 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.88147152 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.698408681 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.69682846 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.696028115 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.789075083 seconds)
  done (took 49.415810487 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.699225478 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.702466669 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.707613131 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.701789248 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.698272934 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.710300407 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.730481064 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.704796783 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.731551926 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.710038885 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.765846963 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.709020131 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.697975625 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.74886716 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.711036124 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.712599882 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.789972945 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.773536553 seconds)
  done (took 32.637186796 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.775063866 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.70300089 seconds)
  done (took 10.115838396 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.710631239 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.696990278 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.770127349 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.708361935 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.726186922 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.696805804 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.693666303 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.731145477 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.71573104 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.732884311 seconds)
  done (took 68.816567891 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.704166218 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.700386347 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.69731551 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.695787036 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.695145735 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.70050036 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.69774097 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.69462481 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.34858484 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.732397451 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.705108233 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.701867277 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.697878847 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.698744434 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.695351792 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.72016973 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.816124481 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.694887902 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.695054566 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.702759902 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.698688752 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.757428772 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.710739069 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.697715163 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.72727904 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.351758799 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.707262095 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.703038936 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.8052714 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.694774929 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.697376425 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.882912293 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.701443831 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.156246976 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.971025592 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.701317023 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.710638779 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.705055245 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.695811152 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.808441612 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.698852395 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.703348178 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.610702647 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.949680978 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.797898869 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.743112806 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.996535885 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.71525463 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.699247098 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.727589396 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.700393165 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.698673203 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.709751617 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.201980081 seconds)
  done (took 123.263669641 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.695802406 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.044135443 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.861805536 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.698131128 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.979070764 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.903616493 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.698789888 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.742109519 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.699862871 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.924678002 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.94611863 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.799946424 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.697986196 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.696735531 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.694883273 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.698172218 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.848939162 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.767406098 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.699124267 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.695962268 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.72357473 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.936131081 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.81839156 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.699361112 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.72370474 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.905703279 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.817580778 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.799301334 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.476199986 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.696354316 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.758958544 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.699052408 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.698130396 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.697361111 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.850508226 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.789420245 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.777823508 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.698384663 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.696760635 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.697732142 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.441610529 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.896905264 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.790614265 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.825825092 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.947878653 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.899904027 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.477920934 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.697689125 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.431936472 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.862847042 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.923349764 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.924248793 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.817792353 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.700398693 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.226786768 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.697189643 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.69661878 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.946335468 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.917714198 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.794336322 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.702254581 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.696307062 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.697186744 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.985070062 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.698898506 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.791717579 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.702521922 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.699675818 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.792318975 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.794862137 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.92758624 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.912626166 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.7272189 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.050509502 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.205570598 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.942917334 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.762547904 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.945458021 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.700455373 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.698109504 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.77625561 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.535754972 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.951459166 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.979073761 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.942772881 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.733318956 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.415298091 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.698542688 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.922172773 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.917402034 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.956826131 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.940737795 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.937308953 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.010802326 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.698638245 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.698624775 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.932291805 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.821492387 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.701375966 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.044782667 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.927112839 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.220634441 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.725112762 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.999540294 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.829231985 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.701819541 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.327357486 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.699823167 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.926670157 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.737600658 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.701114959 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.698973833 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.91833026 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.687283295 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.700283186 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.674296802 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.760710878 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.704265972 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.930273321 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.703310484 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.967207719 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.70313711 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.93125395 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.133444818 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.731179361 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.926268941 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.942505086 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.70179454 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.938789303 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.941177267 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.81403963 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.970679026 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.5986481 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.701660447 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.983957373 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.702013749 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.701977018 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.86803685 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.704438259 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.841641868 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.705110986 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.991249024 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.721953743 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.930669109 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.704435773 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.952597405 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.733593114 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.163122332 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.703202788 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.831759145 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.702626002 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.530684522 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.856494183 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.70312244 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.703784051 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.510841164 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.701939904 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.84882906 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.926710609 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.721626618 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.771443181 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.362651217 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.701719707 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.778772804 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.723497377 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.091660839 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.701224329 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.951248749 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.705433953 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.703530635 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.701927288 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.987106077 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.935649957 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.703993952 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.701780238 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.605968107 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.70318086 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.702107561 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.881731697 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.033846262 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.703529563 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.901733964 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.707413701 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.829073059 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.706382027 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.778260115 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.041332475 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.703849069 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.703934741 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.703728363 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.702699295 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.703240075 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.961802036 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.727245883 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.192859663 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.838931149 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.972843995 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.010537394 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.941162137 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.745841528 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.705698795 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.954716584 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.707429602 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.764039066 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.707172104 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.72179765 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.92857103 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.70467677 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.909170157 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.971557516 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.548180039 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.750730217 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.707683283 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.707409096 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.703990254 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.848755305 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.783849787 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.705093934 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.703855344 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.816476958 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.823751783 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.90994706 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.705019335 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.779277375 seconds)
  done (took 865.979111112 seconds)
done (took 1166.9224961 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.706395692 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.70830738 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.707654129 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.710462039 seconds)
  done (took 28.473805275 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.712250807 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.706315785 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.708138727 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.705744037 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.706611806 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.706332848 seconds)
  done (took 11.887131876 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.742793958 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.705688441 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.709201396 seconds)
  done (took 20.799273958 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.776104624 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.086355009 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.83689925 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.115791417 seconds)
  done (took 9.458203405 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.709842102 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.709627852 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.709288837 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.706906955 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.714124223 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.715505274 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.707992539 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.707406893 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.713728057 seconds)
  done (took 17.037932362 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.89245694 seconds)
done (took 93.190212794 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.845082724 seconds)
    (2/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.717525741 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 3.285458209 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.721549848 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 3.364849689 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.83665351 seconds)
    (7/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.725964216 seconds)
    (8/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.627113257 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.84776888 seconds)
    (10/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.031136413 seconds)
    (11/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.884845652 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.739300872 seconds)
    (13/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.88749116 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.035638852 seconds)
    (15/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.733805523 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.358444657 seconds)
    (17/309) benchmarking ("sort", BigInt, false)...
    done (took 6.718839545 seconds)
    (18/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.72469495 seconds)
    (19/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.715961783 seconds)
    (20/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.694016064 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.021695948 seconds)
    (22/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.721099585 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.99652421 seconds)
    (24/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.815425131 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.113801966 seconds)
    (26/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.936651964 seconds)
    (27/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.821120966 seconds)
    (28/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.816118309 seconds)
    (29/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.795233324 seconds)
    (30/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.738758112 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.820784867 seconds)
    (32/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.856906524 seconds)
    (33/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.888748983 seconds)
    (34/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.748030695 seconds)
    (35/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.0206626 seconds)
    (36/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.722477292 seconds)
    (37/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.91543703 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.114426775 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.72146204 seconds)
    (40/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.275406041 seconds)
    (41/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.743894982 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.887078693 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.821361493 seconds)
    (44/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.028979145 seconds)
    (45/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.837112111 seconds)
    (46/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.085899887 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.399954665 seconds)
    (48/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.909899488 seconds)
    (49/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.743677321 seconds)
    (50/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.207335554 seconds)
    (51/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.90732723 seconds)
    (52/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.725923882 seconds)
    (53/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.719647471 seconds)
    (54/309) benchmarking ("sort", Bool, false)...
    done (took 2.039084472 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.01153531 seconds)
    (56/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.802264555 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 5.411345849 seconds)
    (58/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.72926361 seconds)
    (59/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.952315687 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.975320888 seconds)
    (61/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.798013622 seconds)
    (62/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.499788321 seconds)
    (63/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.849871 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.72093013 seconds)
    (65/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.269803442 seconds)
    (66/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.80379712 seconds)
    (67/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.879698066 seconds)
    (68/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.74021025 seconds)
    (69/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.944190852 seconds)
    (70/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.978409989 seconds)
    (71/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.950286176 seconds)
    (72/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.724406294 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 8.103997441 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.622224464 seconds)
    (75/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.725541905 seconds)
    (76/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.923935491 seconds)
    (77/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.45349074 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.908563052 seconds)
    (79/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.724935179 seconds)
    (80/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.40005959 seconds)
    (81/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.724400989 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.812841531 seconds)
    (83/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.724233173 seconds)
    (84/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.745509622 seconds)
    (85/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.733024683 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.928427995 seconds)
    (87/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.967961349 seconds)
    (88/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.726263603 seconds)
    (89/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.850704194 seconds)
    (90/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.914652624 seconds)
    (91/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.832084552 seconds)
    (92/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.941752964 seconds)
    (93/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.722426738 seconds)
    (94/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.04244703 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.356913503 seconds)
    (96/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.810403987 seconds)
    (97/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.720884756 seconds)
    (98/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.538029516 seconds)
    (99/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.723439691 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.464249779 seconds)
    (101/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.112322053 seconds)
    (102/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.282732525 seconds)
    (103/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.022092746 seconds)
    (104/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.725901689 seconds)
    (105/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 3.728600485 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.399735899 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.493389841 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.852925051 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.665723236 seconds)
    (110/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.059442819 seconds)
    (111/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.729304457 seconds)
    (112/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.070604697 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.72808484 seconds)
    (114/309) benchmarking ("sort", Float32, false)...
    done (took 5.42237656 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.726534235 seconds)
    (116/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.089513951 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.74201707 seconds)
    (118/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.827528544 seconds)
    (119/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.966508676 seconds)
    (120/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.087085941 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.055169458 seconds)
    (122/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.069515697 seconds)
    (123/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.746132154 seconds)
    (124/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.71787747 seconds)
    (125/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.062643355 seconds)
    (126/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.096690995 seconds)
    (127/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.862901195 seconds)
    (128/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.729755551 seconds)
    (129/309) benchmarking ("map", identity, Int8, true)...
    done (took 3.387522863 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.064435418 seconds)
    (131/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.103141899 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.394172975 seconds)
    (133/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.830052606 seconds)
    (134/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.875566643 seconds)
    (135/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.941255019 seconds)
    (136/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.745892739 seconds)
    (137/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.746607315 seconds)
    (138/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.043975338 seconds)
    (139/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.859639419 seconds)
    (140/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.723089594 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.88803111 seconds)
    (142/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.727492838 seconds)
    (143/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.786822437 seconds)
    (144/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.836149864 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.725301758 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.877591166 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.974016997 seconds)
    (148/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.520431151 seconds)
    (149/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.116017706 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.97978595 seconds)
    (151/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.942269091 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.683475073 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.734214743 seconds)
    (154/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.792762719 seconds)
    (155/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.110729778 seconds)
    (156/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.729450023 seconds)
    (157/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 3.860379825 seconds)
    (158/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.823357418 seconds)
    (159/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.746845494 seconds)
    (160/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.883003904 seconds)
    (161/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.733339769 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.070340589 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.862317737 seconds)
    (164/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.86074874 seconds)
    (165/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.919854361 seconds)
    (166/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.933347261 seconds)
    (167/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.112247263 seconds)
    (168/309) benchmarking ("sort", Float64, false)...
    done (took 5.458979137 seconds)
    (169/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.72793483 seconds)
    (170/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.544150646 seconds)
    (171/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.750075708 seconds)
    (172/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.724775602 seconds)
    (173/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.815719957 seconds)
    (174/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.043177397 seconds)
    (175/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.38756439 seconds)
    (176/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.030983472 seconds)
    (177/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.87398229 seconds)
    (178/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.863702351 seconds)
    (179/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.037837301 seconds)
    (180/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.731217238 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.921844208 seconds)
    (182/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.909885675 seconds)
    (183/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.762829053 seconds)
    (184/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.813753118 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.728999662 seconds)
    (186/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.729819741 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.211150611 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.341340278 seconds)
    (189/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.734887663 seconds)
    (190/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.547828447 seconds)
    (191/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.667853648 seconds)
    (192/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.865323073 seconds)
    (193/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.038185495 seconds)
    (194/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.255893821 seconds)
    (195/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.99517499 seconds)
    (196/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.729608851 seconds)
    (197/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.551574038 seconds)
    (198/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.622284437 seconds)
    (199/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.750605426 seconds)
    (200/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.809069138 seconds)
    (201/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.818635979 seconds)
    (202/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.053824487 seconds)
    (203/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.109026353 seconds)
    (204/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.85926116 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.853495787 seconds)
    (206/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.736131724 seconds)
    (207/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.74875492 seconds)
    (208/309) benchmarking ("sort", Int8, false)...
    done (took 4.618429026 seconds)
    (209/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.90109052 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.056966246 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.732713079 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.798068815 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.075290451 seconds)
    (214/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.734181376 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.944607777 seconds)
    (216/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.640944298 seconds)
    (217/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.992494176 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.039577059 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.735625629 seconds)
    (220/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.81990366 seconds)
    (221/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.106849442 seconds)
    (222/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.965988008 seconds)
    (223/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.857396653 seconds)
    (224/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.759351634 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.750330525 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.515756904 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.381199645 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.947204191 seconds)
    (229/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.815937339 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.732096037 seconds)
    (231/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.733533031 seconds)
    (232/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.826325407 seconds)
    (233/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.923343111 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.979457373 seconds)
    (235/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.995855339 seconds)
    (236/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.757413535 seconds)
    (237/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.72799356 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 8.149539179 seconds)
    (239/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.789167679 seconds)
    (240/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.737989582 seconds)
    (241/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.926581184 seconds)
    (242/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.983569848 seconds)
    (243/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.815171749 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.849358181 seconds)
    (245/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.734454312 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.365261985 seconds)
    (247/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.642420422 seconds)
    (248/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.732247723 seconds)
    (249/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.824068981 seconds)
    (250/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.515267541 seconds)
    (251/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.031327341 seconds)
    (252/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.881179889 seconds)
    (253/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.878816061 seconds)
    (254/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.730938538 seconds)
    (255/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.129558044 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.734168198 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.045760912 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.866538812 seconds)
    (259/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.728792623 seconds)
    (260/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.935898014 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.855001512 seconds)
    (262/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.184430154 seconds)
    (263/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.738020774 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.060281621 seconds)
    (265/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.0728445 seconds)
    (266/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.611353135 seconds)
    (267/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.060590348 seconds)
    (268/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.746580053 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.678139259 seconds)
    (270/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.757281864 seconds)
    (271/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.731046201 seconds)
    (272/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.069292865 seconds)
    (273/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.888625253 seconds)
    (274/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.740349601 seconds)
    (275/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.925755356 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.055786918 seconds)
    (277/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.731907859 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.745791827 seconds)
    (279/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.846901688 seconds)
    (280/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.813993624 seconds)
    (281/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.816779425 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.734960944 seconds)
    (283/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.800484416 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.731369609 seconds)
    (285/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 3.021031823 seconds)
    (286/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.869953582 seconds)
    (287/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.759278165 seconds)
    (288/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.183240247 seconds)
    (289/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.79859702 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.829692442 seconds)
    (291/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.809427842 seconds)
    (292/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.977615425 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.489864308 seconds)
    (294/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.882013448 seconds)
    (295/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.91032919 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.735023526 seconds)
    (297/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.732911095 seconds)
    (298/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.940484059 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.638177121 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.76949806 seconds)
    (301/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.731140808 seconds)
    (302/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 3.105688888 seconds)
    (303/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.833701665 seconds)
    (304/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.855306056 seconds)
    (305/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.052722738 seconds)
    (306/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.805623474 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.720101957 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.953238361 seconds)
    (309/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.73604109 seconds)
  done (took 962.884649284 seconds)
done (took 964.82549412 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.758690951 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.751813445 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.73579931 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.757365186 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.847804415 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.782190128 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.748595559 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.739571689 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.786172267 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.78464923 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.733909827 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.780416488 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.736223856 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.736405859 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.735674247 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.752725246 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.047713262 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.767635717 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.754040798 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.748151181 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.753619302 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.734058428 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.785614333 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.780525856 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.741072347 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.741119276 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.739850739 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.755117091 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.849167554 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.739429499 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.741205736 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.748617848 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.047268446 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.76581784 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.734748536 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.756022873 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.749373991 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.74837093 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.739969512 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.770343056 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.133720325 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.777275827 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.736899463 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.737082203 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.737384369 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.744193092 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.738868274 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.746236453 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.75258423 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.751830293 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.125685235 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.791950655 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.740624162 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.737042804 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.749726106 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.737899092 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.740193256 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.752628876 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.758938341 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.754121027 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.032102457 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.775743376 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.742227174 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.75577925 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.748382427 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.160771546 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.774682159 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.742748826 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.131485253 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.784402585 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.161192605 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.787078335 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.739413327 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.752365262 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.771229881 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.047214335 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.766099581 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.736285113 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.746310693 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.735001413 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.752574331 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.752568084 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.742113728 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.737755373 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.753638433 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.784169163 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.751877399 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.737742919 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.74964834 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.758560644 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.748210691 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.751967393 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.742449327 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.736920379 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.750658711 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.742791888 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.743089935 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.744181492 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.744410635 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.75256757 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.133321683 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.79398692 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.737163246 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.736575732 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.73958155 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.754676279 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.13358472 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.779863535 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.763185553 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.789451392 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.741789343 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.033760495 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.773926211 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.757961903 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.7523266 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.743189765 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.738720143 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.03418822 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.160113978 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.795659843 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.740427841 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.73902221 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.756859396 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.742153678 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.738911088 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.051777618 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.773334834 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.756543865 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.863871932 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.75362136 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.774293602 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.739316359 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.744434998 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.790978793 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.757394613 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.77434526 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.743928684 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.759634838 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.759240902 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.738707571 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.753445823 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.754634797 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.741101495 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.749890933 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.739240927 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.790684831 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.755829371 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.758084882 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.76244812 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.865005738 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.73910966 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.036124442 seconds)
done (took 274.128906662 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.820669205 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.738752179 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.840036149 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.739660741 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.831555908 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.815633023 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.741035484 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.740733114 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.740369106 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.227582858 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.741182783 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.744633004 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.740357196 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.740398733 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.813472878 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.741564306 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.740702039 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.176672101 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.742250239 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.82073246 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.740629328 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.740326963 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.74045302 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.234552331 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.741324059 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.73974891 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.821349137 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.740212141 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.19394187 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.741565535 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.740895928 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.186378287 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.822023517 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.768271109 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.748892401 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.749026618 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.83354504 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.749707881 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.809801771 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.811911678 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.837373751 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.77447701 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.740412704 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.740658728 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.74439289 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.743021837 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.742271116 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.774651237 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.74420673 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.747348751 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.177983682 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.749692765 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.747835292 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.742157763 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.743116528 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.769941508 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.743456391 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.743931237 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.824052813 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.745689673 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.811294867 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.247981448 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.230590392 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.74280837 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.74255486 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.743485944 seconds)
  done (took 176.663818584 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.809229272 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.818570101 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.808302535 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.747482085 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.791541457 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.810415301 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.747980448 seconds)
  done (took 14.209492677 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.74965643 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.743505477 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.801363866 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.801937746 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.742809406 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.938442456 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.743175432 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.754754447 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.747709011 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.771798775 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.746457375 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.74366746 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.751211747 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.744466196 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.802740868 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.756062314 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.85996505 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.746655531 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.744762017 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.892412408 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.748219248 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.75139479 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.771415246 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.755889214 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.74746976 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.752093699 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.353686091 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.744842597 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.744435698 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.744672337 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.744447576 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.78575648 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.74481074 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.743527049 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.74408744 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.872280044 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.744547336 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.74483752 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.745287743 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.745070948 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.745221478 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.744944553 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.744776313 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.744522391 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.745201266 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.768369293 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.745239226 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.745427569 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.744972097 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.744931366 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.771185722 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.745032877 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.745222868 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.750868484 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.787545719 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.749981492 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.745587364 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.745729396 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.74594418 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.745664787 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.893849049 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.804444145 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.745251548 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.804627216 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.747256154 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.746106477 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.746254903 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.746170438 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.835367922 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.749241172 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.804987506 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.745977038 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.945243501 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.770264808 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.748844057 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.751006139 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.750850952 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.747839905 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.746743441 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.754558867 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.747350516 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.749281528 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.753850582 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.753144215 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.74667287 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.860801561 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.888277919 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.747013452 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.7502657 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.755512505 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.747764261 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.792133513 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.748226849 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.747390304 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.819691983 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.864256954 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.7761422 seconds)
  done (took 193.831832574 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.755373598 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.755938307 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.752086088 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.765507087 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.749403514 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.748313595 seconds)
  done (took 12.208800068 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.752383462 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.751476131 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.747923377 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.74781818 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.748275383 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.747817445 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.749258903 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.750029928 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.752440567 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.7468617 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.748180854 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.748851658 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.751857983 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.748851361 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.748835678 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.748244593 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.749329002 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.749084506 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.751084019 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.749178318 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.000709192 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.749031346 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.749963873 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.754089993 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.753413916 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.749568928 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.76345915 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.749221489 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.750175113 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.756853407 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.754019726 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.750280867 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.752978407 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.755469121 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.756274315 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.751819047 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.753582347 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.7504902 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.749444519 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.749875276 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.75248494 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.751774693 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.749682429 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.750372092 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.751978236 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.758523425 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.753796249 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.764608105 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.750595984 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.74998566 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.749787357 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.751473534 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.75036521 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.750691377 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.75432942 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.756961638 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.755253273 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.750376463 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.751146082 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.752697515 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.754440792 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.750004192 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.753726706 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.754409808 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.757354169 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.750405271 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.753830203 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.754072955 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.75278103 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.752650795 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.751336645 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.75139475 seconds)
  done (took 129.065080542 seconds)
done (took 527.670816665 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.003982148 seconds)
  done (took 8.688597474 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.847196256 seconds)
  done (took 8.591855144 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.257784382 seconds)
  done (took 9.948729076 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.807430916 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.776463733 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.771058732 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.755013714 seconds)
  done (took 28.820819082 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.973314317 seconds)
  done (took 8.657316606 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.773261895 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.75045298 seconds)
  done (took 15.280815171 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.888198864 seconds)
  done (took 8.573287295 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.031275267 seconds)
  done (took 8.725453001 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.767627746 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.773357284 seconds)
  done (took 15.248247361 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.754111839 seconds)
  done (took 8.439049098 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.983769884 seconds)
  done (took 9.775392657 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.773967039 seconds)
  done (took 8.532435891 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.76246917 seconds)
  done (took 8.447876534 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.840968931 seconds)
  done (took 8.526211042 seconds)
done (took 157.940940327 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.756025553 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.755705869 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.75015515 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.750131681 seconds)
  done (took 28.697752247 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.786012184 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.786078531 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.787966434 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.796542332 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.787882007 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.78457511 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.778165969 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.779172812 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.796162116 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.788552228 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.804378863 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.789040123 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.78532961 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.780155634 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.789231638 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.789111605 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.79692797 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.78920137 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.779629551 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.790136401 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.754928982 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.797550057 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.789304637 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.754528465 seconds)
  done (took 44.54627769 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.944093524 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.825453494 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.907836652 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.806108793 seconds)
  done (took 9.171020381 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.806407213 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.807346026 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.818977172 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.857334534 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.880156847 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.817342643 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.7791171 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.775107638 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.761889781 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.807049876 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.882826949 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.80275631 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.893988664 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.753909746 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.940287655 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.754098057 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.756326958 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.806789807 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.857427714 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.870483731 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.754985029 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.806414051 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.812432079 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.802131753 seconds)
  done (took 45.29347423 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.756449592 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.763972556 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.763757228 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.756510024 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.757132695 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.756471502 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.763218027 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.758717999 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.779654674 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.758764457 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.756517736 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.757838954 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.763419541 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.757207077 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.758648496 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.770378041 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.771086231 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.757874956 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.760721551 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.765761297 seconds)
  done (took 36.922560638 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.755508705 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.603106927 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.0999866 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.006321501 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.755295291 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.758767834 seconds)
  done (took 30.667977889 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.767987967 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.761681025 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.755912143 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.813816592 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.900991732 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.763788535 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.756229891 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.766759306 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.804589022 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.82410446 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.776590768 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.784920634 seconds)
  done (took 23.167626884 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.756347598 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.760384865 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.76014595 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.772221299 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.768545488 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.766227203 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.764813848 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.7568807 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.771532634 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.773914764 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.762375048 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.768024321 seconds)
  done (took 42.874063537 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835008752 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.629469473 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216814023 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.221247621 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.281320484 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.957998523 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.754969522 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.842601753 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.757901517 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.028318506 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.146748353 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963659614 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.998964873 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.483917481 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.761726545 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.251359313 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.048908159 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986154635 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.789015659 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.402418642 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865421624 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.249164453 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.452138128 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.869870744 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.959650064 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.877127764 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.015004094 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.707022136 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.805818895 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.761452502 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762817272 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.758149871 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.027771379 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876791788 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.826493067 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760350203 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.17024655 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.465581921 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.767505659 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.463789742 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.355725591 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.881684941 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760155168 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.757195162 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.684056542 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.244782692 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848851247 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.759538259 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.457576311 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.757145108 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.764160641 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832873328 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.759034177 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.565994777 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.44252363 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.024998511 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.758520529 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760693671 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.319825415 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792036734 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.355299624 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.693079049 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.842482155 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.473325919 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.235752997 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.914173288 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.759841286 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.760229729 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.685197018 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.462058328 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.876277324 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.89493429 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.776183244 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.399741118 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068324677 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.214132317 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.816867633 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045135341 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.63054784 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.693852171 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976617242 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.707872176 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.686291645 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.608275569 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.686663187 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978473661 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795932577 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.368845044 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.799920343 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.842173369 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.764632145 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775725529 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762348102 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.974184893 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.654255069 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.760616648 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.085637219 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.024284935 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777353058 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.846037194 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.687442013 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.76212506 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004982724 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.964343227 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.967939656 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.25407949 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85104098 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.685295314 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.778875254 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.665067704 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.770882824 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.040782479 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.822121036 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.792680862 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881493427 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.710688727 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012951059 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.729782937 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.863875383 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.16237437 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.002765146 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.108890766 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.010303955 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824472298 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.770229993 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.7629068 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.473608212 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.37601116 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.978565885 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.775219618 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.267206502 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.770845543 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.765467502 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.697040633 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.384851431 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.161001793 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.851487134 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.977074711 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.702383043 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.041609317 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.689272379 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.898808826 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.768570614 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.978525714 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.414249119 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.849944792 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.011536846 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.974685341 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.981840526 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.773818728 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776114516 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856511094 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779904361 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.165734763 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.011972039 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.76537303 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.764774906 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.470233632 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.822563053 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.764959115 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.766231222 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.290728811 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048176379 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.789006921 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.766881604 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.638676402 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.775097956 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.826725243 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.766380603 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.767874912 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.279785002 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.268581553 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.770797325 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.40794695 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980249447 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.768205384 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.467996632 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95042116 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.776517476 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.042828105 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.833361912 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.691818304 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.465559815 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.467029781 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.765177087 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.692045098 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.764895376 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76817689 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.770040137 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.952564146 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.050984564 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82001298 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.431326193 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.876750323 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.771172038 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.76733218 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.765846637 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.280081883 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.808605982 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.367182481 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.773192038 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894186304 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.777995655 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.692670432 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.767254689 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.768037352 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.767353392 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.717022175 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81896866 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.428857061 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971167483 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.013704843 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.171354232 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.776053971 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.426118415 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.887681909 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.780560404 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.099279047 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396808866 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.783742672 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831197619 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.770957553 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.430171504 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.501577225 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.331090172 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067344576 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.100652922 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.127700822 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.228380062 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.983238725 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.852101335 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99369573 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.288233331 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.823058679 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.857388419 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.702701627 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.782263961 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.42100432 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.124412634 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.779410775 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984617645 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065712556 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.172925134 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905195286 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.971523265 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797000836 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.540936154 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.805870862 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.305558601 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.784836898 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.281150315 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975623634 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.850013761 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.100780522 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.853268639 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.76795029 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.119159188 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811808433 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.470082732 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.121753468 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.184292653 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.281278581 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996536668 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.77180567 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.207913499 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132159836 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.92460234 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.884673416 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.697456972 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.774596095 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.774411662 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.782871589 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.73949778 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.611746208 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.012135308 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.775149615 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996249169 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.863389412 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145464096 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.721038202 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.773257784 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769717943 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022600853 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412397692 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920755481 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.049248452 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.340244246 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.779521398 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.696459984 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.696617151 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.470907584 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.771922489 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.738025265 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000392227 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.876274231 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.450849133 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.123657391 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075800229 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.013068171 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.781354249 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.050242941 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046270408 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.262131304 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790475826 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.867962404 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.108335001 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.463174627 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.986413075 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.997247809 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30061166 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.98825056 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234313217 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.749734262 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.771386033 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.977006681 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.986440783 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.174504562 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948300888 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.481569269 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.785578604 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140472778 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838064478 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.178648115 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.96213339 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.857743784 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.77920078 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84738938 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.774813227 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.7797652 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.779405697 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783264214 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.178418535 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.896680228 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.78414595 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847263981 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825404261 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.346442539 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.77994451 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052378141 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.1394525 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.112231162 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.836036528 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.773813959 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.7813343 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.70131654 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901819559 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.212285482 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.04505355 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.890969327 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.90829427 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793301042 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.116354016 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.009629093 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081888786 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.045056359 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.656618081 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375524398 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.889384876 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.991642472 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.778571596 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.976669891 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003198894 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091119156 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34474026 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.874720597 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.96342438 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.045153822 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.133977109 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.774356882 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357276095 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.78686848 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.185725504 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.812088509 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.183129456 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034572393 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.778654647 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895483792 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.77824978 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.978303115 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.225394186 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.483073792 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.124423451 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.632786276 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.778401862 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057515457 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.114554546 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080708917 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851797396 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.779683113 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.467027742 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908898981 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.644434018 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.991365069 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.776014672 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97893774 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.485328671 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.778763491 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058813917 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080823395 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.776634155 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.693909484 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77858402 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.778069088 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.989252839 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994308523 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.024470145 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.778924127 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.782137346 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.584049557 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062168671 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.836946413 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.702862857 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.77803282 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.822093361 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.002675658 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.794571245 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.291580821 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.476654621 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060685363 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.686981936 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793160682 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.149096367 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.161547413 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11925834 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.299035103 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000834769 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.331890543 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.579682765 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152364421 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.778532404 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.152539211 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153122527 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.777783128 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.256139378 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886750987 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.056787367 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.103602814 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.789340501 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.548151472 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.811406379 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991546844 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.134755391 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708462387 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.783919211 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.826953731 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.777773352 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.762047975 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.786591604 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.710185917 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.191375253 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.615408754 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336283079 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.781207798 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.873664904 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.179708719 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.282714556 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883789183 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795005484 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.778364641 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.479234004 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.065080341 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.02188699 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.247928513 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.869951684 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.781532066 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.779490272 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.699107658 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.964471498 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.966083471 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072216692 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.088533536 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.886397321 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.781108549 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.986526291 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98275437 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.200966995 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91642435 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.874790608 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.888797799 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.72153929 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.486173134 seconds)
  done (took 1613.131836545 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.805257193 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.799700677 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.789833302 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.84830226 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.806363024 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.798628329 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.83973867 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.877491198 seconds)
  done (took 56.280603719 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.780146422 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.935292396 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.785898101 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.782734188 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.787400813 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.781214821 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.943196957 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.7929758 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.238743502 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.787878465 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.784755578 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.783673307 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.120467443 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.805313767 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.782749198 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.783431761 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.787563056 seconds)
  done (took 73.186481217 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.78610511 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.11388776 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.816394851 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.784772066 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.591178774 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.797445855 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.818127747 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.835836895 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.791530998 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.839285195 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.079302573 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.792332278 seconds)
  done (took 88.763133954 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.796619707 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.78553247 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.784799585 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.785646626 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.784830873 seconds)
  done (took 10.662522063 seconds)
done (took 2105.071919562 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.022052379 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.969444945 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.024653475 seconds)
  done (took 5.710301989 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.923683901 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.975518306 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.087854998 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.095957896 seconds)
  done (took 9.802454297 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.114377336 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.175407398 seconds)
  done (took 6.004690772 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.101798385 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.818308483 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.156726694 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.784029758 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.790069053 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.788471331 seconds)
  done (took 22.083114326 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.784479624 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.784810993 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.7837508 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.784641988 seconds)
  done (took 8.854788668 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.782675405 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.484877473 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.785436951 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.797064757 seconds)
  done (took 20.566909985 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.931464375 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.900438678 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.927428275 seconds)
  done (took 7.476306251 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.926303747 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.652598237 seconds)
  done (took 6.295701714 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.92448983 seconds)
  done (took 3.641366867 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.813385447 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.054268299 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.301535145 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.302603285 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.365514249 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.65917908 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.113631494 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.012416684 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.228019254 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.232752813 seconds)
  done (took 23.800290993 seconds)
done (took 129.05096918 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.131058323 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.817249298 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.990253868 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.14616651 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.02735186 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.995567928 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.006202438 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.127238096 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.862317884 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.896884529 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.18050704 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.020409585 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.948648297 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.80589576 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.958046516 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.803868072 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.037539771 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.18503568 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.832124255 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.066860406 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.019249928 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.790127187 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.980951828 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.804403848 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.042221699 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.94568983 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.33245476 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.812833343 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.963841401 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.346446918 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.949942299 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.212681648 seconds)
  done (took 165.764592147 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.788344662 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.787659049 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.788813608 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.78707678 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.24387694 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.788929773 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.786504349 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.787256494 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.250156941 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.239921684 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.788717112 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.235223676 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.789610891 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.787890786 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.786986275 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.787991089 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.422127527 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.788566737 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.787868266 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.787090631 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.789792599 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.064462183 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.787820661 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.072746341 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.410371773 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.790020899 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.78868947 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.789386445 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.788324255 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.788767912 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.790075719 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.788232859 seconds)
  done (took 206.580915581 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.700076133 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.790581992 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.789512671 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.789514796 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.791280279 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.791780036 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.789608049 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.789158846 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.53215379 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.522144473 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.790530227 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.790718804 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.790174328 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.788468123 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.789064365 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.78913362 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.790108227 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.73591758 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.790994591 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.79036313 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.79072978 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.359262155 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.790292908 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.395399272 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.789913632 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.793296082 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.791308328 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.790969724 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.789471199 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.790536789 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.791496664 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.791119019 seconds)
  done (took 217.516958088 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.031593375 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.790684061 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.791185066 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.781433408 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.791723269 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.790279518 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.767323845 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.04191739 seconds)
  done (took 18.508833476 seconds)
done (took 610.098610604 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.199791041 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.03728715 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.964556894 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.814759447 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.060342405 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.858418015 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.810806421 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.880010188 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.624380482 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.888165212 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.478488585 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.83405814 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.571697589 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.840991023 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.933361604 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.875795303 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.408408639 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.513298933 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.984619308 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.872655334 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.989852491 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.721098682 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.897592907 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.664406265 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.599617868 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.779151952 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.824236499 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.412533407 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.824666281 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.96571884 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.453622397 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.062345936 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.826855817 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.810248792 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.869440469 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.844628396 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.009936349 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.824173313 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.938793746 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.521355252 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.88555468 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.529815827 seconds)
  done (took 99.430895717 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.803513512 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.797689012 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.798246377 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.797999649 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.807203981 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.798945604 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.798905136 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.799174336 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.798708272 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.798881776 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.799416054 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.807091887 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.798853757 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.807072785 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.799513515 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.798451647 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.797958241 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.808082605 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.798540385 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.798472189 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.798971526 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.798938638 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.797012002 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.799299395 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.799317167 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.798797787 seconds)
  done (took 48.542246642 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.793833867 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.950267727 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.034275398 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.815467026 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.79432787 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.797374789 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.813406044 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.798397013 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.796800185 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.796761944 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.89557427 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.800719085 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.812450553 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.035652875 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.812121772 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.794143804 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.795221323 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.795435508 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.95589705 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.810530895 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.814638928 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.799929394 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.814448036 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.808874675 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.796950035 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.796785146 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.798681026 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.296721749 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.804673744 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.897106374 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.84352024 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.821659846 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.245173609 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.04585165 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.852561062 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.806834508 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.79682976 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.901555541 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.802987678 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.797111374 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.814722302 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.802533946 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.037054425 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.336777606 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.811195674 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.796029767 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.305487807 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.910160815 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.83928084 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.805585464 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.038136167 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.814328172 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.797991152 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.79864838 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.833900345 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.802887507 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.7973514 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.158960242 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.809274822 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.81492609 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.801974181 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.797602264 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.96334837 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.805921682 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.950831835 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.807078341 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.803331393 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.798465614 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.037929715 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.814185521 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.349017245 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.812591437 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.796515466 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.900261408 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.95613256 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.328022864 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.809665443 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.963218791 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.261202965 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.821923668 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.805746168 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.284308968 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.825980982 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.805797213 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.799036881 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.799276481 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.797161208 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.840734364 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.814632 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.253002461 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.348161641 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.178959368 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.826386852 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.813640843 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.799428237 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.161299144 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.807349027 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.799836307 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.029176573 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.354741885 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.813828783 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.80658067 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.325008467 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.815821718 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.819040145 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.808155151 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.045243099 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.815852805 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.842327155 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.799788858 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.806621965 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.802668116 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.818245613 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.806614103 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.799873602 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.319738236 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.920335237 seconds)
  done (took 224.186744397 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.798213372 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.804050186 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.799449322 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.803162802 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.798231715 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.800001566 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.798843965 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.798452268 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.800576598 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.798628609 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.798959661 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.798456001 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.801850296 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.80168921 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.8057268 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.800452717 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.401165854 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.799373911 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.798960266 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.800494415 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.443267297 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.80349167 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.800385452 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.799531799 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.800838708 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.801358775 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.806957591 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.804732842 seconds)
  done (took 165.401345357 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.801025697 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.914168132 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.824044274 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.831117714 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.808869725 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.801807903 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.89943225 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.819530339 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.807144869 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.800816897 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.801770682 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.861884614 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.810962915 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.898482544 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.833256598 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.907256002 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.906349629 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.809126073 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.802390787 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.80140876 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.831171651 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.810294815 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.861483008 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.924663822 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.820661002 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.914010874 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.820642868 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.80276807 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.802253499 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.915607322 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.820060587 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.862447098 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.830647193 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.821557976 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.919390556 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.917782611 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.906685519 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.906813161 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.809504831 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.803120403 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.803125604 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.804635972 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.914723194 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.821024976 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.805159724 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.918836719 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.82092301 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.804632993 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.80395408 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.803026057 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.816062454 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.820601227 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.868292124 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.931707365 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.838637886 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.827312506 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.901109899 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.932216788 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.804377682 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.901230026 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.81227149 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.91656322 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.823217393 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.80533375 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.804863464 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.807543417 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.83284157 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.909444431 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.908797807 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.812207586 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.901520495 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.84073215 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.811850018 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.804864999 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.80555761 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.916711044 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.919588783 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.840303313 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.841627643 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.834663338 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.814890642 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.804791731 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.805554033 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.822389476 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.810754219 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.917075162 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.921164679 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.811447897 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.804603938 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.805528444 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.805483943 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.829666419 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.928443838 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.841060585 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.91043068 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.871891813 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.881619756 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.822225378 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.819097714 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.81099161 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.867473865 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.822417686 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.817133379 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.092730952 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.866555774 seconds)
  done (took 195.776718731 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.194417243 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.855442249 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.86277055 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.116994362 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.153300525 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.744684822 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.856497995 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.853499932 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.877836382 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.034912697 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.928261074 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.871285843 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.841477001 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.827402422 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.8509267 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.877317781 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.861267335 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.189629678 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.060109394 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.028524962 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.844656862 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.119560272 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.162130101 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.456043994 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.903928263 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.266855118 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.421977207 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.984949807 seconds)
  done (took 59.792075256 seconds)
done (took 794.852361043 seconds)
SAVING RESULT...
DONE!
