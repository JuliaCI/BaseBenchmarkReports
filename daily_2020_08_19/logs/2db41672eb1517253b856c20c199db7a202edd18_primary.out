cset: moving following pidspec: 29901
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.677987968 seconds)
loading group "shootout"... done (took 1.229772085 seconds)
loading group "string"... done (took 0.423692048 seconds)
loading group "linalg"... done (took 7.925884023 seconds)
loading group "parallel"... done (took 0.159229182 seconds)
loading group "find"... done (took 1.395853249 seconds)
loading group "tuple"... done (took 1.965774772 seconds)
loading group "union"... done (took 12.67159864 seconds)
loading group "dates"... done (took 1.346136404 seconds)
loading group "micro"... done (took 0.199762634 seconds)
loading group "simd"... done (took 4.378593084 seconds)
loading group "io"... done (took 1.028356624 seconds)
loading group "random"... done (took 8.771276254 seconds)
loading group "problem"... done (took 1.595454322 seconds)
loading group "array"... done (took 19.529670081 seconds)
loading group "misc"... done (took 1.57344727 seconds)
loading group "scalar"... done (took 39.722926372 seconds)
loading group "sort"... done (took 3.046085226 seconds)
loading group "sparse"... done (took 11.887749066 seconds)
loading group "collection"... done (took 17.190183894 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.507622144 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125097957 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.128631243 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117685298 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146570207 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120733791 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126929 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084902262 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.929175162 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.14342222 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113288785 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.435778986 seconds)
done (took 5.339694077 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.16680183 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08966158 seconds)
    (2/2) benchmarking "String"...
    done (took 0.07948505 seconds)
  done (took 1.313251043 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064560922 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.137842993 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066334333 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066717754 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066591337 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066023159 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066275056 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066303787 seconds)
  done (took 1.680608443 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073044083 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.066824249 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06417614 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066375589 seconds)
  done (took 1.416468869 seconds)
done (took 5.802932324 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.240724427 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.104202938 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.293468976 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.391422778 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.460351466 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.090566391 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.073360177 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.06931285 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.126768941 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.322978843 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103373016 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.182686097 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089298948 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.17472731 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.007876106 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.119330568 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084237027 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.12292607 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091725513 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130023133 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.39769302 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.07624837 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.072392085 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.068739032 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.066548655 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.642022233 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.656101883 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.132235144 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082317442 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.10014989 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.115066877 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.643253002 seconds)
  done (took 10.510641799 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095496882 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.092292875 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067721841 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12475154 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094613895 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069846648 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075155622 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067642752 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09156514 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.123531241 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089064684 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.098734163 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064469976 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.066986966 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.073702265 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.19669336 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078726025 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079087336 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066327632 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080246632 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107605435 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07824235 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077332428 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077187269 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127624464 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.167964366 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096306195 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096219788 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066631074 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079358119 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114458433 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127177604 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.070954473 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.063818651 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.119797973 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093572186 seconds)
  done (took 4.556302202 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.967170525 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.092960086 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.1007237 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.619727581 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064355349 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.151201283 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.239969826 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071422141 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.33241553 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.113421617 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.145790305 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.110507753 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063057042 seconds)
    (13/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.145744697 seconds)
    (14/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.115718987 seconds)
    (15/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067549142 seconds)
    (16/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.224939069 seconds)
    (17/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.113927439 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.512594571 seconds)
    (19/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066048033 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.064932346 seconds)
    (21/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.063506512 seconds)
    (22/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.066614073 seconds)
    (23/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.065990329 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.061928936 seconds)
    (25/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068077541 seconds)
    (26/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.092969465 seconds)
    (27/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.085408024 seconds)
    (28/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.168239322 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.943901274 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.245450639 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.06596214 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.158312922 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.083737343 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.389890049 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.06793211 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.081589388 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.408290613 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.121608512 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.063654153 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.167037173 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.114910201 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063212718 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.117092986 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.076591724 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.067640231 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.067809545 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.069727163 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070421684 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.076959293 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.099489158 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.065881347 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.063963863 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162974544 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063204536 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065044471 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.066013464 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063050203 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.147839761 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065183591 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.139880242 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.062803503 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067218433 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.098942001 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067368086 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.087423057 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.098835192 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.360774977 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.027697439 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066224144 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.912477433 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07633744 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.064570674 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069189715 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065369865 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.066073324 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066093784 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.071825069 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068329164 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066854303 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.107009507 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064770574 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068209278 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.06499562 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070283223 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.098288673 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063307937 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.475555084 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.095544315 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.064687045 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.075168028 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103607351 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065559953 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.070619662 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.065789911 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065520413 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065008201 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.065130734 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.177966855 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.094319132 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.067986094 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111377575 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.020898674 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.06694432 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06499015 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.069942117 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.062449113 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068335883 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067888963 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065339546 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068074048 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066625503 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063111613 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.109531237 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.06569911 seconds)
  done (took 21.478542691 seconds)
done (took 38.656519986 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.258386251 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079150655 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079977093 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079501549 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079962025 seconds)
  done (took 1.817685499 seconds)
done (took 3.045299097 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.109884259 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.062825323 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.098212307 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.098177548 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.065200976 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.062565321 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.096260668 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.062458473 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.096639929 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.098326583 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.100462849 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.099166438 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.062741466 seconds)
  done (took 2.350101438 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.070226427 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080506554 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.081705327 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061108848 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070529503 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080049897 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.06038596 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.079493247 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.085707801 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080210267 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.082375326 seconds)
  done (took 2.055924852 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.070060699 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081354033 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.081911337 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060698877 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072218449 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079655298 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060626253 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.07964016 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.0830209 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.08014067 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.08004249 seconds)
  done (took 2.04361462 seconds)
done (took 7.664119636 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.068338218 seconds)
  done (took 1.266694922 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.524193626 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.579488365 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.067338448 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.086145915 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.187195102 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.096345303 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.220379449 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.071699628 seconds)
  done (took 8.214931751 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.096408558 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06941878 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071850494 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.066721167 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068222672 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.067168573 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.067511731 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.068313161 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.066762474 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.06741521 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.066433655 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067013271 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068323986 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.066585422 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.066658262 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.067961037 seconds)
  done (took 2.413767477 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098272502 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09608463 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071491866 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.072284265 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070514873 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.06982234 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.071796418 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.071389043 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.068497771 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070107927 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.072094742 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.070577296 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070089202 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.061384613 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.071715183 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.072646313 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.068154335 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.071925712 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071798702 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.072987198 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.072263041 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.061606035 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070195153 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070997513 seconds)
  done (took 3.062130638 seconds)
done (took 16.17348587 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116015172 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075219572 seconds)
  done (took 1.397465544 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.070396519 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070887392 seconds)
  done (took 1.365489341 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.076935105 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.060525253 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.080687995 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.070830849 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.060165343 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.059785863 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.078739824 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.060253172 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.060223354 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.060251035 seconds)
  done (took 1.890817638 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.064084175 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.069843106 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066682165 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.06915889 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.06666261 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.061718391 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.064529494 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06162072 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.069338095 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.060402458 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.065302601 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080717326 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.064878017 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082511325 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.064858855 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.065744816 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067310739 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064723333 seconds)
  done (took 2.436278694 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.062315752 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.061542636 seconds)
  done (took 1.358150356 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065889175 seconds)
    (2/7) benchmarking "second"...
    done (took 0.061291448 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063609465 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063740543 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.060730965 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060027784 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.061011936 seconds)
  done (took 1.662445354 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.418672785 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120427213 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.342413974 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.067222809 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.076355188 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250159817 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.061659072 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.06656158 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.06654459 seconds)
  done (took 2.740613667 seconds)
done (took 14.083817151 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080869578 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.083263842 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.088446622 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.422954714 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089681339 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06500114 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.111463041 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.175932726 seconds)
done (took 2.365858717 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21538641 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.390980178 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.947048888 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.064790363 seconds)
  done (took 3.637863703 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.340259419 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.083604983 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075906284 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06528682 seconds)
  done (took 1.808718493 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065593111 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070420658 seconds)
  done (took 1.37656023 seconds)
done (took 8.285680225 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064559477 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.062479987 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.062653258 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.062009253 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.062626816 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062821546 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.089059116 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062157839 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.061957796 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.061966275 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.061633226 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.061743627 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06223978 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062373596 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062058779 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061878082 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062323699 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062440052 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062214988 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062391574 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061838527 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062213295 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062123642 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.0617167 seconds)
  done (took 2.790201274 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.080911772 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.064909946 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.065800608 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.065547625 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06636347 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.065491261 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.065575062 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.064027613 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.06568302 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.064041604 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066455395 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.066482113 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.063912076 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.066433815 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063884367 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.066555072 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.065796862 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064288995 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063852869 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.066053404 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.065297276 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0641434 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.065935066 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065458728 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.066013857 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066027122 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.063943857 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064828976 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066105128 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.066237352 seconds)
  done (took 3.226915938 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.064649942 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059399612 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.059534077 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.068294879 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.05879584 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.059125472 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.059371984 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.05852217 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.059457076 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.060138221 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.059527835 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.058576694 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.059655861 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.058450484 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.058650236 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.059549947 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.062904626 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.076835872 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.060003874 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.058765864 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.062809606 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.059510206 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.058498831 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.05875302 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.059481749 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.058703429 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.058606989 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.058989028 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.059044497 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.059577652 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.058664137 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.071724843 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.063237049 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.059104129 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068610316 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.063216902 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.058746299 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06263166 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.060000437 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.058771515 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.058314319 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.058284598 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.058768285 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.058661398 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.067888752 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.059053169 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.05969811 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.059189383 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.059171338 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.058274706 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.058727163 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.06087796 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.063904795 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.060241308 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.058246965 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.059822209 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.058497381 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.059551533 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.058937561 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059057796 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.058610628 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.062216301 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.060598946 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.059317528 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076833716 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.060437632 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068243141 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.058642216 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062386766 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.061939791 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.059256726 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.074790197 seconds)
  done (took 5.64875933 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087828078 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086876861 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063392771 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063565435 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059575832 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.05922749 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066873637 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059472849 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063325995 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078635312 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059418059 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063498637 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063955111 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063101423 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059641519 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063871452 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.06745728 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059580022 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.059297856 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063290284 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.05946324 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066772237 seconds)
  done (took 2.705325119 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.142314998 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064829525 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.101892524 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075304889 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067768535 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075194728 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065298146 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065028564 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06502879 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065540246 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065434939 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065097482 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067399122 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065481176 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065258468 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065401336 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06526419 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065491684 seconds)
  done (took 2.568830625 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078128801 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065172365 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08652773 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065322541 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064613668 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064489591 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068661749 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069567009 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.064096952 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064821324 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.06928137 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064210492 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.064352061 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064423775 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064026347 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064599381 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.064046098 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064361699 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069305349 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069073204 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068777651 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068854423 seconds)
  done (took 2.745301654 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075935042 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064869982 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077190555 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065527306 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059393648 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059363129 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.064461175 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.063646994 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.064553767 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.062944917 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063667481 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059629602 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.065735393 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063826328 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.065876744 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063846687 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063619804 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064125565 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063636284 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059551302 seconds)
  done (took 2.550447908 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088237309 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062895239 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062553711 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08071854 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06232559 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.061884335 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080771009 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.062199149 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.062309217 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083215852 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062081441 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062381979 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080368444 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08027636 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.061993737 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080549206 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080950382 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081035869 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062129637 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062515396 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08327991 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.062220233 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080424409 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062282434 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062252617 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.062150673 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062007257 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081003425 seconds)
  done (took 3.236537392 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064492522 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063290093 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062863225 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062519215 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062455769 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06211379 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062546251 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062096101 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062113453 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062639012 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.062169169 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.062005571 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062196125 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062200404 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0620757 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.062055675 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06200793 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062646344 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062421237 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062138665 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06251698 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062206764 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06255232 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062701232 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062438527 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.062322163 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062230819 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062210554 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061823123 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062421874 seconds)
  done (took 3.136715629 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075108061 seconds)
    (2/2) benchmarking "in"...
    done (took 0.070906026 seconds)
  done (took 1.412567025 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063081189 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076685026 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059420828 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06967652 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067723575 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062856083 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068698191 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067929291 seconds)
  done (took 1.797038142 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.068612855 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.090664634 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.061322553 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.061925028 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.064475653 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.119557835 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.075501758 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.071105447 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076382895 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.062617046 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.061258033 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.072963886 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.060479281 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072648266 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062518841 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068980649 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066865462 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071960716 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07289563 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.059247432 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071881815 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061862148 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059431666 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.061661942 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.060870835 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066660911 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075266809 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071754403 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068503662 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058252512 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.078687797 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.059621547 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.060883942 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068801631 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.064108932 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.059446357 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.095509594 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.060230107 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.06545307 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.059372618 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071635063 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079487324 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073018364 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.077281126 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.061145511 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.061929888 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059243338 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.061769217 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062792189 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068440835 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.059598023 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066593469 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.058951747 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.06142375 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069714758 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.059661131 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.065673951 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068492666 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072128849 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069564164 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06797344 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073948044 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067787437 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.06828345 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.060413904 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077685451 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.061330449 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071872592 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.073446578 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.060823953 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073088961 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.059408963 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058402366 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.059277807 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091600962 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.061661661 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.060611318 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.059337047 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.05975465 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.060898054 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068725341 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065069779 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065980362 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063249035 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074511917 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067787329 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.059138543 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.067182182 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.076907872 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.062506404 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.05908488 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.074999279 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062279735 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.058725148 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076548531 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068255984 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.061202294 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.060318503 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062242079 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072757726 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.060719143 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058043444 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066858762 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.060837234 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.06199135 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.064127702 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066642157 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.058969184 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069694166 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.065924907 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.061939222 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.059481396 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064789384 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.061785681 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059779317 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069269763 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.060172349 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073221813 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065252475 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.07242246 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072941363 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.069054958 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073798608 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.058502042 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.057346574 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.075574768 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.198499015 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.062917301 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078767227 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061091859 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071153725 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060198588 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.061914599 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.069264048 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059847085 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062203485 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.060222855 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.066324596 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.061506801 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061800384 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064498009 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067909882 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072079228 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.061482626 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068455085 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06037316 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075709557 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069263361 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064196694 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065596178 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.061074231 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071751736 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066418188 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069395001 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059663315 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.060654922 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.060236343 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070176981 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069171331 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.061837371 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.068400495 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.063827904 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.060457355 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.059911792 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.061258306 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063232416 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064056376 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.060813811 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067507593 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068233397 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.073907212 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071715134 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068674067 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.059091378 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.059614529 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.061737521 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059489107 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.063829642 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068322468 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074012999 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071095534 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079701827 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.059576197 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068896901 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06129929 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076051932 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071907588 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060864283 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064944871 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.058875805 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061689076 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068583401 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071050676 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.073348097 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073663084 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064163474 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.063869761 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.059433969 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073977828 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.060266533 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067777794 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.068614886 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.065008903 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.059750349 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.061936157 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068677045 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064066431 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.059715129 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.074333721 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.066517234 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.05926972 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073198983 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.059746023 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.070452634 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.059592996 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062826894 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064353171 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.061883108 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068270524 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074259908 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058687346 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.060469012 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074607539 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.061819809 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061046044 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066749653 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.073504383 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063678114 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066597872 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069279349 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068680805 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063413694 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068206522 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.060317973 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.068271461 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.062817398 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070442025 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.058678393 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075811738 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057720012 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.07320489 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.059781136 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.069713797 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.059752189 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068006004 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.059855456 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.074768964 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.060726715 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.059459173 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07017623 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.057674936 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067295231 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.058262823 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.063006585 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.064341378 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.066975462 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.059861503 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.201718239 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.063335003 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069257012 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06458612 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068797937 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.069195952 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064119785 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.059457085 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067920004 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070805842 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067807539 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.061270883 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.061786801 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.060863856 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068696398 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.061780222 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.061628865 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067749288 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064682838 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065408257 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06210132 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.061795233 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.061753065 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068229013 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069515829 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077551913 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068379577 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066655153 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068900594 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.059014861 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074666685 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.059803122 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066572408 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.058899556 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.067510825 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069024584 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.060357002 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078456841 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.061458833 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068302072 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073962437 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069067829 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064327255 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078914944 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.063955794 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067841158 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069153797 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065880491 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066794357 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.061738024 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067288869 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068477935 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070256157 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.060508121 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066491156 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067884176 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061708748 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.069530043 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.061538211 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067288759 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.061623277 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.058873134 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.063895572 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070990861 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064086928 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064840526 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.060331613 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.05889779 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.060072669 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.067708229 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064136082 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068052015 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074303438 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.058634214 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.060758584 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.059447785 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065764738 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077008861 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.06947505 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066855931 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064049502 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.059044506 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06182066 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.062033838 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.060092239 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.063640246 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058892936 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.059247801 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069666198 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.061703756 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063885595 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.05999832 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.060882272 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068152513 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.065049623 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.060547817 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065666078 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.059340555 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064430292 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.059080624 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.061601554 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064156032 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.059095112 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063008725 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.069683612 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.074634439 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065633403 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06755186 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.060111825 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066863818 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073734061 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06735836 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060250826 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068112555 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.058592497 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076508675 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.067616775 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067343349 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06871966 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.059923228 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075200531 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.063014155 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.068295252 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073747101 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059723887 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.066208394 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.058384834 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.073489351 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.062914611 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.058373647 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.066564069 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065516934 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.202721622 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073439822 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.061307406 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06822533 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06631202 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.063946736 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.061866326 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.062251276 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068788032 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075569211 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.060870973 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.064634695 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067560337 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067737995 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06403317 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071583318 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067839369 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061311867 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.061968183 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063589879 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.061004621 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072487885 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060776007 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064273879 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064249352 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.059921817 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066414667 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075703153 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069284504 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069442736 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059443369 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.059537282 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.077269327 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.062990264 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.064225681 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067929589 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068725308 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072214794 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06907711 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076505482 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.060634679 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065859233 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071517613 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.060990614 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.059632842 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063133109 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.061772032 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068548845 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069058055 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067018292 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062210661 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066271186 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072284365 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.061049159 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064244831 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.065146498 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.060823216 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069728447 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067237618 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067513946 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.061293918 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.059484016 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06277122 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068165165 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066653573 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068518801 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060851648 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.067410325 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.0739292 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066674119 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063475913 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.059680233 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063860445 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068135944 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.064937713 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059580344 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064732209 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063467437 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06814572 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069063999 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06422265 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059587329 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076151549 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067954603 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.068561833 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.062018613 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.062327503 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060448273 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059519509 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.07051618 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059728407 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.061582014 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06393129 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.061514995 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.076628203 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067503005 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.075361201 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060782134 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063947763 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059247337 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069001716 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.063857216 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.059988926 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069371323 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.058877189 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07437436 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.070740649 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.06820112 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059359985 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064403286 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067397394 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073358839 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068416899 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067658315 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.062929805 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.068505111 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.060987407 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.069297986 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.058767778 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.058185058 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.068515181 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066747544 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.070982734 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.058659878 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.068280655 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.061099994 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066840458 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.066411515 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.060537222 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060456254 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.060015553 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.204418275 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064972484 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070176757 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065085877 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077060735 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.061569436 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070832674 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068828472 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.070286631 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072876927 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072421346 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068195058 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.061019999 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067193204 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.06805996 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.061003479 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064477368 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.063988585 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.081401414 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.062549815 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.061863965 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07431593 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067252715 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.060252393 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.06784397 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064557515 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.070209469 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.061228186 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.069912496 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.064707617 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.061135873 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064162992 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064466052 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.058889681 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059817264 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.060066992 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069233994 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.064286667 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.0603681 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077965038 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.06200011 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067947203 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070847552 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066326281 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.061807959 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.05897535 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.061480813 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071629137 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074754145 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063033596 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067722143 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.061590575 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068760735 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.058567727 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068025387 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084223803 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06767682 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059845388 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059968749 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073509303 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074167221 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063950194 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068749716 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068310086 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.061688571 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.081539436 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069620763 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060653112 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.070450967 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062383619 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.059247758 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.059345421 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.061568243 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071277279 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.059557677 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.062878598 seconds)
  done (took 41.095147516 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101582364 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062798439 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060090364 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.05956688 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071451652 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06095206 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059863469 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060560313 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060909443 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062717847 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.059611625 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059460371 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071290644 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073698995 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070562999 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064051079 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059597087 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060771804 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.059815631 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060390341 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070421022 seconds)
  done (took 2.742173132 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.069638866 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077338864 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07208414 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07711708 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067809776 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064526169 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071812222 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064658983 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072107744 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069716036 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.072218485 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064364624 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.070049575 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070061691 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070042464 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064626142 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072267007 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0687632 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.064292555 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071442177 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064687023 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071585723 seconds)
  done (took 2.878501604 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.063716856 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.061675953 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068227197 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.05925317 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.058806316 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06341853 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.058798014 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.063043132 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.063027195 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.063756959 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067786276 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.059982372 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.05915111 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.064772996 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.058735158 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.060305627 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.102613715 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.060647978 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.060055267 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.059101634 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.065297216 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067851105 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059272488 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.059261995 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063196971 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.063173444 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.059638461 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.062479472 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.060046333 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063280654 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.060219182 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058836698 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067391995 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066906002 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063340004 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063666488 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.062084303 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.060190436 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060115784 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.060489945 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068975987 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.062177896 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.061016721 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.062422121 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069477011 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.060510057 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.060248232 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068527697 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058918723 seconds)
  done (took 4.446008626 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074168088 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109748511 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.065536616 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090474109 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.073488075 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.067059834 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.064886266 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092128512 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06054501 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061750435 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.074410133 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.074464001 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062771449 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06465882 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.065209893 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062524168 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063848391 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061778091 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.065597079 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062345992 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065894409 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.066780779 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07286124 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.073639799 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063777655 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06158762 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.0634954 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06438046 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.073299256 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066413498 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.064451276 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065021965 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.074024337 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065208304 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06293597 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.062864596 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.07442204 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.063228771 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062589102 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060858503 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.062661446 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.064423211 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.06678314 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.074891937 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062932064 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.067034887 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062743749 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060633914 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07419389 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.062541725 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067343344 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.074708228 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064241017 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.063632875 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064650179 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.073866137 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062919807 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.061229551 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.063082996 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.073179876 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.060707221 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064125358 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.074561923 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.062182478 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.066634942 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.075145568 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.067019986 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063996503 seconds)
  done (took 6.100659654 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072946812 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093466036 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071522975 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071986024 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070730955 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070557761 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070639054 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070418914 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070434397 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071289363 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070905863 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109607154 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066574477 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07590845 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070581116 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070888491 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070454291 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070215406 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070393106 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07033257 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070269814 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071102939 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070192945 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070954723 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073030872 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066083414 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070102324 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070111757 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070766838 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070242252 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.073736291 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070336439 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070189241 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071498873 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.073499776 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070298341 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060569767 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070681668 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070710429 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070435023 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066378009 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070972559 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070179757 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066100709 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070492301 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070678312 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071473921 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07342728 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078975617 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071212339 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070785689 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071097123 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070708472 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070687199 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071327229 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.079055684 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071438887 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071474073 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070802844 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071444199 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071443206 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.079096282 seconds)
  done (took 5.850575753 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0783324 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068503794 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.07987774 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062263323 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059415628 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069323237 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059466067 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.059434971 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067478713 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.06751926 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069472472 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06922186 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07159295 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069788549 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069477005 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071562781 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069369523 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069474646 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067893131 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069375424 seconds)
  done (took 2.753078539 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074057882 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.079773745 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066562504 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070301921 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.065865524 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069094947 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.064659955 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065374265 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065548125 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065099003 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070818531 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070914034 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065487895 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069460978 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070303615 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069379705 seconds)
  done (took 2.472057156 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.068239201 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.069733648 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.069780625 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.062630246 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065911586 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062028692 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.062068951 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.059251508 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.060088916 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073712856 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060867024 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072457321 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.060799052 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.059592186 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.060932725 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06616152 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059838327 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061017822 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.060659023 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065898636 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.067546742 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061819226 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.064235673 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060916895 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065995579 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067681036 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.062560783 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064182642 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06079838 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.061043167 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066437405 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067360837 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.060470354 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.061997943 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.059713573 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061200181 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060589173 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.061249789 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.066296811 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060700417 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.059445457 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065601675 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060881024 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.061729905 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.060051346 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.061506234 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.059738853 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066154555 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.061002808 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065943181 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.060838214 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.062913396 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06128455 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.068338551 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.064246375 seconds)
  done (took 4.853480351 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076965313 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066437495 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061027488 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060356721 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.065916466 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.065678822 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064637688 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064753155 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065558967 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059835787 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065105252 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.064441168 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065319769 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064937595 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065134969 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065200309 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059563957 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065131224 seconds)
  done (took 2.551354764 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07312625 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065643944 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.069397783 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065315658 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064522299 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064235355 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059792571 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.060050746 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059791297 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064207413 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063948175 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.063825298 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059739072 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064020761 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064155822 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064875145 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.064163016 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.05980084 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064346792 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059593435 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063627359 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059907602 seconds)
  done (took 2.774354666 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.090321632 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084307199 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.124016071 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078035882 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086411032 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070356707 seconds)
  done (took 1.91146473 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092021768 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102950323 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064454965 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064536922 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074950369 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06775796 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067649097 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068018143 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074759034 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072375369 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068588407 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074507982 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074431811 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070312416 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074814744 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077633662 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06782036 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068240567 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064630072 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077625829 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068293603 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074508102 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068295587 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068420267 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068145352 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069706146 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077416948 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072691625 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070166331 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075007026 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077923133 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068739239 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07459374 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072838367 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064683769 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074710754 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068162723 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077791147 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075112667 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070409971 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064568286 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074793017 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075046008 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070284845 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078274679 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068361109 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070417898 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068508852 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06876746 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080735747 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074931897 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070252388 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07494317 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077732834 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077672505 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08068376 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072660984 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070177591 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074617491 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072934003 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070146845 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074894435 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069854085 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072854396 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077236261 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069811268 seconds)
  done (took 6.186362045 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100290517 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066588183 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068504946 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073204405 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070543439 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068108346 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067985797 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067987133 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068210558 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064867638 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102628195 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068307737 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070251287 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069990169 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068426651 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068044819 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068408737 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070243277 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065434859 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08011142 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068087941 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069968691 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07031302 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070244522 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072674174 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077427734 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068006522 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068279522 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068138244 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067915527 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070368079 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068235711 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070339502 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064584752 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069949992 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067919414 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06788024 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069968862 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06829179 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074495123 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07045035 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07812387 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068258608 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067802087 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072730578 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067855273 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068123115 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065253723 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068092491 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064824736 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072821628 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07289773 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07294436 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070337113 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068553961 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068557065 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068357002 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068287375 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068396566 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077742398 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070812354 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068223874 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080079148 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068254531 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068406186 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070315981 seconds)
  done (took 6.06906353 seconds)
done (took 125.74662141 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.212613977 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183151199 seconds)
  done (took 1.757732706 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074263849 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096711013 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.073860742 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131855522 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069548898 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103678933 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102978501 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.074085116 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069012135 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06916536 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069162887 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072316089 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134614649 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.0694506 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069335012 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072111768 seconds)
  done (took 2.735988159 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.107593591 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.183980422 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109955923 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06720382 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104243708 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074724566 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067369308 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078609171 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071063428 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070870882 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07483476 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072998462 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070469466 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07279817 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071145645 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074671743 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070843461 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074511982 seconds)
  done (took 2.90837593 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.096244156 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.085193232 seconds)
  done (took 1.571560212 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.15933986 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103343819 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.144162412 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.327292181 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.13365868 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.127852263 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.130846053 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126327663 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.108828106 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.12368493 seconds)
  done (took 2.868009641 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103997194 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.17714819 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.307003735 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118322827 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074230786 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.100733636 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120802914 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080019896 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078047229 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.07849613 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078308966 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078308767 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.096388514 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074931874 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.0744632 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075315318 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.099604117 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073740095 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073925624 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074384077 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099592769 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067987274 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074876828 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073917811 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075907443 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07630781 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06925425 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06836026 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074431391 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073893318 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076456764 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.098089686 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076237361 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.101027639 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072434613 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10224659 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.073073747 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072172332 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073926704 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072157788 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075414676 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075890114 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.076668206 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075232559 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06934687 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.073108336 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069567877 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06813189 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077712354 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068944704 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077957331 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076825369 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.100586617 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069045066 seconds)
  done (took 6.080087711 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110225968 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10610389 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069105628 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112234842 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103809937 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068300195 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.104545288 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098695639 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.106337557 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06807368 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06716551 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067660261 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075567434 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.078145049 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115209567 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107712161 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069827425 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06797359 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106648897 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106952827 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067494363 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100319997 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096897799 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105911283 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066895484 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068247079 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066448336 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067356723 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073069236 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075017531 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067071757 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07588187 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.080350557 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07466048 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066449594 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066960706 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066716973 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.075450432 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075456571 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075756655 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.074419748 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066326697 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066547852 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067316516 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067859113 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066265995 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074075856 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.0757491 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.074567566 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066920402 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067342469 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066835809 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.0676019 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075012882 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07368353 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.075719105 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075415293 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066697333 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067194718 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068498104 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076223142 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075710698 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075261828 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067689941 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076365183 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066658188 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077042921 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079799077 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066501492 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067069437 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066755509 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066619105 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067159377 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073591663 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.073459699 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06733694 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066891229 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066395404 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076572095 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073825915 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066353633 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07294404 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065850224 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066464253 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066975975 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067298875 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.073612106 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.075363686 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06776945 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066734336 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066602235 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066351953 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065420494 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07303903 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074275201 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.074951089 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.073647156 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066763644 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.074011683 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073738434 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067327604 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.073461487 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066234682 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066457354 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066321264 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073100407 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.072731583 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07400613 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065467966 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065316003 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.072331598 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.20794545 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.0678316 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075611703 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077347356 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075415331 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066737031 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080461291 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067640334 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076964043 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067594542 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077107347 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067547349 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075051245 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067348777 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066533684 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067394636 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.07469534 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068029227 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067394629 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067783586 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067318528 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.074896766 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077763029 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067909784 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07533654 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.075120696 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067724639 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074559407 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067680457 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075322246 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067433544 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067896529 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066626596 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076934866 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067290616 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067361318 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067277247 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077099764 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067233173 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077041425 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073792847 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066697997 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078152538 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076786293 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074044707 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07691715 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067987823 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067402433 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066784943 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067134879 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073523575 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075277751 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067573105 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067298333 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.073836227 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.0765556 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06650572 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.074163775 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074028924 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.074438958 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067265111 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066842484 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076993489 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076261012 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.074780144 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.074112106 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07486985 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067095426 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074093767 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074678223 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067186026 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080201544 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067161867 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.078456379 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074693299 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073435544 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075219993 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.075883414 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.076904086 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076287953 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.078625943 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066786167 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067091749 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.074693318 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067007533 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066740585 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074249162 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067447497 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067163432 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.079079103 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067260099 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076594336 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066623659 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074985603 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066053172 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067095877 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078791816 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066951723 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067114211 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073544202 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066660782 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.073569421 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075880532 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07344292 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066437105 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066726729 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074153406 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.074249888 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065745316 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065607211 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066619629 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.071892942 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07131951 seconds)
  done (took 17.965633719 seconds)
done (took 37.291986542 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208914701 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.160435593 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.193218424 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114660483 seconds)
  done (took 2.173374407 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.098762369 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.096924253 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.0775302 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.063597042 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.08222182 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.063414457 seconds)
  done (took 1.919655692 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.285578371 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.197594238 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177801277 seconds)
  done (took 2.08850826 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.219809339 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.19687598 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.472961443 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.292851355 seconds)
  done (took 2.714287649 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.134487609 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.079716259 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.062267081 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.073103994 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.110842297 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.142733467 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.088623048 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.113077207 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.073935804 seconds)
  done (took 2.366816754 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.132039921 seconds)
done (took 12.857931319 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.112725506 seconds)
    (2/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.100510924 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070572323 seconds)
    (4/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.233583287 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.066623341 seconds)
    (6/309) benchmarking ("sort", Int8, false)...
    done (took 0.174190051 seconds)
    (7/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.212242637 seconds)
    (8/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.175554146 seconds)
    (9/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074223528 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.150901213 seconds)
    (11/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.178383482 seconds)
    (12/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.202561287 seconds)
    (13/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.188788264 seconds)
    (14/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.234601071 seconds)
    (15/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.19845341 seconds)
    (16/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.200010791 seconds)
    (17/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.157108317 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.361956629 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.072502042 seconds)
    (20/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.07495584 seconds)
    (21/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073368684 seconds)
    (22/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.179200473 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072398772 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.148705435 seconds)
    (25/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.103457712 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.083942549 seconds)
    (27/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.187495535 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.142962697 seconds)
    (29/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.240535141 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.071138904 seconds)
    (31/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069812647 seconds)
    (32/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.2128148 seconds)
    (33/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.0703228 seconds)
    (34/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.083264979 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.19913721 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.115170554 seconds)
    (37/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.226049146 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.125493026 seconds)
    (39/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077640447 seconds)
    (40/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.233475118 seconds)
    (41/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.181969479 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072367417 seconds)
    (43/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.212373793 seconds)
    (44/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.06335574 seconds)
    (45/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.175534903 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.062537023 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.084182005 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.084103993 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118469782 seconds)
    (50/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.063084815 seconds)
    (51/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.147828856 seconds)
    (52/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.076020902 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 0.149469972 seconds)
    (54/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072286589 seconds)
    (55/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.215535045 seconds)
    (56/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079028004 seconds)
    (57/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.161659123 seconds)
    (58/309) benchmarking ("sort", Float32, false)...
    done (took 0.132245677 seconds)
    (59/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.155600507 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 0.064579684 seconds)
    (61/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.065366105 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.063254504 seconds)
    (63/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.071901699 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075399641 seconds)
    (65/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.064563759 seconds)
    (66/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.176078387 seconds)
    (67/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.063305374 seconds)
    (68/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07225582 seconds)
    (69/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.062285708 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.17331674 seconds)
    (71/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.073428492 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073904332 seconds)
    (73/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061237701 seconds)
    (74/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06166956 seconds)
    (75/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.062827617 seconds)
    (76/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.062083229 seconds)
    (77/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.145423227 seconds)
    (78/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.062077715 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.062892228 seconds)
    (80/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071702283 seconds)
    (81/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.337500743 seconds)
    (82/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.119626467 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09284122 seconds)
    (84/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076479142 seconds)
    (85/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.064479855 seconds)
    (86/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.161746247 seconds)
    (87/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.08375199 seconds)
    (88/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.145999213 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071655441 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.078710207 seconds)
    (91/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072577358 seconds)
    (92/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.212519362 seconds)
    (93/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064182439 seconds)
    (94/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.066328929 seconds)
    (95/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.162071122 seconds)
    (96/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07165833 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087961364 seconds)
    (98/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068069548 seconds)
    (99/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.0723534 seconds)
    (100/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.063564637 seconds)
    (101/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.06402058 seconds)
    (102/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.207963367 seconds)
    (103/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.0817811 seconds)
    (104/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072392594 seconds)
    (105/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.148087284 seconds)
    (106/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.063392923 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092680182 seconds)
    (108/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077340975 seconds)
    (109/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.074766753 seconds)
    (110/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.14233049 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137389681 seconds)
    (112/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.071952106 seconds)
    (113/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.077078934 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091543358 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088141871 seconds)
    (116/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.070558863 seconds)
    (117/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.148688557 seconds)
    (118/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071605678 seconds)
    (119/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.155436235 seconds)
    (120/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.06785523 seconds)
    (121/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.063557538 seconds)
    (122/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.210420472 seconds)
    (123/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.063192382 seconds)
    (124/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071534217 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091750745 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.08054089 seconds)
    (127/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063161307 seconds)
    (128/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066941791 seconds)
    (129/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.142653443 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08632139 seconds)
    (131/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075703263 seconds)
    (132/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073154263 seconds)
    (133/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075651219 seconds)
    (134/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.064937709 seconds)
    (135/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073085997 seconds)
    (136/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.075694258 seconds)
    (137/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.064438177 seconds)
    (138/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.064592895 seconds)
    (139/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.064898912 seconds)
    (140/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.164543461 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087341876 seconds)
    (142/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074304286 seconds)
    (143/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.0766875 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.064764358 seconds)
    (145/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073485925 seconds)
    (146/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.063090821 seconds)
    (147/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.065586062 seconds)
    (148/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.23863952 seconds)
    (149/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.083761031 seconds)
    (150/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.16558673 seconds)
    (151/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073167486 seconds)
    (152/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07478374 seconds)
    (153/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.06418067 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.089998583 seconds)
    (155/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.139846462 seconds)
    (156/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074286716 seconds)
    (157/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.064184467 seconds)
    (158/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.071711654 seconds)
    (159/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.062949931 seconds)
    (160/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065145998 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.063794218 seconds)
    (162/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.064708168 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.147813464 seconds)
    (164/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.063223661 seconds)
    (165/309) benchmarking ("sort", BigInt, false)...
    done (took 0.247343189 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.063803969 seconds)
    (167/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.067856648 seconds)
    (168/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.064443987 seconds)
    (169/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.062261578 seconds)
    (170/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.062396108 seconds)
    (171/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.207172911 seconds)
    (172/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.063108911 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.064826688 seconds)
    (174/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.064252765 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.092604064 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.147636506 seconds)
    (177/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.064462388 seconds)
    (178/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.065569334 seconds)
    (179/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.159435948 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.117036783 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091213914 seconds)
    (182/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.06286413 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.146102282 seconds)
    (184/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.069635662 seconds)
    (185/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.077836833 seconds)
    (186/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071281827 seconds)
    (187/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.204515515 seconds)
    (188/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.062365698 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.062916069 seconds)
    (190/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.063126313 seconds)
    (191/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.125821115 seconds)
    (192/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.231487401 seconds)
    (193/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066892497 seconds)
    (194/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072969334 seconds)
    (195/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092032893 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.110056239 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123772653 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087755973 seconds)
    (199/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065013402 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119168659 seconds)
    (201/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.150928196 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090533292 seconds)
    (203/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.06547509 seconds)
    (204/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.064286343 seconds)
    (205/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.073580662 seconds)
    (206/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.063443836 seconds)
    (207/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.068567505 seconds)
    (208/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.064715629 seconds)
    (209/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069405408 seconds)
    (210/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.065204578 seconds)
    (211/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.063975155 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.134227671 seconds)
    (213/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072218833 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.071891765 seconds)
    (215/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071321812 seconds)
    (216/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.092811232 seconds)
    (217/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.063934163 seconds)
    (218/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.063272789 seconds)
    (219/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072700513 seconds)
    (220/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.144645132 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071031098 seconds)
    (222/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.06475939 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075371846 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075640039 seconds)
    (225/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066779651 seconds)
    (226/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177874615 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.143416314 seconds)
    (228/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.145595921 seconds)
    (229/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.076647282 seconds)
    (230/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.07094025 seconds)
    (231/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.064897914 seconds)
    (232/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.064098267 seconds)
    (233/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.072923954 seconds)
    (234/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072347619 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.15023209 seconds)
    (236/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086985058 seconds)
    (237/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.063794522 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127488083 seconds)
    (239/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.063728997 seconds)
    (240/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074700375 seconds)
    (241/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.064894458 seconds)
    (242/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.064939256 seconds)
    (243/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.063524116 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.121316975 seconds)
    (245/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.063700262 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112487048 seconds)
    (247/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.063314757 seconds)
    (248/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.064935722 seconds)
    (249/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.065312852 seconds)
    (250/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.065799036 seconds)
    (251/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.065144568 seconds)
    (252/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.160553871 seconds)
    (253/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.064426035 seconds)
    (254/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.064519121 seconds)
    (255/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.062863287 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065641538 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06399202 seconds)
    (258/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067060927 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.063420446 seconds)
    (260/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.175891245 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168976811 seconds)
    (262/309) benchmarking ("sort", Float64, false)...
    done (took 0.132161147 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.063973208 seconds)
    (264/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.064797614 seconds)
    (265/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.172277166 seconds)
    (266/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.064600784 seconds)
    (267/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.063949377 seconds)
    (268/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077711179 seconds)
    (269/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.063265143 seconds)
    (270/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.066157281 seconds)
    (271/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.064086637 seconds)
    (272/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.209634137 seconds)
    (273/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.063303677 seconds)
    (274/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.064845233 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.063599495 seconds)
    (276/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.0645979 seconds)
    (277/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.064836218 seconds)
    (278/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091053848 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.06445728 seconds)
    (280/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070913515 seconds)
    (281/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.064674637 seconds)
    (282/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.063380527 seconds)
    (283/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081267874 seconds)
    (284/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.070581447 seconds)
    (285/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090466113 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070712238 seconds)
    (287/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.071915683 seconds)
    (288/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.062047814 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127888331 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.063609563 seconds)
    (291/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.062874173 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.121570741 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064030372 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084565258 seconds)
    (295/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.064540079 seconds)
    (296/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.148449348 seconds)
    (297/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.064123346 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075066295 seconds)
    (299/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07138564 seconds)
    (300/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.063617751 seconds)
    (301/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.064998149 seconds)
    (302/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064892077 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.0650192 seconds)
    (304/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071489852 seconds)
    (305/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.064022889 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089524995 seconds)
    (307/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06361854 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.063757581 seconds)
    (309/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063945803 seconds)
  done (took 32.602046644 seconds)
done (took 34.047576667 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089712165 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089639798 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.072182763 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.084517124 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080065822 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095205343 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072734512 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077900326 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080154406 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078338559 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077987171 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.07104254 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074380302 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074294926 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.071499441 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087772318 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079000494 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073041465 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073163281 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06321548 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072843317 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064661136 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.063686522 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071437494 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.075724043 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070743801 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073691079 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073542189 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064240253 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064259039 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068775484 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073276301 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067213855 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076417333 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072075787 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073195406 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073831284 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076852602 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.063127489 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064258324 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074681545 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064646076 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072872292 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071160658 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.069930845 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071238822 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073205438 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076081125 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087635545 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068238028 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074857299 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07573181 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075984756 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070044712 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069466627 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072811725 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07077699 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087220493 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07328579 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068413732 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074854967 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07372201 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071199566 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072754127 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072603144 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075567708 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076243547 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071234779 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07525233 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071746833 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.063855389 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072768342 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068792358 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064172776 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075705155 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.0784032 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063526361 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.068427104 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072551453 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072700681 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063502191 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068125434 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063155505 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.069106502 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068124279 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070833401 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068858706 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071875184 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06335734 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072680888 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071943818 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072532505 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.062833143 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076622678 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063167806 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070358794 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064068313 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064026024 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062826404 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069497815 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06367995 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068042435 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.071763649 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06283384 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.068459971 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077378933 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.063694892 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071663685 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062966718 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063662948 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.074794104 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074574428 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.063948304 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068377601 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063422354 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.069080252 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063032644 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063870192 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064086929 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.063879241 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.068589899 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063934064 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068249901 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.06924232 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075866479 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063281474 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068468476 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067967854 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063685217 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070308279 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064178728 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063431775 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.062839941 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077559143 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067603586 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063518238 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.068729421 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067215156 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071189632 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.061687386 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.071720562 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068961658 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.207826609 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07163041 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063262504 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076707166 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069052851 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068607265 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06345581 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064719433 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06274003 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.063802811 seconds)
done (took 12.46608503 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067058168 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.094959886 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.072584658 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.081142159 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.076743328 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065194246 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.068718394 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.082365516 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067447178 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.084289399 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086677291 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085157442 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.09233996 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063516888 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064528496 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.065243438 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.063186372 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.071527919 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.079917042 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086509977 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.094729169 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.063912996 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.073627727 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.080338524 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.075215895 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.083694758 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065654874 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.065310386 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.067483902 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.080257889 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089001175 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.064285287 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065239051 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.079483042 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.078655635 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.072177829 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065402501 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.068712196 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065599178 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064690669 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066001076 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.079706347 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.06911632 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.073525727 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.065308978 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.065252924 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065237919 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.068397002 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.075749337 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.068550465 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.072916785 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.077102186 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06689671 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064884184 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063105325 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.068820028 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064756554 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06568872 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065113035 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.064192214 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064594998 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.066918557 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.065821034 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.065220101 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068285062 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067490109 seconds)
  done (took 6.245836098 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085965636 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094997612 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082065593 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081714397 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064509487 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06501279 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.064707011 seconds)
  done (took 2.087622314 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.0676295 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.078352591 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081616311 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081716987 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.073719644 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.083410787 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065266627 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.09515543 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064283786 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.077591869 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.111370504 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08253551 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067947557 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076474019 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06497106 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.072716226 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065313811 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072914138 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073532313 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081317755 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068904511 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.09238813 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079296304 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065757661 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.085677961 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.069518854 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.064137161 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.064941544 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066299525 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.066441977 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065808358 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104397979 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.069422778 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079416114 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066179621 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.064817642 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.071180864 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068391839 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.068185266 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071385002 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.070467928 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066476296 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.063850478 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066514279 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.067573622 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.069350485 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.063506117 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066215795 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.065764056 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.076839392 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06406213 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.068935455 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068182774 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070287947 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071162107 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069402132 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072892911 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066502401 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.076729342 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.072985575 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066099604 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.074261198 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.107342679 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.0704731 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.073489561 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.069333883 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.069382369 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.070649449 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.066360881 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.067458376 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.066809966 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.073914209 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.064493139 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.067465905 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068486709 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066885663 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.069349355 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.081987887 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.081703003 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.077922861 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067322445 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066147743 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06924008 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.081926232 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069559239 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066032741 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068168232 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064539545 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069570097 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066805268 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071582282 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.066452367 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.073105322 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.067313566 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068691392 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073926639 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065030649 seconds)
  done (took 8.526625267 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070466198 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068369958 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068734088 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066250681 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066248314 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066461561 seconds)
  done (took 1.984629029 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091769899 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067628037 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080511815 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.065716474 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.101661315 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.072912416 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.073200606 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074216014 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.079420869 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078428199 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.072961479 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.075904471 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.07282044 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.0675145 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.07284815 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066741775 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.072956347 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069404523 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077834678 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067828297 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.080265392 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.067244579 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067476914 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.077552648 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.068686961 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.06633226 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06623241 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078095801 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078133817 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077184553 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.06699187 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.068390497 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073505254 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.073957857 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.072934072 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073617016 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065371118 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071649242 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06797133 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068809634 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.075119938 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067563948 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.068432763 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.071350807 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.074326136 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073548998 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071515644 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069856436 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.07281719 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.071694981 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071589552 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.066238113 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.068696929 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071501967 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073878029 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074094707 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071422846 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.07323749 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.067022255 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073504667 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.065931277 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.069242278 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074450124 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.069095255 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.069697885 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071468506 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.0738196 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.067414 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067759423 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.065821277 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07196876 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.065718414 seconds)
  done (took 6.734733268 seconds)
done (took 27.110471381 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.002599381 seconds)
  done (took 2.524880463 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.575517093 seconds)
  done (took 2.138552303 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.763321083 seconds)
  done (took 8.329316386 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.305726778 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.34390838 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.740944838 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132747749 seconds)
  done (took 3.120714327 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.728878946 seconds)
  done (took 2.305150204 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238727047 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22358595 seconds)
  done (took 2.046376273 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.350448361 seconds)
  done (took 1.917456344 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.151764629 seconds)
  done (took 2.709096054 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.23530432 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.159210231 seconds)
  done (took 1.966209009 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.478972328 seconds)
  done (took 2.045080038 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.427473652 seconds)
  done (took 5.997403867 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.242376699 seconds)
  done (took 1.849181051 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238469163 seconds)
  done (took 1.808009518 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.723147993 seconds)
  done (took 3.285210944 seconds)
done (took 43.614962511 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084815677 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084127861 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083617643 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079608597 seconds)
  done (took 1.871971742 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.075604662 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.068445199 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.072606292 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.073235725 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.070593214 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.071080578 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.072229488 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.068417557 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069994028 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.068610401 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.067304283 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.068584849 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.071301954 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.068603136 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.071178679 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.072684946 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.068483141 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.068572397 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.071008836 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.068250234 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.071738354 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.068336537 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.066563019 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.068276744 seconds)
  done (took 3.245217954 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080561006 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073564951 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074586575 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070300685 seconds)
  done (took 1.874847952 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.077419737 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.084926819 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.086911876 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.092620706 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075354723 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.076036864 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.083116508 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.083930413 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.063756537 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.08694014 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.066662196 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.064909177 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.065078767 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.086951754 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.083396979 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.061562447 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.063064232 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.075574478 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.074643967 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076842278 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.066572929 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.064042144 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07524592 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.074756215 seconds)
  done (took 3.382337299 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080959617 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.064403679 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078257014 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090923941 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093133438 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064342216 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.079312765 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092623691 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.131218213 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064157894 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070133794 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064250471 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105466312 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064152963 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080082485 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.11143657 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.114607329 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067624814 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097402724 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064079226 seconds)
  done (took 3.26338094 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078690432 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069506561 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069400507 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.064042065 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076173337 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071695897 seconds)
  done (took 2.013119985 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069842691 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068406974 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066253602 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06585409 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.0713986 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06610422 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065030929 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066010792 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066493218 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066123229 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065407507 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064785708 seconds)
  done (took 2.378240368 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.16622615 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067655887 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068917554 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067343782 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070777395 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065867892 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080710839 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067271217 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.084165184 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066044457 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065838814 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068030476 seconds)
  done (took 2.514744952 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102452559 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129248338 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09566473 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072033337 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185163823 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093290459 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.089691823 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.122640083 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091865545 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.06868231 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092657881 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135802527 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097618652 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.097764694 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081019882 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133155888 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109406509 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087706873 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112490032 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081015382 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.070111743 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131780623 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069450253 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09169793 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100577781 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.097103265 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10912635 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132710285 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083599261 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.089248911 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082682218 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.073370175 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105328223 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.084380761 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.09735445 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092969784 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097262198 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083870856 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085969648 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125386876 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153045666 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099977979 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099455407 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134537521 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077868959 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.115815715 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080031795 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097914747 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10321947 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091584238 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074763124 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093613171 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.106586937 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101317823 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.080909727 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08080034 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116600612 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.098060059 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094789062 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07895554 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106086152 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.084987848 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106326249 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265194149 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141732196 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102677678 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137368742 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125139572 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095695662 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.089989178 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.09160009 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075486625 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110919901 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09714966 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136035601 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108831306 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099184522 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.096450605 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082507863 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107681061 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123735717 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092543729 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093011544 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151003876 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107916731 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089166596 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0903066 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.144453149 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071320139 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147363407 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088692856 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121929376 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095634514 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138649833 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093443235 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.085734733 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106931347 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102709493 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089418657 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102139354 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084284943 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113371213 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091681153 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099951656 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081104756 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092514865 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086334708 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.097364027 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074483488 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10307693 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115225134 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113270722 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074440271 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107604136 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086289755 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.077371423 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092312186 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138888703 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083392165 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075158724 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150892379 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.092365381 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.115995799 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10796168 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.082809486 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272825962 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137710084 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091974405 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089158111 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07707177 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157029611 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076431258 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120905379 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081298285 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104551469 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106481239 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130923719 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139772198 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095555454 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079013903 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094829497 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.105965132 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086670091 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086459058 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077000683 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.108034324 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134761227 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.105749057 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081055921 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.093156379 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.069173548 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114423445 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075445832 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084260333 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095553398 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.086975889 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.089746912 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143085227 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.083900915 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107699729 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097952464 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.066907324 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091624009 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153351223 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083045134 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.111137176 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124581381 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083720014 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068262991 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.095572953 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.073114465 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108120727 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.092786456 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107721021 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078178571 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106720499 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.068189541 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073811274 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129111228 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101793529 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089067113 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.132865643 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10636919 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.088049897 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.102240567 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.096008107 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093574588 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101630937 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.112795164 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259522629 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.074547261 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132786785 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090646659 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.077295363 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0874679 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080206863 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.078083904 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100434926 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115337868 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0894074 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102169563 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103914038 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090285256 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.111184911 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088592416 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078897607 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13309237 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076733948 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075675564 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088486478 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.10663536 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088330903 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.134755798 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.08048838 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136656165 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092646434 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081876951 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114937537 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068987486 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069869752 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.080947372 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092244562 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116088346 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07934237 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078313645 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126435711 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132957027 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100205272 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102014998 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068446486 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090714251 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136341362 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.116456043 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081623558 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110253876 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084581679 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130063025 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096103954 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121206112 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106915595 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111077446 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.092365249 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.083548774 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.073995991 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090351593 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11112306 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090695582 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082719492 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.06753049 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074887556 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093026209 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089286359 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110693961 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086849538 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134128492 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072829656 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098705896 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104274 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259850056 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091404494 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099437547 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.093469335 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092490495 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094825202 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093172578 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.073879714 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136751988 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107116184 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078391931 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092271028 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095335125 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107373838 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109036933 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118393368 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096595081 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107358064 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124652966 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1001693 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082654687 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084708909 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.092680342 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.085363195 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081460669 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.104406994 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112626069 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099283373 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110470887 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.095933916 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.092710505 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107192579 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093027948 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088750725 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.129575187 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154766881 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.102490944 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105268851 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086041888 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107163063 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106050155 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113942431 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.11180534 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108838515 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07049884 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.075159986 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.070713028 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107126632 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079486835 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116935631 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076961034 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108108639 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097541627 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080111327 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.066625482 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102099095 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093319407 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.083251337 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132105138 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.114668587 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.073094483 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090687348 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108699416 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084333708 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137518451 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.101507064 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10043805 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071285409 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090201718 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.072406877 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.270535599 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107034308 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.078409271 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.076888311 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.070864706 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108279346 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084619695 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1183899 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089190954 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102153607 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122556202 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131181627 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087826171 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10083506 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127156887 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114658429 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.082786341 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11333337 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136277347 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.120119964 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.080779601 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.084159184 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106391515 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106723316 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102493889 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07604928 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079443632 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109689527 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113645683 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.068275501 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084875185 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071498247 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.084437888 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113047548 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095336776 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082205576 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126632012 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075343527 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108181024 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095251045 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122337524 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122252914 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146441887 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097936536 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088326797 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077288669 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134073331 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.070864988 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126604929 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112268915 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087826647 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.068510293 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084771388 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100394498 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.625574415 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109510063 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076426614 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136336227 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087479374 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117183701 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085585206 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.118786748 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088741561 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101238319 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089378698 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280539562 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084221586 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111209763 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.178454573 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110987032 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.106999567 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074334788 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.087174144 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.073791853 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.079342351 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.081048454 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088154483 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110343135 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084721729 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106623211 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.079861303 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.107103519 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090742162 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088861402 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.100087884 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081137277 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139137859 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087888515 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123642021 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107721652 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078472324 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074663517 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.08692332 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.102807173 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083119557 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095279758 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.07929387 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.076248512 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153676964 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101693379 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085619226 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103665965 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.092323294 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.086500188 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092725201 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117800666 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110911149 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073201132 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.088601929 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104543457 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079464097 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075390299 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097704617 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.069556248 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087883096 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098507688 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096844843 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08990806 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.102352087 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078004534 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087735814 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110282557 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085800494 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077616245 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076886152 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.076848463 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.076478031 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104095022 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10920039 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1142827 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108932045 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094590866 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092464133 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.079157735 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.225788962 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079613297 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.25119656 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.106653384 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076795198 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.13362656 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088402404 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089271736 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097447766 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102717483 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15413126 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075599205 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110713626 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094520701 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11892582 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088470183 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107512389 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096017899 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092682744 seconds)
  done (took 50.885277136 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.095682496 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.152245954 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.164188347 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.080829737 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.09489266 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.118821006 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.209260762 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193480449 seconds)
  done (took 2.808789533 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068676296 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.081108996 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105056635 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082675794 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065239671 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.066759014 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.207328704 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081607861 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06472099 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.102915018 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07480227 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.066746103 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.370019074 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.0646479 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.065416958 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.073600967 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06555822 seconds)
  done (took 3.391356469 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.379587415 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.601441253 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.334014905 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073656274 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.971920951 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090376331 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.279678498 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138010902 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080753914 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.5595122 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.372389095 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131269935 seconds)
  done (took 18.707201584 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077029656 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07371008 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.077913117 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.077776896 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07278406 seconds)
  done (took 2.068793522 seconds)
done (took 100.015882847 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083596032 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.171939472 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.066507706 seconds)
  done (took 1.965728897 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.085644613 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.080716625 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.080902583 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.078328946 seconds)
  done (took 2.020640309 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075546441 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075604638 seconds)
  done (took 1.840069807 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.246184987 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165677466 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.09162436 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085654434 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079275274 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.0802157 seconds)
  done (took 1.941244826 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072872961 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.070952043 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071188556 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07159686 seconds)
  done (took 1.970222914 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.068691876 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065177984 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.067529145 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.070335386 seconds)
  done (took 1.958093818 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084593248 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083412406 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077256999 seconds)
  done (took 1.932778444 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.098337322 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.097879146 seconds)
  done (took 1.881234889 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081322937 seconds)
  done (took 1.767953094 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091475277 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.09768517 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.152691187 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111588109 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.151137082 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.134600968 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.076827374 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.078277039 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.073095013 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.071604351 seconds)
  done (took 2.724235058 seconds)
done (took 22.280609189 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080200923 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.372752245 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.358351953 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08563684 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.675713653 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355063906 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.991855522 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090738948 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.098297565 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06747646 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.0835356 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.64718821 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.982161883 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.328721738 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.968938782 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.327637883 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.64820708 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067137836 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066179229 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067002716 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.971492214 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065980842 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066693674 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067148915 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647404853 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371496247 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067458597 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322053315 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066268258 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069405981 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354874714 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068383438 seconds)
  done (took 16.1632908 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071304717 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121739563 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071459018 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083058751 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069193527 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068282325 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.069795599 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067229168 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108772982 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067254964 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083958268 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066335136 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071241258 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068966581 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087674289 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067978241 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068894176 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068574166 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067756961 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071029907 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085906677 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067077457 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067955063 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068167744 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067822718 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08079301 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068610315 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067166275 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067563524 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070244743 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070868364 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069135265 seconds)
  done (took 4.076827933 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.124605622 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126686084 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072813427 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10755609 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119306633 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069102816 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150475192 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09124453 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113815606 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067563379 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084584871 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067343722 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103044524 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068972592 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088254057 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067796663 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069320998 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067981642 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067371283 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068232996 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086349298 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067869084 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068552219 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068699227 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068481084 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082339988 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068593248 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067747595 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067521551 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069967095 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071538088 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068938367 seconds)
  done (took 4.366861715 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070821258 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072548158 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.079031133 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.080418023 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.065379304 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.068326122 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.069962114 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.065816217 seconds)
  done (took 2.284596004 seconds)
done (took 28.596652528 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080252512 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068275158 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.070112142 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087365249 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072817564 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.069993801 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.063767641 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073733359 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.070574579 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071157838 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.071683124 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.065833576 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069373977 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.064604598 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.071534994 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.065448431 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.072177806 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070632962 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.070665482 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.071366473 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068141372 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071485942 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073911191 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.070670381 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.070772028 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.070207347 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.074760091 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071013113 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.066130885 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.068975318 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.067376005 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.075680249 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072954954 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.072644608 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.065663472 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066087667 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070198378 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068119058 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.072138831 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075591125 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.067694498 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075046809 seconds)
  done (took 4.650078899 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086667648 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089486705 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08184937 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081295406 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099264841 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081984404 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.085823042 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077872909 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.076293751 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08461448 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.072898059 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080177888 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07846684 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071416179 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076699699 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073048692 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.078850531 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07291664 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076970762 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077250866 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086061107 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.070723037 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.07848818 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078752888 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.072936386 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.079421286 seconds)
  done (took 3.791350521 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07441173 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086618932 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092282781 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.149881482 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111543811 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080833682 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080983319 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094652409 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.099225666 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066942814 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07110868 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092534325 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094308004 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073319439 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.108323845 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08463633 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081861662 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069115486 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073656619 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099128365 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088543047 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085261044 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097525202 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08593702 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065752702 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069091678 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072867745 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080696025 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073386019 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078065911 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070361167 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069929456 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.066950819 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077454725 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070220044 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.065264441 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090090783 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078401989 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07955786 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.109413892 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07566511 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067453503 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.095924333 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.130981802 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066239005 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.069287994 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.069629532 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078707557 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067577034 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096004214 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081217837 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066119902 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.066971618 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067737503 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067628136 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081791389 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06831536 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068199912 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078119421 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073298651 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089334411 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071524508 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085740645 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066142782 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076875927 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067506087 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067892933 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065038514 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.100337757 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072979879 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117309196 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067303371 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.064714475 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078019521 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077433012 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072600531 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066006354 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084171263 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077617518 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.069676053 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078115348 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069036088 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069263188 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09985271 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.066007693 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.065435522 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.064466832 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.069121293 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069081957 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06662971 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079556721 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.065794274 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069561688 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.080835809 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06596674 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.066740923 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.069014375 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.06767613 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066077604 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078250075 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07035845 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067333763 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078364898 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067182301 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.06954158 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080482874 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073806013 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065673973 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.067893866 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.068948699 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067587252 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070679221 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069372268 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068621202 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.072830881 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073384313 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071549855 seconds)
  done (took 10.784663212 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.168688158 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15456892 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.068182231 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148295033 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075123373 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.072154894 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.149040243 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.086451427 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066983801 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067714738 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.066584791 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.095695208 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.093204342 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.102303937 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.071473904 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067114915 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.09077975 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.099839139 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.151222497 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147020222 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090721504 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07330904 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.06928062 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068193613 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.068102342 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.074923206 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.082214301 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075140381 seconds)
  done (took 4.395103413 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078954843 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.095226326 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072913376 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.079981631 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.086917067 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067236912 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.068693668 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.06875454 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081650282 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.075307366 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066867431 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.071458826 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.069961707 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.069452405 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067673495 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07337954 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073506994 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.065688358 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070682291 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07172366 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07730577 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092603565 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071171324 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066520272 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.068862195 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066466079 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.074826873 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.077888441 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.066670329 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.081948045 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064003801 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.071013026 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.0814372 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067331326 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066526877 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067404015 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066883666 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066578374 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.067358239 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065273234 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.064850438 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.071886144 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065605996 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.074412546 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.080660448 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073351406 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.06804701 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.068840824 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.069187378 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.063610452 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069601754 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.06962118 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069140569 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074390478 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.070262565 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.06921051 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070244869 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091960353 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07285725 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066379677 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065979951 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065317466 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068578418 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.076392894 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083862017 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068520266 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065076331 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066816314 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07241235 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.080814779 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066235164 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071787586 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064175462 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.067141462 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.068856988 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069368462 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068173326 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065393045 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066447652 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066948586 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.06720885 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066503573 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.066716813 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069452312 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064768512 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065074524 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067282762 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.068146369 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07484446 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.065500128 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.070272518 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06769688 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065397353 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.06940812 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.072349044 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069735171 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081218693 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.07720787 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066999521 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065080625 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.0805498 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.069137933 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066420979 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.072897217 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.071244239 seconds)
  done (took 9.20356636 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094134887 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069868976 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085609984 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092118884 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.077417832 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.071759397 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078810072 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.067719458 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084052143 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.066034532 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075591369 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066023928 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079371057 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077336619 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068515357 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078006643 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.069536948 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086637753 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081756365 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.065461075 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076081259 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079273962 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.079866714 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083657427 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082971405 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083932467 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.079789163 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.069820149 seconds)
  done (took 3.938570506 seconds)
done (took 38.467080951 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.775097888 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.96192933 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.780496348 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.96133543 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.870971188 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.89892408 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.894578382 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.779667461 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.021883785 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.832730852 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.099655853 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.291364527 seconds)
done (took 65.94647766 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.826228971 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.977217978 seconds)
    (2/2) benchmarking "String"...
    done (took 2.056437758 seconds)
  done (took 5.743744913 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.038509085 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.609333354 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.043644897 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.777833745 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.780264817 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.222441379 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.582767322 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.237658206 seconds)
  done (took 30.965594037 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.930277072 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.007891635 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.474077501 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.508526901 seconds)
  done (took 15.679342063 seconds)
done (took 64.062364751 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.816874463 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.775497501 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.824479108 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.804132437 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.779946728 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.776150608 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.776733498 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.77792 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.80560168 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.795008563 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.77632566 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.78796768 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.776142269 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.783740291 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.438427759 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.836347345 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.792740407 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.787343963 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.799502264 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.79637406 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.781013859 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.778873592 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.252002907 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.964854155 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.389166531 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.98371045 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.063899123 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.182506354 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.787846474 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.777500605 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.821622607 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.980782924 seconds)
  done (took 203.980472147 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.77953887 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.826068652 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.887233988 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.798668973 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.193030028 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.954560297 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.881154222 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.246543683 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.784800021 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.797876028 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.981045278 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.779749491 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.018905999 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.761262349 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.817841157 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.875452892 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.00808262 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.006129388 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.818218899 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.928334758 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.79404153 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.831070553 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.814177844 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.955339031 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.818390826 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.880123828 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.803939131 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.789899401 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.969030279 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.977942597 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.78283728 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.822745227 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.946496631 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.653211665 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.801379453 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.805497861 seconds)
  done (took 170.304052847 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.973714067 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.788694925 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.780803439 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.838004367 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.904567927 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.782113663 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.438318787 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.787960995 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.14961938 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.783447611 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.782889444 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.782288042 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.783192662 seconds)
    (13/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.782473445 seconds)
    (14/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.781993499 seconds)
    (15/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.796278202 seconds)
    (16/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.863841323 seconds)
    (17/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.781535515 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.798827392 seconds)
    (19/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.785762601 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.80835548 seconds)
    (21/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.781306124 seconds)
    (22/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.782495801 seconds)
    (23/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.783469424 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.782857253 seconds)
    (25/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.783625374 seconds)
    (26/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.782660294 seconds)
    (27/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.784081188 seconds)
    (28/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.142013248 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.024222046 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.781675516 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.785322692 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.305878703 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.794558698 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.928091626 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.783972932 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.876408036 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.836540391 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.902780319 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.783718766 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.001621079 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.856899978 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.78191381 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.783899624 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.849983555 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.794350491 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.780835707 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.785442155 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.789859147 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.849878567 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.052893163 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.786173235 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.906915196 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.27090274 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.782614247 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.786174943 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.785311816 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.785020735 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.387857898 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.785961573 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.786899438 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.790465261 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.789662192 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.785893938 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.78567328 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.173140133 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.852729994 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.974374536 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.255176032 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.786961281 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.962216431 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.859418017 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.78624062 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.786883293 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.785004243 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.787474744 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.784936222 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.788375059 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.907301787 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.791473796 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.918302771 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.866641241 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.906646621 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.7881817 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.796050724 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.614696019 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.85707266 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.819958899 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.61614177 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.787559959 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.162494953 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.571243817 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.78683681 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.787642317 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.800504333 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.788088067 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.788867512 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.788729657 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.869949857 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.784169905 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.909143271 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.508411103 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.099861688 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.789319885 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.787438266 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.793275042 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.788611774 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.870923308 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.906613436 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.788622186 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.856168238 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.791574368 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.790907069 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.884900436 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.786843368 seconds)
  done (took 401.438028429 seconds)
done (took 779.472919149 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.38074238 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.349424858 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.445422034 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.368327712 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.34170664 seconds)
  done (took 13.603661762 seconds)
done (took 15.325194517 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.80299799 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.795863099 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.847874841 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.874505533 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.804286044 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.805897709 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.871260095 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.807611248 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.837783523 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.841824954 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.874894482 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.874125299 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.811560769 seconds)
  done (took 25.569786496 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.79835645 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.94687226 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.01934973 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 2.02016418 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.798449383 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.03260927 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.856617081 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.938615204 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.944713148 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.029155463 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.029066116 seconds)
  done (took 23.136636034 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.799026772 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.950221024 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.025152063 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.834656409 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.798815788 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.031062733 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.86254597 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.939142204 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.948797457 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.026891288 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.034751533 seconds)
  done (took 22.982819063 seconds)
done (took 73.415740388 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.794340213 seconds)
  done (took 3.514503772 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.812031859 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.956327412 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.793005563 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.790139561 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.792999288 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.792714174 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.791708877 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.793938781 seconds)
  done (took 16.243270001 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.794453341 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.792282402 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.795082328 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.793580887 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.79283228 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.794378146 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.794330151 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.792853965 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.794367849 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.793686774 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.794353596 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.79371868 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.793907327 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.793284748 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.793908003 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.794040987 seconds)
  done (took 30.424011569 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.795731774 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.791976656 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.793313169 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.792679532 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.793164887 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.79484793 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.796404511 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.795785699 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.795553745 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.793848463 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.795001691 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.794898151 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.795303867 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.795904182 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.796985511 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.796328773 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.79525917 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.795745064 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.801144077 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.794341351 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.795198907 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.795397157 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.795238723 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.795047373 seconds)
  done (took 44.808596869 seconds)
done (took 96.72603894 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.592757983 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.592426734 seconds)
  done (took 9.909595003 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.79578161 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.796450011 seconds)
  done (took 5.321491671 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.795196696 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.796362502 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.796373736 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.796446763 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.79660737 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.796815445 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.79640539 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.797399887 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.797604305 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.795978122 seconds)
  done (took 19.687451002 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.797252236 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.7975864 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.796759395 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.796733455 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.794793558 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.797159306 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.796683337 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.796564232 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.79555789 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.796472465 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.795729112 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.795994049 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.79733738 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.795662346 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.797716619 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.796563705 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.796474536 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.796248688 seconds)
  done (took 34.063333826 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.797121446 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.798803367 seconds)
  done (took 5.321191057 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.797140272 seconds)
    (2/7) benchmarking "second"...
    done (took 1.798243836 seconds)
    (3/7) benchmarking "month"...
    done (took 1.797721198 seconds)
    (4/7) benchmarking "year"...
    done (took 1.797809229 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.798056787 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.798348752 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.799856423 seconds)
  done (took 14.311230523 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.796823461 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.944304096 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.999339691 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.646296924 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.798486993 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.801407652 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.159676688 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.803044597 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.804232435 seconds)
  done (took 20.478484667 seconds)
done (took 110.819014276 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.628662798 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.797499663 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.114378925 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.877375855 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.814882704 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.13441655 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.825628381 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.444771012 seconds)
done (took 42.36760551 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.877668295 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.794754281 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.824516424 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.824971626 seconds)
  done (took 22.171530412 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.8000628 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.14090602 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.826049475 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.674814781 seconds)
  done (took 22.193194217 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.18509527 seconds)
    (2/2) benchmarking "read"...
    done (took 2.149841298 seconds)
  done (took 6.066796266 seconds)
done (took 59.041882536 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.800089197 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.798535059 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.799690804 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.798127064 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.798613834 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.798704134 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.799047625 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.797902069 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.798781412 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.797928211 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.798247949 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.798451177 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798773787 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.799599865 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799381291 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799844339 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.800722668 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798182269 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.798854916 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.798955422 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.800779679 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.798672503 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.79757319 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.799124719 seconds)
  done (took 44.902262122 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.800311148 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.79924492 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.799598726 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.799971194 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.800695113 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.800176207 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.800067919 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.801435934 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.80126035 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.800321592 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.799984089 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.805116953 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.802840001 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.801991095 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802928793 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.801255917 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.799760052 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800300329 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800136138 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.800489278 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.801237854 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801387011 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.80412929 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.801907195 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.801514251 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.801412792 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.801971914 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.802038425 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.802754891 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.804137776 seconds)
  done (took 55.770977086 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.802057326 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.801848591 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.802756392 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.800817214 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.802779511 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.804520282 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.802253659 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.802518958 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.803467521 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.803431773 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.804412786 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.802734483 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.802417421 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.803909427 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.803891904 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.800548291 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.80262039 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.802683585 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.802007509 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.803613815 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.802980628 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.801678148 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.804176522 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.801932441 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.802272892 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.803112918 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.803237524 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.804386206 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.804840981 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.804098897 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.805375356 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.805114372 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.803971411 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.804569808 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.805545857 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.804228937 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.804848902 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.804306862 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.805164042 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.805882917 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.805488943 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.805206161 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.805401614 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.805807333 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.802901939 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.80513002 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.805262931 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.804456516 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.803126641 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.804345702 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.804092444 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.805275848 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.805677839 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.805365137 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.805130742 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.804603937 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.804215098 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.805592253 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.807378403 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.806222288 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.806657694 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.805150638 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.803276389 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.804653621 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.806655894 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.804682197 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.80623119 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.805100711 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.806457181 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.805621272 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.803732246 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.805460695 seconds)
  done (took 131.633481732 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.806324392 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.804875818 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.805289305 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.804688043 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.80453788 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.80473261 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.805963127 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805850046 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.80619509 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.806212922 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806169568 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.80595949 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.806693059 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.807160097 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.807258078 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.806822532 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.807195826 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.807165041 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.806530271 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.808001595 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.807096112 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.807940633 seconds)
  done (took 41.472341466 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.807754778 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.807531635 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.807737548 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.80795707 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.807136458 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.807730907 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.807167338 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.808536233 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807847379 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.807293715 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808238918 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.807966736 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.808042961 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.808064481 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.808018626 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.809096709 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.80783128 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.807578363 seconds)
  done (took 34.276580331 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.807267783 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.80904281 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.80820553 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.809171572 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.809396524 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.807081454 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.808262317 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.809886633 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.810612565 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.809039836 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.808401029 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807686534 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.809824199 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.809641091 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808873345 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.809179222 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.810508159 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807004633 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.810354657 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.808758183 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.808286311 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.808446579 seconds)
  done (took 41.531326506 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.809165861 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.811054784 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.811091584 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.810180718 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.810810792 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.809639507 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.80970803 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.811865668 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.810751547 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.809323415 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.811629541 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.812715549 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.811817611 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.811229912 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.810378567 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.812543382 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.810975753 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.810892143 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.813640803 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.812343967 seconds)
  done (took 37.958473831 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.810999789 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.811579608 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.809653811 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.810445128 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.812283394 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.81181449 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.811121294 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.811076689 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.810969464 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.812424759 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.810817983 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.809658432 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.812173092 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.81015471 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.809754557 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.81107666 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.810681646 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.81082943 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.811097782 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.810145349 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.811990615 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.812436943 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.810616132 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.811363583 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.811698284 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.809977714 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.811369482 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.810390692 seconds)
  done (took 52.447423168 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.810150219 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.812029731 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.812384026 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.812602511 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.811792069 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.812157544 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.812098312 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.811100365 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.812032069 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.812275325 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.812630595 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.810722029 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.813471144 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.812268435 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.812031317 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.812913302 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.812883166 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.814035574 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.812633874 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.812448366 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.810623725 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.812469412 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.811829339 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.813020704 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.813043152 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.811964058 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.812285755 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.812976205 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.813302212 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.813303639 seconds)
  done (took 56.109793938 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.833516161 seconds)
    (2/2) benchmarking "in"...
    done (took 1.834135338 seconds)
  done (took 5.405224742 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.814025798 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.813249251 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.814862351 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.812763539 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.814554568 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.813369733 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.813255831 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.813506079 seconds)
  done (took 16.250628573 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.814870012 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.816833464 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.813754257 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.814127565 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.81354472 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.82243869 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.815685514 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.815454299 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.816263266 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.816976112 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.818876346 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.81780859 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.82272938 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.820964591 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.816434761 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.814495124 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.815703463 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.818019376 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.816638787 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.815831285 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.817714206 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.814008759 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.815755908 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.814729234 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.813824806 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.817960342 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.824057659 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.816031841 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.816040108 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.814775325 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.824679017 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.817901662 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.818293995 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.819733634 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.816340324 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.817783293 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.824765791 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.815765678 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.815329799 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.814649501 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.816788828 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.818466403 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.817670376 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.82384441 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.816052053 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.816121469 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.816259375 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.816041035 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.816002388 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.819610334 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.824030278 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.815340524 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.818121164 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.81757874 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.818901772 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.815361986 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.817121885 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.816849219 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.824646189 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.823384122 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.818000036 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.834748779 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.825326563 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.813873808 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.815427058 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.826515773 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.842169313 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.817900764 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.819591081 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.816894615 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.826864206 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.818347215 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.818390506 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.816586772 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.829089624 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.827035603 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.817180906 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.818779445 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.818086863 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.816385199 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.819343797 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.817328103 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.81716676 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.81872884 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.82795813 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.844389689 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.816587126 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.818160415 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.819665925 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.820772019 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.82315174 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.824021188 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.819516838 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.820374106 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.820582755 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.823370057 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.819323252 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.818017555 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.819823533 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.829723274 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.819912869 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.8188051 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.823387813 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.825760976 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.819323302 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.818908534 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.817643265 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.819197994 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.827775716 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.817466869 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.819886725 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.820875513 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.821800958 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.82341058 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.819183337 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.824137262 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.82835141 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.828719633 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.822180615 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.826842748 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.82515003 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.824399672 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.831945915 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.846361638 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.822770559 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.825123354 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.826358433 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.834765892 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.824536813 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.821335325 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.823684558 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.821694788 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.822943392 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.824335971 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.822460596 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.82184575 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.824807655 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.82340403 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.822493104 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.822952134 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.82736154 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.822607362 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.824846683 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.822224323 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.826055474 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.823041211 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.826742062 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.829853442 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.824419421 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.821400215 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.824074208 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.825233243 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.825401774 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.824690424 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.823750522 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.823457665 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.82155911 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.8248107 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.823442873 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.823749729 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.823389924 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.824612045 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.828874605 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.824628496 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.823661323 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.824944304 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.822524944 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.823698192 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.824728997 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.825179813 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.826490607 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.823791969 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.827368926 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.825427917 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.824234573 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.82439661 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.823333459 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.825754721 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.829477612 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.836784433 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.827682583 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.834212498 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.827269015 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.834805928 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.825013086 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.827646308 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.826642666 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.826372759 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.825300937 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.826248618 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.825584538 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.831269737 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.845657477 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.834729217 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.827734768 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.827288926 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.83286526 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.83237201 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.832607642 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.827357267 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.827558121 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.828101071 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.825780435 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.826240515 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.826624389 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.829612233 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.828100352 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.827031543 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.831859016 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.82700585 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.826874251 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.829067808 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.827560453 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.82902994 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.829189471 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.82736874 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.828190127 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.827643996 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.837115113 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.829375616 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.827960852 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.829044708 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.829015911 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.829139873 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.829657645 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.828276672 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.82996658 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.828438999 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.827929459 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.835122366 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.829358298 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.82754663 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.8281558 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.827460996 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.829442925 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.829021629 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.829194976 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.836623967 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.830498537 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.829096872 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.832992297 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.828446718 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.827491131 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.82665644 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.828567829 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.827817985 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.828756956 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.828359647 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.829927611 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.835942935 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.828956987 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.829479823 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.829780986 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.832935376 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.832965582 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.830358624 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.827753239 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.833053231 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.839005899 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.835552428 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.829798106 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.834522811 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.829259821 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.831538256 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.83380732 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.829952755 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.844339895 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.839890173 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.830239723 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.832914913 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.829211108 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.831956053 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.830271851 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.830273964 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.837935838 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.8320262 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.829853123 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.835299261 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.830143438 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.828735743 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.839156872 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.832192816 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.833944705 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.8326072 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.832611349 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.831210194 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.830463255 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.83338694 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.832602512 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.831647434 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.836739876 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.831283965 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.832811215 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.832181794 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.842227853 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.833245444 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.833268316 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.839707484 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.831940568 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.834501419 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.83277717 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.833094894 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.831729686 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.831213925 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.834653077 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.834672134 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.832601057 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.837399614 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.843370537 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.835909485 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.843040514 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.836677663 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.8435632 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.832802007 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.833019381 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.83191666 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.836606117 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.840456676 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.832470565 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.83421947 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.841454412 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.835133605 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.833338295 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.83488631 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.833776212 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.831603397 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.833191715 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.83520927 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.839785146 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.83700868 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.834591186 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.833070459 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.834537694 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.832058411 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.836476598 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.834079534 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.833607216 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.835218196 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.832535818 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.832823116 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.834126528 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.834609635 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.832643866 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.835369376 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.835492244 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.841567722 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.834309889 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.836247115 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.838286769 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.833633247 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.844227518 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.83511345 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.834058645 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.837168549 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.836874801 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.840289556 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.835432783 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.834396385 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.837717769 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.835524837 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.838309102 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.84921001 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.845852799 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.839530731 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.836621384 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.834062282 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.835023159 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.844500175 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.862008022 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.836021358 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.836836505 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.841162539 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.843154126 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.836768175 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.842128131 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.838838511 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.846182024 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.837119287 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.836826876 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.841886834 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.849473574 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.836212051 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.837205501 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.83704361 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.842142009 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.83976898 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.836080136 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.840813072 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.838662953 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.839755194 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.8496103 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.836619011 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.839714175 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.836905475 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.837452966 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.83690448 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.838636325 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.837539613 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.83833011 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.837105166 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.838020249 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.838571747 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.841110401 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.837632523 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.841624821 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.848513366 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.837667278 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.837049245 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.842240226 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.836739326 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.839571125 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.83751902 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.839630851 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.841716045 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.838453622 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.838574422 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.842116644 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.847958424 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.839896327 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.838585535 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.839012035 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.843382394 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.841750778 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.837952588 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.841021888 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.849590197 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.842989207 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.852753045 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.850237078 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.836822071 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.839494576 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.84700571 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.846883633 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.837658193 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.840808439 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.838511836 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.842284404 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.839971303 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.840525966 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.83856116 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.842274868 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.845422663 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.840141123 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.840720091 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.839925686 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.838567769 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.840872553 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.840811075 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.845267989 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.840191278 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.839248293 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.840674956 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.839550999 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.839444879 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.842282321 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.837712217 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.840457374 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.841571713 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.841396225 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.845233323 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.839350663 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.839933643 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.843028898 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.840407162 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.84212204 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.840301856 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.839895297 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.840954278 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.843597014 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.849608314 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.840549752 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.841564242 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.843106422 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.843434203 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.839391352 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.841863515 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.841380985 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.841646218 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.850208873 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.843276018 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.839662444 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.843170996 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.841375473 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.84703284 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.843565969 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.844663065 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.842983252 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.843095013 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.843468361 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.846165074 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.851744983 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.846371521 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.845051972 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.851834982 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.846331717 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.844601523 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.842265437 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.841154514 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.843909973 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.844442333 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.846003738 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.843597455 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.843732749 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.841863255 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.844006255 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.842521528 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.844439648 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.842901751 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.843855094 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.845274782 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.851791817 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.852763522 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.843340418 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.843810541 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.843968953 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.845865408 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.856225972 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.843622185 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.842683474 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.843510014 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.845388323 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.845875997 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.851640205 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.854152703 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.847895756 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.84409114 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.849252277 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.861807713 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.846438092 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.852243668 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.877837406 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.847533583 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.844187299 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.846612499 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.845372632 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.845611886 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.849095422 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.843502433 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.852864393 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.844467612 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.846534074 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.853218732 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.845670852 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.844466033 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.845170924 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.847007141 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.850406692 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.843221263 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.852748377 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.84587561 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.844978232 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.8449995 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.847884328 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.844849084 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.846187251 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.843586094 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.845987217 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.845412767 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.845196249 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.856514141 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.846721451 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.847146637 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.857956984 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.857767296 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.846298212 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.847120526 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.845056807 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.852147856 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.84900294 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.847684321 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.850284315 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.854479889 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.848752187 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.856066287 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.846870057 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.847286596 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.84736191 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.848838595 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.844434453 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.859935589 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.857542621 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.847954695 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.849525488 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.853839935 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.847793585 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.854677185 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.85465431 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.848751673 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.848584361 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.846500402 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.848060227 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.847514733 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.847888651 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.851069223 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.856828418 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.847367203 seconds)
  done (took 1094.759564131 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.847278387 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.84753064 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.848212369 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.848673896 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.848116061 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.848119309 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.849040488 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.849831949 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.848867484 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.848597669 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.848352847 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.849868691 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.849074882 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.850722971 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.848036391 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.849488853 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.849297416 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.848002101 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.849412612 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.848858304 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.84979959 seconds)
  done (took 40.599308544 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.848590604 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.848878358 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.849294492 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.847953721 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.850807777 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.849781927 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.849286994 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850354768 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.849303166 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.849150407 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.848498957 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.850674866 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.849736819 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.85075998 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849292927 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.851003938 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.850874455 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.849216852 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.850626487 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.849665207 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.851234418 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.85080212 seconds)
  done (took 42.470404471 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.848317947 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.849183086 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.850384091 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.850427028 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.849773895 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.849842108 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.850154072 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.853339619 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.850133484 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.851636102 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.860189418 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.859425989 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.850596851 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.856760652 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.851739144 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.851475152 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.99784018 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.851942123 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.851142341 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.852121989 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.851381542 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.857580474 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.853770037 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.851083612 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.851377334 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.851135542 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.851721045 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.850702921 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.850317297 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.855211116 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.855942345 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.852825254 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.852680353 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.855097902 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.854677218 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.852402428 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.856002877 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.851836418 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.851896584 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.851592852 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.861961619 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.879258758 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.852938579 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.852210143 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.860618591 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.852725542 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.853399718 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.8560704 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.863506854 seconds)
  done (took 92.756510216 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.853600674 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.855257974 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.853203878 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.856152234 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.853783495 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.852708433 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.854051501 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.854585642 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.854935887 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.854549118 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.85493198 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.854621864 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.854560422 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.854622404 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.854431897 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.854341521 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.854016836 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.853192953 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.852544546 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.854622775 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.855677532 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.856206136 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.855672137 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.853403694 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.855302728 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.855222245 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.854616164 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.854613869 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.854728741 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.852741079 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.855381019 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.854240635 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.855793282 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.854432624 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.85345773 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.853493732 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.855084158 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.854529738 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.854651934 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.854814167 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.854678189 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.856146859 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.8541718 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.855461678 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.855648686 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.855883563 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.854036429 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.854696387 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.855668597 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.856356749 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.855575175 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.856307891 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.856893621 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.856134775 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.855981077 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.858239771 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.856311428 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.855617262 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.855492278 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.857387393 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.855267443 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.856432484 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.858133379 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.856263945 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.856948905 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.856252308 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.85739568 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.856339855 seconds)
  done (took 127.929135955 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.854805144 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.855992781 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.85662574 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.854867194 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.855448119 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.857072646 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.855090054 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.857133443 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.855205243 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.856709488 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.857182277 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.857718464 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.856108277 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.857910666 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.856012896 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.855845443 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.856285453 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.856095567 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.856348678 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.856403465 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.857157342 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.856131094 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.856925439 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.856954079 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.857257267 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.857626181 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.856550456 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.857742821 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.857430892 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.856290908 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.856463656 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.857353079 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.857526141 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.856631355 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.857528839 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.856414739 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.857514095 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.857438127 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.855700451 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.856443154 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.857964858 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.857420518 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.857907778 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.856745435 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.856212897 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.857347563 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.859245227 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.858149168 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.860120596 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.859183824 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.858996687 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.857041416 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.858593431 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.858461685 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.859082866 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.858666915 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.858755709 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.857896164 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.859001877 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.858908866 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.858314479 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.858188281 seconds)
  done (took 116.931313438 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.858654149 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.859059088 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.861508131 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.861553487 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.862375678 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.861244736 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.861384518 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.860704147 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.861505854 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.860637657 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.860444874 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.859238307 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.863191992 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.861531115 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.861256918 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.861821538 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.860422957 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.861219649 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.863109711 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.861425278 seconds)
  done (took 39.007573841 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.860157801 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.861108985 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.860785454 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.862257585 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.862321783 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.861647185 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.862642224 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.863809906 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.861659136 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.862193387 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.861552718 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.863265325 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.862698607 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.865073886 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.86149671 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.863427491 seconds)
  done (took 31.582379211 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.863778179 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.861879243 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.861280134 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.862239247 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.862240822 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.863915575 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.861730972 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.861505914 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.862061435 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.861794455 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.8626106 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.862335574 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.863354988 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.859715378 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.863066506 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.861296879 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.863351155 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.863893011 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.862592518 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.862664109 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.863590918 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.860988073 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.861977376 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.863068938 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.862528058 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.863834378 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.862505613 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.862752111 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.86426179 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.86274216 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.862990768 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.86381735 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.864045862 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.863631888 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.863028072 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.863277659 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.861208171 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.864585852 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.863936136 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.864974455 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.865686107 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.864047382 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.864651013 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.865211205 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.864486776 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.865748964 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.865025784 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.867390676 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.864482504 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.865463841 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.864499116 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.863900555 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.865502624 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.864293782 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.864828647 seconds)
  done (took 104.274306081 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.864638506 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.86553056 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.863997347 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.864360099 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.86214709 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.865278601 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.864151184 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.864725544 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.864826151 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.864310887 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.863693323 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.865112447 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.867235862 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.86448541 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.863608093 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.861883657 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.863066316 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.862798541 seconds)
  done (took 35.345477712 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.86322605 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.862833578 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.863645381 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.863962849 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.863101094 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.861853812 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.862129787 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.862936856 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.864013671 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.864935014 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.861522155 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.86171598 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.862508163 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.862824332 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.860731083 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.863893307 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.86121327 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.860499106 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.860624074 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.8619885 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.863487093 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.861849419 seconds)
  done (took 42.764101911 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.862541651 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.860920091 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.878577775 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.888488166 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.88575517 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.905341819 seconds)
  done (took 13.068588732 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865819739 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863859774 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.860950066 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861204608 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862277438 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860391942 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860746411 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859479578 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860820675 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860944519 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861357611 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861638216 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859868213 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860513332 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859992254 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858925085 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860154079 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862321999 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859943767 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860375742 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860212882 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859597033 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860492758 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859830722 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859737948 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861094082 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86041694 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860150915 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86233037 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859409128 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858795691 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859628136 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862190928 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861019381 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858632001 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859179205 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862293705 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859211727 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862922281 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857927343 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.85925657 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860555675 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859296094 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859704347 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858544642 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857888947 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859180403 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859373399 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859659673 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863847335 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856598966 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857859194 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858346836 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857232138 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858893674 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856372051 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858531312 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85773376 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855877691 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857275465 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85945108 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859011459 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854600279 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857748454 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855380077 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857353657 seconds)
  done (took 124.534338186 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858354597 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.856429259 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857471598 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856840907 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858867488 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857766314 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858649364 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858225167 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857066555 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858503592 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85891368 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857673014 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857778051 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85786699 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858882713 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859262726 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85867147 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85778573 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85695249 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859965 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857864514 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858716765 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859464074 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859073988 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858254759 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857917954 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858233008 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859238277 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858678656 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860193332 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859407412 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859735548 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858775899 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.858791934 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858499036 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860105173 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860331101 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858354338 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857301222 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859101173 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859571107 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863441215 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859423726 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860043421 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858137451 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86148217 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860924151 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860747201 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859534252 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860028828 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859988383 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861707473 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863122176 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857828268 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860134544 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858688755 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861039353 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860391804 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859602291 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859025522 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86040205 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860177377 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860396648 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86179208 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859594281 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860070546 seconds)
  done (took 124.491850179 seconds)
done (took 2550.01407661 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.934802098 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.887062285 seconds)
  done (took 15.606812807 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.018176105 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.974147818 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.860649507 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.883092703 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.85532324 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.88363233 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.861368801 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.858866674 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.860938471 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.86121988 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.859310141 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.046586534 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.859094349 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.858999297 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.859026426 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.950343275 seconds)
  done (took 52.138480611 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.865224087 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.861143464 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.87620237 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.864599376 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.863731524 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.876362515 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.893822318 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.871127495 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.895389732 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.87345686 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.931924684 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.87362222 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.86279369 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.913614545 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.873096519 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.877172483 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.963925149 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.941398764 seconds)
  done (took 35.763864207 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.942488877 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.870460663 seconds)
  done (took 10.603009752 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.853194052 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.861363639 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.873566587 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.857912617 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.873690722 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.878058137 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.871508386 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.872706146 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.855754852 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.883754292 seconds)
  done (took 70.467762624 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.859558017 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.857764311 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.855204562 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.853462961 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.852617338 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.854418505 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.854979827 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.856599149 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.551811726 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.895431681 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.86276172 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.864359086 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.852805337 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.853809372 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.851652244 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.880870251 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.960762006 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.849293612 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.853102128 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.86033823 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.85492548 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.906077684 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.870497187 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.856122361 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.885358044 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.547870276 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.863587472 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.863743533 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.969472372 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.852419223 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.85574171 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.036434028 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.861283022 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.321674796 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.136619918 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.854726409 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.864724941 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.859293269 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.850464404 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.978590873 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.855120806 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.857283779 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.774410573 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.105995683 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.94900468 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.900074753 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.199302805 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.862526939 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.854352478 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.888354329 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.854682079 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.852456247 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.869978471 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.370716983 seconds)
  done (took 132.049486264 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.85088084 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.196869377 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.0159945 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.854208145 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.134570396 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.054322145 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.848386436 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.894713733 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.849810963 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.077979247 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.102750169 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.957213798 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.8471577 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.847606056 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.851198409 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.843604943 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.004481664 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.920732638 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.844827367 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.845989287 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.875950824 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.09219481 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.973312708 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.84891774 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.871582257 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.061798426 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.968789993 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.954700216 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.621952408 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.845207055 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.910557376 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.850988305 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.846511519 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.844858276 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.001811583 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.938013523 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.9266358 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.847415935 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.849133868 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.847755106 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.59452125 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.046994681 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.943891125 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.979100259 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.100013195 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.053903779 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.627475546 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.848031599 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.581232246 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.00831554 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.074021685 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.078030058 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.964442591 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.856887392 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.185123541 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.850331782 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.850822374 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.097726114 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.069295538 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.953135911 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.850879196 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.852493971 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.845938353 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.139315516 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.8494953 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.940882029 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.849606114 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.845273039 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.942561012 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.951092515 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.075805766 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.061219965 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.877228733 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.196396968 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.349486707 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.094470518 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.909725901 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.100201011 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.85018623 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.845078333 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.92840041 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.689799513 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.104987551 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.130886094 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.091631827 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.881343413 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.56661462 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.84971011 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.077587293 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.067577258 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.108137094 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.094502605 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.082597242 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.171671378 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.84838176 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.848111491 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.183645535 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.969531955 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.847910384 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.189221018 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.079456348 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.417540622 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.882121322 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.156059053 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979394994 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.852030255 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.479012679 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.848444624 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.078414702 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.891275338 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.852283266 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.852510727 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.068728606 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.838676529 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.853922742 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.485176474 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.910638843 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.857366623 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.080924048 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.854109165 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.118201428 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.853559663 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.08598298 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.403002293 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.8805895 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.023026811 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.095487994 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.849301799 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.094252938 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.093146782 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.964774266 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.071869432 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.459693377 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.85098328 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.138316682 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.854148341 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.853843109 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.021019581 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.854308816 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.997542255 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.853402368 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.147633324 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.87109086 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.085554993 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.854772266 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.105554304 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.884431994 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.899191406 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.852475387 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.975511879 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.853028229 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.673405556 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.006402211 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.854303895 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.85189366 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.396821064 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.850810184 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.003735228 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.078891638 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.871431726 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.926997661 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.513457898 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.854499888 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938046401 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.874849558 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.239973417 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.853929461 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.1045494 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.85583869 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.853264648 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.85410985 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.138671703 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.034021325 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.857385121 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.854702662 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.796591955 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.85507485 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.85583582 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.035772726 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.174065409 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.854413629 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.056549084 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.855452077 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.97933004 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.85948994 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.927782692 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.187309877 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.852887989 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.855378817 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.854247683 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.855031568 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.854628639 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.063153623 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.875849034 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.397715356 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.9907982 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.126850948 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.163042689 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.095672714 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.894301813 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.854814926 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.10714963 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.853664269 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.916765704 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.852386696 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.875081482 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.086010824 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.858325671 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.11641928 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.125347121 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.828453106 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.903624913 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.857116853 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.856570632 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.854013139 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.999395778 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.940153406 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.856216604 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.857371639 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.969869282 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.9760199 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.066101464 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.858082585 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.87864676 seconds)
  done (took 898.805199579 seconds)
done (took 1217.226170467 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.854247051 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.854224294 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.861729266 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.855804133 seconds)
  done (took 29.206739096 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.858578078 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.858902002 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.859287081 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.860123214 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.857157725 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.860540652 seconds)
  done (took 12.939223346 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.995360697 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.858694085 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.861042836 seconds)
  done (took 21.499536634 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.934475435 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.266173289 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.003515655 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.293467584 seconds)
  done (took 10.283295885 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.859931377 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.86030505 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.859521916 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.860247777 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.862262959 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.863373551 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.858787942 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.857576124 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.860678567 seconds)
  done (took 18.528556472 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.599347164 seconds)
done (took 98.847318451 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.248772338 seconds)
    (2/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.883750343 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.926180602 seconds)
    (4/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.857734446 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.016495061 seconds)
    (6/309) benchmarking ("sort", Int8, false)...
    done (took 4.794083233 seconds)
    (7/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.051148615 seconds)
    (8/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.86110273 seconds)
    (9/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.879836891 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.490404666 seconds)
    (11/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.947752004 seconds)
    (12/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.103871591 seconds)
    (13/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.223645302 seconds)
    (14/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.846256487 seconds)
    (15/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.156413374 seconds)
    (16/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.157125732 seconds)
    (17/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.949324724 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.849812768 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.009346084 seconds)
    (20/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.239133624 seconds)
    (21/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.006231776 seconds)
    (22/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.36366947 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.871543718 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.884221755 seconds)
    (25/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.48399928 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.092620726 seconds)
    (27/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.052439771 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 1.981374937 seconds)
    (29/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.221799643 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.93578411 seconds)
    (31/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.955851308 seconds)
    (32/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.17969115 seconds)
    (33/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.98630211 seconds)
    (34/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.537757648 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.231402941 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.969025805 seconds)
    (37/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.848278116 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 3.657498844 seconds)
    (39/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.846920839 seconds)
    (40/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.939163155 seconds)
    (41/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 3.670217778 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.02333665 seconds)
    (43/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.309262764 seconds)
    (44/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.238163195 seconds)
    (45/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.927277934 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.957972811 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.852427677 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.185136419 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.857777054 seconds)
    (50/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.30946138 seconds)
    (51/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.093782027 seconds)
    (52/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.26747812 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 2.068238941 seconds)
    (54/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.429233069 seconds)
    (55/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.286611459 seconds)
    (56/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.863669017 seconds)
    (57/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.970991931 seconds)
    (58/309) benchmarking ("sort", Float32, false)...
    done (took 5.522554364 seconds)
    (59/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.535869201 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 5.460213257 seconds)
    (61/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.942317747 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.252587769 seconds)
    (63/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.95060839 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.13657591 seconds)
    (65/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.731118951 seconds)
    (66/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.105809722 seconds)
    (67/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.018417615 seconds)
    (68/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.880130222 seconds)
    (69/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.067141162 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.862412747 seconds)
    (71/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.86217118 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.227699671 seconds)
    (73/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.94942647 seconds)
    (74/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.942477123 seconds)
    (75/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.861626244 seconds)
    (76/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.184333215 seconds)
    (77/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.121111763 seconds)
    (78/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.237548183 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.165075159 seconds)
    (80/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.887527171 seconds)
    (81/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.235094856 seconds)
    (82/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.877802867 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.626568924 seconds)
    (84/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.881624262 seconds)
    (85/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.039938658 seconds)
    (86/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.332867803 seconds)
    (87/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.861900513 seconds)
    (88/309) benchmarking ("map", identity, BigInt, false)...
    done (took 3.886777824 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.171623618 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.173064983 seconds)
    (91/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.887145276 seconds)
    (92/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.862053938 seconds)
    (93/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.192179313 seconds)
    (94/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.731776984 seconds)
    (95/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.136266927 seconds)
    (96/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.946026526 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.813940217 seconds)
    (98/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.938369048 seconds)
    (99/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.940702825 seconds)
    (100/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.059393946 seconds)
    (101/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.617321337 seconds)
    (102/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.190110807 seconds)
    (103/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.692997918 seconds)
    (104/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.893808237 seconds)
    (105/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.95135933 seconds)
    (106/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.608018539 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.885704126 seconds)
    (108/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.862239697 seconds)
    (109/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.089433172 seconds)
    (110/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.030750062 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.868055349 seconds)
    (112/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.942281059 seconds)
    (113/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.031641562 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.475814192 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.999299761 seconds)
    (116/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.879449231 seconds)
    (117/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.860133695 seconds)
    (118/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.11103214 seconds)
    (119/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.967238681 seconds)
    (120/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.921079859 seconds)
    (121/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.957980505 seconds)
    (122/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.113550342 seconds)
    (123/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.960800848 seconds)
    (124/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.964369316 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.531001229 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.222870927 seconds)
    (127/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.942630333 seconds)
    (128/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.924483653 seconds)
    (129/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.862847331 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 4.764422301 seconds)
    (131/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.877509693 seconds)
    (132/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.964309277 seconds)
    (133/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.175565281 seconds)
    (134/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.672031384 seconds)
    (135/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.890491812 seconds)
    (136/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.871093465 seconds)
    (137/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.968177402 seconds)
    (138/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.976165257 seconds)
    (139/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.08947838 seconds)
    (140/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.867860723 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.750664027 seconds)
    (142/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.448416956 seconds)
    (143/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.641606134 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.87131221 seconds)
    (145/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 3.658492178 seconds)
    (146/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.050992136 seconds)
    (147/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.870926184 seconds)
    (148/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.272531266 seconds)
    (149/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.748624383 seconds)
    (150/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.208886885 seconds)
    (151/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.875625887 seconds)
    (152/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.111987275 seconds)
    (153/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.974971212 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.212470894 seconds)
    (155/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.387779408 seconds)
    (156/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.113974553 seconds)
    (157/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.863373897 seconds)
    (158/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.981628919 seconds)
    (159/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.169742395 seconds)
    (160/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.094618463 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.269520611 seconds)
    (162/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.264895871 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.892875445 seconds)
    (164/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.334840181 seconds)
    (165/309) benchmarking ("sort", BigInt, false)...
    done (took 6.864315062 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.15801046 seconds)
    (167/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.020646975 seconds)
    (168/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.344632258 seconds)
    (169/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.88577894 seconds)
    (170/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.966746572 seconds)
    (171/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.1989264 seconds)
    (172/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.050337762 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.870588743 seconds)
    (174/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.730097941 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.920418337 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.864630902 seconds)
    (177/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.024480635 seconds)
    (178/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.720312446 seconds)
    (179/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.139006701 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.997877229 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.473692403 seconds)
    (182/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.191864246 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.864452966 seconds)
    (184/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.883326988 seconds)
    (185/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.420951761 seconds)
    (186/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.448056327 seconds)
    (187/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.978593583 seconds)
    (188/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 5.270772008 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.26693985 seconds)
    (190/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.869022059 seconds)
    (191/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.933878146 seconds)
    (192/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.893225451 seconds)
    (193/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.871049436 seconds)
    (194/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.966973893 seconds)
    (195/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.524012017 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.091271878 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.010323953 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.783133163 seconds)
    (199/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.44813593 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.657595796 seconds)
    (201/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.224967913 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.756968407 seconds)
    (203/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.214048217 seconds)
    (204/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.203662371 seconds)
    (205/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.988783927 seconds)
    (206/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.877054867 seconds)
    (207/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.000401784 seconds)
    (208/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.741618193 seconds)
    (209/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.985506676 seconds)
    (210/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.668914481 seconds)
    (211/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.011083046 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.005784908 seconds)
    (213/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.896481202 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.939297124 seconds)
    (215/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.894053708 seconds)
    (216/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.907236159 seconds)
    (217/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.186396086 seconds)
    (218/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.035155048 seconds)
    (219/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.895144805 seconds)
    (220/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.363984483 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.102863129 seconds)
    (222/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.214046805 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.56850381 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.196460157 seconds)
    (225/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.952400548 seconds)
    (226/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.875881248 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.874644367 seconds)
    (228/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.046121768 seconds)
    (229/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.362917216 seconds)
    (230/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.038332505 seconds)
    (231/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.210649796 seconds)
    (232/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.506547136 seconds)
    (233/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.897529362 seconds)
    (234/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.896894597 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.875901068 seconds)
    (236/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.889833589 seconds)
    (237/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.036474728 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.984829573 seconds)
    (239/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.871756781 seconds)
    (240/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.445043028 seconds)
    (241/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.11638779 seconds)
    (242/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.415127829 seconds)
    (243/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.163629582 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.880816591 seconds)
    (245/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.026468633 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.003860685 seconds)
    (247/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.971611788 seconds)
    (248/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.107435099 seconds)
    (249/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.051648302 seconds)
    (250/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.881254698 seconds)
    (251/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.121350566 seconds)
    (252/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.144237271 seconds)
    (253/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.949581048 seconds)
    (254/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.952021646 seconds)
    (255/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.009891567 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.873613464 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 3.925759348 seconds)
    (258/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.937934061 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.153498847 seconds)
    (260/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.880634055 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.879611399 seconds)
    (262/309) benchmarking ("sort", Float64, false)...
    done (took 5.590491779 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.216214383 seconds)
    (264/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.113227894 seconds)
    (265/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.025580528 seconds)
    (266/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.981285018 seconds)
    (267/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.005291496 seconds)
    (268/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.36055273 seconds)
    (269/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.957418751 seconds)
    (270/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.324112646 seconds)
    (271/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.302313032 seconds)
    (272/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.210752545 seconds)
    (273/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.025337584 seconds)
    (274/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.194462926 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.184474648 seconds)
    (276/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.881695341 seconds)
    (277/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.30511931 seconds)
    (278/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.901857173 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.874642261 seconds)
    (280/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.900689325 seconds)
    (281/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.876416929 seconds)
    (282/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.039918098 seconds)
    (283/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.685418682 seconds)
    (284/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.891507597 seconds)
    (285/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.87836098 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.18619943 seconds)
    (287/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.902463717 seconds)
    (288/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.013428362 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.976148252 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.226829465 seconds)
    (291/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.087341277 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.003942327 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.11571968 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.776752928 seconds)
    (295/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.601995073 seconds)
    (296/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.110070404 seconds)
    (297/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.572853686 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.778309871 seconds)
    (299/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.887053817 seconds)
    (300/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.984313721 seconds)
    (301/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.18552608 seconds)
    (302/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.368854133 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.998564004 seconds)
    (304/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.91135763 seconds)
    (305/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.042956986 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.653848551 seconds)
    (307/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.094356954 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.088573847 seconds)
    (309/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.178849636 seconds)
  done (took 1011.006111399 seconds)
done (took 1012.875115414 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.907405084 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.898470292 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.887695673 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.904168754 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.995206601 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.927208516 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.893950846 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.890204505 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.932750078 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.93117914 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.882693095 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.923506158 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.88749816 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.882072552 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.88400975 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.897973564 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.185431531 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.907387682 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.902005997 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.895411876 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.900215145 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.880886008 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.931088269 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.923722007 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.885821155 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.886051177 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.886909828 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.902483647 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.996315349 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.88432469 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.888250744 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.895421347 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.184952076 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.905058134 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.881295507 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.902661328 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.895896224 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.895904476 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.890527062 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.914295412 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.31750244 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.886190743 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.8844263 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.888691448 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.881615278 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.891069298 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.886122662 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.893384965 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.897607177 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.90082575 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.319071713 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.904219212 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.886574431 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.883761264 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.900067879 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.886944615 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.890040576 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.902817559 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.905125455 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.901727063 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.176544205 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.91469321 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.887753817 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.904694783 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.895537286 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.353824404 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.886346295 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.893693113 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.319683317 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.901346818 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.356285812 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.8996056 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.8892592 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.901661539 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.921447318 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.188338289 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.907268837 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.88609052 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.894168991 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.885813729 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.900133525 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.900818524 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.891219324 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.885705587 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.908942251 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.927336423 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.898075584 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.886057407 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.89921155 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.906606416 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.896570777 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.89895947 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.890337007 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.884886824 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.896429419 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.892714022 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.889613979 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.890625762 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.892899148 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.90099695 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.323437038 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.907680341 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.885419281 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.885345017 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.887183125 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.90454468 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.318490691 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.892028807 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.909366404 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.936097362 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.89141265 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.175442462 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.912828843 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.904607414 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.899823282 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.896606843 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.884118263 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.17892896 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.342960119 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.906968521 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.890191362 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.885075087 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.905230701 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.890509724 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.887030647 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.189457187 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.91347266 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.905161554 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.009046474 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.902056705 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.920990049 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.886698356 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.890924141 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.934737977 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.90468257 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.921077559 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.891814925 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.904694924 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.908220321 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.888278437 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.903134092 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.902806384 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.89003448 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.895708874 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.886515263 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.935926732 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.9057098 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.902704278 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.911049245 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.012980205 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.888214186 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.18083115 seconds)
done (took 296.564838931 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.968430547 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.88782936 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.012040484 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.887274741 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.97380356 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.95872714 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.887924979 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.887932987 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.887291857 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.385458594 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.887822313 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.893928163 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.888968535 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.8884411 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.957103227 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.887543708 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.889183848 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.331935258 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.890076918 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.96827143 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.886708538 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.886873849 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.887301537 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.391432124 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.887280969 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.885436429 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.968981616 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.88915218 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.337482949 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.889501719 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.886764495 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.341087073 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.967333592 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.916319349 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.897075937 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.893134955 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.976167314 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.897250803 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.952802864 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.954662024 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.009614573 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.923470522 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.889647638 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.890418451 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.89070681 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.890259822 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.893892536 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.920970678 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.8879064 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.898864069 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.332709499 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.893473199 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.896197704 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.8880563 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.889595976 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.916805095 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.889290389 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.889928323 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.970273977 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.888832415 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.956505837 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.39174837 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.388366364 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.888691266 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.89211037 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.89226331 seconds)
  done (took 186.588306425 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.954838472 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.96617502 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.956404643 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.891792673 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.940181606 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.959289941 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.894112514 seconds)
  done (took 15.379727571 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.898689016 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.890441158 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.945782454 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.940160801 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.890245245 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.070216785 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.903107855 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.898190234 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.918324436 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.889853424 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.55532964 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.940230966 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.897895101 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.891470693 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.908593009 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.943824283 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.891584913 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.891083121 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.001465164 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.039446427 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.896260113 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.897949835 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.917384066 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.903021652 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.892833509 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.892092075 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.88708523 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.89885248 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.89157006 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.892577436 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.89095007 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.942312155 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.888238423 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.890472208 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.888043355 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.891660771 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.887666852 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.887582825 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.895401604 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.893097485 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.891811318 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.894950203 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.891166565 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.890006038 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.891791329 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.913823042 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.890397992 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.890383046 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.892491471 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.893236551 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.916941806 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.893178826 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.891725248 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.896011241 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.935720253 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.895462293 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.897999765 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.889095813 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.891706999 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.890510357 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.891449835 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.039903401 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.941188479 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.892190982 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.939178299 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.042075359 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.888904399 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.890750122 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.894019878 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.981467402 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.891304893 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.941060432 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.896361754 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.006522991 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.892808096 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.071161394 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.915890779 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.899033405 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.897863693 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.890355197 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.902298101 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.892173153 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.896667885 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.898198444 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.897866941 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.893030615 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.894218566 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.895386505 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.901900902 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.894515636 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.941604623 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.893692584 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.893211561 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.026701736 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.893444564 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.000997346 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.920020281 seconds)
  done (took 208.128265958 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.902328539 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.902373547 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.893647246 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.911271578 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.896545101 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.892880291 seconds)
  done (took 13.215942322 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.896315434 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.899261248 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.893594676 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.894675793 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.893841852 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.895817515 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.89532052 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.896186843 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.896510104 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.894467853 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.895044484 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.894722828 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.895421588 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.892957882 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.89199242 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.893791158 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.896046599 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.896565999 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.894427847 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.892849356 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.102395254 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.893869722 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.895319874 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.896401968 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.899197728 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.897269406 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.907225643 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.898055608 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.89650607 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.902038607 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.89769227 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.894025088 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.898266598 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.89987374 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.899544436 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.897149506 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.898044115 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.90070879 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.897735205 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.89771442 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.895998644 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.896412562 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.89743761 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.897525354 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.897841771 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.902578502 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.900113957 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.908368629 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.898886489 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.896544692 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.895968557 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.894706375 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.896415946 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.898489271 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.898040028 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.902041566 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.902042221 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.897330915 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.896992998 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.897328163 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.900551997 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.898527387 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.901230915 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.900705516 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.907343496 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.894775324 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.901614538 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.90083112 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.896260753 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.900599586 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.89739226 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.896378673 seconds)
  done (took 139.658868201 seconds)
done (took 564.803168279 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.969565343 seconds)
  done (took 8.790644754 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.053050301 seconds)
  done (took 8.972588766 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.420362484 seconds)
  done (took 10.240338245 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.909018742 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.920834628 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.898598599 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.894330209 seconds)
  done (took 29.449230694 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.214111883 seconds)
  done (took 9.035315413 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.907396348 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.892324684 seconds)
  done (took 15.698238415 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.052578138 seconds)
  done (took 8.872789512 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.069681731 seconds)
  done (took 8.902019969 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.899786109 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.921552074 seconds)
  done (took 15.664383826 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.898159041 seconds)
  done (took 8.72037912 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.353162192 seconds)
  done (took 10.269698961 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.917333808 seconds)
  done (took 8.786675718 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.956321736 seconds)
  done (took 8.77788607 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.081304618 seconds)
  done (took 9.90439365 seconds)
done (took 163.911490414 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.900474439 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.896410949 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.898684476 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.898721236 seconds)
  done (took 29.416530826 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.932409128 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.932529568 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.939551658 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.933554884 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.925606137 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.92346641 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.933762277 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.934370851 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.938274705 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.933025885 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.935114157 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.931484186 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.93469008 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.94480997 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.94170897 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.930158385 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.934397149 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.93391248 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.924911542 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.942918349 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.933705954 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.932383458 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.897531154 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.898833195 seconds)
  done (took 48.167943092 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.089478571 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.969987135 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.050630531 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.949513859 seconds)
  done (took 9.883464828 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.899051244 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.962594556 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.949758781 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.94524593 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.951142405 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.003547113 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.95293203 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.037400144 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.029441807 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.027088602 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.906206427 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.922154477 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.928068352 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.949061556 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.003661071 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.901356129 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.897915756 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.01562902 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.964183238 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.084147912 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.902277993 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.956980349 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.951683305 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.954129182 seconds)
  done (took 48.919704446 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.901497552 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.907856684 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.909492685 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.903322503 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.904510232 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.902873632 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.909332369 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.903106507 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.92802095 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.905579528 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.902966404 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.903294643 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.908615783 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.904187565 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.901358369 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.914827613 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.918730997 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.901450796 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.905758297 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.910026056 seconds)
  done (took 39.973268089 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.902328202 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.748617476 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.246862723 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.150929067 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.901218575 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.898635722 seconds)
  done (took 31.676062881 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.913729904 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.907345821 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.903131404 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.957425747 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.039601769 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.908548891 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.904636077 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.913310977 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.943656155 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.965043219 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.91863374 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.925282506 seconds)
  done (took 25.028959453 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.90123116 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.903790953 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.903082309 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.915513096 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.913164494 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.907306485 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.91088632 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.903502321 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.916003094 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.917401624 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.907301209 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.912454925 seconds)
  done (took 44.741850004 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.60761252 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973308308 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.902036496 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.778068786 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.3582783 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.45270946 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.79346683 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.6104182 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.366368055 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.82970484 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.105164109 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.902702795 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.982723689 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.901676038 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174080054 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.258973909 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088940416 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.141459571 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.548466911 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.92855282 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.105939589 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1286401 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.194189998 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902881573 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902927965 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.018161854 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.315033523 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.645804931 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.933222604 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.197611179 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.139891666 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.851158923 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959082432 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.904841306 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.915493816 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907204488 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909089998 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17511125 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.017012568 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032999652 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976863888 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.144932333 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90716515 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.328088934 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.607343084 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.198992865 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.015806787 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.903912493 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905207397 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902923875 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.829719531 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984137041 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.906814097 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908911789 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.603088319 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.901510045 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978001148 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.904418905 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104480602 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.70987062 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.607172272 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.902657582 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905621342 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.462720251 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.000958885 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.012514446 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.669638078 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.29794863 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.322851976 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.00031502 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.904502846 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.905398323 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.023236896 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.866303582 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.667875007 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940002528 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.040110632 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.918844854 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.544258525 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.20710225 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.31227193 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.458276772 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.823737822 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185229634 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.593888971 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.888322123 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.1192951 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.765575825 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.831383391 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13000278 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940253002 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909822877 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.16754718 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.614804769 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.01208162 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.916789837 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342685438 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917586465 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.911263094 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910118887 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.120203572 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.288929338 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931220255 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.022477297 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920145961 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.987608203 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83378711 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.916444758 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.906571365 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.807124492 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.907146592 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.816565474 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.949100646 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.560023135 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.943010307 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.84736955 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908881435 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.011628411 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944500138 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.85406344 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165781952 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.215998877 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.586506277 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860884446 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.038644576 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.278006398 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131211875 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.910197477 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.121702012 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.447668216 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.325175038 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.94700016 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.203095443 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.966162656 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.1992269 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342269282 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984662421 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.685454238 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.532681401 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.126430309 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920662792 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.90766084 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.909958952 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91505907 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844150734 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.544676965 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.267379068 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.071899235 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.125993186 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.224083505 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.890117266 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.838339002 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21167455 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.043880636 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.895854672 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.567354351 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.296165769 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.717178937 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.934033465 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.035970517 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.058234583 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.864493275 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922824564 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987228059 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927193218 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.913890237 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.268230227 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.265268714 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.910664666 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.911736421 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.858619661 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912537636 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.913004464 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.447077336 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.875853405 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.913780676 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.921162841 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.784367823 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98374826 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.913341611 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.910787352 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.446595919 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.413115763 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.912982903 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.579040379 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.038432456 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990003335 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.191673253 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.269430917 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035055499 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.611697813 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.332465943 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.017658848 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.613069796 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.838739693 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.911253945 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.848904109 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915018383 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.915282042 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916787813 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.102755367 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.184847775 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208727769 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.365427653 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.973894153 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11269886 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.681188136 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86190359 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.913355711 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915538405 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.913049557 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911921251 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.416584291 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.144985612 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.012517834 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939346598 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.916950794 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040481602 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.922988619 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.838710847 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.914724693 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.914267869 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.356799624 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.939403916 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.860442669 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.222986205 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.747486761 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034790834 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955383391 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.926833554 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919477791 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.68398721 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.951499767 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842077652 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31733755 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945141143 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.636262219 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39947486 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.469010363 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216881934 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.244798394 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.250788466 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.982591632 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.12840777 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.995754303 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.966942512 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.003664779 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852816964 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.836532221 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.576512286 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.241430747 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181486403 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920948477 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12984192 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.629464421 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.140872611 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949984284 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.558659128 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222601221 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.891258135 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930934241 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.227757014 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022573968 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997633817 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.920905477 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.868162606 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.259658546 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957390329 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.621244786 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929821052 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.27170593 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.329603454 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.982887432 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.309431689 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12710645 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.920988069 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.281663633 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.094853422 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.956433393 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.923938911 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.910150625 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.130868894 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.499258594 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.759151803 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926121628 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.040567945 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.208782014 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.820578658 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.919268373 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.056536736 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173709593 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917356473 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.269593372 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.28633363 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.025278816 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976434914 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145342442 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.583098228 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.228443044 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.472978339 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.400708544 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920113522 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.846729909 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.617558998 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.120256213 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.927656029 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.886235135 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141508931 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154998559 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.612783847 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.134421515 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.160019065 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.932046488 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.196034886 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991609862 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.016957075 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.216613469 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.351457364 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.168410216 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.146243531 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.462044014 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.134718012 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.380755139 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.092344295 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.919787824 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.124562859 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.134155795 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.134338765 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.292333716 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088135863 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.629389688 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.925840908 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.126553666 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.212669339 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979066593 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.279007034 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.084750781 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.00150211 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926710885 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983399767 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.925513514 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928489726 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.293431374 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.475190706 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.933251341 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997816387 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.02619075 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.420404688 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.922905608 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.927721234 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199868224 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274131968 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.254088067 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.901265023 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.917024407 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923487066 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049096014 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.847911226 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926501853 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1920072 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.92616805 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.319296033 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.06355705 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935978135 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.22216538 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.307176191 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.566446497 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.882128559 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927560582 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.150836765 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237518448 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.08083807 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.031954976 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192487373 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.261588249 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.95680281 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.283150638 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159223215 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925132491 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.797439295 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.926879485 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050505333 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.125042478 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.206692571 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.493132381 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.69169477 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.192385774 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.77470453 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.925866489 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.715263625 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189677329 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.20346856 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.972726167 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985795732 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928452872 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.336965465 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.640614629 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054171602 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.768819801 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851109553 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.931480706 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.259145202 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.163348041 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.634705646 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.92687075 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.203024758 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221647931 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195828326 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.975554851 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.759727353 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138559234 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924449103 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.937929077 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.183791094 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149640659 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.170306144 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928063001 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.923431315 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.731681304 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852979953 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.927947704 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984149338 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.152581029 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.945315867 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.440137254 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.62758526 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219359219 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975510879 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929818331 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.197390545 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.439490722 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.476191882 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928998654 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153114915 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.91004083 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.227934057 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.929053817 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.337896703 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.22640287 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.925966755 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.445712421 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.169107718 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190837824 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.859766767 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933443854 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140056371 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.767279174 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.929304087 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.918785411 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348114644 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158626442 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.661528352 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.483400081 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.92873634 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.932501657 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.332456289 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955874726 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.34104678 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.959644388 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943926017 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.447378736 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.640823231 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.215049444 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.172333049 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.441648522 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.523756174 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.93070676 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.927633498 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930007394 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.848247787 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281052128 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.116083275 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219231501 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.964983022 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.339922363 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963718382 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.299118982 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042246281 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.064080413 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96745528 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.44837036 seconds)
  done (took 1679.779898859 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.931419546 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.002314131 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.915585114 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.918434885 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.239966897 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.9494268 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.978048544 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.997506164 seconds)
  done (took 57.788728131 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.932990666 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.948042867 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.937235177 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.932395804 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.940695498 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.931735306 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.14755013 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.961866623 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.936373492 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.941009712 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.931055809 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.930196782 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.22278991 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.953002596 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.931050785 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.944633026 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.934877624 seconds)
  done (took 75.315095284 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.933726795 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.28836036 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.993530353 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.9357387 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.837958068 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.947974227 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.871406387 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.958546575 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.939610496 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.147346486 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.240970245 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.9502994 seconds)
  done (took 90.902115791 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.942563034 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.934839506 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.932660543 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.93499997 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.930113948 seconds)
  done (took 11.543001112 seconds)
done (took 2195.000619495 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.178678213 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.990189294 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.026198509 seconds)
  done (took 5.871949457 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.076305963 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.122818135 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.234568476 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.003278332 seconds)
  done (took 10.294235334 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.231198823 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.309365204 seconds)
  done (took 6.393508047 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.327495165 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.938623363 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.345955318 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.934504711 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.933682368 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.934005931 seconds)
  done (took 22.660309643 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.926010923 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.930571875 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.93230663 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.934132807 seconds)
  done (took 9.580214626 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.929354363 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.643499542 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.929948718 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.933119887 seconds)
  done (took 21.291096571 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.071534136 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.038329306 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.067875934 seconds)
  done (took 8.027123689 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.146012783 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.038629841 seconds)
  done (took 7.032847212 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.07492646 seconds)
  done (took 3.926137921 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.95369721 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.194838388 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.418510505 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.455785594 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.574201523 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.704383269 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.253151185 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.179273414 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.36480333 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.377308855 seconds)
  done (took 25.328204089 seconds)
done (took 136.06048322 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.28047239 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.950967896 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.127652868 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.300139523 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.174363437 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.128629034 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.136579621 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.285779711 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.968670817 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.954695722 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.291589105 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.157731826 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.079790693 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.949782731 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.089055533 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.950478559 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.152858955 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.296478404 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.976771464 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.189624495 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.141130599 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.939463896 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.139582242 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.94960822 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.156042372 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.078819616 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.483454003 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.947963433 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.123598124 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.495046497 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.080975953 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.335490823 seconds)
  done (took 170.167934625 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.926709672 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.931458443 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.927095768 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.92930508 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.182460172 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.928054969 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.924279776 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.925386259 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.18773678 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.161880327 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.92097477 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.169247573 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.927106304 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.925844901 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.929700482 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.92557779 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.335091056 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.930113649 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.927038675 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.927531749 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.92141952 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.019442959 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.924470537 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.028009848 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.321880389 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.928281689 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.926798032 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.926336963 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.928815699 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.928272984 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.929013627 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.930057024 seconds)
  done (took 209.509223897 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.932384466 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.923452542 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.928319472 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.926443731 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.924198427 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.925707338 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.92867226 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.929418353 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.66753722 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.655465121 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.929296831 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.923197442 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.928301881 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.931490081 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.923263705 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.925572331 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.92818418 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.928019021 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.927783034 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.924581939 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.924758439 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.657600559 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.926313672 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.676224932 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.928842351 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.930972977 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.92647869 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.92767234 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.925638878 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.928116306 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.929657707 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.935063442 seconds)
  done (took 222.484805963 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.166549136 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.929627023 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.930264974 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.951789173 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.930617175 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.925758784 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.934820064 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.177709409 seconds)
  done (took 19.803211635 seconds)
done (took 623.841151096 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.453022199 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.303470787 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.104965359 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.953471821 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.200727564 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.99813773 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.946064663 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.01032693 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.780916093 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.024833944 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.601720897 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.975976912 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.697649868 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.974613778 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.076136709 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.00181694 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.493227286 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.601756016 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.097650133 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.022777418 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.130502429 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.892663057 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.031648622 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.821199944 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.619744341 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.938100727 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.020009199 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.509185036 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.966737473 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.110151097 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.804791659 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.275140547 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.966332505 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.94958843 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.998262897 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.98354453 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.204796928 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.960694155 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.078998944 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.692992977 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.022700269 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.692047837 seconds)
  done (took 105.843409986 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.941995105 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.935629265 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.940969226 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.939631169 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.947971671 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.935634409 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.937717476 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.935680125 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.93764983 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.935350848 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.938684654 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.952941241 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.936629607 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.94158862 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.938418248 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.939846323 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.939146338 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.941876698 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.940409017 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.932710394 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.938916021 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.938934353 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.934676827 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.937842423 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.938525262 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.935187742 seconds)
  done (took 52.284206516 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.934520802 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.092153458 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.180934436 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.955234723 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.934293763 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.934724754 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.951538726 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.940343891 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.936612661 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.935643606 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.039850506 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.940153228 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.952262956 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.179117925 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.951254227 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.932704235 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.933735432 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.933435807 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.097653258 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.950916022 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.954200048 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.938733268 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.953540396 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.946504247 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.934740714 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.930711286 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.938305659 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.426337704 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.94143437 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.043808825 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.989463814 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.9599683 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.338240973 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.187924506 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.99039951 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.942457097 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.936120663 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.046105233 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.93927629 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.934082765 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.952971372 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.939231407 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.177727896 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.463444562 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.948986654 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.938445498 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.435337904 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.056470429 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.977667295 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.947800964 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.190692157 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.951972597 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.934829901 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.938799598 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.970365298 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.954564333 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.93873991 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.302095482 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.950098617 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.952424298 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.941789366 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.941930498 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.105087663 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.947571687 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.091211449 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.945886672 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.939743503 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.936619182 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.18597881 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.955126871 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.480785538 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.956595312 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.937290368 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.0427793 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.092323911 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.46176757 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.952425003 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.106968571 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.360502137 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.961711496 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.949368954 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.413917795 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.965166708 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.945239646 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.943443345 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.940797026 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.93913984 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.980948184 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.953645466 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.389033303 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.473130062 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.31818285 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.965494532 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.950317155 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.939536045 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.303406262 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.943848693 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.939867074 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.176096955 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.489739221 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.9541953 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.944697125 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.45515529 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.955214386 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.959706483 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.949844864 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.195245791 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.955755959 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.984123359 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.939000506 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.948924805 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.944436537 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.961090266 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.94632521 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.941410416 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.450252543 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.061131386 seconds)
  done (took 240.572439239 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.939709387 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.940741886 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.938701046 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.939592865 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.939930768 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.941529705 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.937948007 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.937466774 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.93951652 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.940405834 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.937578284 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.941186207 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.939024053 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.941306008 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.980438619 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.940461132 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.54803521 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.940967816 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.940895242 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.939231162 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.583512499 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.946675515 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.938191959 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.940402327 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.940270288 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.942782985 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.938360581 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.989870771 seconds)
  done (took 169.526452036 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.93879386 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.056096888 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.960626967 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.970280775 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.948090729 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.943645951 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.037881472 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.95755281 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.948002695 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.940545899 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.942465189 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.000816165 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.954873869 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.037544968 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.973089103 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.049228853 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.04609079 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.94670958 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.942635102 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.942788653 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.971602615 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.954297205 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.002766987 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.071304615 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.960041379 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.055058818 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.957064385 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.940690725 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.941771597 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.060083119 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.960783909 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.003816282 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.974897183 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.961356016 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.059629464 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.060986935 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.04848804 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.045928194 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.951439333 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.943838414 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.943040672 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.944780227 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.056880551 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.965351101 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.944729781 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.05616673 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.964163253 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.944902408 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.941287238 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.940843519 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.954518262 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.963255675 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.007756358 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.077674117 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.981766976 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.967206203 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.04352606 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.067367338 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.941323832 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.042850168 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.949580951 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.053405947 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.96333666 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.945784012 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.942938857 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.944144575 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.971038491 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.051417846 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.047449297 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.951341322 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.048112557 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.974955106 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.953088741 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.942213875 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.941690254 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.05616386 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.05775155 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.979982017 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.978157047 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.975226571 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.948687017 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.942889379 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.948154109 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.961483046 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.953148646 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.059002883 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.060429847 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.949816046 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.942153274 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.9434271 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.948361058 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.965356071 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.064727993 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.980883576 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.050352854 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.007627361 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.015064651 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.95572686 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.956659239 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.950050228 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.009182025 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.96142089 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.957096131 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.237202217 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.009722098 seconds)
  done (took 210.587327877 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.328304007 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.988861888 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.000042822 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.276066899 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.337892173 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.941313633 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.995008331 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.997046807 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.023745517 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.219095299 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.073028918 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.01087534 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.978972363 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.96226838 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.993552726 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.026953802 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.002952904 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.332074618 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.214409767 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.481157504 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.986001572 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.294545126 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.332006501 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.5757574 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.040973284 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.397677592 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.623199251 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.158749794 seconds)
  done (took 65.471368074 seconds)
done (took 846.142932125 seconds)
SAVING RESULT...
DONE!
